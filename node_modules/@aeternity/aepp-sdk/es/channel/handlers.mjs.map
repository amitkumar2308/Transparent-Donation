{"version":3,"file":"handlers.mjs","names":["changeStatus","changeState","notify","emit","disconnect","unpackTx","buildTx","decode","IllegalArgumentError","InsufficientBalanceError","ChannelConnectionError","UnexpectedChannelMessageError","ChannelError","Tag","snakeToPascal","appendSignature","tx","signFn","signatures","encodedTx","SignedTx","payloadTx","result","signatures2","tag","concat","signAndNotify","channel","method","data","_signedTx","signedTx","signed_tx","isError","key","error","handleUnexpectedMessage","_channel","message","state","_state$reject","reject","call","Object","assign","JSON","stringify","wsMessage","handler","channelOpen","awaitingCompletion","onSuccess","resolve","accepted","errorCode","params","error_code","errorMessage","error_msg","event","codes","map","d","code","includes","awaitingConnection","channelInfoStatus","nextStatus","awaitingChannelCreateTx","awaitingOpenConfirmation","_fsmId","fsm_id","_message$payload","payload","channelClosed","awaitingReconnection","_options","role","sign","awaitingOnChainTx","awaitingBlockInclusion","_","message2","info","type","_channelId","channel_id","awaitingTxSignRequest","enter","_message$method$match","match","updates","awaitingUpdateConflict","awaitingShutdownTx","awaitingLeave","channelId","closeTx"],"sources":["../../src/channel/handlers.ts"],"sourcesContent":["/* eslint-disable consistent-return */\n/* eslint-disable default-case */\n/* eslint-disable @typescript-eslint/no-use-before-define */\nimport {\n  ChannelState,\n  changeStatus,\n  changeState,\n  notify,\n  emit,\n  disconnect,\n  ChannelMessage,\n  ChannelFsm,\n  SignTx,\n  ChannelStatus,\n  ChannelEvents,\n} from './internal';\nimport { unpackTx, buildTx } from '../tx/builder';\nimport { decode, Encoded } from '../utils/encoder';\nimport {\n  IllegalArgumentError,\n  InsufficientBalanceError,\n  ChannelConnectionError,\n  UnexpectedChannelMessageError,\n  ChannelError,\n} from '../utils/errors';\nimport type Channel from './Base';\nimport { Tag } from '../tx/builder/constants';\nimport { snakeToPascal } from '../utils/string';\n\nexport async function appendSignature(\n  tx: Encoded.Transaction,\n  signFn: SignTx,\n): Promise<Encoded.Transaction | number | null> {\n  const { signatures, encodedTx } = unpackTx(tx, Tag.SignedTx);\n  const payloadTx = buildTx(encodedTx);\n  const result = await signFn(payloadTx);\n  if (typeof result === 'string') {\n    const { signatures: signatures2 } = unpackTx(result, Tag.SignedTx);\n    return buildTx({\n      tag: Tag.SignedTx,\n      signatures: signatures.concat(signatures2),\n      encodedTx: decode(payloadTx),\n    });\n  }\n  return result;\n}\n\nexport async function signAndNotify(\n  channel: Channel,\n  method: string,\n  data: {\n    tx?: Encoded.Transaction;\n    signed_tx?: Encoded.Transaction;\n  },\n  signFn: SignTx,\n): Promise<boolean> {\n  let signedTx;\n  if (data.tx != null) signedTx = await signFn(data.tx);\n  else if (data.signed_tx != null) signedTx = await appendSignature(data.signed_tx, signFn);\n  else throw new ChannelError('Can\\'t find transaction in message');\n  const isError = typeof signedTx !== 'string';\n  const key = data.tx != null ? 'tx' : 'signed_tx';\n  notify(channel, method, isError ? { error: signedTx ?? 1 } : { [key]: signedTx });\n  return isError;\n}\n\nexport function handleUnexpectedMessage(\n  _channel: Channel,\n  message: ChannelMessage,\n  state: ChannelState,\n): ChannelFsm {\n  state?.reject?.(Object.assign(\n    new UnexpectedChannelMessageError(`Unexpected message received:\\n\\n${JSON.stringify(message)}`),\n    { wsMessage: message },\n  ));\n  return { handler: channelOpen };\n}\n\nexport function awaitingCompletion(\n  channel: Channel,\n  message: ChannelMessage,\n  state: ChannelState,\n  onSuccess?: typeof handleUnexpectedMessage,\n): ChannelFsm {\n  if (onSuccess != null && message.method === 'channels.update') {\n    return onSuccess(channel, message, state);\n  }\n  if (message.method === 'channels.conflict') {\n    state.resolve({\n      accepted: false,\n      errorCode: message.params.data.error_code,\n      errorMessage: message.params.data.error_msg,\n    });\n    return { handler: channelOpen };\n  }\n  if (message.method === 'channels.info') {\n    if (message.params.data.event === 'aborted_update') {\n      state.resolve({ accepted: false });\n      return { handler: channelOpen };\n    }\n  }\n  if (message.error != null) {\n    const codes = message.error.data.map((d) => d.code);\n    if (codes.includes(1001)) {\n      state.reject(new InsufficientBalanceError('Insufficient balance'));\n    } else if (codes.includes(1002)) {\n      state.reject(new IllegalArgumentError('Amount cannot be negative'));\n    } else {\n      state.reject(new ChannelConnectionError(message.error.message));\n    }\n    return { handler: channelOpen };\n  }\n  return handleUnexpectedMessage(channel, message, state);\n}\n\nexport function awaitingConnection(\n  channel: Channel,\n  message: ChannelMessage,\n): ChannelFsm | undefined {\n  if (message.method === 'channels.info') {\n    const channelInfoStatus: string = message.params.data.event;\n\n    let nextStatus: ChannelStatus | null = null;\n    if (channelInfoStatus === 'channel_accept') nextStatus = 'accepted';\n    if (channelInfoStatus === 'funding_created') nextStatus = 'halfSigned';\n    if (nextStatus != null) {\n      changeStatus(channel, nextStatus);\n      return { handler: awaitingChannelCreateTx };\n    }\n\n    if (message.params.data.event === 'channel_reestablished') {\n      return { handler: awaitingOpenConfirmation };\n    }\n    if (message.params.data.event === 'fsm_up') {\n      channel._fsmId = message.params.data.fsm_id;\n      return { handler: awaitingConnection };\n    }\n    return { handler: awaitingConnection };\n  }\n  if (message.method === 'channels.error') {\n    emit(channel, 'error', new ChannelConnectionError(message?.payload?.message));\n    return { handler: channelClosed };\n  }\n}\n\nexport async function awaitingReconnection(\n  channel: Channel,\n  message: ChannelMessage,\n  state: ChannelState,\n): Promise<ChannelFsm> {\n  if (message.method === 'channels.info') {\n    if (message.params.data.event === 'fsm_up') {\n      channel._fsmId = message.params.data.fsm_id;\n      const { signedTx } = await channel.state();\n      changeState(channel, signedTx == null ? '' : buildTx(signedTx));\n      return { handler: channelOpen };\n    }\n  }\n  return handleUnexpectedMessage(channel, message, state);\n}\n\nexport async function awaitingChannelCreateTx(\n  channel: Channel,\n  message: ChannelMessage,\n): Promise<ChannelFsm | undefined> {\n  const tag = channel._options.role === 'initiator' ? 'initiator_sign' : 'responder_sign';\n  if (message.method === `channels.sign.${tag}`) {\n    await signAndNotify(\n      channel,\n      `channels.${tag}`,\n      message.params.data,\n      async (tx) => channel._options.sign(tag, tx),\n    );\n    return { handler: awaitingOnChainTx };\n  }\n}\n\nexport function awaitingOnChainTx(\n  channel: Channel,\n  message: ChannelMessage,\n): ChannelFsm | undefined {\n  function awaitingBlockInclusion(_: Channel, message2: ChannelMessage): ChannelFsm | undefined {\n    if (message2.method === 'channels.info') {\n      switch (message2.params.data.event) {\n        case 'funding_created':\n        case 'own_funding_locked':\n          return { handler: awaitingBlockInclusion };\n        case 'funding_locked':\n          return { handler: awaitingOpenConfirmation };\n      }\n    }\n    if (message2.method === 'channels.on_chain_tx') {\n      emit(channel, 'onChainTx', message2.params.data.tx, {\n        info: message2.params.data.info,\n        type: message2.params.data.type,\n      });\n      return { handler: awaitingBlockInclusion };\n    }\n  }\n\n  if (message.method === 'channels.on_chain_tx') {\n    const { info } = message.params.data;\n    const { role } = channel._options;\n    if ((info === 'funding_signed' && role === 'initiator')\n      || (info === 'funding_created' && role === 'responder')) {\n      return { handler: awaitingBlockInclusion };\n    }\n  }\n  if (\n    message.method === 'channels.info'\n    && message.params.data.event === 'funding_signed'\n    && channel._options.role === 'initiator'\n  ) {\n    channel._channelId = message.params.channel_id;\n    changeStatus(channel, 'signed');\n    return { handler: awaitingOnChainTx };\n  }\n}\n\nfunction awaitingOpenConfirmation(\n  channel: Channel,\n  message: ChannelMessage,\n): ChannelFsm | undefined {\n  if (message.method === 'channels.info' && message.params.data.event === 'open') {\n    channel._channelId = message.params.channel_id;\n    return {\n      handler(_: Channel, message2: ChannelMessage): ChannelFsm | undefined {\n        if (message2.method === 'channels.update') {\n          changeState(channel, message2.params.data.state);\n          return { handler: channelOpen };\n        }\n      },\n    };\n  }\n}\n\nexport async function channelOpen(\n  channel: Channel,\n  message: ChannelMessage,\n  state: ChannelState,\n): Promise<ChannelFsm | undefined> {\n  switch (message.method) {\n    case 'channels.info':\n      switch (message.params.data.event) {\n        case 'update':\n        case 'withdraw_created':\n        case 'deposit_created':\n          return { handler: awaitingTxSignRequest };\n        case 'own_withdraw_locked':\n        case 'withdraw_locked':\n        case 'own_deposit_locked':\n        case 'deposit_locked':\n        case 'peer_disconnected':\n        case 'channel_reestablished':\n        case 'open':\n          // TODO: Better handling of peer_disconnected event.\n          //\n          //       We should enter intermediate state where offchain transactions\n          //       are blocked until channel is reestablished.\n          emit(channel, snakeToPascal(message.params.data.event) as keyof ChannelEvents);\n          return { handler: channelOpen };\n        case 'fsm_up':\n          channel._fsmId = message.params.data.fsm_id;\n          return { handler: channelOpen };\n        case 'timeout':\n        case 'close_mutual':\n          return { handler: channelOpen };\n        case 'closing':\n          changeStatus(channel, 'closing');\n          return { handler: channelOpen };\n        case 'closed_confirmed':\n          changeStatus(channel, 'closed');\n          return { handler: channelClosed };\n        case 'died':\n          changeStatus(channel, 'died');\n          return { handler: channelClosed };\n        case 'shutdown':\n          return { handler: channelOpen };\n      }\n      break;\n    case 'channels.on_chain_tx':\n      emit(channel, 'onChainTx', message.params.data.tx, {\n        info: message.params.data.info,\n        type: message.params.data.type,\n      });\n      return { handler: channelOpen };\n    case 'channels.leave':\n      // TODO: emit event\n      return { handler: channelOpen };\n    case 'channels.update':\n      changeState(channel, message.params.data.state);\n      return { handler: channelOpen };\n    case 'channels.sign.shutdown_sign_ack':\n      return awaitingTxSignRequest(channel, message, state);\n  }\n}\nchannelOpen.enter = (channel: Channel) => {\n  changeStatus(channel, 'open');\n};\n\nasync function awaitingTxSignRequest(\n  channel: Channel,\n  message: ChannelMessage,\n  state: ChannelState,\n): Promise<ChannelFsm> {\n  const [, tag] = message.method.match(/^channels\\.sign\\.([^.]+)$/) ?? [];\n  if (tag == null) return handleUnexpectedMessage(channel, message, state);\n  const isError = await signAndNotify(\n    channel,\n    `channels.${tag}`,\n    message.params.data,\n    async (tx) => channel._options.sign(tag, tx, { updates: message.params.data.updates }),\n  );\n\n  function awaitingUpdateConflict(_: Channel, message2: ChannelMessage): ChannelFsm {\n    if (message2.error != null) {\n      return { handler: awaitingUpdateConflict, state };\n    }\n    if (message2.method === 'channels.conflict') {\n      return { handler: channelOpen };\n    }\n    return handleUnexpectedMessage(channel, message2, state);\n  }\n  return isError ? { handler: awaitingUpdateConflict, state } : { handler: channelOpen };\n}\n\nexport async function awaitingShutdownTx(\n  channel: Channel,\n  message: ChannelMessage,\n  state: ChannelState,\n): Promise<ChannelFsm> {\n  if (message.method !== 'channels.sign.shutdown_sign') {\n    return handleUnexpectedMessage(channel, message, state);\n  }\n  await signAndNotify(\n    channel,\n    'channels.shutdown_sign',\n    message.params.data,\n    async (tx) => state.sign(tx),\n  );\n  return {\n    handler(_: Channel, message2: ChannelMessage): ChannelFsm {\n      if (message2.method !== 'channels.on_chain_tx') {\n        return handleUnexpectedMessage(channel, message2, state);\n      }\n      // state.resolve(message.params.data.tx)\n      return { handler: channelClosed, state };\n    },\n    state,\n  };\n}\n\nexport function awaitingLeave(\n  channel: Channel,\n  message: ChannelMessage,\n  state: ChannelState,\n): ChannelFsm {\n  if (message.method === 'channels.leave') {\n    state.resolve({ channelId: message.params.channel_id, signedTx: message.params.data.state });\n    disconnect(channel);\n    return { handler: channelClosed };\n  }\n  if (message.method === 'channels.error') {\n    state.reject(new ChannelConnectionError(message.data.message));\n    return { handler: channelOpen };\n  }\n  return handleUnexpectedMessage(channel, message, state);\n}\n\nexport function channelClosed(\n  _channel: Channel,\n  message: ChannelMessage,\n  state: ChannelState,\n): ChannelFsm {\n  if (state == null) return { handler: channelClosed };\n  if (message.params.data.event === 'closing') return { handler: channelClosed, state };\n  if (message.params.data.info === 'channel_closed') {\n    state.closeTx = message.params.data.tx;\n    return { handler: channelClosed, state };\n  }\n  if (message.params.data.event === 'closed_confirmed') {\n    state.resolve(state.closeTx);\n    return { handler: channelClosed };\n  }\n  return { handler: channelClosed, state };\n}\n"],"mappings":"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"}