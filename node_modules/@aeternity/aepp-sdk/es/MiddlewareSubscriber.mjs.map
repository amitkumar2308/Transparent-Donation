{"version":3,"file":"MiddlewareSubscriber.mjs","names":["WebSocket","BaseError","UnexpectedTsError","InternalError","Source","MiddlewareSubscriberError","constructor","message","name","MiddlewareSubscriberDisconnected","closeEvent","_subscriptions","WeakMap","_requestQueue","_webSocket","_targets","_sendMessage","WeakSet","_sendSubscribe","_emit","_disconnect","_messageHandler","_subscribe","MiddlewareSubscriber","webSocket","_classPrivateFieldGet","url","_classPrivateMethodInitSpec","_classPrivateFieldInitSpec","get","_get_targets","set","writable","value","reconnect","_classPrivateMethodGet","_disconnect2","call","_classPrivateFieldSet","Promise","resolve","Object","assign","onopen","onerror","errorEvent","_emit2","undefined","error","onmessage","event","data","_messageHandler2","JSON","parse","onclose","all","map","target","_sendSubscribe2","subscribeKeyBlocks","cb","_subscribe2","Middleware","subscribeKeyBlocksNode","Node","subscribeKeyBlocksAll","All","subscribeMicroBlocks","subscribeMicroBlocksNode","subscribeMicroBlocksAll","subscribeTransactions","subscribeTransactionsNode","subscribeTransactionsAll","subscribeObject","subscribeObjectNode","subscribeObjectAll","Set","_ref","_sendMessage2","send","stringify","isSubscribe","payload","includes","op","push","condition","p","e","filter","_ref2","source","forEach","_ref3","onlyReset","arguments","length","close","Array","isArray","request","shift","t","subscription","size","has","item"],"sources":["../src/MiddlewareSubscriber.ts"],"sourcesContent":["/* eslint-disable max-classes-per-file */\nimport WebSocket from 'isomorphic-ws';\nimport { BaseError, UnexpectedTsError, InternalError } from './utils/errors';\nimport { Encoded } from './utils/encoder';\n\ninterface Message {\n  payload: Object;\n  source: Source.Middleware | Source.Node;\n  subscription: 'KeyBlocks' | 'MicroBlocks' | 'Transactions' | 'Object';\n  target?: string;\n}\n\nenum Source {\n  Middleware = 'mdw',\n  Node = 'node',\n  All = 'all',\n}\n\nexport class MiddlewareSubscriberError extends BaseError {\n  constructor(message: string) {\n    super(message);\n    this.name = 'MiddlewareSubscriberError';\n  }\n}\n\nexport class MiddlewareSubscriberDisconnected extends MiddlewareSubscriberError {\n  constructor(readonly closeEvent: WebSocket.CloseEvent) {\n    super('Connection closed');\n    this.name = 'MiddlewareSubscriberDisconnected';\n  }\n}\n\nexport default class MiddlewareSubscriber {\n  #subscriptions: Array<\n  readonly [target: string, s: Source, cb: (p?: Object, e?: Error) => void]\n  > = [];\n\n  #requestQueue: Array<[isSubscribe: boolean, target: string]> = [];\n\n  #webSocket?: WebSocket;\n\n  get webSocket(): WebSocket | undefined {\n    return this.#webSocket;\n  }\n\n  get #targets(): Set<string> {\n    return new Set(this.#subscriptions.map(([target]) => target));\n  }\n\n  #sendMessage(message: any): void {\n    if (this.#webSocket == null) throw new UnexpectedTsError();\n    this.#webSocket.send(JSON.stringify(message));\n  }\n\n  #sendSubscribe(isSubscribe: boolean, target: string): void {\n    if (this.#webSocket == null) return;\n    const payload = ['KeyBlocks', 'MicroBlocks', 'Transactions'].includes(target)\n      ? target : 'Object';\n    this.#sendMessage({\n      op: isSubscribe ? 'Subscribe' : 'Unsubscribe',\n      payload,\n      ...payload === 'Object' && { target },\n    });\n    this.#requestQueue.push([isSubscribe, target]);\n  }\n\n  #emit(condition: (target: string, source: Source) => boolean, p?: Object, e?: Error): void {\n    this.#subscriptions\n      .filter(([target, source]) => condition(target, source))\n      .forEach(([, , cb]) => cb(p, e));\n  }\n\n  constructor(readonly url: string) {\n  }\n\n  #disconnect(onlyReset = false): void {\n    if (this.#webSocket == null) return;\n    if (!onlyReset) this.#webSocket.close();\n    Object.assign(this.#webSocket, {\n      onopen: undefined,\n      onerror: undefined,\n      onmessage: undefined,\n    });\n    this.#webSocket = undefined;\n  }\n\n  async reconnect(): Promise<void> {\n    this.#disconnect();\n    this.#webSocket = await new Promise((resolve) => {\n      const webSocket = new WebSocket(this.url);\n      Object.assign(webSocket, {\n        onopen: () => resolve(webSocket),\n        onerror: (errorEvent: WebSocket.ErrorEvent) => {\n          this.#emit(() => true, undefined, errorEvent.error);\n        },\n        onmessage: (event: WebSocket.MessageEvent) => {\n          if (typeof event.data !== 'string') {\n            throw new InternalError(`Unknown incoming message type: ${typeof event.data}`);\n          }\n          this.#messageHandler(JSON.parse(event.data));\n        },\n        onclose: (event: WebSocket.CloseEvent) => {\n          this.#emit(() => true, undefined, new MiddlewareSubscriberDisconnected(event));\n          this.#disconnect(true);\n        },\n      });\n    });\n    await Promise.all([...this.#targets].map((target) => this.#sendSubscribe(true, target)));\n  }\n\n  #messageHandler(message: string | string[] | Message): void {\n    if (typeof message === 'string' || Array.isArray(message)) {\n      const request = this.#requestQueue.shift();\n      if (request == null) throw new InternalError('Request queue is empty');\n      const [isSubscribe, target] = request;\n      let error;\n      if (typeof message === 'string') error = new MiddlewareSubscriberError(message);\n      if (message.includes(target) !== isSubscribe) {\n        error = new InternalError(`Expected ${target} to be${isSubscribe ? '' : ' not'} included into ${message}`);\n      }\n      if (error != null) this.#emit((t) => target === t, undefined, error);\n      return;\n    }\n    this.#emit(\n      (target, source) => (target === message.subscription || target === message.target)\n        && (source === message.source || source === Source.All),\n      message.payload,\n    );\n  }\n\n  #subscribe(target: string, source: Source, cb: (p?: Object, e?: Error) => void): () => void {\n    const subscription = [target, source, cb] as const;\n    if (this.#targets.size === 0) this.reconnect();\n    if (!this.#targets.has(target)) this.#sendSubscribe(true, target);\n    this.#subscriptions.push(subscription);\n    return () => {\n      this.#subscriptions = this.#subscriptions.filter((item) => item !== subscription);\n      if (!this.#targets.has(target)) this.#sendSubscribe(false, target);\n      if (this.#targets.size === 0) this.#disconnect();\n    };\n  }\n\n  // TODO: replace p?: any with a proper type definition\n\n  subscribeKeyBlocks(cb: (p?: any, e?: Error) => void): () => void {\n    return this.#subscribe('KeyBlocks', Source.Middleware, cb);\n  }\n\n  subscribeKeyBlocksNode(cb: (p?: any, e?: Error) => void): () => void {\n    return this.#subscribe('KeyBlocks', Source.Node, cb);\n  }\n\n  subscribeKeyBlocksAll(cb: (p?: any, e?: Error) => void): () => void {\n    return this.#subscribe('KeyBlocks', Source.All, cb);\n  }\n\n  subscribeMicroBlocks(cb: (p?: any, e?: Error) => void): () => void {\n    return this.#subscribe('MicroBlocks', Source.Middleware, cb);\n  }\n\n  subscribeMicroBlocksNode(cb: (p?: any, e?: Error) => void): () => void {\n    return this.#subscribe('MicroBlocks', Source.Node, cb);\n  }\n\n  subscribeMicroBlocksAll(cb: (p?: any, e?: Error) => void): () => void {\n    return this.#subscribe('MicroBlocks', Source.All, cb);\n  }\n\n  subscribeTransactions(cb: (p?: any, e?: Error) => void): () => void {\n    return this.#subscribe('Transactions', Source.Middleware, cb);\n  }\n\n  subscribeTransactionsNode(cb: (p?: any, e?: Error) => void): () => void {\n    return this.#subscribe('Transactions', Source.Node, cb);\n  }\n\n  subscribeTransactionsAll(cb: (p?: any, e?: Error) => void): () => void {\n    return this.#subscribe('Transactions', Source.All, cb);\n  }\n\n  subscribeObject(\n    target: Encoded.KeyBlockHash | Encoded.Channel | Encoded.ContractAddress\n    | Encoded.OracleAddress | Encoded.OracleQueryId | Encoded.AccountAddress\n    | Encoded.Name | `${string}.chain`,\n    cb: (p?: any, e?: Error) => void,\n  ): () => void {\n    return this.#subscribe(target, Source.Middleware, cb);\n  }\n\n  subscribeObjectNode(\n    target: Encoded.KeyBlockHash | Encoded.Channel | Encoded.ContractAddress\n    | Encoded.OracleAddress | Encoded.OracleQueryId | Encoded.AccountAddress\n    | Encoded.Name | `${string}.chain`,\n    cb: (p?: any, e?: Error) => void,\n  ): () => void {\n    return this.#subscribe(target, Source.Node, cb);\n  }\n\n  subscribeObjectAll(\n    target: Encoded.KeyBlockHash | Encoded.Channel | Encoded.ContractAddress\n    | Encoded.OracleAddress | Encoded.OracleQueryId | Encoded.AccountAddress\n    | Encoded.Name | `${string}.chain`,\n    cb: (p?: any, e?: Error) => void,\n  ): () => void {\n    return this.#subscribe(target, Source.All, cb);\n  }\n}\n"],"mappings":"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"}