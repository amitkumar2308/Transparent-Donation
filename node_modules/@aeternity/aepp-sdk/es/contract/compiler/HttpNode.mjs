import _fsPromises from 'fs/promises';
const {
  readFile
} = _fsPromises;
import HttpBrowser from "./Http.mjs";
import getFileSystem from "./getFileSystem.mjs";
/**
 * Contract Compiler over HTTP for Nodejs
 *
 * Inherits CompilerHttp and implements `compile`, `validate` methods
 * @category contract
 * @example CompilerHttpNode('COMPILER_URL')
 */
export default class CompilerHttpNode extends HttpBrowser {
  async compile(path) {
    const fileSystem = await getFileSystem(path);
    const sourceCode = await readFile(path, 'utf8');
    return this.compileBySourceCode(sourceCode, fileSystem);
  }
  async generateAci(path) {
    const fileSystem = await getFileSystem(path);
    const sourceCode = await readFile(path, 'utf8');
    return this.generateAciBySourceCode(sourceCode, fileSystem);
  }
  async validate(bytecode, path) {
    const fileSystem = await getFileSystem(path);
    const sourceCode = await readFile(path, 'utf8');
    return this.validateBySourceCode(bytecode, sourceCode, fileSystem);
  }
}
//# sourceMappingURL=HttpNode.mjs.map