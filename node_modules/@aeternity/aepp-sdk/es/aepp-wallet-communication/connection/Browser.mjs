import { AlreadyConnectedError, NoWalletConnectedError } from "../../utils/errors.mjs";
/**
 * Browser connection base interface
 * @category aepp wallet communication
 */
export default class BrowserConnection {
  constructor(_ref) {
    let {
      debug = false
    } = _ref;
    this.debug = debug;
  }

  /**
   * Connect
   * @param onMessage - Message handler
   * @param onDisconnect - trigger when runtime connection in closed
   */
  connect(
  // eslint-disable-next-line @typescript-eslint/no-unused-vars
  onMessage,
  // eslint-disable-next-line @typescript-eslint/no-unused-vars
  onDisconnect) {
    if (this.isConnected()) throw new AlreadyConnectedError('You already connected');
  }

  /**
   * Disconnect
   */
  disconnect() {
    if (!this.isConnected()) throw new NoWalletConnectedError('You dont have connection. Please connect before');
  }

  /**
   * Receive message
   */
  receiveMessage(message) {
    if (this.debug) console.log('Receive message:', message);
  }

  /**
   * Send message
   */
  sendMessage(message) {
    if (this.debug) console.log('Send message:', message);
  }

  /**
   * Check if connected
   * @returns Is connected
   */
}
//# sourceMappingURL=Browser.mjs.map