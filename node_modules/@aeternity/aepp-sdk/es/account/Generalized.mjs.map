{"version":3,"file":"Generalized.mjs","names":["AccountBase","ArgumentError","InternalError","InvalidAuthDataError","NotImplementedError","decode","getAccount","Contract","buildTxAsync","buildTx","Tag","_authFun","WeakMap","AccountGeneralized","constructor","address","_classPrivateFieldInitSpec","writable","value","sign","signMessage","signTypedData","signDelegationToContract","signNameDelegationToContract","signOracleQueryDelegationToContract","signTransaction","tx","_ref","authData","onCompiler","onNode","callData","sourceCode","args","fee","gasLimit","gasPrice","authCallData","_classPrivateFieldGet","account","kind","_classPrivateFieldSet","authFun","contract","initialize","_calldata","encode","_name","gaMetaTx","tag","GaMetaTx","SignedTx","encodedTx","signatures","gaId"],"sources":["../../src/account/Generalized.ts"],"sourcesContent":["import AccountBase from './Base';\nimport {\n  ArgumentError,\n  InternalError,\n  InvalidAuthDataError,\n  NotImplementedError,\n} from '../utils/errors';\nimport { decode, Encoded } from '../utils/encoder';\nimport { getAccount } from '../chain';\nimport Contract from '../contract/Contract';\nimport { buildTxAsync, buildTx } from '../tx/builder';\nimport { Tag } from '../tx/builder/constants';\n\n/**\n * Generalized account class\n */\nexport default class AccountGeneralized extends AccountBase {\n  override readonly address: Encoded.AccountAddress;\n\n  #authFun?: string;\n\n  /**\n   * @param address - Address of generalized account\n   */\n  constructor(address: Encoded.AccountAddress) {\n    super();\n    decode(address);\n    this.address = address;\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  override async sign(): Promise<Uint8Array> {\n    throw new NotImplementedError('Can\\'t sign using generalized account');\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  override async signMessage(): Promise<Uint8Array> {\n    throw new NotImplementedError('Can\\'t sign using generalized account');\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  override async signTypedData(): Promise<Encoded.Signature> {\n    throw new NotImplementedError('Can\\'t sign using generalized account');\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  override async signDelegationToContract(): Promise<Encoded.Signature> {\n    throw new NotImplementedError('signing delegation to contract using generalized account');\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  override async signNameDelegationToContract(): Promise<Encoded.Signature> {\n    throw new NotImplementedError('signing delegation to contract using generalized account');\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  override async signOracleQueryDelegationToContract(): Promise<Encoded.Signature> {\n    throw new NotImplementedError('signing delegation to contract using generalized account');\n  }\n\n  override async signTransaction(\n    tx: Encoded.Transaction,\n    { authData, onCompiler, onNode }: Parameters<AccountBase['signTransaction']>[1],\n  ): Promise<Encoded.Transaction> {\n    if (authData == null || onCompiler == null || onNode == null) {\n      throw new ArgumentError('authData, onCompiler, onNode', 'provided', null);\n    }\n    const {\n      callData, sourceCode, args, fee, gasLimit, gasPrice,\n    } = typeof authData === 'function' ? await authData(tx) : authData;\n\n    const authCallData = callData ?? await (async () => {\n      if (this.#authFun == null) {\n        const account = await getAccount(this.address, { onNode });\n        if (account.kind !== 'generalized') {\n          throw new ArgumentError('account kind', 'generalized', account.kind);\n        }\n        this.#authFun = account.authFun;\n      }\n      if (this.#authFun == null) {\n        throw new InternalError('Account in generalised, but authFun not provided');\n      }\n\n      if (sourceCode == null || args == null) {\n        throw new InvalidAuthDataError('Auth data must contain sourceCode and args or callData.');\n      }\n      const contract = await Contract.initialize({ onCompiler, onNode, sourceCode });\n      return contract._calldata.encode(contract._name, this.#authFun, args);\n    })();\n\n    const gaMetaTx = await buildTxAsync({\n      tag: Tag.GaMetaTx,\n      tx: { tag: Tag.SignedTx, encodedTx: decode(tx), signatures: [] },\n      gaId: this.address,\n      authData: authCallData,\n      fee,\n      gasLimit,\n      gasPrice,\n      onNode,\n    });\n    return buildTx({ tag: Tag.SignedTx, encodedTx: decode(gaMetaTx), signatures: [] });\n  }\n}\n"],"mappings":"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"}