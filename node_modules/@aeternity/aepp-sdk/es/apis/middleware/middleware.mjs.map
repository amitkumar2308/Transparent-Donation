{"version":3,"file":"middleware.mjs","names":["coreClient","Parameters","Mappers","Middleware","ServiceClient","constructor","$host","options","_ref","_options$endpoint","undefined","Error","defaults","requestContentType","packageDetails","userAgentPrefix","userAgentOptions","optionsWithDefaults","endpoint","baseUri","getAccountActivities","id","sendOperationRequest","getAccountActivitiesOperationSpec","getSortedAex141Contracts","getSortedAex141ContractsOperationSpec","getAex141OwnedTokens","accountId","getAex141OwnedTokensOperationSpec","getAex141TokenOwner","contractId","tokenId","getAex141TokenOwnerOperationSpec","getAex141ContractOwners","getAex141ContractOwnersOperationSpec","getAex141ContractTemplates","getAex141ContractTemplatesOperationSpec","getAex141TemplateTokens","templateId","getAex141TemplateTokensOperationSpec","getAex141ByContract","getAex141ByContractOperationSpec","getSortedAex9Tokens","getSortedAex9TokensOperationSpec","getAex9AccountBalances","getAex9AccountBalancesOperationSpec","getAex9TokensCount","getAex9TokensCountOperationSpec","getAex9PairTransfers","sender","recipient","getAex9PairTransfersOperationSpec","getAex9SenderTransfers","getAex9SenderTransfersOperationSpec","getAex9RecipientTransfers","getAex9RecipientTransfersOperationSpec","getAex9ContractBalances","getAex9ContractBalancesOperationSpec","getAex9ContractAccountBalance","hash","getAex9ContractAccountBalanceOperationSpec","getAex9ContractAccountBalanceHistory","getAex9ContractAccountBalanceHistoryOperationSpec","getAex9LogsCount","getAex9LogsCountOperationSpec","getAex9ByContract","getAex9ByContractOperationSpec","getBlocks","getBlocksOperationSpec","getBlock","hashOrKbi","getBlockOperationSpec","getBlockByMbi","kbi","mbi","getBlockByMbiOperationSpec","getChannels","getChannelsOperationSpec","getChannel","getChannelOperationSpec","getContractsCalls","getContractsCallsOperationSpec","getContractsLogs","getContractsLogsOperationSpec","getDeltastats","getDeltastatsOperationSpec","getKeyBlocks","getKeyBlocksOperationSpec","getKeyBlock","getKeyBlockOperationSpec","getKeyBlockMicroBlocks","getKeyBlockMicroBlocksOperationSpec","getMicroBlock","getMicroBlockOperationSpec","getMicroBlockTransactions","getMicroBlockTransactionsOperationSpec","getNames","getNamesOperationSpec","getNamesAuctions","getNamesAuctionsOperationSpec","searchNames","searchNamesOperationSpec","getName","getNameOperationSpec","getNameAuction","getNameAuctionOperationSpec","getNameClaims","getNameClaimsOperationSpec","getNamePointees","getNamePointeesOperationSpec","getNamePointers","getNamePointersOperationSpec","getNameTransfers","getNameTransfersOperationSpec","getNameUpdates","getNameUpdatesOperationSpec","getOracle","getOracleOperationSpec","getOracles","getOraclesOperationSpec","getStatus","getStatusOperationSpec","getTotalstats","getTotalstatsOperationSpec","getTransfers","getTransfersOperationSpec","getTxs","getTxsOperationSpec","getTxCount","getTxCountOperationSpec","getTxCountById","getTxCountByIdOperationSpec","getTx","hashOrIndex","getTxOperationSpec","serializer","createSerializer","path","httpMethod","responses","bodyMapper","PathsKlr2M2V2AccountsIdActivitiesGetResponses200ContentApplicationJsonSchema","ErrorResponse","isError","queryParameters","ownedOnly","type","limit","scope","direction","urlParameters","headerParameters","accept","PathsFlc7UjV2Aex141GetResponses200ContentApplicationJsonSchema","by","prefix","PathsSs61ZgV2Aex141OwnedNftsAccountidGetResponses200ContentApplicationJsonSchema","name","Paths1Ilysy5V2Aex141ContractidOwnersGetResponses200ContentApplicationJsonSchema","Paths17O9Fn6V2Aex141ContractidTemplatesGetResponses200ContentApplicationJsonSchema","PathsNuoourV2Aex141ContractidTemplatesTemplateidTokensGetResponses200ContentApplicationJsonSchema","Aex141Response","Paths1Wbogg8V2Aex9GetResponses200ContentApplicationJsonSchema","Paths1BsirxgV2Aex9AccountBalancesAccountIdGetResponses200ContentApplicationJsonSchema","accountId1","Paths1V0FiznV2Aex9TransfersFromToSenderRecipientGetResponses200ContentApplicationJsonSchema","Paths1X48QgjV2Aex9TransfersFromIdGetResponses200ContentApplicationJsonSchema","Paths1DkkopqV2Aex9TransfersToIdGetResponses200ContentApplicationJsonSchema","PathsNi359V2Aex9ContractidBalancesGetResponses200ContentApplicationJsonSchema","Paths1R02SlwV2Aex9ContractidBalancesAccountidGetResponses200ContentApplicationJsonSchema","Paths1T9RwnyV2Aex9ContractidBalancesAccountidHistoryGetResponses200ContentApplicationJsonSchema","Aex9Response","Paths15Ih6XV2BlocksGetResponses200ContentApplicationJsonSchema","Block","NotFoundResponse","Paths1Txl2A9V2ChannelsGetResponses200ContentApplicationJsonSchema","state","Channel","Paths187U0XzV2ContractsCallsGetResponses200ContentApplicationJsonSchema","PathsB246H1V2ContractsLogsGetResponses200ContentApplicationJsonSchema","contractId1","event","functionPrefix","data","aexnArgs","Paths7Pbec0V2DeltastatsGetResponses200ContentApplicationJsonSchema","Paths1Ulxr59V2KeyBlocksGetResponses200ContentApplicationJsonSchema","KeyBlock","PathsO99PhzV2KeyBlocksHashOrKbiMicroBlocksGetResponses200ContentApplicationJsonSchema","MicroBlock","hash1","PathsGuqvhdV2MicroBlocksHashTxsGetResponses200ContentApplicationJsonSchema","PathsK9TkttV2NamesGetResponses200ContentApplicationJsonSchema","ownedBy","state1","Auction","Paths3Msq0DV2NamesSearchGetResponses200ContentApplicationJsonSchema","Name","NameClaim","PathsDjelzuV2NamesIdPointeesGetResponses200ContentApplicationJsonSchema","value","NameTransfer","NameUpdate","Oracle","PathsB0YvynV2OraclesGetResponses200ContentApplicationJsonSchema","Status","Paths15PsutbV2TotalstatsGetResponses200ContentApplicationJsonSchema","PathsIgs9Z1V2TransfersGetResponses200ContentApplicationJsonSchema","PathsFclv4TV2TxsGetResponses200ContentApplicationJsonSchema","type1","typeGroup","account","contract","channel","oracle","senderId","recipientId","entrypoint","txType","id1","Paths16Tt677V2TxsCountIdGetResponses200ContentApplicationJsonSchema","Tx"],"sources":["../../../src/apis/middleware/middleware.ts"],"sourcesContent":["import * as coreClient from \"@azure/core-client\";\nimport * as Parameters from \"./models/parameters\";\nimport * as Mappers from \"./models/mappers\";\nimport {\n  Enum1,\n  MiddlewareOptionalParams,\n  GetAccountActivitiesOptionalParams,\n  GetAccountActivitiesResponse,\n  GetSortedAex141ContractsOptionalParams,\n  GetSortedAex141ContractsResponse,\n  GetAex141OwnedTokensOptionalParams,\n  GetAex141OwnedTokensResponse,\n  GetAex141TokenOwnerOptionalParams,\n  GetAex141TokenOwnerResponse,\n  GetAex141ContractOwnersOptionalParams,\n  GetAex141ContractOwnersResponse,\n  GetAex141ContractTemplatesOptionalParams,\n  GetAex141ContractTemplatesResponse,\n  GetAex141TemplateTokensOptionalParams,\n  GetAex141TemplateTokensResponse,\n  GetAex141ByContractOptionalParams,\n  GetAex141ByContractResponse,\n  GetSortedAex9TokensOptionalParams,\n  GetSortedAex9TokensResponse,\n  GetAex9AccountBalancesOptionalParams,\n  GetAex9AccountBalancesResponse,\n  GetAex9TokensCountOptionalParams,\n  GetAex9TokensCountResponse,\n  GetAex9PairTransfersOptionalParams,\n  GetAex9PairTransfersResponse,\n  GetAex9SenderTransfersOptionalParams,\n  GetAex9SenderTransfersResponse,\n  GetAex9RecipientTransfersOptionalParams,\n  GetAex9RecipientTransfersResponse,\n  GetAex9ContractBalancesOptionalParams,\n  GetAex9ContractBalancesResponse,\n  GetAex9ContractAccountBalanceOptionalParams,\n  GetAex9ContractAccountBalanceResponse,\n  GetAex9ContractAccountBalanceHistoryOptionalParams,\n  GetAex9ContractAccountBalanceHistoryResponse,\n  GetAex9LogsCountOptionalParams,\n  GetAex9LogsCountResponse,\n  GetAex9ByContractOptionalParams,\n  GetAex9ByContractResponse,\n  GetBlocksOptionalParams,\n  GetBlocksResponse,\n  GetBlockOptionalParams,\n  GetBlockResponse,\n  GetBlockByMbiOptionalParams,\n  GetBlockByMbiResponse,\n  GetChannelsOptionalParams,\n  GetChannelsResponse,\n  GetChannelOptionalParams,\n  GetChannelResponse,\n  GetContractsCallsOptionalParams,\n  GetContractsCallsResponse,\n  GetContractsLogsOptionalParams,\n  GetContractsLogsResponse,\n  GetDeltastatsOptionalParams,\n  GetDeltastatsResponse,\n  GetKeyBlocksOptionalParams,\n  GetKeyBlocksResponse,\n  GetKeyBlockOptionalParams,\n  GetKeyBlockResponse,\n  GetKeyBlockMicroBlocksOptionalParams,\n  GetKeyBlockMicroBlocksResponse,\n  GetMicroBlockOptionalParams,\n  GetMicroBlockResponse,\n  GetMicroBlockTransactionsOptionalParams,\n  GetMicroBlockTransactionsResponse,\n  GetNamesOptionalParams,\n  GetNamesResponse,\n  GetNamesAuctionsOptionalParams,\n  GetNamesAuctionsResponse,\n  SearchNamesOptionalParams,\n  SearchNamesResponse,\n  GetNameOptionalParams,\n  GetNameResponse,\n  GetNameAuctionOptionalParams,\n  GetNameAuctionResponse,\n  GetNameClaimsOptionalParams,\n  GetNameClaimsResponse,\n  GetNamePointeesOptionalParams,\n  GetNamePointeesResponse,\n  GetNamePointersOptionalParams,\n  GetNamePointersResponse,\n  GetNameTransfersOptionalParams,\n  GetNameTransfersResponse,\n  GetNameUpdatesOptionalParams,\n  GetNameUpdatesResponse,\n  GetOracleOptionalParams,\n  GetOracleResponse,\n  GetOraclesOptionalParams,\n  GetOraclesResponse,\n  GetStatusOptionalParams,\n  GetStatusResponse,\n  GetTotalstatsOptionalParams,\n  GetTotalstatsResponse,\n  GetTransfersOptionalParams,\n  GetTransfersResponse,\n  GetTxsOptionalParams,\n  GetTxsResponse,\n  GetTxCountOptionalParams,\n  GetTxCountResponse,\n  GetTxCountByIdOptionalParams,\n  GetTxCountByIdResponse,\n  GetTxOptionalParams,\n  GetTxResponse\n} from \"./models\";\n\nexport class Middleware extends coreClient.ServiceClient {\n  $host: string;\n  limit?: number;\n  scope?: string;\n  direction?: Enum1;\n\n  /**\n   * Initializes a new instance of the Middleware class.\n   * @param $host server parameter\n   * @param options The parameter options\n   */\n  constructor($host: string, options?: MiddlewareOptionalParams) {\n    if ($host === undefined) {\n      throw new Error(\"'$host' cannot be null\");\n    }\n\n    // Initializing default values for options\n    if (!options) {\n      options = {};\n    }\n    const defaults: MiddlewareOptionalParams = {\n      requestContentType: \"application/json; charset=utf-8\"\n    };\n\n    const packageDetails = `azsdk-js-middleware/1.0.0-beta.1`;\n    const userAgentPrefix =\n      options.userAgentOptions && options.userAgentOptions.userAgentPrefix\n        ? `${options.userAgentOptions.userAgentPrefix} ${packageDetails}`\n        : `${packageDetails}`;\n\n    const optionsWithDefaults = {\n      ...defaults,\n      ...options,\n      userAgentOptions: {\n        userAgentPrefix\n      },\n      endpoint: options.endpoint ?? options.baseUri ?? \"{$host}\"\n    };\n    super(optionsWithDefaults);\n    // Parameter assignments\n    this.$host = $host;\n  }\n\n  /**\n   * Get an account activities.\n   * @param id The account address\n   * @param options The options parameters.\n   */\n  getAccountActivities(\n    id: string,\n    options?: GetAccountActivitiesOptionalParams\n  ): Promise<GetAccountActivitiesResponse> {\n    return this.sendOperationRequest(\n      { id, options },\n      getAccountActivitiesOperationSpec\n    );\n  }\n\n  /**\n   * Get AEX141 contracts sorted by name or symbol.\n   * @param options The options parameters.\n   */\n  getSortedAex141Contracts(\n    options?: GetSortedAex141ContractsOptionalParams\n  ): Promise<GetSortedAex141ContractsResponse> {\n    return this.sendOperationRequest(\n      { options },\n      getSortedAex141ContractsOperationSpec\n    );\n  }\n\n  /**\n   * Get tokens owned by an account.\n   * @param accountId The account id\n   * @param options The options parameters.\n   */\n  getAex141OwnedTokens(\n    accountId: string,\n    options?: GetAex141OwnedTokensOptionalParams\n  ): Promise<GetAex141OwnedTokensResponse> {\n    return this.sendOperationRequest(\n      { accountId, options },\n      getAex141OwnedTokensOperationSpec\n    );\n  }\n\n  /**\n   * Get owner of a NFT (AEX-141 token).\n   * @param contractId The contract id\n   * @param tokenId The nft token id\n   * @param options The options parameters.\n   */\n  getAex141TokenOwner(\n    contractId: string,\n    tokenId: number,\n    options?: GetAex141TokenOwnerOptionalParams\n  ): Promise<GetAex141TokenOwnerResponse> {\n    return this.sendOperationRequest(\n      { contractId, tokenId, options },\n      getAex141TokenOwnerOperationSpec\n    );\n  }\n\n  /**\n   * Get owners of tokens of a AEX-141 contract.\n   * @param contractId The contract id\n   * @param options The options parameters.\n   */\n  getAex141ContractOwners(\n    contractId: string,\n    options?: GetAex141ContractOwnersOptionalParams\n  ): Promise<GetAex141ContractOwnersResponse> {\n    return this.sendOperationRequest(\n      { contractId, options },\n      getAex141ContractOwnersOperationSpec\n    );\n  }\n\n  /**\n   * Get templates AEX-141 contract tokens.\n   * @param contractId The contract id\n   * @param options The options parameters.\n   */\n  getAex141ContractTemplates(\n    contractId: string,\n    options?: GetAex141ContractTemplatesOptionalParams\n  ): Promise<GetAex141ContractTemplatesResponse> {\n    return this.sendOperationRequest(\n      { contractId, options },\n      getAex141ContractTemplatesOperationSpec\n    );\n  }\n\n  /**\n   * Get AEX-141 template tokens.\n   * @param contractId Contract id\n   * @param templateId Template id\n   * @param options The options parameters.\n   */\n  getAex141TemplateTokens(\n    contractId: string,\n    templateId: number,\n    options?: GetAex141TemplateTokensOptionalParams\n  ): Promise<GetAex141TemplateTokensResponse> {\n    return this.sendOperationRequest(\n      { contractId, templateId, options },\n      getAex141TemplateTokensOperationSpec\n    );\n  }\n\n  /**\n   * Get AEX141 contract meta-info, extensions, limits and stats.\n   * @param id The contract id\n   * @param options The options parameters.\n   */\n  getAex141ByContract(\n    id: string,\n    options?: GetAex141ByContractOptionalParams\n  ): Promise<GetAex141ByContractResponse> {\n    return this.sendOperationRequest(\n      { id, options },\n      getAex141ByContractOperationSpec\n    );\n  }\n\n  /**\n   * Get AEX9 tokens sorted by name or symbol.\n   * @param options The options parameters.\n   */\n  getSortedAex9Tokens(\n    options?: GetSortedAex9TokensOptionalParams\n  ): Promise<GetSortedAex9TokensResponse> {\n    return this.sendOperationRequest(\n      { options },\n      getSortedAex9TokensOperationSpec\n    );\n  }\n\n  /**\n   * Get all AEX9 balances for an account on the last block.\n   * @param accountId Account id\n   * @param options The options parameters.\n   */\n  getAex9AccountBalances(\n    accountId: string,\n    options?: GetAex9AccountBalancesOptionalParams\n  ): Promise<GetAex9AccountBalancesResponse> {\n    return this.sendOperationRequest(\n      { accountId, options },\n      getAex9AccountBalancesOperationSpec\n    );\n  }\n\n  /**\n   * Get AEX9 tokens count.\n   * @param options The options parameters.\n   */\n  getAex9TokensCount(\n    options?: GetAex9TokensCountOptionalParams\n  ): Promise<GetAex9TokensCountResponse> {\n    return this.sendOperationRequest(\n      { options },\n      getAex9TokensCountOperationSpec\n    );\n  }\n\n  /**\n   * Get AEX9 transfers filtered by sender and recipient.\n   * @param sender Sender account id\n   * @param recipient Recipient account id\n   * @param options The options parameters.\n   */\n  getAex9PairTransfers(\n    sender: string,\n    recipient: string,\n    options?: GetAex9PairTransfersOptionalParams\n  ): Promise<GetAex9PairTransfersResponse> {\n    return this.sendOperationRequest(\n      { sender, recipient, options },\n      getAex9PairTransfersOperationSpec\n    );\n  }\n\n  /**\n   * Get AEX9 transfers filtered by sender.\n   * @param id Sender account id\n   * @param options The options parameters.\n   */\n  getAex9SenderTransfers(\n    id: string,\n    options?: GetAex9SenderTransfersOptionalParams\n  ): Promise<GetAex9SenderTransfersResponse> {\n    return this.sendOperationRequest(\n      { id, options },\n      getAex9SenderTransfersOperationSpec\n    );\n  }\n\n  /**\n   * Get AEX9 transfers filtered by recipient.\n   * @param id Recipient account id\n   * @param options The options parameters.\n   */\n  getAex9RecipientTransfers(\n    id: string,\n    options?: GetAex9RecipientTransfersOptionalParams\n  ): Promise<GetAex9RecipientTransfersResponse> {\n    return this.sendOperationRequest(\n      { id, options },\n      getAex9RecipientTransfersOperationSpec\n    );\n  }\n\n  /**\n   * Get AEX9 balances on a contract.\n   * @param contractId Contract id\n   * @param options The options parameters.\n   */\n  getAex9ContractBalances(\n    contractId: string,\n    options?: GetAex9ContractBalancesOptionalParams\n  ): Promise<GetAex9ContractBalancesResponse> {\n    return this.sendOperationRequest(\n      { contractId, options },\n      getAex9ContractBalancesOperationSpec\n    );\n  }\n\n  /**\n   * Get AEX9 balance for an account on a contract.\n   * @param contractId Contract id\n   * @param accountId Account id\n   * @param hash Block hash\n   * @param options The options parameters.\n   */\n  getAex9ContractAccountBalance(\n    contractId: string,\n    accountId: string,\n    hash: string,\n    options?: GetAex9ContractAccountBalanceOptionalParams\n  ): Promise<GetAex9ContractAccountBalanceResponse> {\n    return this.sendOperationRequest(\n      { contractId, accountId, hash, options },\n      getAex9ContractAccountBalanceOperationSpec\n    );\n  }\n\n  /**\n   * Get AEX9 account balance on a contract throughout all heights when changed.\n   * @param contractId Contract id\n   * @param accountId Account id\n   * @param options The options parameters.\n   */\n  getAex9ContractAccountBalanceHistory(\n    contractId: string,\n    accountId: string,\n    options?: GetAex9ContractAccountBalanceHistoryOptionalParams\n  ): Promise<GetAex9ContractAccountBalanceHistoryResponse> {\n    return this.sendOperationRequest(\n      { contractId, accountId, options },\n      getAex9ContractAccountBalanceHistoryOperationSpec\n    );\n  }\n\n  /**\n   * Get AEX9 token events count.\n   * @param contractId Contract id\n   * @param options The options parameters.\n   */\n  getAex9LogsCount(\n    contractId: string,\n    options?: GetAex9LogsCountOptionalParams\n  ): Promise<GetAex9LogsCountResponse> {\n    return this.sendOperationRequest(\n      { contractId, options },\n      getAex9LogsCountOperationSpec\n    );\n  }\n\n  /**\n   * Get AEX9 creation and meta_info information by contract id.\n   * @param id The contract id\n   * @param options The options parameters.\n   */\n  getAex9ByContract(\n    id: string,\n    options?: GetAex9ByContractOptionalParams\n  ): Promise<GetAex9ByContractResponse> {\n    return this.sendOperationRequest(\n      { id, options },\n      getAex9ByContractOperationSpec\n    );\n  }\n\n  /**\n   * Get multiple blocks.\n   * @param options The options parameters.\n   */\n  getBlocks(options?: GetBlocksOptionalParams): Promise<GetBlocksResponse> {\n    return this.sendOperationRequest({ options }, getBlocksOperationSpec);\n  }\n\n  /**\n   * Get a single block.\n   * @param hashOrKbi The block encoded hash or key block index\n   * @param options The options parameters.\n   */\n  getBlock(\n    hashOrKbi: string,\n    options?: GetBlockOptionalParams\n  ): Promise<GetBlockResponse> {\n    return this.sendOperationRequest(\n      { hashOrKbi, options },\n      getBlockOperationSpec\n    );\n  }\n\n  /**\n   * Get a single block.\n   * @param kbi The block key block index\n   * @param mbi The block micro block index, starting from 0\n   * @param options The options parameters.\n   */\n  getBlockByMbi(\n    kbi: number,\n    mbi: number,\n    options?: GetBlockByMbiOptionalParams\n  ): Promise<GetBlockByMbiResponse> {\n    return this.sendOperationRequest(\n      { kbi, mbi, options },\n      getBlockByMbiOperationSpec\n    );\n  }\n\n  /**\n   * Get multiple channels.\n   * @param options The options parameters.\n   */\n  getChannels(\n    options?: GetChannelsOptionalParams\n  ): Promise<GetChannelsResponse> {\n    return this.sendOperationRequest({ options }, getChannelsOperationSpec);\n  }\n\n  /**\n   * Get a single channel.\n   * @param id The channel\n   * @param options The options parameters.\n   */\n  getChannel(\n    id: string,\n    options?: GetChannelOptionalParams\n  ): Promise<GetChannelResponse> {\n    return this.sendOperationRequest({ id, options }, getChannelOperationSpec);\n  }\n\n  /**\n   * Get contract calls.\n   * @param options The options parameters.\n   */\n  getContractsCalls(\n    options?: GetContractsCallsOptionalParams\n  ): Promise<GetContractsCallsResponse> {\n    return this.sendOperationRequest(\n      { options },\n      getContractsCallsOperationSpec\n    );\n  }\n\n  /**\n   * Get contract logs.\n   * @param options The options parameters.\n   */\n  getContractsLogs(\n    options?: GetContractsLogsOptionalParams\n  ): Promise<GetContractsLogsResponse> {\n    return this.sendOperationRequest(\n      { options },\n      getContractsLogsOperationSpec\n    );\n  }\n\n  /**\n   * Get delta stats.\n   * @param options The options parameters.\n   */\n  getDeltastats(\n    options?: GetDeltastatsOptionalParams\n  ): Promise<GetDeltastatsResponse> {\n    return this.sendOperationRequest({ options }, getDeltastatsOperationSpec);\n  }\n\n  /**\n   * Get multiple key blocks.\n   * @param options The options parameters.\n   */\n  getKeyBlocks(\n    options?: GetKeyBlocksOptionalParams\n  ): Promise<GetKeyBlocksResponse> {\n    return this.sendOperationRequest({ options }, getKeyBlocksOperationSpec);\n  }\n\n  /**\n   * Get a single key block.\n   * @param hashOrKbi The key block encoded hash or key block index\n   * @param options The options parameters.\n   */\n  getKeyBlock(\n    hashOrKbi: string,\n    options?: GetKeyBlockOptionalParams\n  ): Promise<GetKeyBlockResponse> {\n    return this.sendOperationRequest(\n      { hashOrKbi, options },\n      getKeyBlockOperationSpec\n    );\n  }\n\n  /**\n   * Get the key block micro blocks.\n   * @param hashOrKbi The key block encoded hash or key block index\n   * @param options The options parameters.\n   */\n  getKeyBlockMicroBlocks(\n    hashOrKbi: string,\n    options?: GetKeyBlockMicroBlocksOptionalParams\n  ): Promise<GetKeyBlockMicroBlocksResponse> {\n    return this.sendOperationRequest(\n      { hashOrKbi, options },\n      getKeyBlockMicroBlocksOperationSpec\n    );\n  }\n\n  /**\n   * Get a micro block\n   * @param hash The micro block encoded hash\n   * @param options The options parameters.\n   */\n  getMicroBlock(\n    hash: string,\n    options?: GetMicroBlockOptionalParams\n  ): Promise<GetMicroBlockResponse> {\n    return this.sendOperationRequest(\n      { hash, options },\n      getMicroBlockOperationSpec\n    );\n  }\n\n  /**\n   * Get a micro block transactions\n   * @param hash The micro block encoded hash\n   * @param options The options parameters.\n   */\n  getMicroBlockTransactions(\n    hash: string,\n    options?: GetMicroBlockTransactionsOptionalParams\n  ): Promise<GetMicroBlockTransactionsResponse> {\n    return this.sendOperationRequest(\n      { hash, options },\n      getMicroBlockTransactionsOperationSpec\n    );\n  }\n\n  /**\n   * Get multiple names.\n   * @param options The options parameters.\n   */\n  getNames(options?: GetNamesOptionalParams): Promise<GetNamesResponse> {\n    return this.sendOperationRequest({ options }, getNamesOperationSpec);\n  }\n\n  /**\n   * Get multiple names.\n   * @param options The options parameters.\n   */\n  getNamesAuctions(\n    options?: GetNamesAuctionsOptionalParams\n  ): Promise<GetNamesAuctionsResponse> {\n    return this.sendOperationRequest(\n      { options },\n      getNamesAuctionsOperationSpec\n    );\n  }\n\n  /**\n   * Get multiple names.\n   * @param options The options parameters.\n   */\n  searchNames(\n    options?: SearchNamesOptionalParams\n  ): Promise<SearchNamesResponse> {\n    return this.sendOperationRequest({ options }, searchNamesOperationSpec);\n  }\n\n  /**\n   * Get a single name.\n   * @param id The name\n   * @param options The options parameters.\n   */\n  getName(\n    id: string,\n    options?: GetNameOptionalParams\n  ): Promise<GetNameResponse> {\n    return this.sendOperationRequest({ id, options }, getNameOperationSpec);\n  }\n\n  /**\n   * Get name auction\n   * @param id The name\n   * @param options The options parameters.\n   */\n  getNameAuction(\n    id: string,\n    options?: GetNameAuctionOptionalParams\n  ): Promise<GetNameAuctionResponse> {\n    return this.sendOperationRequest(\n      { id, options },\n      getNameAuctionOperationSpec\n    );\n  }\n\n  /**\n   * Get name claims\n   * @param id The name or name hash\n   * @param options The options parameters.\n   */\n  getNameClaims(\n    id: string,\n    options?: GetNameClaimsOptionalParams\n  ): Promise<GetNameClaimsResponse> {\n    return this.sendOperationRequest(\n      { id, options },\n      getNameClaimsOperationSpec\n    );\n  }\n\n  /**\n   * Get name pointees\n   * @param id The name\n   * @param options The options parameters.\n   */\n  getNamePointees(\n    id: string,\n    options?: GetNamePointeesOptionalParams\n  ): Promise<GetNamePointeesResponse> {\n    return this.sendOperationRequest(\n      { id, options },\n      getNamePointeesOperationSpec\n    );\n  }\n\n  /**\n   * Get name pointers\n   * @param id The name\n   * @param options The options parameters.\n   */\n  getNamePointers(\n    id: string,\n    options?: GetNamePointersOptionalParams\n  ): Promise<GetNamePointersResponse> {\n    return this.sendOperationRequest(\n      { id, options },\n      getNamePointersOperationSpec\n    );\n  }\n\n  /**\n   * Get name transfers\n   * @param id The name or name hash\n   * @param options The options parameters.\n   */\n  getNameTransfers(\n    id: string,\n    options?: GetNameTransfersOptionalParams\n  ): Promise<GetNameTransfersResponse> {\n    return this.sendOperationRequest(\n      { id, options },\n      getNameTransfersOperationSpec\n    );\n  }\n\n  /**\n   * Get name updates\n   * @param id The name or name hash\n   * @param options The options parameters.\n   */\n  getNameUpdates(\n    id: string,\n    options?: GetNameUpdatesOptionalParams\n  ): Promise<GetNameUpdatesResponse> {\n    return this.sendOperationRequest(\n      { id, options },\n      getNameUpdatesOperationSpec\n    );\n  }\n\n  /**\n   * Get a single oracle.\n   * @param id The oracle\n   * @param options The options parameters.\n   */\n  getOracle(\n    id: string,\n    options?: GetOracleOptionalParams\n  ): Promise<GetOracleResponse> {\n    return this.sendOperationRequest({ id, options }, getOracleOperationSpec);\n  }\n\n  /**\n   * Get multiple oracles.\n   * @param options The options parameters.\n   */\n  getOracles(options?: GetOraclesOptionalParams): Promise<GetOraclesResponse> {\n    return this.sendOperationRequest({ options }, getOraclesOperationSpec);\n  }\n\n  /**\n   * Gets the current syncing status of both middleware and the node\n   * @param options The options parameters.\n   */\n  getStatus(options?: GetStatusOptionalParams): Promise<GetStatusResponse> {\n    return this.sendOperationRequest({ options }, getStatusOperationSpec);\n  }\n\n  /**\n   * Get total accumulated stats.\n   * @param options The options parameters.\n   */\n  getTotalstats(\n    options?: GetTotalstatsOptionalParams\n  ): Promise<GetTotalstatsResponse> {\n    return this.sendOperationRequest({ options }, getTotalstatsOperationSpec);\n  }\n\n  /**\n   * Get multiple transfers.\n   * @param options The options parameters.\n   */\n  getTransfers(\n    options?: GetTransfersOptionalParams\n  ): Promise<GetTransfersResponse> {\n    return this.sendOperationRequest({ options }, getTransfersOperationSpec);\n  }\n\n  /**\n   * Get multiple transactions.\n   * @param options The options parameters.\n   */\n  getTxs(options?: GetTxsOptionalParams): Promise<GetTxsResponse> {\n    return this.sendOperationRequest({ options }, getTxsOperationSpec);\n  }\n\n  /**\n   * Get count of transactions at the latest height.\n   * @param options The options parameters.\n   */\n  getTxCount(options?: GetTxCountOptionalParams): Promise<GetTxCountResponse> {\n    return this.sendOperationRequest({ options }, getTxCountOperationSpec);\n  }\n\n  /**\n   * Get transactions count and its type for given aeternity ID.\n   * @param id The ID of the address/name/oracle/etc\n   * @param options The options parameters.\n   */\n  getTxCountById(\n    id: string,\n    options?: GetTxCountByIdOptionalParams\n  ): Promise<GetTxCountByIdResponse> {\n    return this.sendOperationRequest(\n      { id, options },\n      getTxCountByIdOperationSpec\n    );\n  }\n\n  /**\n   * Get a single transaction.\n   * @param hashOrIndex The transaction encoded hash or index (txi)\n   * @param options The options parameters.\n   */\n  getTx(\n    hashOrIndex: string,\n    options?: GetTxOptionalParams\n  ): Promise<GetTxResponse> {\n    return this.sendOperationRequest(\n      { hashOrIndex, options },\n      getTxOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst getAccountActivitiesOperationSpec: coreClient.OperationSpec = {\n  path: \"/v2/accounts/{id}/activities\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.PathsKlr2M2V2AccountsIdActivitiesGetResponses200ContentApplicationJsonSchema\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true\n    }\n  },\n  queryParameters: [\n    Parameters.ownedOnly,\n    Parameters.type,\n    Parameters.limit,\n    Parameters.scope,\n    Parameters.direction\n  ],\n  urlParameters: [Parameters.$host, Parameters.id],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getSortedAex141ContractsOperationSpec: coreClient.OperationSpec = {\n  path: \"/v2/aex141\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.PathsFlc7UjV2Aex141GetResponses200ContentApplicationJsonSchema\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true\n    }\n  },\n  queryParameters: [\n    Parameters.limit,\n    Parameters.direction,\n    Parameters.by,\n    Parameters.prefix\n  ],\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getAex141OwnedTokensOperationSpec: coreClient.OperationSpec = {\n  path: \"/v2/aex141/owned-nfts/{accountId}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.PathsSs61ZgV2Aex141OwnedNftsAccountidGetResponses200ContentApplicationJsonSchema\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true\n    }\n  },\n  queryParameters: [Parameters.limit, Parameters.direction],\n  urlParameters: [Parameters.$host, Parameters.accountId],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getAex141TokenOwnerOperationSpec: coreClient.OperationSpec = {\n  path: \"/v2/aex141/{contractId}/owner/{tokenId}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: { type: { name: \"String\" } }\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true\n    }\n  },\n  urlParameters: [Parameters.$host, Parameters.contractId, Parameters.tokenId],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getAex141ContractOwnersOperationSpec: coreClient.OperationSpec = {\n  path: \"/v2/aex141/{contractId}/owners\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.Paths1Ilysy5V2Aex141ContractidOwnersGetResponses200ContentApplicationJsonSchema\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true\n    }\n  },\n  queryParameters: [Parameters.limit, Parameters.direction],\n  urlParameters: [Parameters.$host, Parameters.contractId],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getAex141ContractTemplatesOperationSpec: coreClient.OperationSpec = {\n  path: \"/v2/aex141/{contractId}/templates\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.Paths17O9Fn6V2Aex141ContractidTemplatesGetResponses200ContentApplicationJsonSchema\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true\n    }\n  },\n  queryParameters: [Parameters.limit, Parameters.direction],\n  urlParameters: [Parameters.$host, Parameters.contractId],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getAex141TemplateTokensOperationSpec: coreClient.OperationSpec = {\n  path: \"/v2/aex141/{contractId}/templates/{templateId}/tokens\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.PathsNuoourV2Aex141ContractidTemplatesTemplateidTokensGetResponses200ContentApplicationJsonSchema\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true\n    }\n  },\n  queryParameters: [Parameters.limit, Parameters.direction],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.contractId,\n    Parameters.templateId\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getAex141ByContractOperationSpec: coreClient.OperationSpec = {\n  path: \"/v2/aex141/{id}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Aex141Response\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true\n    }\n  },\n  urlParameters: [Parameters.$host, Parameters.id],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getSortedAex9TokensOperationSpec: coreClient.OperationSpec = {\n  path: \"/v2/aex9\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.Paths1Wbogg8V2Aex9GetResponses200ContentApplicationJsonSchema\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true\n    }\n  },\n  queryParameters: [\n    Parameters.limit,\n    Parameters.direction,\n    Parameters.by,\n    Parameters.prefix\n  ],\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getAex9AccountBalancesOperationSpec: coreClient.OperationSpec = {\n  path: \"/v2/aex9/account-balances/{account_id}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.Paths1BsirxgV2Aex9AccountBalancesAccountIdGetResponses200ContentApplicationJsonSchema\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true\n    }\n  },\n  urlParameters: [Parameters.$host, Parameters.accountId1],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getAex9TokensCountOperationSpec: coreClient.OperationSpec = {\n  path: \"/v2/aex9/count\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: { type: { name: \"Number\" } }\n    }\n  },\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getAex9PairTransfersOperationSpec: coreClient.OperationSpec = {\n  path: \"/v2/aex9/transfers/from-to/{sender}/{recipient}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.Paths1V0FiznV2Aex9TransfersFromToSenderRecipientGetResponses200ContentApplicationJsonSchema\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true\n    }\n  },\n  queryParameters: [Parameters.limit, Parameters.direction],\n  urlParameters: [Parameters.$host, Parameters.sender, Parameters.recipient],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getAex9SenderTransfersOperationSpec: coreClient.OperationSpec = {\n  path: \"/v2/aex9/transfers/from/{id}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.Paths1X48QgjV2Aex9TransfersFromIdGetResponses200ContentApplicationJsonSchema\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true\n    }\n  },\n  queryParameters: [Parameters.limit, Parameters.direction],\n  urlParameters: [Parameters.$host, Parameters.id],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getAex9RecipientTransfersOperationSpec: coreClient.OperationSpec = {\n  path: \"/v2/aex9/transfers/to/{id}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.Paths1DkkopqV2Aex9TransfersToIdGetResponses200ContentApplicationJsonSchema\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true\n    }\n  },\n  queryParameters: [Parameters.limit, Parameters.direction],\n  urlParameters: [Parameters.$host, Parameters.id],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getAex9ContractBalancesOperationSpec: coreClient.OperationSpec = {\n  path: \"/v2/aex9/{contractId}/balances\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.PathsNi359V2Aex9ContractidBalancesGetResponses200ContentApplicationJsonSchema\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true\n    }\n  },\n  queryParameters: [Parameters.limit, Parameters.direction, Parameters.by],\n  urlParameters: [Parameters.$host, Parameters.contractId],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getAex9ContractAccountBalanceOperationSpec: coreClient.OperationSpec = {\n  path: \"/v2/aex9/{contractId}/balances/{accountId}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.Paths1R02SlwV2Aex9ContractidBalancesAccountidGetResponses200ContentApplicationJsonSchema\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true\n    }\n  },\n  queryParameters: [Parameters.hash],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.accountId,\n    Parameters.contractId\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getAex9ContractAccountBalanceHistoryOperationSpec: coreClient.OperationSpec = {\n  path: \"/v2/aex9/{contractId}/balances/{accountId}/history\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.Paths1T9RwnyV2Aex9ContractidBalancesAccountidHistoryGetResponses200ContentApplicationJsonSchema\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true\n    }\n  },\n  queryParameters: [Parameters.limit, Parameters.scope, Parameters.direction],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.accountId,\n    Parameters.contractId\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getAex9LogsCountOperationSpec: coreClient.OperationSpec = {\n  path: \"/v2/aex9/{contractId}/logs-count\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: { type: { name: \"Number\" } }\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true\n    }\n  },\n  urlParameters: [Parameters.$host, Parameters.contractId],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getAex9ByContractOperationSpec: coreClient.OperationSpec = {\n  path: \"/v2/aex9/{id}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Aex9Response\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true\n    }\n  },\n  urlParameters: [Parameters.$host, Parameters.id],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getBlocksOperationSpec: coreClient.OperationSpec = {\n  path: \"/v2/blocks\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.Paths15Ih6XV2BlocksGetResponses200ContentApplicationJsonSchema\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true\n    }\n  },\n  queryParameters: [Parameters.limit, Parameters.scope, Parameters.direction],\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getBlockOperationSpec: coreClient.OperationSpec = {\n  path: \"/v2/blocks/{hash_or_kbi}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Block\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true\n    },\n    404: {\n      bodyMapper: Mappers.NotFoundResponse,\n      isError: true\n    }\n  },\n  urlParameters: [Parameters.$host, Parameters.hashOrKbi],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getBlockByMbiOperationSpec: coreClient.OperationSpec = {\n  path: \"/v2/blocks/{kbi}/{mbi}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Block\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true\n    },\n    404: {\n      bodyMapper: Mappers.NotFoundResponse,\n      isError: true\n    }\n  },\n  urlParameters: [Parameters.$host, Parameters.kbi, Parameters.mbi],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getChannelsOperationSpec: coreClient.OperationSpec = {\n  path: \"/v2/channels\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.Paths1Txl2A9V2ChannelsGetResponses200ContentApplicationJsonSchema\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true\n    }\n  },\n  queryParameters: [\n    Parameters.limit,\n    Parameters.scope,\n    Parameters.direction,\n    Parameters.state\n  ],\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getChannelOperationSpec: coreClient.OperationSpec = {\n  path: \"/v2/channels/{id}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Channel\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true\n    },\n    404: {\n      bodyMapper: Mappers.NotFoundResponse,\n      isError: true\n    }\n  },\n  urlParameters: [Parameters.$host, Parameters.id],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getContractsCallsOperationSpec: coreClient.OperationSpec = {\n  path: \"/v2/contracts/calls\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.Paths187U0XzV2ContractsCallsGetResponses200ContentApplicationJsonSchema\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true\n    }\n  },\n  queryParameters: [Parameters.limit, Parameters.scope, Parameters.direction],\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getContractsLogsOperationSpec: coreClient.OperationSpec = {\n  path: \"/v2/contracts/logs\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.PathsB246H1V2ContractsLogsGetResponses200ContentApplicationJsonSchema\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true\n    }\n  },\n  queryParameters: [\n    Parameters.limit,\n    Parameters.scope,\n    Parameters.direction,\n    Parameters.contractId1,\n    Parameters.event,\n    Parameters.functionPrefix,\n    Parameters.data,\n    Parameters.aexnArgs\n  ],\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getDeltastatsOperationSpec: coreClient.OperationSpec = {\n  path: \"/v2/deltastats\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.Paths7Pbec0V2DeltastatsGetResponses200ContentApplicationJsonSchema\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true\n    }\n  },\n  queryParameters: [Parameters.limit, Parameters.scope, Parameters.direction],\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getKeyBlocksOperationSpec: coreClient.OperationSpec = {\n  path: \"/v2/key-blocks\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.Paths1Ulxr59V2KeyBlocksGetResponses200ContentApplicationJsonSchema\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true\n    }\n  },\n  queryParameters: [Parameters.limit, Parameters.scope, Parameters.direction],\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getKeyBlockOperationSpec: coreClient.OperationSpec = {\n  path: \"/v2/key-blocks/{hash_or_kbi}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.KeyBlock\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true\n    },\n    404: {\n      bodyMapper: Mappers.NotFoundResponse,\n      isError: true\n    }\n  },\n  urlParameters: [Parameters.$host, Parameters.hashOrKbi],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getKeyBlockMicroBlocksOperationSpec: coreClient.OperationSpec = {\n  path: \"/v2/key-blocks/{hash_or_kbi}/micro-blocks\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.PathsO99PhzV2KeyBlocksHashOrKbiMicroBlocksGetResponses200ContentApplicationJsonSchema\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true\n    }\n  },\n  queryParameters: [Parameters.limit, Parameters.scope, Parameters.direction],\n  urlParameters: [Parameters.$host, Parameters.hashOrKbi],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getMicroBlockOperationSpec: coreClient.OperationSpec = {\n  path: \"/v2/micro-blocks/{hash}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.MicroBlock\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true\n    },\n    404: {\n      bodyMapper: Mappers.NotFoundResponse,\n      isError: true\n    }\n  },\n  urlParameters: [Parameters.$host, Parameters.hash1],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getMicroBlockTransactionsOperationSpec: coreClient.OperationSpec = {\n  path: \"/v2/micro-blocks/{hash}/txs\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.PathsGuqvhdV2MicroBlocksHashTxsGetResponses200ContentApplicationJsonSchema\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true\n    }\n  },\n  urlParameters: [Parameters.$host, Parameters.hash1],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getNamesOperationSpec: coreClient.OperationSpec = {\n  path: \"/v2/names\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.PathsK9TkttV2NamesGetResponses200ContentApplicationJsonSchema\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true\n    }\n  },\n  queryParameters: [\n    Parameters.limit,\n    Parameters.direction,\n    Parameters.by,\n    Parameters.ownedBy,\n    Parameters.state1\n  ],\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getNamesAuctionsOperationSpec: coreClient.OperationSpec = {\n  path: \"/v2/names/auctions\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Auction\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true\n    }\n  },\n  queryParameters: [Parameters.limit, Parameters.scope, Parameters.direction],\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst searchNamesOperationSpec: coreClient.OperationSpec = {\n  path: \"/v2/names/search\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.Paths3Msq0DV2NamesSearchGetResponses200ContentApplicationJsonSchema\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true\n    }\n  },\n  queryParameters: [Parameters.limit, Parameters.scope, Parameters.direction],\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getNameOperationSpec: coreClient.OperationSpec = {\n  path: \"/v2/names/{id}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Name\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true\n    },\n    404: {\n      bodyMapper: Mappers.NotFoundResponse,\n      isError: true\n    }\n  },\n  urlParameters: [Parameters.$host, Parameters.id],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getNameAuctionOperationSpec: coreClient.OperationSpec = {\n  path: \"/v2/names/{id}/auction\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Auction\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true\n    },\n    404: {\n      bodyMapper: Mappers.NotFoundResponse,\n      isError: true\n    }\n  },\n  queryParameters: [Parameters.limit, Parameters.scope, Parameters.direction],\n  urlParameters: [Parameters.$host, Parameters.id],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getNameClaimsOperationSpec: coreClient.OperationSpec = {\n  path: \"/v2/names/{id}/claims\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.NameClaim\n    },\n    404: {\n      bodyMapper: Mappers.NotFoundResponse,\n      isError: true\n    }\n  },\n  queryParameters: [Parameters.limit, Parameters.scope, Parameters.direction],\n  urlParameters: [Parameters.$host, Parameters.id],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getNamePointeesOperationSpec: coreClient.OperationSpec = {\n  path: \"/v2/names/{id}/pointees\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.PathsDjelzuV2NamesIdPointeesGetResponses200ContentApplicationJsonSchema\n    },\n    404: {\n      bodyMapper: Mappers.NotFoundResponse,\n      isError: true\n    }\n  },\n  urlParameters: [Parameters.$host, Parameters.id],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getNamePointersOperationSpec: coreClient.OperationSpec = {\n  path: \"/v2/names/{id}/pointers\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: {\n        type: { name: \"Dictionary\", value: { type: { name: \"any\" } } }\n      }\n    },\n    404: {\n      bodyMapper: Mappers.NotFoundResponse,\n      isError: true\n    }\n  },\n  urlParameters: [Parameters.$host, Parameters.id],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getNameTransfersOperationSpec: coreClient.OperationSpec = {\n  path: \"/v2/names/{id}/transfers\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.NameTransfer\n    },\n    404: {\n      bodyMapper: Mappers.NotFoundResponse,\n      isError: true\n    }\n  },\n  queryParameters: [Parameters.limit, Parameters.scope, Parameters.direction],\n  urlParameters: [Parameters.$host, Parameters.id],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getNameUpdatesOperationSpec: coreClient.OperationSpec = {\n  path: \"/v2/names/{id}/updates\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.NameUpdate\n    },\n    404: {\n      bodyMapper: Mappers.NotFoundResponse,\n      isError: true\n    }\n  },\n  queryParameters: [Parameters.limit, Parameters.scope, Parameters.direction],\n  urlParameters: [Parameters.$host, Parameters.id],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getOracleOperationSpec: coreClient.OperationSpec = {\n  path: \"/v2/oracle/{id}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Oracle\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true\n    },\n    404: {\n      bodyMapper: Mappers.NotFoundResponse,\n      isError: true\n    }\n  },\n  urlParameters: [Parameters.$host, Parameters.id],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getOraclesOperationSpec: coreClient.OperationSpec = {\n  path: \"/v2/oracles\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.PathsB0YvynV2OraclesGetResponses200ContentApplicationJsonSchema\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true\n    }\n  },\n  queryParameters: [Parameters.limit, Parameters.scope, Parameters.direction],\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getStatusOperationSpec: coreClient.OperationSpec = {\n  path: \"/v2/status\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Status\n    }\n  },\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getTotalstatsOperationSpec: coreClient.OperationSpec = {\n  path: \"/v2/totalstats\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.Paths15PsutbV2TotalstatsGetResponses200ContentApplicationJsonSchema\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true\n    }\n  },\n  queryParameters: [Parameters.limit, Parameters.scope, Parameters.direction],\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getTransfersOperationSpec: coreClient.OperationSpec = {\n  path: \"/v2/transfers\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.PathsIgs9Z1V2TransfersGetResponses200ContentApplicationJsonSchema\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true\n    }\n  },\n  queryParameters: [Parameters.limit, Parameters.scope, Parameters.direction],\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getTxsOperationSpec: coreClient.OperationSpec = {\n  path: \"/v2/txs\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.PathsFclv4TV2TxsGetResponses200ContentApplicationJsonSchema\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true\n    }\n  },\n  queryParameters: [\n    Parameters.limit,\n    Parameters.scope,\n    Parameters.direction,\n    Parameters.type1,\n    Parameters.typeGroup,\n    Parameters.account,\n    Parameters.contract,\n    Parameters.channel,\n    Parameters.oracle,\n    Parameters.senderId,\n    Parameters.recipientId,\n    Parameters.entrypoint\n  ],\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getTxCountOperationSpec: coreClient.OperationSpec = {\n  path: \"/v2/txs/count\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: { type: { name: \"Number\" } }\n    }\n  },\n  queryParameters: [Parameters.scope, Parameters.txType, Parameters.id1],\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getTxCountByIdOperationSpec: coreClient.OperationSpec = {\n  path: \"/v2/txs/count/{id}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.Paths16Tt677V2TxsCountIdGetResponses200ContentApplicationJsonSchema\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true\n    }\n  },\n  urlParameters: [Parameters.$host, Parameters.id],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getTxOperationSpec: coreClient.OperationSpec = {\n  path: \"/v2/txs/{hash_or_index}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Tx\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true\n    },\n    404: {\n      bodyMapper: Mappers.NotFoundResponse,\n      isError: true\n    }\n  },\n  urlParameters: [Parameters.$host, Parameters.hashOrIndex],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n"],"mappings":"AAAA,OAAO,KAAKA,UAAU,MAAM,oBAAoB;AAAC,OAC1C,KAAKC,UAAU;AAAA,OACf,KAAKC,OAAO;AA4GnB,OAAO,MAAMC,UAAU,SAASH,UAAU,CAACI,aAAa,CAAC;EAMvD;AACF;AACA;AACA;AACA;EACEC,WAAWA,CAACC,KAAa,EAAEC,OAAkC,EAAE;IAAA,IAAAC,IAAA,EAAAC,iBAAA;IAC7D,IAAIH,KAAK,KAAKI,SAAS,EAAE;MACvB,MAAM,IAAIC,KAAK,CAAC,wBAAwB,CAAC;IAC3C;;IAEA;IACA,IAAI,CAACJ,OAAO,EAAE;MACZA,OAAO,GAAG,CAAC,CAAC;IACd;IACA,MAAMK,QAAkC,GAAG;MACzCC,kBAAkB,EAAE;IACtB,CAAC;IAED,MAAMC,cAAc,GAAI,kCAAiC;IACzD,MAAMC,eAAe,GACnBR,OAAO,CAACS,gBAAgB,IAAIT,OAAO,CAACS,gBAAgB,CAACD,eAAe,GAC/D,GAAER,OAAO,CAACS,gBAAgB,CAACD,eAAgB,IAAGD,cAAe,EAAC,GAC9D,GAAEA,cAAe,EAAC;IAEzB,MAAMG,mBAAmB,GAAG;MAC1B,GAAGL,QAAQ;MACX,GAAGL,OAAO;MACVS,gBAAgB,EAAE;QAChBD;MACF,CAAC;MACDG,QAAQ,GAAAV,IAAA,IAAAC,iBAAA,GAAEF,OAAO,CAACW,QAAQ,cAAAT,iBAAA,cAAAA,iBAAA,GAAIF,OAAO,CAACY,OAAO,cAAAX,IAAA,cAAAA,IAAA,GAAI;IACnD,CAAC;IACD,KAAK,CAACS,mBAAmB,CAAC;IAC1B;IACA,IAAI,CAACX,KAAK,GAAGA,KAAK;EACpB;;EAEA;AACF;AACA;AACA;AACA;EACEc,oBAAoBA,CAClBC,EAAU,EACVd,OAA4C,EACL;IACvC,OAAO,IAAI,CAACe,oBAAoB,CAC9B;MAAED,EAAE;MAAEd;IAAQ,CAAC,EACfgB,iCACF,CAAC;EACH;;EAEA;AACF;AACA;AACA;EACEC,wBAAwBA,CACtBjB,OAAgD,EACL;IAC3C,OAAO,IAAI,CAACe,oBAAoB,CAC9B;MAAEf;IAAQ,CAAC,EACXkB,qCACF,CAAC;EACH;;EAEA;AACF;AACA;AACA;AACA;EACEC,oBAAoBA,CAClBC,SAAiB,EACjBpB,OAA4C,EACL;IACvC,OAAO,IAAI,CAACe,oBAAoB,CAC9B;MAAEK,SAAS;MAAEpB;IAAQ,CAAC,EACtBqB,iCACF,CAAC;EACH;;EAEA;AACF;AACA;AACA;AACA;AACA;EACEC,mBAAmBA,CACjBC,UAAkB,EAClBC,OAAe,EACfxB,OAA2C,EACL;IACtC,OAAO,IAAI,CAACe,oBAAoB,CAC9B;MAAEQ,UAAU;MAAEC,OAAO;MAAExB;IAAQ,CAAC,EAChCyB,gCACF,CAAC;EACH;;EAEA;AACF;AACA;AACA;AACA;EACEC,uBAAuBA,CACrBH,UAAkB,EAClBvB,OAA+C,EACL;IAC1C,OAAO,IAAI,CAACe,oBAAoB,CAC9B;MAAEQ,UAAU;MAAEvB;IAAQ,CAAC,EACvB2B,oCACF,CAAC;EACH;;EAEA;AACF;AACA;AACA;AACA;EACEC,0BAA0BA,CACxBL,UAAkB,EAClBvB,OAAkD,EACL;IAC7C,OAAO,IAAI,CAACe,oBAAoB,CAC9B;MAAEQ,UAAU;MAAEvB;IAAQ,CAAC,EACvB6B,uCACF,CAAC;EACH;;EAEA;AACF;AACA;AACA;AACA;AACA;EACEC,uBAAuBA,CACrBP,UAAkB,EAClBQ,UAAkB,EAClB/B,OAA+C,EACL;IAC1C,OAAO,IAAI,CAACe,oBAAoB,CAC9B;MAAEQ,UAAU;MAAEQ,UAAU;MAAE/B;IAAQ,CAAC,EACnCgC,oCACF,CAAC;EACH;;EAEA;AACF;AACA;AACA;AACA;EACEC,mBAAmBA,CACjBnB,EAAU,EACVd,OAA2C,EACL;IACtC,OAAO,IAAI,CAACe,oBAAoB,CAC9B;MAAED,EAAE;MAAEd;IAAQ,CAAC,EACfkC,gCACF,CAAC;EACH;;EAEA;AACF;AACA;AACA;EACEC,mBAAmBA,CACjBnC,OAA2C,EACL;IACtC,OAAO,IAAI,CAACe,oBAAoB,CAC9B;MAAEf;IAAQ,CAAC,EACXoC,gCACF,CAAC;EACH;;EAEA;AACF;AACA;AACA;AACA;EACEC,sBAAsBA,CACpBjB,SAAiB,EACjBpB,OAA8C,EACL;IACzC,OAAO,IAAI,CAACe,oBAAoB,CAC9B;MAAEK,SAAS;MAAEpB;IAAQ,CAAC,EACtBsC,mCACF,CAAC;EACH;;EAEA;AACF;AACA;AACA;EACEC,kBAAkBA,CAChBvC,OAA0C,EACL;IACrC,OAAO,IAAI,CAACe,oBAAoB,CAC9B;MAAEf;IAAQ,CAAC,EACXwC,+BACF,CAAC;EACH;;EAEA;AACF;AACA;AACA;AACA;AACA;EACEC,oBAAoBA,CAClBC,MAAc,EACdC,SAAiB,EACjB3C,OAA4C,EACL;IACvC,OAAO,IAAI,CAACe,oBAAoB,CAC9B;MAAE2B,MAAM;MAAEC,SAAS;MAAE3C;IAAQ,CAAC,EAC9B4C,iCACF,CAAC;EACH;;EAEA;AACF;AACA;AACA;AACA;EACEC,sBAAsBA,CACpB/B,EAAU,EACVd,OAA8C,EACL;IACzC,OAAO,IAAI,CAACe,oBAAoB,CAC9B;MAAED,EAAE;MAAEd;IAAQ,CAAC,EACf8C,mCACF,CAAC;EACH;;EAEA;AACF;AACA;AACA;AACA;EACEC,yBAAyBA,CACvBjC,EAAU,EACVd,OAAiD,EACL;IAC5C,OAAO,IAAI,CAACe,oBAAoB,CAC9B;MAAED,EAAE;MAAEd;IAAQ,CAAC,EACfgD,sCACF,CAAC;EACH;;EAEA;AACF;AACA;AACA;AACA;EACEC,uBAAuBA,CACrB1B,UAAkB,EAClBvB,OAA+C,EACL;IAC1C,OAAO,IAAI,CAACe,oBAAoB,CAC9B;MAAEQ,UAAU;MAAEvB;IAAQ,CAAC,EACvBkD,oCACF,CAAC;EACH;;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;EACEC,6BAA6BA,CAC3B5B,UAAkB,EAClBH,SAAiB,EACjBgC,IAAY,EACZpD,OAAqD,EACL;IAChD,OAAO,IAAI,CAACe,oBAAoB,CAC9B;MAAEQ,UAAU;MAAEH,SAAS;MAAEgC,IAAI;MAAEpD;IAAQ,CAAC,EACxCqD,0CACF,CAAC;EACH;;EAEA;AACF;AACA;AACA;AACA;AACA;EACEC,oCAAoCA,CAClC/B,UAAkB,EAClBH,SAAiB,EACjBpB,OAA4D,EACL;IACvD,OAAO,IAAI,CAACe,oBAAoB,CAC9B;MAAEQ,UAAU;MAAEH,SAAS;MAAEpB;IAAQ,CAAC,EAClCuD,iDACF,CAAC;EACH;;EAEA;AACF;AACA;AACA;AACA;EACEC,gBAAgBA,CACdjC,UAAkB,EAClBvB,OAAwC,EACL;IACnC,OAAO,IAAI,CAACe,oBAAoB,CAC9B;MAAEQ,UAAU;MAAEvB;IAAQ,CAAC,EACvByD,6BACF,CAAC;EACH;;EAEA;AACF;AACA;AACA;AACA;EACEC,iBAAiBA,CACf5C,EAAU,EACVd,OAAyC,EACL;IACpC,OAAO,IAAI,CAACe,oBAAoB,CAC9B;MAAED,EAAE;MAAEd;IAAQ,CAAC,EACf2D,8BACF,CAAC;EACH;;EAEA;AACF;AACA;AACA;EACEC,SAASA,CAAC5D,OAAiC,EAA8B;IACvE,OAAO,IAAI,CAACe,oBAAoB,CAAC;MAAEf;IAAQ,CAAC,EAAE6D,sBAAsB,CAAC;EACvE;;EAEA;AACF;AACA;AACA;AACA;EACEC,QAAQA,CACNC,SAAiB,EACjB/D,OAAgC,EACL;IAC3B,OAAO,IAAI,CAACe,oBAAoB,CAC9B;MAAEgD,SAAS;MAAE/D;IAAQ,CAAC,EACtBgE,qBACF,CAAC;EACH;;EAEA;AACF;AACA;AACA;AACA;AACA;EACEC,aAAaA,CACXC,GAAW,EACXC,GAAW,EACXnE,OAAqC,EACL;IAChC,OAAO,IAAI,CAACe,oBAAoB,CAC9B;MAAEmD,GAAG;MAAEC,GAAG;MAAEnE;IAAQ,CAAC,EACrBoE,0BACF,CAAC;EACH;;EAEA;AACF;AACA;AACA;EACEC,WAAWA,CACTrE,OAAmC,EACL;IAC9B,OAAO,IAAI,CAACe,oBAAoB,CAAC;MAAEf;IAAQ,CAAC,EAAEsE,wBAAwB,CAAC;EACzE;;EAEA;AACF;AACA;AACA;AACA;EACEC,UAAUA,CACRzD,EAAU,EACVd,OAAkC,EACL;IAC7B,OAAO,IAAI,CAACe,oBAAoB,CAAC;MAAED,EAAE;MAAEd;IAAQ,CAAC,EAAEwE,uBAAuB,CAAC;EAC5E;;EAEA;AACF;AACA;AACA;EACEC,iBAAiBA,CACfzE,OAAyC,EACL;IACpC,OAAO,IAAI,CAACe,oBAAoB,CAC9B;MAAEf;IAAQ,CAAC,EACX0E,8BACF,CAAC;EACH;;EAEA;AACF;AACA;AACA;EACEC,gBAAgBA,CACd3E,OAAwC,EACL;IACnC,OAAO,IAAI,CAACe,oBAAoB,CAC9B;MAAEf;IAAQ,CAAC,EACX4E,6BACF,CAAC;EACH;;EAEA;AACF;AACA;AACA;EACEC,aAAaA,CACX7E,OAAqC,EACL;IAChC,OAAO,IAAI,CAACe,oBAAoB,CAAC;MAAEf;IAAQ,CAAC,EAAE8E,0BAA0B,CAAC;EAC3E;;EAEA;AACF;AACA;AACA;EACEC,YAAYA,CACV/E,OAAoC,EACL;IAC/B,OAAO,IAAI,CAACe,oBAAoB,CAAC;MAAEf;IAAQ,CAAC,EAAEgF,yBAAyB,CAAC;EAC1E;;EAEA;AACF;AACA;AACA;AACA;EACEC,WAAWA,CACTlB,SAAiB,EACjB/D,OAAmC,EACL;IAC9B,OAAO,IAAI,CAACe,oBAAoB,CAC9B;MAAEgD,SAAS;MAAE/D;IAAQ,CAAC,EACtBkF,wBACF,CAAC;EACH;;EAEA;AACF;AACA;AACA;AACA;EACEC,sBAAsBA,CACpBpB,SAAiB,EACjB/D,OAA8C,EACL;IACzC,OAAO,IAAI,CAACe,oBAAoB,CAC9B;MAAEgD,SAAS;MAAE/D;IAAQ,CAAC,EACtBoF,mCACF,CAAC;EACH;;EAEA;AACF;AACA;AACA;AACA;EACEC,aAAaA,CACXjC,IAAY,EACZpD,OAAqC,EACL;IAChC,OAAO,IAAI,CAACe,oBAAoB,CAC9B;MAAEqC,IAAI;MAAEpD;IAAQ,CAAC,EACjBsF,0BACF,CAAC;EACH;;EAEA;AACF;AACA;AACA;AACA;EACEC,yBAAyBA,CACvBnC,IAAY,EACZpD,OAAiD,EACL;IAC5C,OAAO,IAAI,CAACe,oBAAoB,CAC9B;MAAEqC,IAAI;MAAEpD;IAAQ,CAAC,EACjBwF,sCACF,CAAC;EACH;;EAEA;AACF;AACA;AACA;EACEC,QAAQA,CAACzF,OAAgC,EAA6B;IACpE,OAAO,IAAI,CAACe,oBAAoB,CAAC;MAAEf;IAAQ,CAAC,EAAE0F,qBAAqB,CAAC;EACtE;;EAEA;AACF;AACA;AACA;EACEC,gBAAgBA,CACd3F,OAAwC,EACL;IACnC,OAAO,IAAI,CAACe,oBAAoB,CAC9B;MAAEf;IAAQ,CAAC,EACX4F,6BACF,CAAC;EACH;;EAEA;AACF;AACA;AACA;EACEC,WAAWA,CACT7F,OAAmC,EACL;IAC9B,OAAO,IAAI,CAACe,oBAAoB,CAAC;MAAEf;IAAQ,CAAC,EAAE8F,wBAAwB,CAAC;EACzE;;EAEA;AACF;AACA;AACA;AACA;EACEC,OAAOA,CACLjF,EAAU,EACVd,OAA+B,EACL;IAC1B,OAAO,IAAI,CAACe,oBAAoB,CAAC;MAAED,EAAE;MAAEd;IAAQ,CAAC,EAAEgG,oBAAoB,CAAC;EACzE;;EAEA;AACF;AACA;AACA;AACA;EACEC,cAAcA,CACZnF,EAAU,EACVd,OAAsC,EACL;IACjC,OAAO,IAAI,CAACe,oBAAoB,CAC9B;MAAED,EAAE;MAAEd;IAAQ,CAAC,EACfkG,2BACF,CAAC;EACH;;EAEA;AACF;AACA;AACA;AACA;EACEC,aAAaA,CACXrF,EAAU,EACVd,OAAqC,EACL;IAChC,OAAO,IAAI,CAACe,oBAAoB,CAC9B;MAAED,EAAE;MAAEd;IAAQ,CAAC,EACfoG,0BACF,CAAC;EACH;;EAEA;AACF;AACA;AACA;AACA;EACEC,eAAeA,CACbvF,EAAU,EACVd,OAAuC,EACL;IAClC,OAAO,IAAI,CAACe,oBAAoB,CAC9B;MAAED,EAAE;MAAEd;IAAQ,CAAC,EACfsG,4BACF,CAAC;EACH;;EAEA;AACF;AACA;AACA;AACA;EACEC,eAAeA,CACbzF,EAAU,EACVd,OAAuC,EACL;IAClC,OAAO,IAAI,CAACe,oBAAoB,CAC9B;MAAED,EAAE;MAAEd;IAAQ,CAAC,EACfwG,4BACF,CAAC;EACH;;EAEA;AACF;AACA;AACA;AACA;EACEC,gBAAgBA,CACd3F,EAAU,EACVd,OAAwC,EACL;IACnC,OAAO,IAAI,CAACe,oBAAoB,CAC9B;MAAED,EAAE;MAAEd;IAAQ,CAAC,EACf0G,6BACF,CAAC;EACH;;EAEA;AACF;AACA;AACA;AACA;EACEC,cAAcA,CACZ7F,EAAU,EACVd,OAAsC,EACL;IACjC,OAAO,IAAI,CAACe,oBAAoB,CAC9B;MAAED,EAAE;MAAEd;IAAQ,CAAC,EACf4G,2BACF,CAAC;EACH;;EAEA;AACF;AACA;AACA;AACA;EACEC,SAASA,CACP/F,EAAU,EACVd,OAAiC,EACL;IAC5B,OAAO,IAAI,CAACe,oBAAoB,CAAC;MAAED,EAAE;MAAEd;IAAQ,CAAC,EAAE8G,sBAAsB,CAAC;EAC3E;;EAEA;AACF;AACA;AACA;EACEC,UAAUA,CAAC/G,OAAkC,EAA+B;IAC1E,OAAO,IAAI,CAACe,oBAAoB,CAAC;MAAEf;IAAQ,CAAC,EAAEgH,uBAAuB,CAAC;EACxE;;EAEA;AACF;AACA;AACA;EACEC,SAASA,CAACjH,OAAiC,EAA8B;IACvE,OAAO,IAAI,CAACe,oBAAoB,CAAC;MAAEf;IAAQ,CAAC,EAAEkH,sBAAsB,CAAC;EACvE;;EAEA;AACF;AACA;AACA;EACEC,aAAaA,CACXnH,OAAqC,EACL;IAChC,OAAO,IAAI,CAACe,oBAAoB,CAAC;MAAEf;IAAQ,CAAC,EAAEoH,0BAA0B,CAAC;EAC3E;;EAEA;AACF;AACA;AACA;EACEC,YAAYA,CACVrH,OAAoC,EACL;IAC/B,OAAO,IAAI,CAACe,oBAAoB,CAAC;MAAEf;IAAQ,CAAC,EAAEsH,yBAAyB,CAAC;EAC1E;;EAEA;AACF;AACA;AACA;EACEC,MAAMA,CAACvH,OAA8B,EAA2B;IAC9D,OAAO,IAAI,CAACe,oBAAoB,CAAC;MAAEf;IAAQ,CAAC,EAAEwH,mBAAmB,CAAC;EACpE;;EAEA;AACF;AACA;AACA;EACEC,UAAUA,CAACzH,OAAkC,EAA+B;IAC1E,OAAO,IAAI,CAACe,oBAAoB,CAAC;MAAEf;IAAQ,CAAC,EAAE0H,uBAAuB,CAAC;EACxE;;EAEA;AACF;AACA;AACA;AACA;EACEC,cAAcA,CACZ7G,EAAU,EACVd,OAAsC,EACL;IACjC,OAAO,IAAI,CAACe,oBAAoB,CAC9B;MAAED,EAAE;MAAEd;IAAQ,CAAC,EACf4H,2BACF,CAAC;EACH;;EAEA;AACF;AACA;AACA;AACA;EACEC,KAAKA,CACHC,WAAmB,EACnB9H,OAA6B,EACL;IACxB,OAAO,IAAI,CAACe,oBAAoB,CAC9B;MAAE+G,WAAW;MAAE9H;IAAQ,CAAC,EACxB+H,kBACF,CAAC;EACH;AACF;AACA;AACA,MAAMC,UAAU,GAAGvI,UAAU,CAACwI,gBAAgB,CAACtI,OAAO,EAAE,WAAY,KAAK,CAAC;AAE1E,MAAMqB,iCAA2D,GAAG;EAClEkH,IAAI,EAAE,8BAA8B;EACpCC,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EACR1I,OAAO,CAAC2I;IACZ,CAAC;IACD,GAAG,EAAE;MACHD,UAAU,EAAE1I,OAAO,CAAC4I,aAAa;MACjCC,OAAO,EAAE;IACX;EACF,CAAC;EACDC,eAAe,EAAE,CACf/I,UAAU,CAACgJ,SAAS,EACpBhJ,UAAU,CAACiJ,IAAI,EACfjJ,UAAU,CAACkJ,KAAK,EAChBlJ,UAAU,CAACmJ,KAAK,EAChBnJ,UAAU,CAACoJ,SAAS,CACrB;EACDC,aAAa,EAAE,CAACrJ,UAAU,CAACK,KAAK,EAAEL,UAAU,CAACoB,EAAE,CAAC;EAChDkI,gBAAgB,EAAE,CAACtJ,UAAU,CAACuJ,MAAM,CAAC;EACrCjB;AACF,CAAC;AACD,MAAM9G,qCAA+D,GAAG;EACtEgH,IAAI,EAAE,YAAY;EAClBC,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EACR1I,OAAO,CAACuJ;IACZ,CAAC;IACD,GAAG,EAAE;MACHb,UAAU,EAAE1I,OAAO,CAAC4I,aAAa;MACjCC,OAAO,EAAE;IACX;EACF,CAAC;EACDC,eAAe,EAAE,CACf/I,UAAU,CAACkJ,KAAK,EAChBlJ,UAAU,CAACoJ,SAAS,EACpBpJ,UAAU,CAACyJ,EAAE,EACbzJ,UAAU,CAAC0J,MAAM,CAClB;EACDL,aAAa,EAAE,CAACrJ,UAAU,CAACK,KAAK,CAAC;EACjCiJ,gBAAgB,EAAE,CAACtJ,UAAU,CAACuJ,MAAM,CAAC;EACrCjB;AACF,CAAC;AACD,MAAM3G,iCAA2D,GAAG;EAClE6G,IAAI,EAAE,mCAAmC;EACzCC,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EACR1I,OAAO,CAAC0J;IACZ,CAAC;IACD,GAAG,EAAE;MACHhB,UAAU,EAAE1I,OAAO,CAAC4I,aAAa;MACjCC,OAAO,EAAE;IACX;EACF,CAAC;EACDC,eAAe,EAAE,CAAC/I,UAAU,CAACkJ,KAAK,EAAElJ,UAAU,CAACoJ,SAAS,CAAC;EACzDC,aAAa,EAAE,CAACrJ,UAAU,CAACK,KAAK,EAAEL,UAAU,CAAC0B,SAAS,CAAC;EACvD4H,gBAAgB,EAAE,CAACtJ,UAAU,CAACuJ,MAAM,CAAC;EACrCjB;AACF,CAAC;AACD,MAAMvG,gCAA0D,GAAG;EACjEyG,IAAI,EAAE,yCAAyC;EAC/CC,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EAAE;QAAEM,IAAI,EAAE;UAAEW,IAAI,EAAE;QAAS;MAAE;IACzC,CAAC;IACD,GAAG,EAAE;MACHjB,UAAU,EAAE1I,OAAO,CAAC4I,aAAa;MACjCC,OAAO,EAAE;IACX;EACF,CAAC;EACDO,aAAa,EAAE,CAACrJ,UAAU,CAACK,KAAK,EAAEL,UAAU,CAAC6B,UAAU,EAAE7B,UAAU,CAAC8B,OAAO,CAAC;EAC5EwH,gBAAgB,EAAE,CAACtJ,UAAU,CAACuJ,MAAM,CAAC;EACrCjB;AACF,CAAC;AACD,MAAMrG,oCAA8D,GAAG;EACrEuG,IAAI,EAAE,gCAAgC;EACtCC,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EACR1I,OAAO,CAAC4J;IACZ,CAAC;IACD,GAAG,EAAE;MACHlB,UAAU,EAAE1I,OAAO,CAAC4I,aAAa;MACjCC,OAAO,EAAE;IACX;EACF,CAAC;EACDC,eAAe,EAAE,CAAC/I,UAAU,CAACkJ,KAAK,EAAElJ,UAAU,CAACoJ,SAAS,CAAC;EACzDC,aAAa,EAAE,CAACrJ,UAAU,CAACK,KAAK,EAAEL,UAAU,CAAC6B,UAAU,CAAC;EACxDyH,gBAAgB,EAAE,CAACtJ,UAAU,CAACuJ,MAAM,CAAC;EACrCjB;AACF,CAAC;AACD,MAAMnG,uCAAiE,GAAG;EACxEqG,IAAI,EAAE,mCAAmC;EACzCC,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EACR1I,OAAO,CAAC6J;IACZ,CAAC;IACD,GAAG,EAAE;MACHnB,UAAU,EAAE1I,OAAO,CAAC4I,aAAa;MACjCC,OAAO,EAAE;IACX;EACF,CAAC;EACDC,eAAe,EAAE,CAAC/I,UAAU,CAACkJ,KAAK,EAAElJ,UAAU,CAACoJ,SAAS,CAAC;EACzDC,aAAa,EAAE,CAACrJ,UAAU,CAACK,KAAK,EAAEL,UAAU,CAAC6B,UAAU,CAAC;EACxDyH,gBAAgB,EAAE,CAACtJ,UAAU,CAACuJ,MAAM,CAAC;EACrCjB;AACF,CAAC;AACD,MAAMhG,oCAA8D,GAAG;EACrEkG,IAAI,EAAE,uDAAuD;EAC7DC,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EACR1I,OAAO,CAAC8J;IACZ,CAAC;IACD,GAAG,EAAE;MACHpB,UAAU,EAAE1I,OAAO,CAAC4I,aAAa;MACjCC,OAAO,EAAE;IACX;EACF,CAAC;EACDC,eAAe,EAAE,CAAC/I,UAAU,CAACkJ,KAAK,EAAElJ,UAAU,CAACoJ,SAAS,CAAC;EACzDC,aAAa,EAAE,CACbrJ,UAAU,CAACK,KAAK,EAChBL,UAAU,CAAC6B,UAAU,EACrB7B,UAAU,CAACqC,UAAU,CACtB;EACDiH,gBAAgB,EAAE,CAACtJ,UAAU,CAACuJ,MAAM,CAAC;EACrCjB;AACF,CAAC;AACD,MAAM9F,gCAA0D,GAAG;EACjEgG,IAAI,EAAE,iBAAiB;EACvBC,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EAAE1I,OAAO,CAAC+J;IACtB,CAAC;IACD,GAAG,EAAE;MACHrB,UAAU,EAAE1I,OAAO,CAAC4I,aAAa;MACjCC,OAAO,EAAE;IACX;EACF,CAAC;EACDO,aAAa,EAAE,CAACrJ,UAAU,CAACK,KAAK,EAAEL,UAAU,CAACoB,EAAE,CAAC;EAChDkI,gBAAgB,EAAE,CAACtJ,UAAU,CAACuJ,MAAM,CAAC;EACrCjB;AACF,CAAC;AACD,MAAM5F,gCAA0D,GAAG;EACjE8F,IAAI,EAAE,UAAU;EAChBC,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EACR1I,OAAO,CAACgK;IACZ,CAAC;IACD,GAAG,EAAE;MACHtB,UAAU,EAAE1I,OAAO,CAAC4I,aAAa;MACjCC,OAAO,EAAE;IACX;EACF,CAAC;EACDC,eAAe,EAAE,CACf/I,UAAU,CAACkJ,KAAK,EAChBlJ,UAAU,CAACoJ,SAAS,EACpBpJ,UAAU,CAACyJ,EAAE,EACbzJ,UAAU,CAAC0J,MAAM,CAClB;EACDL,aAAa,EAAE,CAACrJ,UAAU,CAACK,KAAK,CAAC;EACjCiJ,gBAAgB,EAAE,CAACtJ,UAAU,CAACuJ,MAAM,CAAC;EACrCjB;AACF,CAAC;AACD,MAAM1F,mCAA6D,GAAG;EACpE4F,IAAI,EAAE,wCAAwC;EAC9CC,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EACR1I,OAAO,CAACiK;IACZ,CAAC;IACD,GAAG,EAAE;MACHvB,UAAU,EAAE1I,OAAO,CAAC4I,aAAa;MACjCC,OAAO,EAAE;IACX;EACF,CAAC;EACDO,aAAa,EAAE,CAACrJ,UAAU,CAACK,KAAK,EAAEL,UAAU,CAACmK,UAAU,CAAC;EACxDb,gBAAgB,EAAE,CAACtJ,UAAU,CAACuJ,MAAM,CAAC;EACrCjB;AACF,CAAC;AACD,MAAMxF,+BAAyD,GAAG;EAChE0F,IAAI,EAAE,gBAAgB;EACtBC,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EAAE;QAAEM,IAAI,EAAE;UAAEW,IAAI,EAAE;QAAS;MAAE;IACzC;EACF,CAAC;EACDP,aAAa,EAAE,CAACrJ,UAAU,CAACK,KAAK,CAAC;EACjCiJ,gBAAgB,EAAE,CAACtJ,UAAU,CAACuJ,MAAM,CAAC;EACrCjB;AACF,CAAC;AACD,MAAMpF,iCAA2D,GAAG;EAClEsF,IAAI,EAAE,iDAAiD;EACvDC,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EACR1I,OAAO,CAACmK;IACZ,CAAC;IACD,GAAG,EAAE;MACHzB,UAAU,EAAE1I,OAAO,CAAC4I,aAAa;MACjCC,OAAO,EAAE;IACX;EACF,CAAC;EACDC,eAAe,EAAE,CAAC/I,UAAU,CAACkJ,KAAK,EAAElJ,UAAU,CAACoJ,SAAS,CAAC;EACzDC,aAAa,EAAE,CAACrJ,UAAU,CAACK,KAAK,EAAEL,UAAU,CAACgD,MAAM,EAAEhD,UAAU,CAACiD,SAAS,CAAC;EAC1EqG,gBAAgB,EAAE,CAACtJ,UAAU,CAACuJ,MAAM,CAAC;EACrCjB;AACF,CAAC;AACD,MAAMlF,mCAA6D,GAAG;EACpEoF,IAAI,EAAE,8BAA8B;EACpCC,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EACR1I,OAAO,CAACoK;IACZ,CAAC;IACD,GAAG,EAAE;MACH1B,UAAU,EAAE1I,OAAO,CAAC4I,aAAa;MACjCC,OAAO,EAAE;IACX;EACF,CAAC;EACDC,eAAe,EAAE,CAAC/I,UAAU,CAACkJ,KAAK,EAAElJ,UAAU,CAACoJ,SAAS,CAAC;EACzDC,aAAa,EAAE,CAACrJ,UAAU,CAACK,KAAK,EAAEL,UAAU,CAACoB,EAAE,CAAC;EAChDkI,gBAAgB,EAAE,CAACtJ,UAAU,CAACuJ,MAAM,CAAC;EACrCjB;AACF,CAAC;AACD,MAAMhF,sCAAgE,GAAG;EACvEkF,IAAI,EAAE,4BAA4B;EAClCC,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EACR1I,OAAO,CAACqK;IACZ,CAAC;IACD,GAAG,EAAE;MACH3B,UAAU,EAAE1I,OAAO,CAAC4I,aAAa;MACjCC,OAAO,EAAE;IACX;EACF,CAAC;EACDC,eAAe,EAAE,CAAC/I,UAAU,CAACkJ,KAAK,EAAElJ,UAAU,CAACoJ,SAAS,CAAC;EACzDC,aAAa,EAAE,CAACrJ,UAAU,CAACK,KAAK,EAAEL,UAAU,CAACoB,EAAE,CAAC;EAChDkI,gBAAgB,EAAE,CAACtJ,UAAU,CAACuJ,MAAM,CAAC;EACrCjB;AACF,CAAC;AACD,MAAM9E,oCAA8D,GAAG;EACrEgF,IAAI,EAAE,gCAAgC;EACtCC,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EACR1I,OAAO,CAACsK;IACZ,CAAC;IACD,GAAG,EAAE;MACH5B,UAAU,EAAE1I,OAAO,CAAC4I,aAAa;MACjCC,OAAO,EAAE;IACX;EACF,CAAC;EACDC,eAAe,EAAE,CAAC/I,UAAU,CAACkJ,KAAK,EAAElJ,UAAU,CAACoJ,SAAS,EAAEpJ,UAAU,CAACyJ,EAAE,CAAC;EACxEJ,aAAa,EAAE,CAACrJ,UAAU,CAACK,KAAK,EAAEL,UAAU,CAAC6B,UAAU,CAAC;EACxDyH,gBAAgB,EAAE,CAACtJ,UAAU,CAACuJ,MAAM,CAAC;EACrCjB;AACF,CAAC;AACD,MAAM3E,0CAAoE,GAAG;EAC3E6E,IAAI,EAAE,4CAA4C;EAClDC,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EACR1I,OAAO,CAACuK;IACZ,CAAC;IACD,GAAG,EAAE;MACH7B,UAAU,EAAE1I,OAAO,CAAC4I,aAAa;MACjCC,OAAO,EAAE;IACX;EACF,CAAC;EACDC,eAAe,EAAE,CAAC/I,UAAU,CAAC0D,IAAI,CAAC;EAClC2F,aAAa,EAAE,CACbrJ,UAAU,CAACK,KAAK,EAChBL,UAAU,CAAC0B,SAAS,EACpB1B,UAAU,CAAC6B,UAAU,CACtB;EACDyH,gBAAgB,EAAE,CAACtJ,UAAU,CAACuJ,MAAM,CAAC;EACrCjB;AACF,CAAC;AACD,MAAMzE,iDAA2E,GAAG;EAClF2E,IAAI,EAAE,oDAAoD;EAC1DC,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EACR1I,OAAO,CAACwK;IACZ,CAAC;IACD,GAAG,EAAE;MACH9B,UAAU,EAAE1I,OAAO,CAAC4I,aAAa;MACjCC,OAAO,EAAE;IACX;EACF,CAAC;EACDC,eAAe,EAAE,CAAC/I,UAAU,CAACkJ,KAAK,EAAElJ,UAAU,CAACmJ,KAAK,EAAEnJ,UAAU,CAACoJ,SAAS,CAAC;EAC3EC,aAAa,EAAE,CACbrJ,UAAU,CAACK,KAAK,EAChBL,UAAU,CAAC0B,SAAS,EACpB1B,UAAU,CAAC6B,UAAU,CACtB;EACDyH,gBAAgB,EAAE,CAACtJ,UAAU,CAACuJ,MAAM,CAAC;EACrCjB;AACF,CAAC;AACD,MAAMvE,6BAAuD,GAAG;EAC9DyE,IAAI,EAAE,kCAAkC;EACxCC,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EAAE;QAAEM,IAAI,EAAE;UAAEW,IAAI,EAAE;QAAS;MAAE;IACzC,CAAC;IACD,GAAG,EAAE;MACHjB,UAAU,EAAE1I,OAAO,CAAC4I,aAAa;MACjCC,OAAO,EAAE;IACX;EACF,CAAC;EACDO,aAAa,EAAE,CAACrJ,UAAU,CAACK,KAAK,EAAEL,UAAU,CAAC6B,UAAU,CAAC;EACxDyH,gBAAgB,EAAE,CAACtJ,UAAU,CAACuJ,MAAM,CAAC;EACrCjB;AACF,CAAC;AACD,MAAMrE,8BAAwD,GAAG;EAC/DuE,IAAI,EAAE,eAAe;EACrBC,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EAAE1I,OAAO,CAACyK;IACtB,CAAC;IACD,GAAG,EAAE;MACH/B,UAAU,EAAE1I,OAAO,CAAC4I,aAAa;MACjCC,OAAO,EAAE;IACX;EACF,CAAC;EACDO,aAAa,EAAE,CAACrJ,UAAU,CAACK,KAAK,EAAEL,UAAU,CAACoB,EAAE,CAAC;EAChDkI,gBAAgB,EAAE,CAACtJ,UAAU,CAACuJ,MAAM,CAAC;EACrCjB;AACF,CAAC;AACD,MAAMnE,sBAAgD,GAAG;EACvDqE,IAAI,EAAE,YAAY;EAClBC,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EACR1I,OAAO,CAAC0K;IACZ,CAAC;IACD,GAAG,EAAE;MACHhC,UAAU,EAAE1I,OAAO,CAAC4I,aAAa;MACjCC,OAAO,EAAE;IACX;EACF,CAAC;EACDC,eAAe,EAAE,CAAC/I,UAAU,CAACkJ,KAAK,EAAElJ,UAAU,CAACmJ,KAAK,EAAEnJ,UAAU,CAACoJ,SAAS,CAAC;EAC3EC,aAAa,EAAE,CAACrJ,UAAU,CAACK,KAAK,CAAC;EACjCiJ,gBAAgB,EAAE,CAACtJ,UAAU,CAACuJ,MAAM,CAAC;EACrCjB;AACF,CAAC;AACD,MAAMhE,qBAA+C,GAAG;EACtDkE,IAAI,EAAE,0BAA0B;EAChCC,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EAAE1I,OAAO,CAAC2K;IACtB,CAAC;IACD,GAAG,EAAE;MACHjC,UAAU,EAAE1I,OAAO,CAAC4I,aAAa;MACjCC,OAAO,EAAE;IACX,CAAC;IACD,GAAG,EAAE;MACHH,UAAU,EAAE1I,OAAO,CAAC4K,gBAAgB;MACpC/B,OAAO,EAAE;IACX;EACF,CAAC;EACDO,aAAa,EAAE,CAACrJ,UAAU,CAACK,KAAK,EAAEL,UAAU,CAACqE,SAAS,CAAC;EACvDiF,gBAAgB,EAAE,CAACtJ,UAAU,CAACuJ,MAAM,CAAC;EACrCjB;AACF,CAAC;AACD,MAAM5D,0BAAoD,GAAG;EAC3D8D,IAAI,EAAE,wBAAwB;EAC9BC,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EAAE1I,OAAO,CAAC2K;IACtB,CAAC;IACD,GAAG,EAAE;MACHjC,UAAU,EAAE1I,OAAO,CAAC4I,aAAa;MACjCC,OAAO,EAAE;IACX,CAAC;IACD,GAAG,EAAE;MACHH,UAAU,EAAE1I,OAAO,CAAC4K,gBAAgB;MACpC/B,OAAO,EAAE;IACX;EACF,CAAC;EACDO,aAAa,EAAE,CAACrJ,UAAU,CAACK,KAAK,EAAEL,UAAU,CAACwE,GAAG,EAAExE,UAAU,CAACyE,GAAG,CAAC;EACjE6E,gBAAgB,EAAE,CAACtJ,UAAU,CAACuJ,MAAM,CAAC;EACrCjB;AACF,CAAC;AACD,MAAM1D,wBAAkD,GAAG;EACzD4D,IAAI,EAAE,cAAc;EACpBC,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EACR1I,OAAO,CAAC6K;IACZ,CAAC;IACD,GAAG,EAAE;MACHnC,UAAU,EAAE1I,OAAO,CAAC4I,aAAa;MACjCC,OAAO,EAAE;IACX;EACF,CAAC;EACDC,eAAe,EAAE,CACf/I,UAAU,CAACkJ,KAAK,EAChBlJ,UAAU,CAACmJ,KAAK,EAChBnJ,UAAU,CAACoJ,SAAS,EACpBpJ,UAAU,CAAC+K,KAAK,CACjB;EACD1B,aAAa,EAAE,CAACrJ,UAAU,CAACK,KAAK,CAAC;EACjCiJ,gBAAgB,EAAE,CAACtJ,UAAU,CAACuJ,MAAM,CAAC;EACrCjB;AACF,CAAC;AACD,MAAMxD,uBAAiD,GAAG;EACxD0D,IAAI,EAAE,mBAAmB;EACzBC,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EAAE1I,OAAO,CAAC+K;IACtB,CAAC;IACD,GAAG,EAAE;MACHrC,UAAU,EAAE1I,OAAO,CAAC4I,aAAa;MACjCC,OAAO,EAAE;IACX,CAAC;IACD,GAAG,EAAE;MACHH,UAAU,EAAE1I,OAAO,CAAC4K,gBAAgB;MACpC/B,OAAO,EAAE;IACX;EACF,CAAC;EACDO,aAAa,EAAE,CAACrJ,UAAU,CAACK,KAAK,EAAEL,UAAU,CAACoB,EAAE,CAAC;EAChDkI,gBAAgB,EAAE,CAACtJ,UAAU,CAACuJ,MAAM,CAAC;EACrCjB;AACF,CAAC;AACD,MAAMtD,8BAAwD,GAAG;EAC/DwD,IAAI,EAAE,qBAAqB;EAC3BC,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EACR1I,OAAO,CAACgL;IACZ,CAAC;IACD,GAAG,EAAE;MACHtC,UAAU,EAAE1I,OAAO,CAAC4I,aAAa;MACjCC,OAAO,EAAE;IACX;EACF,CAAC;EACDC,eAAe,EAAE,CAAC/I,UAAU,CAACkJ,KAAK,EAAElJ,UAAU,CAACmJ,KAAK,EAAEnJ,UAAU,CAACoJ,SAAS,CAAC;EAC3EC,aAAa,EAAE,CAACrJ,UAAU,CAACK,KAAK,CAAC;EACjCiJ,gBAAgB,EAAE,CAACtJ,UAAU,CAACuJ,MAAM,CAAC;EACrCjB;AACF,CAAC;AACD,MAAMpD,6BAAuD,GAAG;EAC9DsD,IAAI,EAAE,oBAAoB;EAC1BC,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EACR1I,OAAO,CAACiL;IACZ,CAAC;IACD,GAAG,EAAE;MACHvC,UAAU,EAAE1I,OAAO,CAAC4I,aAAa;MACjCC,OAAO,EAAE;IACX;EACF,CAAC;EACDC,eAAe,EAAE,CACf/I,UAAU,CAACkJ,KAAK,EAChBlJ,UAAU,CAACmJ,KAAK,EAChBnJ,UAAU,CAACoJ,SAAS,EACpBpJ,UAAU,CAACmL,WAAW,EACtBnL,UAAU,CAACoL,KAAK,EAChBpL,UAAU,CAACqL,cAAc,EACzBrL,UAAU,CAACsL,IAAI,EACftL,UAAU,CAACuL,QAAQ,CACpB;EACDlC,aAAa,EAAE,CAACrJ,UAAU,CAACK,KAAK,CAAC;EACjCiJ,gBAAgB,EAAE,CAACtJ,UAAU,CAACuJ,MAAM,CAAC;EACrCjB;AACF,CAAC;AACD,MAAMlD,0BAAoD,GAAG;EAC3DoD,IAAI,EAAE,gBAAgB;EACtBC,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EACR1I,OAAO,CAACuL;IACZ,CAAC;IACD,GAAG,EAAE;MACH7C,UAAU,EAAE1I,OAAO,CAAC4I,aAAa;MACjCC,OAAO,EAAE;IACX;EACF,CAAC;EACDC,eAAe,EAAE,CAAC/I,UAAU,CAACkJ,KAAK,EAAElJ,UAAU,CAACmJ,KAAK,EAAEnJ,UAAU,CAACoJ,SAAS,CAAC;EAC3EC,aAAa,EAAE,CAACrJ,UAAU,CAACK,KAAK,CAAC;EACjCiJ,gBAAgB,EAAE,CAACtJ,UAAU,CAACuJ,MAAM,CAAC;EACrCjB;AACF,CAAC;AACD,MAAMhD,yBAAmD,GAAG;EAC1DkD,IAAI,EAAE,gBAAgB;EACtBC,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EACR1I,OAAO,CAACwL;IACZ,CAAC;IACD,GAAG,EAAE;MACH9C,UAAU,EAAE1I,OAAO,CAAC4I,aAAa;MACjCC,OAAO,EAAE;IACX;EACF,CAAC;EACDC,eAAe,EAAE,CAAC/I,UAAU,CAACkJ,KAAK,EAAElJ,UAAU,CAACmJ,KAAK,EAAEnJ,UAAU,CAACoJ,SAAS,CAAC;EAC3EC,aAAa,EAAE,CAACrJ,UAAU,CAACK,KAAK,CAAC;EACjCiJ,gBAAgB,EAAE,CAACtJ,UAAU,CAACuJ,MAAM,CAAC;EACrCjB;AACF,CAAC;AACD,MAAM9C,wBAAkD,GAAG;EACzDgD,IAAI,EAAE,8BAA8B;EACpCC,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EAAE1I,OAAO,CAACyL;IACtB,CAAC;IACD,GAAG,EAAE;MACH/C,UAAU,EAAE1I,OAAO,CAAC4I,aAAa;MACjCC,OAAO,EAAE;IACX,CAAC;IACD,GAAG,EAAE;MACHH,UAAU,EAAE1I,OAAO,CAAC4K,gBAAgB;MACpC/B,OAAO,EAAE;IACX;EACF,CAAC;EACDO,aAAa,EAAE,CAACrJ,UAAU,CAACK,KAAK,EAAEL,UAAU,CAACqE,SAAS,CAAC;EACvDiF,gBAAgB,EAAE,CAACtJ,UAAU,CAACuJ,MAAM,CAAC;EACrCjB;AACF,CAAC;AACD,MAAM5C,mCAA6D,GAAG;EACpE8C,IAAI,EAAE,2CAA2C;EACjDC,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EACR1I,OAAO,CAAC0L;IACZ,CAAC;IACD,GAAG,EAAE;MACHhD,UAAU,EAAE1I,OAAO,CAAC4I,aAAa;MACjCC,OAAO,EAAE;IACX;EACF,CAAC;EACDC,eAAe,EAAE,CAAC/I,UAAU,CAACkJ,KAAK,EAAElJ,UAAU,CAACmJ,KAAK,EAAEnJ,UAAU,CAACoJ,SAAS,CAAC;EAC3EC,aAAa,EAAE,CAACrJ,UAAU,CAACK,KAAK,EAAEL,UAAU,CAACqE,SAAS,CAAC;EACvDiF,gBAAgB,EAAE,CAACtJ,UAAU,CAACuJ,MAAM,CAAC;EACrCjB;AACF,CAAC;AACD,MAAM1C,0BAAoD,GAAG;EAC3D4C,IAAI,EAAE,yBAAyB;EAC/BC,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EAAE1I,OAAO,CAAC2L;IACtB,CAAC;IACD,GAAG,EAAE;MACHjD,UAAU,EAAE1I,OAAO,CAAC4I,aAAa;MACjCC,OAAO,EAAE;IACX,CAAC;IACD,GAAG,EAAE;MACHH,UAAU,EAAE1I,OAAO,CAAC4K,gBAAgB;MACpC/B,OAAO,EAAE;IACX;EACF,CAAC;EACDO,aAAa,EAAE,CAACrJ,UAAU,CAACK,KAAK,EAAEL,UAAU,CAAC6L,KAAK,CAAC;EACnDvC,gBAAgB,EAAE,CAACtJ,UAAU,CAACuJ,MAAM,CAAC;EACrCjB;AACF,CAAC;AACD,MAAMxC,sCAAgE,GAAG;EACvE0C,IAAI,EAAE,6BAA6B;EACnCC,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EACR1I,OAAO,CAAC6L;IACZ,CAAC;IACD,GAAG,EAAE;MACHnD,UAAU,EAAE1I,OAAO,CAAC4I,aAAa;MACjCC,OAAO,EAAE;IACX;EACF,CAAC;EACDO,aAAa,EAAE,CAACrJ,UAAU,CAACK,KAAK,EAAEL,UAAU,CAAC6L,KAAK,CAAC;EACnDvC,gBAAgB,EAAE,CAACtJ,UAAU,CAACuJ,MAAM,CAAC;EACrCjB;AACF,CAAC;AACD,MAAMtC,qBAA+C,GAAG;EACtDwC,IAAI,EAAE,WAAW;EACjBC,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EACR1I,OAAO,CAAC8L;IACZ,CAAC;IACD,GAAG,EAAE;MACHpD,UAAU,EAAE1I,OAAO,CAAC4I,aAAa;MACjCC,OAAO,EAAE;IACX;EACF,CAAC;EACDC,eAAe,EAAE,CACf/I,UAAU,CAACkJ,KAAK,EAChBlJ,UAAU,CAACoJ,SAAS,EACpBpJ,UAAU,CAACyJ,EAAE,EACbzJ,UAAU,CAACgM,OAAO,EAClBhM,UAAU,CAACiM,MAAM,CAClB;EACD5C,aAAa,EAAE,CAACrJ,UAAU,CAACK,KAAK,CAAC;EACjCiJ,gBAAgB,EAAE,CAACtJ,UAAU,CAACuJ,MAAM,CAAC;EACrCjB;AACF,CAAC;AACD,MAAMpC,6BAAuD,GAAG;EAC9DsC,IAAI,EAAE,oBAAoB;EAC1BC,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EAAE1I,OAAO,CAACiM;IACtB,CAAC;IACD,GAAG,EAAE;MACHvD,UAAU,EAAE1I,OAAO,CAAC4I,aAAa;MACjCC,OAAO,EAAE;IACX;EACF,CAAC;EACDC,eAAe,EAAE,CAAC/I,UAAU,CAACkJ,KAAK,EAAElJ,UAAU,CAACmJ,KAAK,EAAEnJ,UAAU,CAACoJ,SAAS,CAAC;EAC3EC,aAAa,EAAE,CAACrJ,UAAU,CAACK,KAAK,CAAC;EACjCiJ,gBAAgB,EAAE,CAACtJ,UAAU,CAACuJ,MAAM,CAAC;EACrCjB;AACF,CAAC;AACD,MAAMlC,wBAAkD,GAAG;EACzDoC,IAAI,EAAE,kBAAkB;EACxBC,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EACR1I,OAAO,CAACkM;IACZ,CAAC;IACD,GAAG,EAAE;MACHxD,UAAU,EAAE1I,OAAO,CAAC4I,aAAa;MACjCC,OAAO,EAAE;IACX;EACF,CAAC;EACDC,eAAe,EAAE,CAAC/I,UAAU,CAACkJ,KAAK,EAAElJ,UAAU,CAACmJ,KAAK,EAAEnJ,UAAU,CAACoJ,SAAS,CAAC;EAC3EC,aAAa,EAAE,CAACrJ,UAAU,CAACK,KAAK,CAAC;EACjCiJ,gBAAgB,EAAE,CAACtJ,UAAU,CAACuJ,MAAM,CAAC;EACrCjB;AACF,CAAC;AACD,MAAMhC,oBAA8C,GAAG;EACrDkC,IAAI,EAAE,gBAAgB;EACtBC,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EAAE1I,OAAO,CAACmM;IACtB,CAAC;IACD,GAAG,EAAE;MACHzD,UAAU,EAAE1I,OAAO,CAAC4I,aAAa;MACjCC,OAAO,EAAE;IACX,CAAC;IACD,GAAG,EAAE;MACHH,UAAU,EAAE1I,OAAO,CAAC4K,gBAAgB;MACpC/B,OAAO,EAAE;IACX;EACF,CAAC;EACDO,aAAa,EAAE,CAACrJ,UAAU,CAACK,KAAK,EAAEL,UAAU,CAACoB,EAAE,CAAC;EAChDkI,gBAAgB,EAAE,CAACtJ,UAAU,CAACuJ,MAAM,CAAC;EACrCjB;AACF,CAAC;AACD,MAAM9B,2BAAqD,GAAG;EAC5DgC,IAAI,EAAE,wBAAwB;EAC9BC,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EAAE1I,OAAO,CAACiM;IACtB,CAAC;IACD,GAAG,EAAE;MACHvD,UAAU,EAAE1I,OAAO,CAAC4I,aAAa;MACjCC,OAAO,EAAE;IACX,CAAC;IACD,GAAG,EAAE;MACHH,UAAU,EAAE1I,OAAO,CAAC4K,gBAAgB;MACpC/B,OAAO,EAAE;IACX;EACF,CAAC;EACDC,eAAe,EAAE,CAAC/I,UAAU,CAACkJ,KAAK,EAAElJ,UAAU,CAACmJ,KAAK,EAAEnJ,UAAU,CAACoJ,SAAS,CAAC;EAC3EC,aAAa,EAAE,CAACrJ,UAAU,CAACK,KAAK,EAAEL,UAAU,CAACoB,EAAE,CAAC;EAChDkI,gBAAgB,EAAE,CAACtJ,UAAU,CAACuJ,MAAM,CAAC;EACrCjB;AACF,CAAC;AACD,MAAM5B,0BAAoD,GAAG;EAC3D8B,IAAI,EAAE,uBAAuB;EAC7BC,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EAAE1I,OAAO,CAACoM;IACtB,CAAC;IACD,GAAG,EAAE;MACH1D,UAAU,EAAE1I,OAAO,CAAC4K,gBAAgB;MACpC/B,OAAO,EAAE;IACX;EACF,CAAC;EACDC,eAAe,EAAE,CAAC/I,UAAU,CAACkJ,KAAK,EAAElJ,UAAU,CAACmJ,KAAK,EAAEnJ,UAAU,CAACoJ,SAAS,CAAC;EAC3EC,aAAa,EAAE,CAACrJ,UAAU,CAACK,KAAK,EAAEL,UAAU,CAACoB,EAAE,CAAC;EAChDkI,gBAAgB,EAAE,CAACtJ,UAAU,CAACuJ,MAAM,CAAC;EACrCjB;AACF,CAAC;AACD,MAAM1B,4BAAsD,GAAG;EAC7D4B,IAAI,EAAE,yBAAyB;EAC/BC,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EACR1I,OAAO,CAACqM;IACZ,CAAC;IACD,GAAG,EAAE;MACH3D,UAAU,EAAE1I,OAAO,CAAC4K,gBAAgB;MACpC/B,OAAO,EAAE;IACX;EACF,CAAC;EACDO,aAAa,EAAE,CAACrJ,UAAU,CAACK,KAAK,EAAEL,UAAU,CAACoB,EAAE,CAAC;EAChDkI,gBAAgB,EAAE,CAACtJ,UAAU,CAACuJ,MAAM,CAAC;EACrCjB;AACF,CAAC;AACD,MAAMxB,4BAAsD,GAAG;EAC7D0B,IAAI,EAAE,yBAAyB;EAC/BC,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EAAE;QACVM,IAAI,EAAE;UAAEW,IAAI,EAAE,YAAY;UAAE2C,KAAK,EAAE;YAAEtD,IAAI,EAAE;cAAEW,IAAI,EAAE;YAAM;UAAE;QAAE;MAC/D;IACF,CAAC;IACD,GAAG,EAAE;MACHjB,UAAU,EAAE1I,OAAO,CAAC4K,gBAAgB;MACpC/B,OAAO,EAAE;IACX;EACF,CAAC;EACDO,aAAa,EAAE,CAACrJ,UAAU,CAACK,KAAK,EAAEL,UAAU,CAACoB,EAAE,CAAC;EAChDkI,gBAAgB,EAAE,CAACtJ,UAAU,CAACuJ,MAAM,CAAC;EACrCjB;AACF,CAAC;AACD,MAAMtB,6BAAuD,GAAG;EAC9DwB,IAAI,EAAE,0BAA0B;EAChCC,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EAAE1I,OAAO,CAACuM;IACtB,CAAC;IACD,GAAG,EAAE;MACH7D,UAAU,EAAE1I,OAAO,CAAC4K,gBAAgB;MACpC/B,OAAO,EAAE;IACX;EACF,CAAC;EACDC,eAAe,EAAE,CAAC/I,UAAU,CAACkJ,KAAK,EAAElJ,UAAU,CAACmJ,KAAK,EAAEnJ,UAAU,CAACoJ,SAAS,CAAC;EAC3EC,aAAa,EAAE,CAACrJ,UAAU,CAACK,KAAK,EAAEL,UAAU,CAACoB,EAAE,CAAC;EAChDkI,gBAAgB,EAAE,CAACtJ,UAAU,CAACuJ,MAAM,CAAC;EACrCjB;AACF,CAAC;AACD,MAAMpB,2BAAqD,GAAG;EAC5DsB,IAAI,EAAE,wBAAwB;EAC9BC,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EAAE1I,OAAO,CAACwM;IACtB,CAAC;IACD,GAAG,EAAE;MACH9D,UAAU,EAAE1I,OAAO,CAAC4K,gBAAgB;MACpC/B,OAAO,EAAE;IACX;EACF,CAAC;EACDC,eAAe,EAAE,CAAC/I,UAAU,CAACkJ,KAAK,EAAElJ,UAAU,CAACmJ,KAAK,EAAEnJ,UAAU,CAACoJ,SAAS,CAAC;EAC3EC,aAAa,EAAE,CAACrJ,UAAU,CAACK,KAAK,EAAEL,UAAU,CAACoB,EAAE,CAAC;EAChDkI,gBAAgB,EAAE,CAACtJ,UAAU,CAACuJ,MAAM,CAAC;EACrCjB;AACF,CAAC;AACD,MAAMlB,sBAAgD,GAAG;EACvDoB,IAAI,EAAE,iBAAiB;EACvBC,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EAAE1I,OAAO,CAACyM;IACtB,CAAC;IACD,GAAG,EAAE;MACH/D,UAAU,EAAE1I,OAAO,CAAC4I,aAAa;MACjCC,OAAO,EAAE;IACX,CAAC;IACD,GAAG,EAAE;MACHH,UAAU,EAAE1I,OAAO,CAAC4K,gBAAgB;MACpC/B,OAAO,EAAE;IACX;EACF,CAAC;EACDO,aAAa,EAAE,CAACrJ,UAAU,CAACK,KAAK,EAAEL,UAAU,CAACoB,EAAE,CAAC;EAChDkI,gBAAgB,EAAE,CAACtJ,UAAU,CAACuJ,MAAM,CAAC;EACrCjB;AACF,CAAC;AACD,MAAMhB,uBAAiD,GAAG;EACxDkB,IAAI,EAAE,aAAa;EACnBC,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EACR1I,OAAO,CAAC0M;IACZ,CAAC;IACD,GAAG,EAAE;MACHhE,UAAU,EAAE1I,OAAO,CAAC4I,aAAa;MACjCC,OAAO,EAAE;IACX;EACF,CAAC;EACDC,eAAe,EAAE,CAAC/I,UAAU,CAACkJ,KAAK,EAAElJ,UAAU,CAACmJ,KAAK,EAAEnJ,UAAU,CAACoJ,SAAS,CAAC;EAC3EC,aAAa,EAAE,CAACrJ,UAAU,CAACK,KAAK,CAAC;EACjCiJ,gBAAgB,EAAE,CAACtJ,UAAU,CAACuJ,MAAM,CAAC;EACrCjB;AACF,CAAC;AACD,MAAMd,sBAAgD,GAAG;EACvDgB,IAAI,EAAE,YAAY;EAClBC,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EAAE1I,OAAO,CAAC2M;IACtB;EACF,CAAC;EACDvD,aAAa,EAAE,CAACrJ,UAAU,CAACK,KAAK,CAAC;EACjCiJ,gBAAgB,EAAE,CAACtJ,UAAU,CAACuJ,MAAM,CAAC;EACrCjB;AACF,CAAC;AACD,MAAMZ,0BAAoD,GAAG;EAC3Dc,IAAI,EAAE,gBAAgB;EACtBC,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EACR1I,OAAO,CAAC4M;IACZ,CAAC;IACD,GAAG,EAAE;MACHlE,UAAU,EAAE1I,OAAO,CAAC4I,aAAa;MACjCC,OAAO,EAAE;IACX;EACF,CAAC;EACDC,eAAe,EAAE,CAAC/I,UAAU,CAACkJ,KAAK,EAAElJ,UAAU,CAACmJ,KAAK,EAAEnJ,UAAU,CAACoJ,SAAS,CAAC;EAC3EC,aAAa,EAAE,CAACrJ,UAAU,CAACK,KAAK,CAAC;EACjCiJ,gBAAgB,EAAE,CAACtJ,UAAU,CAACuJ,MAAM,CAAC;EACrCjB;AACF,CAAC;AACD,MAAMV,yBAAmD,GAAG;EAC1DY,IAAI,EAAE,eAAe;EACrBC,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EACR1I,OAAO,CAAC6M;IACZ,CAAC;IACD,GAAG,EAAE;MACHnE,UAAU,EAAE1I,OAAO,CAAC4I,aAAa;MACjCC,OAAO,EAAE;IACX;EACF,CAAC;EACDC,eAAe,EAAE,CAAC/I,UAAU,CAACkJ,KAAK,EAAElJ,UAAU,CAACmJ,KAAK,EAAEnJ,UAAU,CAACoJ,SAAS,CAAC;EAC3EC,aAAa,EAAE,CAACrJ,UAAU,CAACK,KAAK,CAAC;EACjCiJ,gBAAgB,EAAE,CAACtJ,UAAU,CAACuJ,MAAM,CAAC;EACrCjB;AACF,CAAC;AACD,MAAMR,mBAA6C,GAAG;EACpDU,IAAI,EAAE,SAAS;EACfC,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EACR1I,OAAO,CAAC8M;IACZ,CAAC;IACD,GAAG,EAAE;MACHpE,UAAU,EAAE1I,OAAO,CAAC4I,aAAa;MACjCC,OAAO,EAAE;IACX;EACF,CAAC;EACDC,eAAe,EAAE,CACf/I,UAAU,CAACkJ,KAAK,EAChBlJ,UAAU,CAACmJ,KAAK,EAChBnJ,UAAU,CAACoJ,SAAS,EACpBpJ,UAAU,CAACgN,KAAK,EAChBhN,UAAU,CAACiN,SAAS,EACpBjN,UAAU,CAACkN,OAAO,EAClBlN,UAAU,CAACmN,QAAQ,EACnBnN,UAAU,CAACoN,OAAO,EAClBpN,UAAU,CAACqN,MAAM,EACjBrN,UAAU,CAACsN,QAAQ,EACnBtN,UAAU,CAACuN,WAAW,EACtBvN,UAAU,CAACwN,UAAU,CACtB;EACDnE,aAAa,EAAE,CAACrJ,UAAU,CAACK,KAAK,CAAC;EACjCiJ,gBAAgB,EAAE,CAACtJ,UAAU,CAACuJ,MAAM,CAAC;EACrCjB;AACF,CAAC;AACD,MAAMN,uBAAiD,GAAG;EACxDQ,IAAI,EAAE,eAAe;EACrBC,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EAAE;QAAEM,IAAI,EAAE;UAAEW,IAAI,EAAE;QAAS;MAAE;IACzC;EACF,CAAC;EACDb,eAAe,EAAE,CAAC/I,UAAU,CAACmJ,KAAK,EAAEnJ,UAAU,CAACyN,MAAM,EAAEzN,UAAU,CAAC0N,GAAG,CAAC;EACtErE,aAAa,EAAE,CAACrJ,UAAU,CAACK,KAAK,CAAC;EACjCiJ,gBAAgB,EAAE,CAACtJ,UAAU,CAACuJ,MAAM,CAAC;EACrCjB;AACF,CAAC;AACD,MAAMJ,2BAAqD,GAAG;EAC5DM,IAAI,EAAE,oBAAoB;EAC1BC,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EACR1I,OAAO,CAAC0N;IACZ,CAAC;IACD,GAAG,EAAE;MACHhF,UAAU,EAAE1I,OAAO,CAAC4I,aAAa;MACjCC,OAAO,EAAE;IACX;EACF,CAAC;EACDO,aAAa,EAAE,CAACrJ,UAAU,CAACK,KAAK,EAAEL,UAAU,CAACoB,EAAE,CAAC;EAChDkI,gBAAgB,EAAE,CAACtJ,UAAU,CAACuJ,MAAM,CAAC;EACrCjB;AACF,CAAC;AACD,MAAMD,kBAA4C,GAAG;EACnDG,IAAI,EAAE,yBAAyB;EAC/BC,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EAAE1I,OAAO,CAAC2N;IACtB,CAAC;IACD,GAAG,EAAE;MACHjF,UAAU,EAAE1I,OAAO,CAAC4I,aAAa;MACjCC,OAAO,EAAE;IACX,CAAC;IACD,GAAG,EAAE;MACHH,UAAU,EAAE1I,OAAO,CAAC4K,gBAAgB;MACpC/B,OAAO,EAAE;IACX;EACF,CAAC;EACDO,aAAa,EAAE,CAACrJ,UAAU,CAACK,KAAK,EAAEL,UAAU,CAACoI,WAAW,CAAC;EACzDkB,gBAAgB,EAAE,CAACtJ,UAAU,CAACuJ,MAAM,CAAC;EACrCjB;AACF,CAAC"}