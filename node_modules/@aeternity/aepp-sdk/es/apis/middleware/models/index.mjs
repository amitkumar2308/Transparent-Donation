/** Activity related to an account */

/** Error response from the API */

/** Response Schema for AEX141 contract */

/** Response Schema for owners of AEX-141 tokens */

/** Response Schema for templates of a AEX-141 contract */

/** Response Schema for template tokens of a AEX-141 contract */

/** Response Schema for AEX9 contract */

/** Response Schema for AEX9 balance responses */

/** Response Schema for AEX9 transfer responses */

/** Response Schema for AEX9 contract balances responses */

/** Key Block */

/** Resource not found on the API */

/** ContractCall */

/** ContractLog */

/** DeltaStat */

/** Key Block */

/** MicroBlock */

/** Transaction */

/** Name */

/** Auction */

/** Name Claim */

/** Name Transfer */

/** Name Update */

/** The oracle's query and response formats */

/** TotalStat */

/** AEx141 Transfer */

/** AEx9 Transfer */

/** Contract call made inside of a contract call or contract create transaction */

/** Internal transfer */

/** Name claim */

/** Known values of {@link Enum0} that the service accepts. */
export let KnownEnum0 = /*#__PURE__*/function (KnownEnum0) {
  KnownEnum0["Transactions"] = "transactions";
  KnownEnum0["Aexn"] = "aexn";
  KnownEnum0["Aex9"] = "aex9";
  KnownEnum0["Aex141"] = "aex141";
  KnownEnum0["Contract"] = "contract";
  KnownEnum0["Transfers"] = "transfers";
  KnownEnum0["Claims"] = "claims";
  return KnownEnum0;
}({});

/**
 * Defines values for Enum0. \
 * {@link KnownEnum0} can be used interchangeably with Enum0,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **transactions** \
 * **aexn** \
 * **aex9** \
 * **aex141** \
 * **contract** \
 * **transfers** \
 * **claims**
 */

/** Known values of {@link Enum1} that the service accepts. */
export let KnownEnum1 = /*#__PURE__*/function (KnownEnum1) {
  KnownEnum1["Forward"] = "forward";
  KnownEnum1["Backward"] = "backward";
  return KnownEnum1;
}({});

/**
 * Defines values for Enum1. \
 * {@link KnownEnum1} can be used interchangeably with Enum1,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **forward** \
 * **backward**
 */

/** Known values of {@link ActivityType} that the service accepts. */
export let KnownActivityType = /*#__PURE__*/function (KnownActivityType) {
  KnownActivityType["SpendTxEvent"] = "SpendTxEvent";
  KnownActivityType["OracleRegisterTxEvent"] = "OracleRegisterTxEvent";
  KnownActivityType["OracleExtendTxEvent"] = "OracleExtendTxEvent";
  KnownActivityType["OracleQueryTxEvent"] = "OracleQueryTxEvent";
  KnownActivityType["OracleResponseTxEvent"] = "OracleResponseTxEvent";
  KnownActivityType["NamePreclaimTxEvent"] = "NamePreclaimTxEvent";
  KnownActivityType["NameClaimTxEvent"] = "NameClaimTxEvent";
  KnownActivityType["NameTransferTxEvent"] = "NameTransferTxEvent";
  KnownActivityType["NameUpdateTxEvent"] = "NameUpdateTxEvent";
  KnownActivityType["NameRevokeTxEvent"] = "NameRevokeTxEvent";
  KnownActivityType["ContractCreateTxEvent"] = "ContractCreateTxEvent";
  KnownActivityType["ContractCallTxEvent"] = "ContractCallTxEvent";
  KnownActivityType["GaAttachTxEvent"] = "GaAttachTxEvent";
  KnownActivityType["GaMetaTxEvent"] = "GaMetaTxEvent";
  KnownActivityType["ChannelCreateTxEvent"] = "ChannelCreateTxEvent";
  KnownActivityType["ChannelDepositTxEvent"] = "ChannelDepositTxEvent";
  KnownActivityType["ChannelWithdrawTxEvent"] = "ChannelWithdrawTxEvent";
  KnownActivityType["ChannelForceProgressTxEvent"] = "ChannelForceProgressTxEvent";
  KnownActivityType["ChannelCloseMutualTxEvent"] = "ChannelCloseMutualTxEvent";
  KnownActivityType["ChannelCloseSoloTxEvent"] = "ChannelCloseSoloTxEvent";
  KnownActivityType["ChannelSlashTxEvent"] = "ChannelSlashTxEvent";
  KnownActivityType["ChannelSettleTxEvent"] = "ChannelSettleTxEvent";
  KnownActivityType["ChannelSnapshotSoloTxEvent"] = "ChannelSnapshotSoloTxEvent";
  KnownActivityType["ChannelSetDelegatesTxEvent"] = "ChannelSetDelegatesTxEvent";
  KnownActivityType["ChannelOffchainTxEvent"] = "ChannelOffchainTxEvent";
  KnownActivityType["ChannelClientReconnectTxEvent"] = "ChannelClientReconnectTxEvent";
  KnownActivityType["PayingForTxEvent"] = "PayingForTxEvent";
  return KnownActivityType;
}({});

/**
 * Defines values for ActivityType. \
 * {@link KnownActivityType} can be used interchangeably with ActivityType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **SpendTxEvent** \
 * **OracleRegisterTxEvent** \
 * **OracleExtendTxEvent** \
 * **OracleQueryTxEvent** \
 * **OracleResponseTxEvent** \
 * **NamePreclaimTxEvent** \
 * **NameClaimTxEvent** \
 * **NameTransferTxEvent** \
 * **NameUpdateTxEvent** \
 * **NameRevokeTxEvent** \
 * **ContractCreateTxEvent** \
 * **ContractCallTxEvent** \
 * **GaAttachTxEvent** \
 * **GaMetaTxEvent** \
 * **ChannelCreateTxEvent** \
 * **ChannelDepositTxEvent** \
 * **ChannelWithdrawTxEvent** \
 * **ChannelForceProgressTxEvent** \
 * **ChannelCloseMutualTxEvent** \
 * **ChannelCloseSoloTxEvent** \
 * **ChannelSlashTxEvent** \
 * **ChannelSettleTxEvent** \
 * **ChannelSnapshotSoloTxEvent** \
 * **ChannelSetDelegatesTxEvent** \
 * **ChannelOffchainTxEvent** \
 * **ChannelClientReconnectTxEvent** \
 * **PayingForTxEvent**
 */

/** Known values of {@link Enum3} that the service accepts. */
export let KnownEnum3 = /*#__PURE__*/function (KnownEnum3) {
  KnownEnum3["Active"] = "active";
  KnownEnum3["Inactive"] = "inactive";
  return KnownEnum3;
}({});

/**
 * Defines values for Enum3. \
 * {@link KnownEnum3} can be used interchangeably with Enum3,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **active** \
 * **inactive**
 */

/** Known values of {@link NameStatus} that the service accepts. */
export let KnownNameStatus = /*#__PURE__*/function (KnownNameStatus) {
  KnownNameStatus["Name"] = "name";
  KnownNameStatus["Auction"] = "auction";
  return KnownNameStatus;
}({});

/**
 * Defines values for NameStatus. \
 * {@link KnownNameStatus} can be used interchangeably with NameStatus,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **name** \
 * **auction**
 */

/** Known values of {@link AuctionInfoStatus} that the service accepts. */
export let KnownAuctionInfoStatus = /*#__PURE__*/function (KnownAuctionInfoStatus) {
  KnownAuctionInfoStatus["Auction"] = "auction";
  return KnownAuctionInfoStatus;
}({});

/**
 * Defines values for AuctionInfoStatus. \
 * {@link KnownAuctionInfoStatus} can be used interchangeably with AuctionInfoStatus,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **auction**
 */

/** Known values of {@link Get200ApplicationJsonAllOfPropertiesItems1Status} that the service accepts. */
export let KnownGet200ApplicationJsonAllOfPropertiesItems1Status = /*#__PURE__*/function (KnownGet200ApplicationJsonAllOfPropertiesItems1Status) {
  KnownGet200ApplicationJsonAllOfPropertiesItems1Status["Auction"] = "auction";
  KnownGet200ApplicationJsonAllOfPropertiesItems1Status["Active"] = "active";
  KnownGet200ApplicationJsonAllOfPropertiesItems1Status["Inactive"] = "inactive";
  return KnownGet200ApplicationJsonAllOfPropertiesItems1Status;
}({});

/**
 * Defines values for Get200ApplicationJsonAllOfPropertiesItems1Status. \
 * {@link KnownGet200ApplicationJsonAllOfPropertiesItems1Status} can be used interchangeably with Get200ApplicationJsonAllOfPropertiesItems1Status,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **auction** \
 * **active** \
 * **inactive**
 */

/** Known values of {@link TransferKind} that the service accepts. */
export let KnownTransferKind = /*#__PURE__*/function (KnownTransferKind) {
  KnownTransferKind["RewardDev"] = "reward_dev";
  KnownTransferKind["RewardBlock"] = "reward_block";
  return KnownTransferKind;
}({});

/**
 * Defines values for TransferKind. \
 * {@link KnownTransferKind} can be used interchangeably with TransferKind,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **reward_dev** \
 * **reward_block**
 */

/** Known values of {@link Get0ItemsItem} that the service accepts. */
export let KnownGet0ItemsItem = /*#__PURE__*/function (KnownGet0ItemsItem) {
  KnownGet0ItemsItem["ChannelCloseMutual"] = "channel_close_mutual";
  KnownGet0ItemsItem["ChannelCloseSolo"] = "channel_close_solo";
  KnownGet0ItemsItem["ChannelCreate"] = "channel_create";
  KnownGet0ItemsItem["ChannelDeposit"] = "channel_deposit";
  KnownGet0ItemsItem["ChannelForceProgress"] = "channel_force_progress";
  KnownGet0ItemsItem["ChannelOffchain"] = "channel_offchain";
  KnownGet0ItemsItem["ChannelSettle"] = "channel_settle";
  KnownGet0ItemsItem["ChannelSlash"] = "channel_slash";
  KnownGet0ItemsItem["ChannelSnapshotSolo"] = "channel_snapshot_solo";
  KnownGet0ItemsItem["ChannelWithdraw"] = "channel_withdraw";
  KnownGet0ItemsItem["ContractCall"] = "contract_call";
  KnownGet0ItemsItem["ContractCreate"] = "contract_create";
  KnownGet0ItemsItem["GaAttach"] = "ga_attach";
  KnownGet0ItemsItem["GaMeta"] = "ga_meta";
  KnownGet0ItemsItem["NameClaim"] = "name_claim";
  KnownGet0ItemsItem["NamePreclaim"] = "name_preclaim";
  KnownGet0ItemsItem["NameRevoke"] = "name_revoke";
  KnownGet0ItemsItem["NameTransfer"] = "name_transfer";
  KnownGet0ItemsItem["NameUpdate"] = "name_update";
  KnownGet0ItemsItem["OracleExtend"] = "oracle_extend";
  KnownGet0ItemsItem["OracleQuery"] = "oracle_query";
  KnownGet0ItemsItem["OracleRegister"] = "oracle_register";
  KnownGet0ItemsItem["OracleResponse"] = "oracle_response";
  KnownGet0ItemsItem["PayingFor"] = "paying_for";
  KnownGet0ItemsItem["Spend"] = "spend";
  return KnownGet0ItemsItem;
}({});

/**
 * Defines values for Get0ItemsItem. \
 * {@link KnownGet0ItemsItem} can be used interchangeably with Get0ItemsItem,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **channel_close_mutual** \
 * **channel_close_solo** \
 * **channel_create** \
 * **channel_deposit** \
 * **channel_force_progress** \
 * **channel_offchain** \
 * **channel_settle** \
 * **channel_slash** \
 * **channel_snapshot_solo** \
 * **channel_withdraw** \
 * **contract_call** \
 * **contract_create** \
 * **ga_attach** \
 * **ga_meta** \
 * **name_claim** \
 * **name_preclaim** \
 * **name_revoke** \
 * **name_transfer** \
 * **name_update** \
 * **oracle_extend** \
 * **oracle_query** \
 * **oracle_register** \
 * **oracle_response** \
 * **paying_for** \
 * **spend**
 */

/** Known values of {@link Get1ItemsItem} that the service accepts. */
export let KnownGet1ItemsItem = /*#__PURE__*/function (KnownGet1ItemsItem) {
  KnownGet1ItemsItem["Channel"] = "channel";
  KnownGet1ItemsItem["Contract"] = "contract";
  KnownGet1ItemsItem["Ga"] = "ga";
  KnownGet1ItemsItem["Name"] = "name";
  KnownGet1ItemsItem["Oracle"] = "oracle";
  KnownGet1ItemsItem["PayingFor"] = "paying_for";
  KnownGet1ItemsItem["Spend"] = "spend";
  return KnownGet1ItemsItem;
}({});

/**
 * Defines values for Get1ItemsItem. \
 * {@link KnownGet1ItemsItem} can be used interchangeably with Get1ItemsItem,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **channel** \
 * **contract** \
 * **ga** \
 * **name** \
 * **oracle** \
 * **paying_for** \
 * **spend**
 */

/** Known values of {@link InternalTransferEventKind} that the service accepts. */
export let KnownInternalTransferEventKind = /*#__PURE__*/function (KnownInternalTransferEventKind) {
  KnownInternalTransferEventKind["AccountsExtraLima"] = "accounts_extra_lima";
  KnownInternalTransferEventKind["AccountsFortuna"] = "accounts_fortuna";
  KnownInternalTransferEventKind["AccountsGenesis"] = "accounts_genesis";
  KnownInternalTransferEventKind["AccountsLima"] = "accounts_lima";
  KnownInternalTransferEventKind["AccountsMinerva"] = "accounts_minerva";
  KnownInternalTransferEventKind["ContractsLima"] = "contracts_lima";
  KnownInternalTransferEventKind["RewardDev"] = "reward_dev";
  KnownInternalTransferEventKind["RewardBlock"] = "reward_block";
  KnownInternalTransferEventKind["FeeRefundOracle"] = "fee_refund_oracle";
  KnownInternalTransferEventKind["FeeLockName"] = "fee_lock_name";
  KnownInternalTransferEventKind["FeeRefundName"] = "fee_refund_name";
  KnownInternalTransferEventKind["FeeSpendName"] = "fee_spend_name";
  KnownInternalTransferEventKind["RewardOracle"] = "reward_oracle";
  return KnownInternalTransferEventKind;
}({});

/**
 * Defines values for InternalTransferEventKind. \
 * {@link KnownInternalTransferEventKind} can be used interchangeably with InternalTransferEventKind,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **accounts_extra_lima** \
 * **accounts_fortuna** \
 * **accounts_genesis** \
 * **accounts_lima** \
 * **accounts_minerva** \
 * **contracts_lima** \
 * **reward_dev** \
 * **reward_block** \
 * **fee_refund_oracle** \
 * **fee_lock_name** \
 * **fee_refund_name** \
 * **fee_spend_name** \
 * **reward_oracle**
 */

/** Optional parameters. */

/** Contains response data for the getAccountActivities operation. */

/** Optional parameters. */

/** Contains response data for the getSortedAex141Contracts operation. */

/** Optional parameters. */

/** Contains response data for the getAex141OwnedTokens operation. */

/** Optional parameters. */

/** Contains response data for the getAex141TokenOwner operation. */

/** Optional parameters. */

/** Contains response data for the getAex141ContractOwners operation. */

/** Optional parameters. */

/** Contains response data for the getAex141ContractTemplates operation. */

/** Optional parameters. */

/** Contains response data for the getAex141TemplateTokens operation. */

/** Optional parameters. */

/** Contains response data for the getAex141ByContract operation. */

/** Optional parameters. */

/** Contains response data for the getSortedAex9Tokens operation. */

/** Optional parameters. */

/** Contains response data for the getAex9AccountBalances operation. */

/** Optional parameters. */

/** Contains response data for the getAex9TokensCount operation. */

/** Optional parameters. */

/** Contains response data for the getAex9PairTransfers operation. */

/** Optional parameters. */

/** Contains response data for the getAex9SenderTransfers operation. */

/** Optional parameters. */

/** Contains response data for the getAex9RecipientTransfers operation. */

/** Optional parameters. */

/** Contains response data for the getAex9ContractBalances operation. */

/** Optional parameters. */

/** Contains response data for the getAex9ContractAccountBalance operation. */

/** Optional parameters. */

/** Contains response data for the getAex9ContractAccountBalanceHistory operation. */

/** Optional parameters. */

/** Contains response data for the getAex9LogsCount operation. */

/** Optional parameters. */

/** Contains response data for the getAex9ByContract operation. */

/** Optional parameters. */

/** Contains response data for the getBlocks operation. */

/** Optional parameters. */

/** Contains response data for the getBlock operation. */

/** Optional parameters. */

/** Contains response data for the getBlockByMbi operation. */

/** Optional parameters. */

/** Contains response data for the getChannels operation. */

/** Optional parameters. */

/** Contains response data for the getChannel operation. */

/** Optional parameters. */

/** Contains response data for the getContractsCalls operation. */

/** Optional parameters. */

/** Contains response data for the getContractsLogs operation. */

/** Optional parameters. */

/** Contains response data for the getDeltastats operation. */

/** Optional parameters. */

/** Contains response data for the getKeyBlocks operation. */

/** Optional parameters. */

/** Contains response data for the getKeyBlock operation. */

/** Optional parameters. */

/** Contains response data for the getKeyBlockMicroBlocks operation. */

/** Optional parameters. */

/** Contains response data for the getMicroBlock operation. */

/** Optional parameters. */

/** Contains response data for the getMicroBlockTransactions operation. */

/** Optional parameters. */

/** Contains response data for the getNames operation. */

/** Optional parameters. */

/** Contains response data for the getNamesAuctions operation. */

/** Optional parameters. */

/** Contains response data for the searchNames operation. */

/** Optional parameters. */

/** Contains response data for the getName operation. */

/** Optional parameters. */

/** Contains response data for the getNameAuction operation. */

/** Optional parameters. */

/** Contains response data for the getNameClaims operation. */

/** Optional parameters. */

/** Contains response data for the getNamePointees operation. */

/** Optional parameters. */

/** Contains response data for the getNamePointers operation. */

/** Optional parameters. */

/** Contains response data for the getNameTransfers operation. */

/** Optional parameters. */

/** Contains response data for the getNameUpdates operation. */

/** Optional parameters. */

/** Contains response data for the getOracle operation. */

/** Optional parameters. */

/** Contains response data for the getOracles operation. */

/** Optional parameters. */

/** Contains response data for the getStatus operation. */

/** Optional parameters. */

/** Contains response data for the getTotalstats operation. */

/** Optional parameters. */

/** Contains response data for the getTransfers operation. */

/** Optional parameters. */

/** Contains response data for the getTxs operation. */

/** Optional parameters. */

/** Contains response data for the getTxCount operation. */

/** Optional parameters. */

/** Contains response data for the getTxCountById operation. */

/** Optional parameters. */

/** Contains response data for the getTx operation. */

/** Optional parameters. */
//# sourceMappingURL=index.mjs.map