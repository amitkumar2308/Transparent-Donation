export const accept = {
  parameterPath: "accept",
  mapper: {
    defaultValue: "application/json",
    isConstant: true,
    serializedName: "Accept",
    type: {
      name: "String"
    }
  }
};
export const $host = {
  parameterPath: "$host",
  mapper: {
    serializedName: "$host",
    required: true,
    type: {
      name: "String"
    }
  },
  skipEncoding: true
};
export const id = {
  parameterPath: "id",
  mapper: {
    serializedName: "id",
    required: true,
    type: {
      name: "String"
    }
  }
};
export const ownedOnly = {
  parameterPath: ["options", "ownedOnly"],
  mapper: {
    serializedName: "owned_only",
    type: {
      name: "Boolean"
    }
  }
};
export const type = {
  parameterPath: ["options", "type"],
  mapper: {
    serializedName: "type",
    type: {
      name: "String"
    }
  }
};
export const limit = {
  parameterPath: "limit",
  mapper: {
    defaultValue: 10,
    constraints: {
      InclusiveMaximum: 100,
      InclusiveMinimum: 1
    },
    serializedName: "limit",
    type: {
      name: "Number"
    }
  }
};
export const scope = {
  parameterPath: "scope",
  mapper: {
    constraints: {
      Pattern: new RegExp("(txi|gen):\\d+(-\\d+)?")
    },
    serializedName: "scope",
    type: {
      name: "String"
    }
  }
};
export const direction = {
  parameterPath: "direction",
  mapper: {
    serializedName: "direction",
    type: {
      name: "String"
    }
  }
};
export const by = {
  parameterPath: ["options", "by"],
  mapper: {
    serializedName: "by",
    type: {
      name: "String"
    }
  }
};
export const prefix = {
  parameterPath: ["options", "prefix"],
  mapper: {
    serializedName: "prefix",
    type: {
      name: "String"
    }
  }
};
export const accountId = {
  parameterPath: "accountId",
  mapper: {
    serializedName: "accountId",
    required: true,
    type: {
      name: "String"
    }
  }
};
export const contractId = {
  parameterPath: "contractId",
  mapper: {
    serializedName: "contractId",
    required: true,
    type: {
      name: "String"
    }
  }
};
export const tokenId = {
  parameterPath: "tokenId",
  mapper: {
    serializedName: "tokenId",
    required: true,
    type: {
      name: "Number"
    }
  }
};
export const templateId = {
  parameterPath: "templateId",
  mapper: {
    serializedName: "templateId",
    required: true,
    type: {
      name: "Number"
    }
  }
};
export const accountId1 = {
  parameterPath: "accountId",
  mapper: {
    serializedName: "account_id",
    required: true,
    type: {
      name: "String"
    }
  }
};
export const sender = {
  parameterPath: "sender",
  mapper: {
    serializedName: "sender",
    required: true,
    type: {
      name: "String"
    }
  }
};
export const recipient = {
  parameterPath: "recipient",
  mapper: {
    serializedName: "recipient",
    required: true,
    type: {
      name: "String"
    }
  }
};
export const hash = {
  parameterPath: "hash",
  mapper: {
    serializedName: "hash",
    required: true,
    type: {
      name: "String"
    }
  }
};
export const hashOrKbi = {
  parameterPath: "hashOrKbi",
  mapper: {
    serializedName: "hash_or_kbi",
    required: true,
    type: {
      name: "String"
    }
  }
};
export const kbi = {
  parameterPath: "kbi",
  mapper: {
    serializedName: "kbi",
    required: true,
    type: {
      name: "Number"
    }
  }
};
export const mbi = {
  parameterPath: "mbi",
  mapper: {
    serializedName: "mbi",
    required: true,
    type: {
      name: "Number"
    }
  }
};
export const state = {
  parameterPath: ["options", "state"],
  mapper: {
    serializedName: "state",
    type: {
      name: "String"
    }
  }
};
export const contractId1 = {
  parameterPath: ["options", "contractId"],
  mapper: {
    serializedName: "contract_id",
    type: {
      name: "String"
    }
  }
};
export const event = {
  parameterPath: ["options", "event"],
  mapper: {
    serializedName: "event",
    type: {
      name: "String"
    }
  }
};
export const functionPrefix = {
  parameterPath: ["options", "functionPrefix"],
  mapper: {
    serializedName: "function_prefix",
    type: {
      name: "String"
    }
  }
};
export const data = {
  parameterPath: ["options", "data"],
  mapper: {
    serializedName: "data",
    type: {
      name: "String"
    }
  }
};
export const aexnArgs = {
  parameterPath: ["options", "aexnArgs"],
  mapper: {
    serializedName: "aexn-args",
    type: {
      name: "Boolean"
    }
  }
};
export const hash1 = {
  parameterPath: "hash",
  mapper: {
    serializedName: "hash",
    required: true,
    type: {
      name: "String"
    }
  }
};
export const ownedBy = {
  parameterPath: ["options", "ownedBy"],
  mapper: {
    serializedName: "owned_by",
    type: {
      name: "String"
    }
  }
};
export const state1 = {
  parameterPath: ["options", "state"],
  mapper: {
    serializedName: "state",
    type: {
      name: "String"
    }
  }
};
export const type1 = {
  parameterPath: ["options", "type"],
  mapper: {
    serializedName: "type",
    type: {
      name: "Sequence",
      element: {
        type: {
          name: "String"
        }
      }
    }
  },
  collectionFormat: "Multi"
};
export const typeGroup = {
  parameterPath: ["options", "typeGroup"],
  mapper: {
    serializedName: "type_group",
    type: {
      name: "Sequence",
      element: {
        type: {
          name: "String"
        }
      }
    }
  },
  collectionFormat: "Multi"
};
export const account = {
  parameterPath: ["options", "account"],
  mapper: {
    serializedName: "account",
    type: {
      name: "String"
    }
  }
};
export const contract = {
  parameterPath: ["options", "contract"],
  mapper: {
    serializedName: "contract",
    type: {
      name: "String"
    }
  }
};
export const channel = {
  parameterPath: ["options", "channel"],
  mapper: {
    serializedName: "channel",
    type: {
      name: "String"
    }
  }
};
export const oracle = {
  parameterPath: ["options", "oracle"],
  mapper: {
    serializedName: "oracle",
    type: {
      name: "String"
    }
  }
};
export const senderId = {
  parameterPath: ["options", "senderId"],
  mapper: {
    serializedName: "sender_id",
    type: {
      name: "String"
    }
  }
};
export const recipientId = {
  parameterPath: ["options", "recipientId"],
  mapper: {
    serializedName: "recipient_id",
    type: {
      name: "String"
    }
  }
};
export const entrypoint = {
  parameterPath: ["options", "entrypoint"],
  mapper: {
    serializedName: "entrypoint",
    type: {
      name: "String"
    }
  }
};
export const txType = {
  parameterPath: ["options", "txType"],
  mapper: {
    serializedName: "tx_type",
    type: {
      name: "String"
    }
  }
};
export const id1 = {
  parameterPath: ["options", "id"],
  mapper: {
    serializedName: "id",
    type: {
      name: "String"
    }
  }
};
export const hashOrIndex = {
  parameterPath: "hashOrIndex",
  mapper: {
    serializedName: "hash_or_index",
    required: true,
    type: {
      name: "String"
    }
  }
};
//# sourceMappingURL=parameters.mjs.map