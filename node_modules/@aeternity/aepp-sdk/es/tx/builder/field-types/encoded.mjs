import _buffer from "buffer";
const {
  Buffer: _Buffer
} = _buffer;
import { decode, encode } from "../../../utils/encoder.mjs";
import { ArgumentError } from "../../../utils/errors.mjs";
export default function genEncodedField(encoding, optional) {
  return {
    serialize(encodedData) {
      if (encodedData == null) {
        if (optional === true) return _Buffer.from([]);
        throw new ArgumentError('Encoded data', 'provided', encodedData);
      }
      return decode(encodedData);
    },
    deserialize(buffer) {
      return encode(buffer, encoding);
    }
  };
}
//# sourceMappingURL=encoded.mjs.map