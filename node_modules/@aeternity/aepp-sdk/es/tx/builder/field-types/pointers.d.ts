/// <reference types="node" />
import { NamePointer as NamePointerString } from '../../../apis/node';
import { Encoded } from '../../../utils/encoder';
import { AddressEncodings } from './address';
type NamePointer = NamePointerString & {
    id: Encoded.Generic<AddressEncodings>;
};
declare const _default: {
    /**
     * Helper function to build pointers for name update TX
     * @param pointers - Array of pointers
     * `([ { key: 'account_pubkey', id: 'ak_32klj5j23k23j5423l434l2j3423'} ])`
     * @returns Serialized pointers array
     */
    serialize(pointers: NamePointer[]): Buffer[][];
    /**
     * Helper function to read pointers from name update TX
     * @param pointers - Array of pointers
     * @returns Deserialize pointer array
     */
    deserialize(pointers: Array<[key: Buffer, id: Buffer]>): NamePointer[];
};
export default _default;
