import shortUInt from "./short-u-int.mjs";
import { ArgumentError } from "../../../utils/errors.mjs";
export default {
  ...shortUInt,
  serialize(value) {
    return shortUInt.serialize(value !== null && value !== void 0 ? value : 0);
  },
  async prepare(value, params, // TODO: { absoluteTtl: true } | { absoluteTtl: false, onNode: Node }
  _ref) {
    let {
      onNode,
      absoluteTtl
    } = _ref;
    if (absoluteTtl !== true && value !== 0 && value != null) {
      if (onNode == null) throw new ArgumentError('onNode', 'provided', onNode);
      value += (await onNode.getCurrentKeyBlock()).height;
    }
    return value;
  }
};
//# sourceMappingURL=ttl.mjs.map