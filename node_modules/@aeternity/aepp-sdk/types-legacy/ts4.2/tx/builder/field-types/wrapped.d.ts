/// <reference types="node" />
import { Tag } from '../constants';
import type { unpackTx as unpackTxType, buildTx as buildTxType } from '../index';
type TagWrapping = Tag.AccountsMtree | Tag.CallsMtree | Tag.ChannelsMtree | Tag.ContractsMtree | Tag.NameserviceMtree | Tag.OraclesMtree;
export default function genWrappedField<T extends TagWrapping>(tag: T): {
    serialize: (value: any, options: {
        buildTx: typeof buildTxType;
    }) => Buffer;
    deserialize: (value: Buffer, options: {
        unpackTx: typeof unpackTxType;
    }) => any;
    recursiveType: true;
};
export {};
