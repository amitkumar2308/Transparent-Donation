import AccountBase from './Base';
import { Encoded } from '../utils/encoder';
/**
 * Generalized account class
 */
export default class AccountGeneralized extends AccountBase {
    #private;
    readonly address: Encoded.AccountAddress;
    /**
     * @param address - Address of generalized account
     */
    constructor(address: Encoded.AccountAddress);
    sign(): Promise<Uint8Array>;
    signMessage(): Promise<Uint8Array>;
    signTypedData(): Promise<Encoded.Signature>;
    signDelegationToContract(): Promise<Encoded.Signature>;
    signNameDelegationToContract(): Promise<Encoded.Signature>;
    signOracleQueryDelegationToContract(): Promise<Encoded.Signature>;
    signTransaction(tx: Encoded.Transaction, { authData, onCompiler, onNode }: Parameters<AccountBase['signTransaction']>[1]): Promise<Encoded.Transaction>;
}
