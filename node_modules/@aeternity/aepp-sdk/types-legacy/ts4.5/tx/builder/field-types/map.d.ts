/// <reference types="node" />
import { Tag } from '../constants';
import { Encoding, Encoded } from '../../../utils/encoder';
import type { unpackTx as unpackTxType, buildTx as buildTxType } from '../index';
export default function genMapField<E extends Encoding, T extends Tag>(encoding: E, tag: T): {
    serialize: (value: Record<Encoded.Generic<E>, any>, options: {
        buildTx: typeof buildTxType;
    }) => Buffer;
    deserialize: (value: Buffer, options: {
        unpackTx: typeof unpackTxType;
    }) => Record<Encoded.Generic<E>, any>;
    recursiveType: true;
};
