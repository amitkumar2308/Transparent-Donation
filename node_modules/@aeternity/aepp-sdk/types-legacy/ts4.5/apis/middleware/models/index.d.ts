import * as coreClient from "@azure/core-client";
export interface Paths1I5J7OcV2AccountsIdActivitiesGetResponses200ContentApplicationJsonSchemaAllof0 {
    data?: Activity[];
}
/** Activity related to an account */
export interface Activity {
    /** The block hash */
    blockHash: string;
    /** The block height */
    height: number;
    /** Any object */
    payload: Record<string, unknown>;
    /** The event type */
    type: ActivityType;
}
export interface PaginatedResponse {
    next: string | null;
    prev: string | null;
}
/** Error response from the API */
export interface ErrorResponse {
    /** The message of the error raised */
    error: string;
}
export interface Paths17FlgdkV2Aex141GetResponses200ContentApplicationJsonSchemaAllof0 {
    data?: Aex141Response[];
}
/** Response Schema for AEX141 contract */
export interface Aex141Response {
    /** Metadata base url */
    baseUrl: string;
    /** NFT contract id */
    contractId: string;
    /** Transaction that created the contract */
    contractTxi: string;
    /** Extensions implemented by the contract */
    extensions: string[];
    /** Limit for amount of tokens or templates */
    limits: Record<string, unknown>;
}
export interface PathsAxw0PwV2Aex141OwnedNftsAccountidGetResponses200ContentApplicationJsonSchemaAllof0 {
    data?: Aex141OwnedTokenResponse[];
}
/** Response Schema for owners of AEX-141 tokens */
export interface Aex141OwnedTokenResponse {
    /** Account id */
    accountId: string;
    /** NFT contract id */
    contractId: string;
    /** Non-fungible token id */
    tokenId: number;
}
export interface PathsN3Ru7DV2Aex141ContractidOwnersGetResponses200ContentApplicationJsonSchemaAllof0 {
    data?: Aex141OwnedTokenResponse[];
}
export interface PathsRa6Pv6V2Aex141ContractidTemplatesGetResponses200ContentApplicationJsonSchemaAllof0 {
    data?: Aex141TemplatesResponse[];
}
/** Response Schema for templates of a AEX-141 contract */
export interface Aex141TemplatesResponse {
    /** NFT contract id */
    contractId: string;
    /** Template edition details */
    edition?: Record<string, unknown>;
    /** Log index of the TemplateCreation */
    logIdx: number;
    /** Template id of AEX-141 tokens */
    templateId: number;
    /** Transaction hash of the TemplateCreation */
    txHash: string;
}
export interface Paths19B9O7TV2Aex141ContractidTemplatesTemplateidTokensGetResponses200ContentApplicationJsonSchemaAllof0 {
    data?: Aex141TemplateTokensResponse[];
}
/** Response Schema for template tokens of a AEX-141 contract */
export interface Aex141TemplateTokensResponse {
    /** Mint event index */
    logIdx: number;
    /** Owner wallet address */
    ownerId: string;
    /** NFT id */
    tokenId: number;
    /** Mint transaction hash */
    txHash: string;
}
export interface Paths1Fe570RV2Aex9GetResponses200ContentApplicationJsonSchemaAllof0 {
    data?: Aex9Response[];
}
/** Response Schema for AEX9 contract */
export interface Aex9Response {
    /** Id of the contract of the AEX9 tokens */
    contractId: string;
    /** Index of transaction that created the contract */
    contractTxi: number;
    /** The number of decimals for AEX9 token */
    decimals: number;
    /** Token supply updated on event basis (Mint, Burn, Swap) */
    eventSupply: number;
    /** Extensions implemnted by the contract */
    extensions?: string[];
    /** Count of accounts having balance (nil when contract is not complaint) */
    holders: number;
    /** Token supply right after contract's creation */
    initialSupply: number;
    /** Name of AEX9 token */
    name: string;
    /** Symbol of AEX9 token */
    symbol: string;
}
export interface PathsO9MbpkV2Aex9AccountBalancesAccountIdGetResponses200ContentApplicationJsonSchemaAllof1 {
    data?: Aex9BalanceResponse[];
}
/** Response Schema for AEX9 balance responses */
export interface Aex9BalanceResponse {
    /** Amount of AEX9 token */
    amount: number;
    /** Block hash, indicating a state of a balance for that block */
    blockHash: number;
    /** Contract id of AEX9 token */
    contractId: string;
    /** Number of decimals of AEX9 token */
    decimals: number;
    /** Block height, indicating a state of a balance for that block height */
    height: number;
    /** Name of AEX9 token */
    tokenName: string;
    /** Symbol of AEX9 token */
    tokenSymbol: string;
    /** Transaction hash, indicating a state of a balance for that block height */
    txHash: string;
    /** Transaction index, indicating a state of a balance for that block height */
    txIndex: number;
    /** Transaction type, indicating a state of a balance for that block height */
    txType: string;
}
export interface PathsY2JwfkV2Aex9TransfersFromToSenderRecipientGetResponses200ContentApplicationJsonSchemaAllof0 {
    data?: Aex9TransferResponse[];
}
/** Response Schema for AEX9 transfer responses */
export interface Aex9TransferResponse {
    /** Transfer amount of AEX9 token */
    amount: number;
    /** The block height */
    blockHeight: number;
    /** AEX9 token transfer index */
    callTxi: number;
    /** Contract identifier */
    contractId: string;
    /** Log index */
    logIdx: number;
    /** The unix timestamp */
    microTime: number;
    /** Recipient of AEX9 transfer */
    recipient: string;
    /** Sender of AEX9 transfer */
    sender: string;
}
export interface Paths5U7W2V2Aex9TransfersFromIdGetResponses200ContentApplicationJsonSchemaAllof0 {
    data?: Aex9TransferResponse[];
}
export interface Paths12TleqhV2Aex9TransfersToIdGetResponses200ContentApplicationJsonSchemaAllof0 {
    data?: Aex9TransferResponse[];
}
export interface Paths1C2B0UpV2Aex9ContractidBalancesGetResponses200ContentApplicationJsonSchemaAllof0 {
    data?: Aex9ContractBalanceResponse[];
}
/** Response Schema for AEX9 contract balances responses */
export interface Aex9ContractBalanceResponse {
    /** The wallet pubkey */
    accountId: string;
    /** The balance amount */
    amount: number;
    /** The block hash, indicating a state of a balance for that block */
    blockHash: number;
    /** The contract id of given token */
    contractId: number;
    /** The block height, indicating a state of a balance for that block height */
    height: number;
    /** The index of the event log that changed the balance */
    lastLogIdx: number;
    /** The hash of the last transaction that changed the balance */
    lastTxHash: string;
}
export interface PathsBelvp6V2Aex9ContractidBalancesAccountidGetResponses200ContentApplicationJsonSchemaAllof0 {
    /** The account present on a AEX9 */
    account?: string;
    /** The amount of AEX9 token */
    amount?: number;
    /** The contract id of given token */
    contract?: string;
}
export interface Paths11X7LpcV2Aex9ContractidBalancesAccountidHistoryGetResponses200ContentApplicationJsonSchemaAllof0 {
    /** The account present on a AEX9 */
    account?: string;
    /** The amount of AEX9 token */
    amount?: number;
    /** The contract id of given token */
    contract?: string;
    /** The block height, indicating a state of a balance for that block height */
    height?: number;
}
export interface Paths5LeqfqV2BlocksGetResponses200ContentApplicationJsonSchemaAllof0 {
    data?: Block[];
}
/** Key Block */
export interface Block {
    /** The beneficiary */
    beneficiary?: string;
    /** The block hash */
    hash?: string;
    /** The block height */
    height?: number;
    /** The info */
    info?: string;
    /** The miner public key */
    miner?: string;
    /** The nonce */
    nonce?: string;
    /** The pow */
    pow?: number[];
    /** The previous block hash */
    prevHash?: string;
    /** The previous key block hash */
    prevKeyHash?: string;
    /** The state hash */
    stateHash?: string;
    /** The target */
    target?: number;
    /** The time */
    time?: number;
    /** The version */
    version?: number;
}
/** Resource not found on the API */
export interface NotFoundResponse {
    /** The message of the error raised */
    error: string;
}
export interface PathsC25EgV2ChannelsGetResponses200ContentApplicationJsonSchemaAllof0 {
    data?: Channel[];
}
export interface Channel {
    /** Balance currently left in the channel */
    amount?: number;
    /** Channel pubkey */
    channel?: string;
    /** Minimum amount for sufficient funds */
    channelReserve?: number;
    /** Pubkeys of delegated accounts */
    delegateIds?: Record<string, unknown>;
    /** Channel initiator pubkey */
    initiator?: string;
    /** Amount owned by initiator */
    initiatorAmount?: number;
    /** The last height in which the channel was updated */
    lastUpdatedHeight?: string;
    /** The transaction type of the last transaction that updated the channel */
    lastUpdatedTxType?: string;
    /** Amount of heights locked after a solo closing */
    lockPeriod?: number;
    /** Non-inclusive height until which the channel is locked */
    lockedUntil?: number;
    /** The channel responder pubkey */
    responder?: string;
    /** Amount owned by responder */
    responderAmount?: number;
    /** Round after last transaction */
    round?: number;
    /** Round of last solo transaction */
    soloRound?: number;
    /** The hash of the current channel state */
    stateHash?: string;
    /** The amount of times the channel's been updated by any of the channel transactions */
    updatesCount?: string;
}
export interface Paths1Csrt0IV2ContractsCallsGetResponses200ContentApplicationJsonSchemaAllof0 {
    data?: ContractCall[];
}
/** ContractCall */
export interface ContractCall {
    blockHash?: string;
    callTxHash?: string;
    callTxi?: number;
    contractId?: string;
    contractTxi?: number;
    function?: string;
    height?: number;
    /** Any object */
    internalTx?: Record<string, unknown>;
    localIdx?: number;
    microIndex?: number;
}
export interface Paths9Ya94MV2ContractsLogsGetResponses200ContentApplicationJsonSchemaAllof0 {
    data?: ContractLog[];
}
/** ContractLog */
export interface ContractLog {
    args?: number[];
    blockHash?: string;
    callTxHash?: string;
    callTxi?: number;
    contractId?: string;
    contractTxi?: number;
    data?: string;
    eventHash?: string;
    extCallerContractId?: string;
    extCallerContractTxi?: number;
    height?: number;
    logIdx?: number;
    microIndex?: number;
    parentContractId?: number;
}
export interface PathsRzn6HzV2DeltastatsGetResponses200ContentApplicationJsonSchemaAllof0 {
    data?: DeltaStat[];
}
/** DeltaStat */
export interface DeltaStat {
    /** The number of auctions started */
    auctionsStarted?: number;
    /** The block reward */
    blockReward?: number;
    /** The number of contracts created */
    contractsCreated?: number;
    /** The dev reward */
    devReward?: number;
    /** The generation */
    height?: number;
    /** The number of names activated */
    namesActivated?: number;
    /** The number of names expired */
    namesExpired?: number;
    /** The number of names revoked */
    namesRevoked?: number;
    /** The number of oracles expired */
    oraclesExpired?: number;
    /** The number of oracles registered */
    oraclesRegistered?: number;
}
export interface Paths10TrrshV2KeyBlocksGetResponses200ContentApplicationJsonSchemaAllof0 {
    data?: KeyBlock[];
}
/** Key Block */
export interface KeyBlock {
    /** The beneficiary */
    beneficiary?: string;
    /** The block hash */
    hash?: string;
    /** The block height */
    height?: number;
    /** The info */
    info?: string;
    /** The miner public key */
    miner?: string;
    /** The nonce */
    nonce?: string;
    /** The pow */
    pow?: number[];
    /** The previous block hash */
    prevHash?: string;
    /** The previous key block hash */
    prevKeyHash?: string;
    /** The state hash */
    stateHash?: string;
    /** The target */
    target?: number;
    /** The time */
    time?: number;
    /** The version */
    version?: number;
}
export interface Paths7Hfka2V2KeyBlocksHashOrKbiMicroBlocksGetResponses200ContentApplicationJsonSchemaAllof0 {
    data?: MicroBlock[];
}
/** MicroBlock */
export interface MicroBlock {
    /** The micro block hash */
    hash?: string;
    /** The block height */
    height?: number;
    /** The index of the micro-block on the micro-block height, starting from 0 */
    microBlockIndex?: number;
    /** The pow */
    pofHash?: number[];
    /** The previous block hash */
    prevHash?: string;
    /** The previous key block hash */
    prevKeyHash?: string;
    /** The state hash */
    stateHash?: string;
    /** The time */
    time?: number;
    /** The number of transactions */
    transactionsCount?: number;
    /** The version */
    version?: number;
}
export interface Paths1RxrrvbV2MicroBlocksHashTxsGetResponses200ContentApplicationJsonSchemaAllof0 {
    data?: Tx[];
}
/** Transaction */
export interface Tx {
    /** The block hash */
    blockHash?: string;
    /** The block height */
    blockHeight?: number;
    /** The transaction hash */
    hash?: string;
    /** The micro block index */
    microIndex?: number;
    /** The unix timestamp */
    microTime?: number;
    /** The signatures */
    signatures?: string[];
    /** The transaction */
    tx?: Record<string, unknown>;
    /** The transaction index */
    txIndex?: number;
}
export interface Paths16Srg6EV2NamesGetResponses200ContentApplicationJsonSchemaAllof0 {
    data?: Name[];
}
/** Name */
export interface Name {
    active?: boolean;
    hash?: string;
    info?: NameInfo;
    previous?: Name[];
    status?: NameStatus;
}
export interface NameInfo {
    activeFrom?: number;
    claims?: number[];
    expireHeight?: number;
    ownership?: NameInfoOwnership;
    pointers?: NameInfoPointers;
    transfers?: number[];
    updates?: string;
}
export interface NameInfoOwnership {
    current?: string;
    original?: string;
}
export interface NameInfoPointers {
    accountPubkey?: string;
}
/** Auction */
export interface Auction {
    active?: boolean;
    info?: AuctionInfo;
}
export interface AuctionInfo {
    auctionEnd?: number;
    bids?: number[];
    lastBid?: AuctionInfoLastBid;
    name?: string;
    /** Auction */
    previous?: Auction;
    status?: AuctionInfoStatus;
    txIndex?: number;
}
export interface AuctionInfoLastBid {
    blockHash?: string;
    blockHeight?: number;
    hash?: string;
    microIndex?: number;
    microTime?: number;
    signatures?: string[];
    /** Any object */
    tx?: Record<string, unknown>;
}
export interface Paths1I6PwfdV2NamesSearchGetResponses200ContentApplicationJsonSchemaAllof0 {
    data?: Get200ApplicationJsonAllOfPropertiesItemsItem[];
}
export interface Paths7P6Qc1V2NamesSearchGetResponses200ContentApplicationJsonSchemaAllof0PropertiesDataItemsAllof1 {
    status?: Get200ApplicationJsonAllOfPropertiesItems1Status;
}
/** Name Claim */
export interface NameClaim {
    blockHash?: string;
    height?: number;
    /** Any object */
    tx?: Record<string, unknown>;
}
export interface PathsDjelzuV2NamesIdPointeesGetResponses200ContentApplicationJsonSchema {
    /** Any object */
    active?: Record<string, unknown>;
    /** Any object */
    inactive?: Record<string, unknown>;
}
/** Name Transfer */
export interface NameTransfer {
    blockHash?: string;
    height?: number;
    /** Any object */
    tx?: Record<string, unknown>;
}
/** Name Update */
export interface NameUpdate {
    blockHash?: string;
    height?: number;
    /** Any object */
    tx?: Record<string, unknown>;
}
export interface Oracle {
    /** The oracle active status */
    active: boolean;
    /** The block height when the oracle became active */
    activeFrom: number;
    /** The block height when the oracle expires */
    expireHeight: number;
    /** The tx indexes when the oracle has been extended */
    extends: OracleExtendsItem[];
    /** The oracle id */
    oracle: string;
    /** The query fee */
    queryFee: number;
    /** The tx index when the oracle is registered */
    register: number;
}
/** The oracle's query and response formats */
export interface OracleExtendsItem {
    /** The query format */
    query: string;
    /** The response format */
    response: string;
}
export interface PathsMherz6V2OraclesGetResponses200ContentApplicationJsonSchemaAllof0 {
    data?: Oracle[];
}
export interface Status {
    mdwAsyncTasks: StatusMdwAsyncTasks;
    /** The approximate number of generations synced per minute on middleware */
    mdwGensPerMinute: number;
    /** The top generation up to which the middleware was synced */
    mdwHeight: number;
    /** The last middleware migration ran */
    mdwLastMigration: number;
    /** The middleware's git revision of the latest commit applied */
    mdwRevision: string;
    /** true if middleware was synced up to the latest node block */
    mdwSynced: boolean;
    /** true if middleware is syncing (i.e. it didn't stop due to an error) */
    mdwSyncing: boolean;
    /** index of the latest synced transaction */
    mdwTxIndex: number;
    /** The middleware's version */
    mdwVersion: string;
    /** The node generation of the last block synced */
    nodeHeight: number;
    /** The percentage of generations synced on the node */
    nodeProgress: number;
    /** The node's git revision of the latest commit applied */
    nodeRevision: string;
    /** If true, the node is still processing additional blocks to reach the latest one */
    nodeSyncing: boolean;
    /** The node's version */
    nodeVersion: string;
}
export interface StatusMdwAsyncTasks {
    longTasks: number;
    producerBuffer: number;
    totalPending: number;
}
export interface PathsDpxn99V2TotalstatsGetResponses200ContentApplicationJsonSchemaAllof0 {
    data?: TotalStat[];
}
/** TotalStat */
export interface TotalStat {
    /** The number of auctions started */
    auctionsStarted?: number;
    /** The block reward */
    blockReward?: number;
    /** The number of contracts created */
    contractsCreated?: number;
    /** The dev reward */
    devReward?: number;
    /** The generation */
    height?: number;
    /** The number of names activated */
    namesActivated?: number;
    /** The number of names expired */
    namesExpired?: number;
    /** The number of names revoked */
    namesRevoked?: number;
    /** The number of oracles expired */
    oraclesExpired?: number;
    /** The number of oracles registered */
    oraclesRegistered?: number;
}
export interface Paths17Cjtx5V2TransfersGetResponses200ContentApplicationJsonSchemaAllof0 {
    data?: Transfer[];
}
export interface Transfer {
    accountId?: string;
    amount?: number;
    height?: number;
    kind?: TransferKind;
    refTxi?: number;
}
export interface Paths1R74KpvV2TxsGetResponses200ContentApplicationJsonSchemaAllof0 {
    data?: Tx[];
}
export interface Paths16Tt677V2TxsCountIdGetResponses200ContentApplicationJsonSchema {
    /** The channel close mutual txs count */
    channelCloseMutualTx?: Record<string, unknown>;
    /** The channel close solo txs count */
    channelCloseSoloTx?: Record<string, unknown>;
    /** The channel create txs count */
    channelCreateTx?: Record<string, unknown>;
    /** The channel deposit txs count */
    channelDepositTx?: Record<string, unknown>;
    /** The channel force progress txs count */
    channelForceProgressTx?: number;
    /** The channel offchain txs count */
    channelOffchainTx?: Record<string, unknown>;
    /** The channel settle txs count */
    channelSettleTx?: Record<string, unknown>;
    /** The channel slash txs count */
    channelSlashTx?: Record<string, unknown>;
    /** The channel snapshot solo txs count */
    channelSnapshotSoloTx?: Record<string, unknown>;
    /** The channel withdraw txs count */
    channelWithdrawTx?: Record<string, unknown>;
    /** The contract call txs count */
    contractCallTx?: Record<string, unknown>;
    /** The contract create txs count */
    contractCreateTx?: Record<string, unknown>;
    /** The ga attach txs count */
    gaAttachTx?: Record<string, unknown>;
    /** The ga meta txs count */
    gaMetaTx?: Record<string, unknown>;
    /** The name claim txs count */
    nameClaimTx?: Record<string, unknown>;
    /** The name preclaim txs count */
    namePreclaimTx?: Record<string, unknown>;
    /** The name revoke txs count */
    nameRevokeTx?: Record<string, unknown>;
    /** The name transfer txs count */
    nameTransferTx?: number;
    /** The name update txs count */
    nameUpdateTx?: Record<string, unknown>;
    /** The oracle extend txs count */
    oracleExtendTx?: Record<string, unknown>;
    /** The oracle query txs count */
    oracleQueryTx?: Record<string, unknown>;
    /** The oracle register txs count */
    oracleRegisterTx?: Record<string, unknown>;
    /** The oracle response txs count */
    oracleResponseTx?: Record<string, unknown>;
    /** The paying for txs count */
    payingForTx?: Record<string, unknown>;
    /** The spend txs count */
    spendTx?: Record<string, unknown>;
}
/** AEx141 Transfer */
export interface Aex141TransferEvent {
    blockHeight?: string;
    contractId?: string;
    logIdx?: number;
    microIndex?: number;
    microTime?: number;
    recipientId?: string;
    senderId?: string;
    tokenId?: number;
    txHash?: string;
}
/** AEx9 Transfer */
export interface Aex9TransferEvent {
    amount?: number;
    blockHeight?: number;
    contractId?: string;
    logIdx?: number;
    microIndex?: number;
    microTime?: number;
    recipientId?: string;
    senderId?: string;
    txHash?: string;
}
/** Contract call made inside of a contract call or contract create transaction */
export interface InternalContractCallEvent {
    /** The micro block hash in which the transaction happened */
    blockHash: string;
    /** The contract call transaction hash */
    callTxHash?: string;
    /** The contract pubkey */
    contractId: string;
    /** The contract creation transaction hash */
    contractTxHash: string;
    /** The name of the function */
    function: string;
    /** The height in which the internal call happened */
    height: number;
    /** The transaction object */
    internalTx: Record<string, unknown>;
    /** The micro block index */
    microIndex: number;
}
/** Internal transfer */
export interface InternalTransferEvent {
    /** The amount of AE tokens */
    amount: number;
    /** The kind of internal transfer */
    kind: InternalTransferEventKind;
    /** The transaction hash of a transaction related to the internal transfer */
    refTxHash: string;
}
/** Name claim */
export interface NameClaimEvent {
    /** The claim transaction (internal or not) */
    tx: Record<string, unknown>;
    /** The hash of the transaction (either a name claim or a contract call transaction) */
    txHash: string;
}
export interface PathsKlr2M2V2AccountsIdActivitiesGetResponses200ContentApplicationJsonSchema extends Paths1I5J7OcV2AccountsIdActivitiesGetResponses200ContentApplicationJsonSchemaAllof0, PaginatedResponse {
}
export interface PathsFlc7UjV2Aex141GetResponses200ContentApplicationJsonSchema extends Paths17FlgdkV2Aex141GetResponses200ContentApplicationJsonSchemaAllof0, PaginatedResponse {
}
export interface PathsSs61ZgV2Aex141OwnedNftsAccountidGetResponses200ContentApplicationJsonSchema extends PathsAxw0PwV2Aex141OwnedNftsAccountidGetResponses200ContentApplicationJsonSchemaAllof0, PaginatedResponse {
}
export interface Paths1Ilysy5V2Aex141ContractidOwnersGetResponses200ContentApplicationJsonSchema extends PathsN3Ru7DV2Aex141ContractidOwnersGetResponses200ContentApplicationJsonSchemaAllof0, PaginatedResponse {
}
export interface Paths17O9Fn6V2Aex141ContractidTemplatesGetResponses200ContentApplicationJsonSchema extends PathsRa6Pv6V2Aex141ContractidTemplatesGetResponses200ContentApplicationJsonSchemaAllof0, PaginatedResponse {
}
export interface PathsNuoourV2Aex141ContractidTemplatesTemplateidTokensGetResponses200ContentApplicationJsonSchema extends Paths19B9O7TV2Aex141ContractidTemplatesTemplateidTokensGetResponses200ContentApplicationJsonSchemaAllof0, PaginatedResponse {
}
export interface Paths1Wbogg8V2Aex9GetResponses200ContentApplicationJsonSchema extends Paths1Fe570RV2Aex9GetResponses200ContentApplicationJsonSchemaAllof0, PaginatedResponse {
}
export interface Paths1BsirxgV2Aex9AccountBalancesAccountIdGetResponses200ContentApplicationJsonSchema extends PaginatedResponse, PathsO9MbpkV2Aex9AccountBalancesAccountIdGetResponses200ContentApplicationJsonSchemaAllof1 {
}
export interface Paths1V0FiznV2Aex9TransfersFromToSenderRecipientGetResponses200ContentApplicationJsonSchema extends PathsY2JwfkV2Aex9TransfersFromToSenderRecipientGetResponses200ContentApplicationJsonSchemaAllof0, PaginatedResponse {
}
export interface Paths1X48QgjV2Aex9TransfersFromIdGetResponses200ContentApplicationJsonSchema extends Paths5U7W2V2Aex9TransfersFromIdGetResponses200ContentApplicationJsonSchemaAllof0, PaginatedResponse {
}
export interface Paths1DkkopqV2Aex9TransfersToIdGetResponses200ContentApplicationJsonSchema extends Paths12TleqhV2Aex9TransfersToIdGetResponses200ContentApplicationJsonSchemaAllof0, PaginatedResponse {
}
export interface PathsNi359V2Aex9ContractidBalancesGetResponses200ContentApplicationJsonSchema extends Paths1C2B0UpV2Aex9ContractidBalancesGetResponses200ContentApplicationJsonSchemaAllof0, PaginatedResponse {
}
export interface Paths15Ih6XV2BlocksGetResponses200ContentApplicationJsonSchema extends Paths5LeqfqV2BlocksGetResponses200ContentApplicationJsonSchemaAllof0, PaginatedResponse {
}
export interface Paths1Txl2A9V2ChannelsGetResponses200ContentApplicationJsonSchema extends PathsC25EgV2ChannelsGetResponses200ContentApplicationJsonSchemaAllof0, PaginatedResponse {
}
export interface Paths187U0XzV2ContractsCallsGetResponses200ContentApplicationJsonSchema extends Paths1Csrt0IV2ContractsCallsGetResponses200ContentApplicationJsonSchemaAllof0, PaginatedResponse {
}
export interface PathsB246H1V2ContractsLogsGetResponses200ContentApplicationJsonSchema extends Paths9Ya94MV2ContractsLogsGetResponses200ContentApplicationJsonSchemaAllof0, PaginatedResponse {
}
export interface Paths7Pbec0V2DeltastatsGetResponses200ContentApplicationJsonSchema extends PathsRzn6HzV2DeltastatsGetResponses200ContentApplicationJsonSchemaAllof0, PaginatedResponse {
}
export interface Paths1Ulxr59V2KeyBlocksGetResponses200ContentApplicationJsonSchema extends Paths10TrrshV2KeyBlocksGetResponses200ContentApplicationJsonSchemaAllof0, PaginatedResponse {
}
export interface PathsO99PhzV2KeyBlocksHashOrKbiMicroBlocksGetResponses200ContentApplicationJsonSchema extends Paths7Hfka2V2KeyBlocksHashOrKbiMicroBlocksGetResponses200ContentApplicationJsonSchemaAllof0, PaginatedResponse {
}
export interface PathsGuqvhdV2MicroBlocksHashTxsGetResponses200ContentApplicationJsonSchema extends Paths1RxrrvbV2MicroBlocksHashTxsGetResponses200ContentApplicationJsonSchemaAllof0, PaginatedResponse {
}
export interface PathsK9TkttV2NamesGetResponses200ContentApplicationJsonSchema extends Paths16Srg6EV2NamesGetResponses200ContentApplicationJsonSchemaAllof0, PaginatedResponse {
}
export interface Paths3Msq0DV2NamesSearchGetResponses200ContentApplicationJsonSchema extends Paths1I6PwfdV2NamesSearchGetResponses200ContentApplicationJsonSchemaAllof0, PaginatedResponse {
}
export interface PathsB0YvynV2OraclesGetResponses200ContentApplicationJsonSchema extends PathsMherz6V2OraclesGetResponses200ContentApplicationJsonSchemaAllof0, PaginatedResponse {
}
export interface Paths15PsutbV2TotalstatsGetResponses200ContentApplicationJsonSchema extends PathsDpxn99V2TotalstatsGetResponses200ContentApplicationJsonSchemaAllof0, PaginatedResponse {
}
export interface PathsIgs9Z1V2TransfersGetResponses200ContentApplicationJsonSchema extends Paths17Cjtx5V2TransfersGetResponses200ContentApplicationJsonSchemaAllof0, PaginatedResponse {
}
export interface PathsFclv4TV2TxsGetResponses200ContentApplicationJsonSchema extends Paths1R74KpvV2TxsGetResponses200ContentApplicationJsonSchemaAllof0, PaginatedResponse {
}
export interface Paths1R02SlwV2Aex9ContractidBalancesAccountidGetResponses200ContentApplicationJsonSchema extends PathsBelvp6V2Aex9ContractidBalancesAccountidGetResponses200ContentApplicationJsonSchemaAllof0 {
}
export interface Paths1T9RwnyV2Aex9ContractidBalancesAccountidHistoryGetResponses200ContentApplicationJsonSchema extends Paths11X7LpcV2Aex9ContractidBalancesAccountidHistoryGetResponses200ContentApplicationJsonSchemaAllof0 {
}
export interface Get200ApplicationJsonAllOfPropertiesItemsItem extends Name, Paths7P6Qc1V2NamesSearchGetResponses200ContentApplicationJsonSchemaAllof0PropertiesDataItemsAllof1 {
}
/** Known values of {@link Enum0} that the service accepts. */
export declare enum KnownEnum0 {
    /** Transactions */
    Transactions = "transactions",
    /** Aexn */
    Aexn = "aexn",
    /** Aex9 */
    Aex9 = "aex9",
    /** Aex141 */
    Aex141 = "aex141",
    /** Contract */
    Contract = "contract",
    /** Transfers */
    Transfers = "transfers",
    /** Claims */
    Claims = "claims"
}
/**
 * Defines values for Enum0. \
 * {@link KnownEnum0} can be used interchangeably with Enum0,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **transactions** \
 * **aexn** \
 * **aex9** \
 * **aex141** \
 * **contract** \
 * **transfers** \
 * **claims**
 */
export type Enum0 = string;
/** Known values of {@link Enum1} that the service accepts. */
export declare enum KnownEnum1 {
    /** Forward */
    Forward = "forward",
    /** Backward */
    Backward = "backward"
}
/**
 * Defines values for Enum1. \
 * {@link KnownEnum1} can be used interchangeably with Enum1,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **forward** \
 * **backward**
 */
export type Enum1 = string;
/** Known values of {@link ActivityType} that the service accepts. */
export declare enum KnownActivityType {
    /** SpendTxEvent */
    SpendTxEvent = "SpendTxEvent",
    /** OracleRegisterTxEvent */
    OracleRegisterTxEvent = "OracleRegisterTxEvent",
    /** OracleExtendTxEvent */
    OracleExtendTxEvent = "OracleExtendTxEvent",
    /** OracleQueryTxEvent */
    OracleQueryTxEvent = "OracleQueryTxEvent",
    /** OracleResponseTxEvent */
    OracleResponseTxEvent = "OracleResponseTxEvent",
    /** NamePreclaimTxEvent */
    NamePreclaimTxEvent = "NamePreclaimTxEvent",
    /** NameClaimTxEvent */
    NameClaimTxEvent = "NameClaimTxEvent",
    /** NameTransferTxEvent */
    NameTransferTxEvent = "NameTransferTxEvent",
    /** NameUpdateTxEvent */
    NameUpdateTxEvent = "NameUpdateTxEvent",
    /** NameRevokeTxEvent */
    NameRevokeTxEvent = "NameRevokeTxEvent",
    /** ContractCreateTxEvent */
    ContractCreateTxEvent = "ContractCreateTxEvent",
    /** ContractCallTxEvent */
    ContractCallTxEvent = "ContractCallTxEvent",
    /** GaAttachTxEvent */
    GaAttachTxEvent = "GaAttachTxEvent",
    /** GaMetaTxEvent */
    GaMetaTxEvent = "GaMetaTxEvent",
    /** ChannelCreateTxEvent */
    ChannelCreateTxEvent = "ChannelCreateTxEvent",
    /** ChannelDepositTxEvent */
    ChannelDepositTxEvent = "ChannelDepositTxEvent",
    /** ChannelWithdrawTxEvent */
    ChannelWithdrawTxEvent = "ChannelWithdrawTxEvent",
    /** ChannelForceProgressTxEvent */
    ChannelForceProgressTxEvent = "ChannelForceProgressTxEvent",
    /** ChannelCloseMutualTxEvent */
    ChannelCloseMutualTxEvent = "ChannelCloseMutualTxEvent",
    /** ChannelCloseSoloTxEvent */
    ChannelCloseSoloTxEvent = "ChannelCloseSoloTxEvent",
    /** ChannelSlashTxEvent */
    ChannelSlashTxEvent = "ChannelSlashTxEvent",
    /** ChannelSettleTxEvent */
    ChannelSettleTxEvent = "ChannelSettleTxEvent",
    /** ChannelSnapshotSoloTxEvent */
    ChannelSnapshotSoloTxEvent = "ChannelSnapshotSoloTxEvent",
    /** ChannelSetDelegatesTxEvent */
    ChannelSetDelegatesTxEvent = "ChannelSetDelegatesTxEvent",
    /** ChannelOffchainTxEvent */
    ChannelOffchainTxEvent = "ChannelOffchainTxEvent",
    /** ChannelClientReconnectTxEvent */
    ChannelClientReconnectTxEvent = "ChannelClientReconnectTxEvent",
    /** PayingForTxEvent */
    PayingForTxEvent = "PayingForTxEvent"
}
/**
 * Defines values for ActivityType. \
 * {@link KnownActivityType} can be used interchangeably with ActivityType,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **SpendTxEvent** \
 * **OracleRegisterTxEvent** \
 * **OracleExtendTxEvent** \
 * **OracleQueryTxEvent** \
 * **OracleResponseTxEvent** \
 * **NamePreclaimTxEvent** \
 * **NameClaimTxEvent** \
 * **NameTransferTxEvent** \
 * **NameUpdateTxEvent** \
 * **NameRevokeTxEvent** \
 * **ContractCreateTxEvent** \
 * **ContractCallTxEvent** \
 * **GaAttachTxEvent** \
 * **GaMetaTxEvent** \
 * **ChannelCreateTxEvent** \
 * **ChannelDepositTxEvent** \
 * **ChannelWithdrawTxEvent** \
 * **ChannelForceProgressTxEvent** \
 * **ChannelCloseMutualTxEvent** \
 * **ChannelCloseSoloTxEvent** \
 * **ChannelSlashTxEvent** \
 * **ChannelSettleTxEvent** \
 * **ChannelSnapshotSoloTxEvent** \
 * **ChannelSetDelegatesTxEvent** \
 * **ChannelOffchainTxEvent** \
 * **ChannelClientReconnectTxEvent** \
 * **PayingForTxEvent**
 */
export type ActivityType = string;
/** Known values of {@link Enum3} that the service accepts. */
export declare enum KnownEnum3 {
    /** Active */
    Active = "active",
    /** Inactive */
    Inactive = "inactive"
}
/**
 * Defines values for Enum3. \
 * {@link KnownEnum3} can be used interchangeably with Enum3,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **active** \
 * **inactive**
 */
export type Enum3 = string;
/** Known values of {@link NameStatus} that the service accepts. */
export declare enum KnownNameStatus {
    /** Name */
    Name = "name",
    /** Auction */
    Auction = "auction"
}
/**
 * Defines values for NameStatus. \
 * {@link KnownNameStatus} can be used interchangeably with NameStatus,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **name** \
 * **auction**
 */
export type NameStatus = string;
/** Known values of {@link AuctionInfoStatus} that the service accepts. */
export declare enum KnownAuctionInfoStatus {
    /** Auction */
    Auction = "auction"
}
/**
 * Defines values for AuctionInfoStatus. \
 * {@link KnownAuctionInfoStatus} can be used interchangeably with AuctionInfoStatus,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **auction**
 */
export type AuctionInfoStatus = string;
/** Known values of {@link Get200ApplicationJsonAllOfPropertiesItems1Status} that the service accepts. */
export declare enum KnownGet200ApplicationJsonAllOfPropertiesItems1Status {
    /** Auction */
    Auction = "auction",
    /** Active */
    Active = "active",
    /** Inactive */
    Inactive = "inactive"
}
/**
 * Defines values for Get200ApplicationJsonAllOfPropertiesItems1Status. \
 * {@link KnownGet200ApplicationJsonAllOfPropertiesItems1Status} can be used interchangeably with Get200ApplicationJsonAllOfPropertiesItems1Status,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **auction** \
 * **active** \
 * **inactive**
 */
export type Get200ApplicationJsonAllOfPropertiesItems1Status = string;
/** Known values of {@link TransferKind} that the service accepts. */
export declare enum KnownTransferKind {
    /** RewardDev */
    RewardDev = "reward_dev",
    /** RewardBlock */
    RewardBlock = "reward_block"
}
/**
 * Defines values for TransferKind. \
 * {@link KnownTransferKind} can be used interchangeably with TransferKind,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **reward_dev** \
 * **reward_block**
 */
export type TransferKind = string;
/** Known values of {@link Get0ItemsItem} that the service accepts. */
export declare enum KnownGet0ItemsItem {
    /** ChannelCloseMutual */
    ChannelCloseMutual = "channel_close_mutual",
    /** ChannelCloseSolo */
    ChannelCloseSolo = "channel_close_solo",
    /** ChannelCreate */
    ChannelCreate = "channel_create",
    /** ChannelDeposit */
    ChannelDeposit = "channel_deposit",
    /** ChannelForceProgress */
    ChannelForceProgress = "channel_force_progress",
    /** ChannelOffchain */
    ChannelOffchain = "channel_offchain",
    /** ChannelSettle */
    ChannelSettle = "channel_settle",
    /** ChannelSlash */
    ChannelSlash = "channel_slash",
    /** ChannelSnapshotSolo */
    ChannelSnapshotSolo = "channel_snapshot_solo",
    /** ChannelWithdraw */
    ChannelWithdraw = "channel_withdraw",
    /** ContractCall */
    ContractCall = "contract_call",
    /** ContractCreate */
    ContractCreate = "contract_create",
    /** GaAttach */
    GaAttach = "ga_attach",
    /** GaMeta */
    GaMeta = "ga_meta",
    /** NameClaim */
    NameClaim = "name_claim",
    /** NamePreclaim */
    NamePreclaim = "name_preclaim",
    /** NameRevoke */
    NameRevoke = "name_revoke",
    /** NameTransfer */
    NameTransfer = "name_transfer",
    /** NameUpdate */
    NameUpdate = "name_update",
    /** OracleExtend */
    OracleExtend = "oracle_extend",
    /** OracleQuery */
    OracleQuery = "oracle_query",
    /** OracleRegister */
    OracleRegister = "oracle_register",
    /** OracleResponse */
    OracleResponse = "oracle_response",
    /** PayingFor */
    PayingFor = "paying_for",
    /** Spend */
    Spend = "spend"
}
/**
 * Defines values for Get0ItemsItem. \
 * {@link KnownGet0ItemsItem} can be used interchangeably with Get0ItemsItem,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **channel_close_mutual** \
 * **channel_close_solo** \
 * **channel_create** \
 * **channel_deposit** \
 * **channel_force_progress** \
 * **channel_offchain** \
 * **channel_settle** \
 * **channel_slash** \
 * **channel_snapshot_solo** \
 * **channel_withdraw** \
 * **contract_call** \
 * **contract_create** \
 * **ga_attach** \
 * **ga_meta** \
 * **name_claim** \
 * **name_preclaim** \
 * **name_revoke** \
 * **name_transfer** \
 * **name_update** \
 * **oracle_extend** \
 * **oracle_query** \
 * **oracle_register** \
 * **oracle_response** \
 * **paying_for** \
 * **spend**
 */
export type Get0ItemsItem = string;
/** Known values of {@link Get1ItemsItem} that the service accepts. */
export declare enum KnownGet1ItemsItem {
    /** Channel */
    Channel = "channel",
    /** Contract */
    Contract = "contract",
    /** Ga */
    Ga = "ga",
    /** Name */
    Name = "name",
    /** Oracle */
    Oracle = "oracle",
    /** PayingFor */
    PayingFor = "paying_for",
    /** Spend */
    Spend = "spend"
}
/**
 * Defines values for Get1ItemsItem. \
 * {@link KnownGet1ItemsItem} can be used interchangeably with Get1ItemsItem,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **channel** \
 * **contract** \
 * **ga** \
 * **name** \
 * **oracle** \
 * **paying_for** \
 * **spend**
 */
export type Get1ItemsItem = string;
/** Known values of {@link InternalTransferEventKind} that the service accepts. */
export declare enum KnownInternalTransferEventKind {
    /** AccountsExtraLima */
    AccountsExtraLima = "accounts_extra_lima",
    /** AccountsFortuna */
    AccountsFortuna = "accounts_fortuna",
    /** AccountsGenesis */
    AccountsGenesis = "accounts_genesis",
    /** AccountsLima */
    AccountsLima = "accounts_lima",
    /** AccountsMinerva */
    AccountsMinerva = "accounts_minerva",
    /** ContractsLima */
    ContractsLima = "contracts_lima",
    /** RewardDev */
    RewardDev = "reward_dev",
    /** RewardBlock */
    RewardBlock = "reward_block",
    /** FeeRefundOracle */
    FeeRefundOracle = "fee_refund_oracle",
    /** FeeLockName */
    FeeLockName = "fee_lock_name",
    /** FeeRefundName */
    FeeRefundName = "fee_refund_name",
    /** FeeSpendName */
    FeeSpendName = "fee_spend_name",
    /** RewardOracle */
    RewardOracle = "reward_oracle"
}
/**
 * Defines values for InternalTransferEventKind. \
 * {@link KnownInternalTransferEventKind} can be used interchangeably with InternalTransferEventKind,
 *  this enum contains the known values that the service supports.
 * ### Known values supported by the service
 * **accounts_extra_lima** \
 * **accounts_fortuna** \
 * **accounts_genesis** \
 * **accounts_lima** \
 * **accounts_minerva** \
 * **contracts_lima** \
 * **reward_dev** \
 * **reward_block** \
 * **fee_refund_oracle** \
 * **fee_lock_name** \
 * **fee_refund_name** \
 * **fee_spend_name** \
 * **reward_oracle**
 */
export type InternalTransferEventKind = string;
/** Optional parameters. */
export interface GetAccountActivitiesOptionalParams extends coreClient.OperationOptions {
    /** Indicate to filter only activities initiated by the account */
    ownedOnly?: boolean;
    /**
     * Activity type:
     *  * `transactions` - Transactions containing the account in any of the transaction fields
     *  * `aexn` - AExN (aex9 and aex141) activities
     *  * `aex9` - AEx9 activities
     *  * `aex141` - AEx141 activities
     *  * `contract` - Internal and external contract calls
     *  * `transfers` - Internal (both gen-based and tx-based) transfers
     *  * `claims` - Name claims related to the name hash
     *
     */
    type?: Enum0;
}
/** Contains response data for the getAccountActivities operation. */
export type GetAccountActivitiesResponse = PathsKlr2M2V2AccountsIdActivitiesGetResponses200ContentApplicationJsonSchema;
/** Optional parameters. */
export interface GetSortedAex141ContractsOptionalParams extends coreClient.OperationOptions {
    /** meta info field used on sorting */
    by?: string;
    /** Sorts by name or symbol prefix */
    prefix?: string;
}
/** Contains response data for the getSortedAex141Contracts operation. */
export type GetSortedAex141ContractsResponse = PathsFlc7UjV2Aex141GetResponses200ContentApplicationJsonSchema;
/** Optional parameters. */
export interface GetAex141OwnedTokensOptionalParams extends coreClient.OperationOptions {
}
/** Contains response data for the getAex141OwnedTokens operation. */
export type GetAex141OwnedTokensResponse = PathsSs61ZgV2Aex141OwnedNftsAccountidGetResponses200ContentApplicationJsonSchema;
/** Optional parameters. */
export interface GetAex141TokenOwnerOptionalParams extends coreClient.OperationOptions {
}
/** Contains response data for the getAex141TokenOwner operation. */
export type GetAex141TokenOwnerResponse = {
    /** The parsed response body. */
    body: string;
};
/** Optional parameters. */
export interface GetAex141ContractOwnersOptionalParams extends coreClient.OperationOptions {
}
/** Contains response data for the getAex141ContractOwners operation. */
export type GetAex141ContractOwnersResponse = Paths1Ilysy5V2Aex141ContractidOwnersGetResponses200ContentApplicationJsonSchema;
/** Optional parameters. */
export interface GetAex141ContractTemplatesOptionalParams extends coreClient.OperationOptions {
}
/** Contains response data for the getAex141ContractTemplates operation. */
export type GetAex141ContractTemplatesResponse = Paths17O9Fn6V2Aex141ContractidTemplatesGetResponses200ContentApplicationJsonSchema;
/** Optional parameters. */
export interface GetAex141TemplateTokensOptionalParams extends coreClient.OperationOptions {
}
/** Contains response data for the getAex141TemplateTokens operation. */
export type GetAex141TemplateTokensResponse = PathsNuoourV2Aex141ContractidTemplatesTemplateidTokensGetResponses200ContentApplicationJsonSchema;
/** Optional parameters. */
export interface GetAex141ByContractOptionalParams extends coreClient.OperationOptions {
}
/** Contains response data for the getAex141ByContract operation. */
export type GetAex141ByContractResponse = Aex141Response;
/** Optional parameters. */
export interface GetSortedAex9TokensOptionalParams extends coreClient.OperationOptions {
    /** meta info field used on sorting */
    by?: string;
    /** Sorts by name or symbol */
    prefix?: string;
}
/** Contains response data for the getSortedAex9Tokens operation. */
export type GetSortedAex9TokensResponse = Paths1Wbogg8V2Aex9GetResponses200ContentApplicationJsonSchema;
/** Optional parameters. */
export interface GetAex9AccountBalancesOptionalParams extends coreClient.OperationOptions {
}
/** Contains response data for the getAex9AccountBalances operation. */
export type GetAex9AccountBalancesResponse = Paths1BsirxgV2Aex9AccountBalancesAccountIdGetResponses200ContentApplicationJsonSchema;
/** Optional parameters. */
export interface GetAex9TokensCountOptionalParams extends coreClient.OperationOptions {
}
/** Contains response data for the getAex9TokensCount operation. */
export type GetAex9TokensCountResponse = {
    /** The parsed response body. */
    body: number;
};
/** Optional parameters. */
export interface GetAex9PairTransfersOptionalParams extends coreClient.OperationOptions {
}
/** Contains response data for the getAex9PairTransfers operation. */
export type GetAex9PairTransfersResponse = Paths1V0FiznV2Aex9TransfersFromToSenderRecipientGetResponses200ContentApplicationJsonSchema;
/** Optional parameters. */
export interface GetAex9SenderTransfersOptionalParams extends coreClient.OperationOptions {
}
/** Contains response data for the getAex9SenderTransfers operation. */
export type GetAex9SenderTransfersResponse = Paths1X48QgjV2Aex9TransfersFromIdGetResponses200ContentApplicationJsonSchema;
/** Optional parameters. */
export interface GetAex9RecipientTransfersOptionalParams extends coreClient.OperationOptions {
}
/** Contains response data for the getAex9RecipientTransfers operation. */
export type GetAex9RecipientTransfersResponse = Paths1DkkopqV2Aex9TransfersToIdGetResponses200ContentApplicationJsonSchema;
/** Optional parameters. */
export interface GetAex9ContractBalancesOptionalParams extends coreClient.OperationOptions {
    /** Order by */
    by?: string;
}
/** Contains response data for the getAex9ContractBalances operation. */
export type GetAex9ContractBalancesResponse = PathsNi359V2Aex9ContractidBalancesGetResponses200ContentApplicationJsonSchema;
/** Optional parameters. */
export interface GetAex9ContractAccountBalanceOptionalParams extends coreClient.OperationOptions {
}
/** Contains response data for the getAex9ContractAccountBalance operation. */
export type GetAex9ContractAccountBalanceResponse = Paths1R02SlwV2Aex9ContractidBalancesAccountidGetResponses200ContentApplicationJsonSchema;
/** Optional parameters. */
export interface GetAex9ContractAccountBalanceHistoryOptionalParams extends coreClient.OperationOptions {
}
/** Contains response data for the getAex9ContractAccountBalanceHistory operation. */
export type GetAex9ContractAccountBalanceHistoryResponse = Paths1T9RwnyV2Aex9ContractidBalancesAccountidHistoryGetResponses200ContentApplicationJsonSchema;
/** Optional parameters. */
export interface GetAex9LogsCountOptionalParams extends coreClient.OperationOptions {
}
/** Contains response data for the getAex9LogsCount operation. */
export type GetAex9LogsCountResponse = {
    /** The parsed response body. */
    body: number;
};
/** Optional parameters. */
export interface GetAex9ByContractOptionalParams extends coreClient.OperationOptions {
}
/** Contains response data for the getAex9ByContract operation. */
export type GetAex9ByContractResponse = Aex9Response;
/** Optional parameters. */
export interface GetBlocksOptionalParams extends coreClient.OperationOptions {
}
/** Contains response data for the getBlocks operation. */
export type GetBlocksResponse = Paths15Ih6XV2BlocksGetResponses200ContentApplicationJsonSchema;
/** Optional parameters. */
export interface GetBlockOptionalParams extends coreClient.OperationOptions {
}
/** Contains response data for the getBlock operation. */
export type GetBlockResponse = Block;
/** Optional parameters. */
export interface GetBlockByMbiOptionalParams extends coreClient.OperationOptions {
}
/** Contains response data for the getBlockByMbi operation. */
export type GetBlockByMbiResponse = Block;
/** Optional parameters. */
export interface GetChannelsOptionalParams extends coreClient.OperationOptions {
    /** Exclusively filter by active/inactive channels. */
    state?: Enum3;
}
/** Contains response data for the getChannels operation. */
export type GetChannelsResponse = Paths1Txl2A9V2ChannelsGetResponses200ContentApplicationJsonSchema;
/** Optional parameters. */
export interface GetChannelOptionalParams extends coreClient.OperationOptions {
}
/** Contains response data for the getChannel operation. */
export type GetChannelResponse = Channel;
/** Optional parameters. */
export interface GetContractsCallsOptionalParams extends coreClient.OperationOptions {
}
/** Contains response data for the getContractsCalls operation. */
export type GetContractsCallsResponse = Paths187U0XzV2ContractsCallsGetResponses200ContentApplicationJsonSchema;
/** Optional parameters. */
export interface GetContractsLogsOptionalParams extends coreClient.OperationOptions {
    /** Contract that emitted the logs */
    contractId?: string;
    /** Name of the event */
    event?: string;
    /** Prefix of the contract called function */
    functionPrefix?: string;
    /** Data prefix from the contract call */
    data?: string;
    /** Indicates to format args when event is AEX-N */
    aexnArgs?: boolean;
}
/** Contains response data for the getContractsLogs operation. */
export type GetContractsLogsResponse = PathsB246H1V2ContractsLogsGetResponses200ContentApplicationJsonSchema;
/** Optional parameters. */
export interface GetDeltastatsOptionalParams extends coreClient.OperationOptions {
}
/** Contains response data for the getDeltastats operation. */
export type GetDeltastatsResponse = Paths7Pbec0V2DeltastatsGetResponses200ContentApplicationJsonSchema;
/** Optional parameters. */
export interface GetKeyBlocksOptionalParams extends coreClient.OperationOptions {
}
/** Contains response data for the getKeyBlocks operation. */
export type GetKeyBlocksResponse = Paths1Ulxr59V2KeyBlocksGetResponses200ContentApplicationJsonSchema;
/** Optional parameters. */
export interface GetKeyBlockOptionalParams extends coreClient.OperationOptions {
}
/** Contains response data for the getKeyBlock operation. */
export type GetKeyBlockResponse = KeyBlock;
/** Optional parameters. */
export interface GetKeyBlockMicroBlocksOptionalParams extends coreClient.OperationOptions {
}
/** Contains response data for the getKeyBlockMicroBlocks operation. */
export type GetKeyBlockMicroBlocksResponse = PathsO99PhzV2KeyBlocksHashOrKbiMicroBlocksGetResponses200ContentApplicationJsonSchema;
/** Optional parameters. */
export interface GetMicroBlockOptionalParams extends coreClient.OperationOptions {
}
/** Contains response data for the getMicroBlock operation. */
export type GetMicroBlockResponse = MicroBlock;
/** Optional parameters. */
export interface GetMicroBlockTransactionsOptionalParams extends coreClient.OperationOptions {
}
/** Contains response data for the getMicroBlockTransactions operation. */
export type GetMicroBlockTransactionsResponse = PathsGuqvhdV2MicroBlocksHashTxsGetResponses200ContentApplicationJsonSchema;
/** Optional parameters. */
export interface GetNamesOptionalParams extends coreClient.OperationOptions {
    /** Sorting by deactivation, activation or name */
    by?: string;
    /** Account that owns the name */
    ownedBy?: string;
    /** Activation state of the name (active or inactive) */
    state?: string;
}
/** Contains response data for the getNames operation. */
export type GetNamesResponse = PathsK9TkttV2NamesGetResponses200ContentApplicationJsonSchema;
/** Optional parameters. */
export interface GetNamesAuctionsOptionalParams extends coreClient.OperationOptions {
}
/** Contains response data for the getNamesAuctions operation. */
export type GetNamesAuctionsResponse = Auction;
/** Optional parameters. */
export interface SearchNamesOptionalParams extends coreClient.OperationOptions {
}
/** Contains response data for the searchNames operation. */
export type SearchNamesResponse = Paths3Msq0DV2NamesSearchGetResponses200ContentApplicationJsonSchema;
/** Optional parameters. */
export interface GetNameOptionalParams extends coreClient.OperationOptions {
}
/** Contains response data for the getName operation. */
export type GetNameResponse = Name;
/** Optional parameters. */
export interface GetNameAuctionOptionalParams extends coreClient.OperationOptions {
}
/** Contains response data for the getNameAuction operation. */
export type GetNameAuctionResponse = Auction;
/** Optional parameters. */
export interface GetNameClaimsOptionalParams extends coreClient.OperationOptions {
}
/** Contains response data for the getNameClaims operation. */
export type GetNameClaimsResponse = NameClaim;
/** Optional parameters. */
export interface GetNamePointeesOptionalParams extends coreClient.OperationOptions {
}
/** Contains response data for the getNamePointees operation. */
export type GetNamePointeesResponse = PathsDjelzuV2NamesIdPointeesGetResponses200ContentApplicationJsonSchema;
/** Optional parameters. */
export interface GetNamePointersOptionalParams extends coreClient.OperationOptions {
}
/** Contains response data for the getNamePointers operation. */
export type GetNamePointersResponse = Record<string, unknown>;
/** Optional parameters. */
export interface GetNameTransfersOptionalParams extends coreClient.OperationOptions {
}
/** Contains response data for the getNameTransfers operation. */
export type GetNameTransfersResponse = NameTransfer;
/** Optional parameters. */
export interface GetNameUpdatesOptionalParams extends coreClient.OperationOptions {
}
/** Contains response data for the getNameUpdates operation. */
export type GetNameUpdatesResponse = NameUpdate;
/** Optional parameters. */
export interface GetOracleOptionalParams extends coreClient.OperationOptions {
}
/** Contains response data for the getOracle operation. */
export type GetOracleResponse = Oracle;
/** Optional parameters. */
export interface GetOraclesOptionalParams extends coreClient.OperationOptions {
}
/** Contains response data for the getOracles operation. */
export type GetOraclesResponse = PathsB0YvynV2OraclesGetResponses200ContentApplicationJsonSchema;
/** Optional parameters. */
export interface GetStatusOptionalParams extends coreClient.OperationOptions {
}
/** Contains response data for the getStatus operation. */
export type GetStatusResponse = Status;
/** Optional parameters. */
export interface GetTotalstatsOptionalParams extends coreClient.OperationOptions {
}
/** Contains response data for the getTotalstats operation. */
export type GetTotalstatsResponse = Paths15PsutbV2TotalstatsGetResponses200ContentApplicationJsonSchema;
/** Optional parameters. */
export interface GetTransfersOptionalParams extends coreClient.OperationOptions {
}
/** Contains response data for the getTransfers operation. */
export type GetTransfersResponse = PathsIgs9Z1V2TransfersGetResponses200ContentApplicationJsonSchema;
/** Optional parameters. */
export interface GetTxsOptionalParams extends coreClient.OperationOptions {
    /** The transaction type. The query allows providing of multiple type parameters. [More info](https://github.com/aeternity/ae_mdw#types) */
    type?: Get0ItemsItem[];
    /** The type group. The query allows providing of multiple type group parameters. [More info](https://github.com/aeternity/ae_mdw#types) */
    typeGroup?: Get1ItemsItem[];
    /** The account ID. [More info](https://github.com/aeternity/ae_mdw#generic-ids) */
    account?: string;
    /** The contract ID. [More info](https://github.com/aeternity/ae_mdw#generic-ids) */
    contract?: string;
    /** The channel ID. [More info](https://github.com/aeternity/ae_mdw#generic-ids) */
    channel?: string;
    /** The oracle ID. [More info](https://github.com/aeternity/ae_mdw#generic-ids) */
    oracle?: string;
    /** The sender ID */
    senderId?: string;
    /** The recipient ID */
    recipientId?: string;
    /** Entrypoint of a contract call */
    entrypoint?: string;
}
/** Contains response data for the getTxs operation. */
export type GetTxsResponse = PathsFclv4TV2TxsGetResponses200ContentApplicationJsonSchema;
/** Optional parameters. */
export interface GetTxCountOptionalParams extends coreClient.OperationOptions {
    /** Type of a transaction */
    txType?: string;
    /** The ID of the address/name/oracle/etc */
    id?: string;
}
/** Contains response data for the getTxCount operation. */
export type GetTxCountResponse = {
    /** The parsed response body. */
    body: number;
};
/** Optional parameters. */
export interface GetTxCountByIdOptionalParams extends coreClient.OperationOptions {
}
/** Contains response data for the getTxCountById operation. */
export type GetTxCountByIdResponse = Paths16Tt677V2TxsCountIdGetResponses200ContentApplicationJsonSchema;
/** Optional parameters. */
export interface GetTxOptionalParams extends coreClient.OperationOptions {
}
/** Contains response data for the getTx operation. */
export type GetTxResponse = Tx;
/** Optional parameters. */
export interface MiddlewareOptionalParams extends coreClient.ServiceClientOptions {
    /** Limit paginated resources (max 100) */
    limit?: number;
    /** Scopes results in a txi or generation range */
    scope?: string;
    /** Sorts results in forwards or backwards direction */
    direction?: Enum1;
    /** Overrides client endpoint. */
    endpoint?: string;
}
