{"version":3,"file":"aepp-sdk.browser.js","mappings":"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","sources":["webpack://Aeternity/webpack/universalModuleDefinition","webpack://Aeternity/./node_modules/blakejs/blake2b.js","webpack://Aeternity/./node_modules/blakejs/util.js","webpack://Aeternity/./node_modules/core-js-pure/actual/object/define-property.js","webpack://Aeternity/./node_modules/core-js-pure/actual/symbol/index.js","webpack://Aeternity/./node_modules/core-js-pure/actual/symbol/iterator.js","webpack://Aeternity/./node_modules/core-js-pure/actual/symbol/to-primitive.js","webpack://Aeternity/./node_modules/core-js-pure/es/object/define-property.js","webpack://Aeternity/./node_modules/core-js-pure/es/symbol/index.js","webpack://Aeternity/./node_modules/core-js-pure/es/symbol/iterator.js","webpack://Aeternity/./node_modules/core-js-pure/es/symbol/to-primitive.js","webpack://Aeternity/./node_modules/core-js-pure/full/object/define-property.js","webpack://Aeternity/./node_modules/core-js-pure/full/symbol/index.js","webpack://Aeternity/./node_modules/core-js-pure/full/symbol/iterator.js","webpack://Aeternity/./node_modules/core-js-pure/full/symbol/to-primitive.js","webpack://Aeternity/./node_modules/core-js-pure/internals/a-callable.js","webpack://Aeternity/./node_modules/core-js-pure/internals/a-possible-prototype.js","webpack://Aeternity/./node_modules/core-js-pure/internals/add-to-unscopables.js","webpack://Aeternity/./node_modules/core-js-pure/internals/an-object.js","webpack://Aeternity/./node_modules/core-js-pure/internals/array-includes.js","webpack://Aeternity/./node_modules/core-js-pure/internals/array-iteration.js","webpack://Aeternity/./node_modules/core-js-pure/internals/array-method-has-species-support.js","webpack://Aeternity/./node_modules/core-js-pure/internals/array-slice-simple.js","webpack://Aeternity/./node_modules/core-js-pure/internals/array-slice.js","webpack://Aeternity/./node_modules/core-js-pure/internals/array-species-constructor.js","webpack://Aeternity/./node_modules/core-js-pure/internals/array-species-create.js","webpack://Aeternity/./node_modules/core-js-pure/internals/classof-raw.js","webpack://Aeternity/./node_modules/core-js-pure/internals/classof.js","webpack://Aeternity/./node_modules/core-js-pure/internals/correct-prototype-getter.js","webpack://Aeternity/./node_modules/core-js-pure/internals/create-iter-result-object.js","webpack://Aeternity/./node_modules/core-js-pure/internals/create-non-enumerable-property.js","webpack://Aeternity/./node_modules/core-js-pure/internals/create-property-descriptor.js","webpack://Aeternity/./node_modules/core-js-pure/internals/create-property.js","webpack://Aeternity/./node_modules/core-js-pure/internals/define-built-in-accessor.js","webpack://Aeternity/./node_modules/core-js-pure/internals/define-built-in.js","webpack://Aeternity/./node_modules/core-js-pure/internals/define-global-property.js","webpack://Aeternity/./node_modules/core-js-pure/internals/descriptors.js","webpack://Aeternity/./node_modules/core-js-pure/internals/document-all.js","webpack://Aeternity/./node_modules/core-js-pure/internals/document-create-element.js","webpack://Aeternity/./node_modules/core-js-pure/internals/does-not-exceed-safe-integer.js","webpack://Aeternity/./node_modules/core-js-pure/internals/dom-iterables.js","webpack://Aeternity/./node_modules/core-js-pure/internals/engine-user-agent.js","webpack://Aeternity/./node_modules/core-js-pure/internals/engine-v8-version.js","webpack://Aeternity/./node_modules/core-js-pure/internals/enum-bug-keys.js","webpack://Aeternity/./node_modules/core-js-pure/internals/export.js","webpack://Aeternity/./node_modules/core-js-pure/internals/fails.js","webpack://Aeternity/./node_modules/core-js-pure/internals/function-apply.js","webpack://Aeternity/./node_modules/core-js-pure/internals/function-bind-context.js","webpack://Aeternity/./node_modules/core-js-pure/internals/function-bind-native.js","webpack://Aeternity/./node_modules/core-js-pure/internals/function-call.js","webpack://Aeternity/./node_modules/core-js-pure/internals/function-name.js","webpack://Aeternity/./node_modules/core-js-pure/internals/function-uncurry-this-accessor.js","webpack://Aeternity/./node_modules/core-js-pure/internals/function-uncurry-this-clause.js","webpack://Aeternity/./node_modules/core-js-pure/internals/function-uncurry-this.js","webpack://Aeternity/./node_modules/core-js-pure/internals/get-built-in.js","webpack://Aeternity/./node_modules/core-js-pure/internals/get-json-replacer-function.js","webpack://Aeternity/./node_modules/core-js-pure/internals/get-method.js","webpack://Aeternity/./node_modules/core-js-pure/internals/global.js","webpack://Aeternity/./node_modules/core-js-pure/internals/has-own-property.js","webpack://Aeternity/./node_modules/core-js-pure/internals/hidden-keys.js","webpack://Aeternity/./node_modules/core-js-pure/internals/html.js","webpack://Aeternity/./node_modules/core-js-pure/internals/ie8-dom-define.js","webpack://Aeternity/./node_modules/core-js-pure/internals/indexed-object.js","webpack://Aeternity/./node_modules/core-js-pure/internals/inspect-source.js","webpack://Aeternity/./node_modules/core-js-pure/internals/internal-state.js","webpack://Aeternity/./node_modules/core-js-pure/internals/is-array.js","webpack://Aeternity/./node_modules/core-js-pure/internals/is-callable.js","webpack://Aeternity/./node_modules/core-js-pure/internals/is-constructor.js","webpack://Aeternity/./node_modules/core-js-pure/internals/is-forced.js","webpack://Aeternity/./node_modules/core-js-pure/internals/is-null-or-undefined.js","webpack://Aeternity/./node_modules/core-js-pure/internals/is-object.js","webpack://Aeternity/./node_modules/core-js-pure/internals/is-pure.js","webpack://Aeternity/./node_modules/core-js-pure/internals/is-symbol.js","webpack://Aeternity/./node_modules/core-js-pure/internals/iterator-create-constructor.js","webpack://Aeternity/./node_modules/core-js-pure/internals/iterator-define.js","webpack://Aeternity/./node_modules/core-js-pure/internals/iterators-core.js","webpack://Aeternity/./node_modules/core-js-pure/internals/iterators.js","webpack://Aeternity/./node_modules/core-js-pure/internals/length-of-array-like.js","webpack://Aeternity/./node_modules/core-js-pure/internals/math-trunc.js","webpack://Aeternity/./node_modules/core-js-pure/internals/object-create.js","webpack://Aeternity/./node_modules/core-js-pure/internals/object-define-properties.js","webpack://Aeternity/./node_modules/core-js-pure/internals/object-define-property.js","webpack://Aeternity/./node_modules/core-js-pure/internals/object-get-own-property-descriptor.js","webpack://Aeternity/./node_modules/core-js-pure/internals/object-get-own-property-names-external.js","webpack://Aeternity/./node_modules/core-js-pure/internals/object-get-own-property-names.js","webpack://Aeternity/./node_modules/core-js-pure/internals/object-get-own-property-symbols.js","webpack://Aeternity/./node_modules/core-js-pure/internals/object-get-prototype-of.js","webpack://Aeternity/./node_modules/core-js-pure/internals/object-is-prototype-of.js","webpack://Aeternity/./node_modules/core-js-pure/internals/object-keys-internal.js","webpack://Aeternity/./node_modules/core-js-pure/internals/object-keys.js","webpack://Aeternity/./node_modules/core-js-pure/internals/object-property-is-enumerable.js","webpack://Aeternity/./node_modules/core-js-pure/internals/object-set-prototype-of.js","webpack://Aeternity/./node_modules/core-js-pure/internals/object-to-string.js","webpack://Aeternity/./node_modules/core-js-pure/internals/ordinary-to-primitive.js","webpack://Aeternity/./node_modules/core-js-pure/internals/path.js","webpack://Aeternity/./node_modules/core-js-pure/internals/require-object-coercible.js","webpack://Aeternity/./node_modules/core-js-pure/internals/set-to-string-tag.js","webpack://Aeternity/./node_modules/core-js-pure/internals/shared-key.js","webpack://Aeternity/./node_modules/core-js-pure/internals/shared-store.js","webpack://Aeternity/./node_modules/core-js-pure/internals/shared.js","webpack://Aeternity/./node_modules/core-js-pure/internals/string-multibyte.js","webpack://Aeternity/./node_modules/core-js-pure/internals/symbol-constructor-detection.js","webpack://Aeternity/./node_modules/core-js-pure/internals/symbol-define-to-primitive.js","webpack://Aeternity/./node_modules/core-js-pure/internals/symbol-is-registered.js","webpack://Aeternity/./node_modules/core-js-pure/internals/symbol-is-well-known.js","webpack://Aeternity/./node_modules/core-js-pure/internals/symbol-registry-detection.js","webpack://Aeternity/./node_modules/core-js-pure/internals/to-absolute-index.js","webpack://Aeternity/./node_modules/core-js-pure/internals/to-indexed-object.js","webpack://Aeternity/./node_modules/core-js-pure/internals/to-integer-or-infinity.js","webpack://Aeternity/./node_modules/core-js-pure/internals/to-length.js","webpack://Aeternity/./node_modules/core-js-pure/internals/to-object.js","webpack://Aeternity/./node_modules/core-js-pure/internals/to-primitive.js","webpack://Aeternity/./node_modules/core-js-pure/internals/to-property-key.js","webpack://Aeternity/./node_modules/core-js-pure/internals/to-string-tag-support.js","webpack://Aeternity/./node_modules/core-js-pure/internals/to-string.js","webpack://Aeternity/./node_modules/core-js-pure/internals/try-to-string.js","webpack://Aeternity/./node_modules/core-js-pure/internals/uid.js","webpack://Aeternity/./node_modules/core-js-pure/internals/use-symbol-as-uid.js","webpack://Aeternity/./node_modules/core-js-pure/internals/v8-prototype-define-bug.js","webpack://Aeternity/./node_modules/core-js-pure/internals/weak-map-basic-detection.js","webpack://Aeternity/./node_modules/core-js-pure/internals/well-known-symbol-define.js","webpack://Aeternity/./node_modules/core-js-pure/internals/well-known-symbol-wrapped.js","webpack://Aeternity/./node_modules/core-js-pure/internals/well-known-symbol.js","webpack://Aeternity/./node_modules/core-js-pure/modules/es.array.concat.js","webpack://Aeternity/./node_modules/core-js-pure/modules/es.array.iterator.js","webpack://Aeternity/./node_modules/core-js-pure/modules/es.json.stringify.js","webpack://Aeternity/./node_modules/core-js-pure/modules/es.json.to-string-tag.js","webpack://Aeternity/./node_modules/core-js-pure/modules/es.object.define-property.js","webpack://Aeternity/./node_modules/core-js-pure/modules/es.object.get-own-property-symbols.js","webpack://Aeternity/./node_modules/core-js-pure/modules/es.string.iterator.js","webpack://Aeternity/./node_modules/core-js-pure/modules/es.symbol.async-iterator.js","webpack://Aeternity/./node_modules/core-js-pure/modules/es.symbol.constructor.js","webpack://Aeternity/./node_modules/core-js-pure/modules/es.symbol.for.js","webpack://Aeternity/./node_modules/core-js-pure/modules/es.symbol.has-instance.js","webpack://Aeternity/./node_modules/core-js-pure/modules/es.symbol.is-concat-spreadable.js","webpack://Aeternity/./node_modules/core-js-pure/modules/es.symbol.iterator.js","webpack://Aeternity/./node_modules/core-js-pure/modules/es.symbol.js","webpack://Aeternity/./node_modules/core-js-pure/modules/es.symbol.key-for.js","webpack://Aeternity/./node_modules/core-js-pure/modules/es.symbol.match-all.js","webpack://Aeternity/./node_modules/core-js-pure/modules/es.symbol.match.js","webpack://Aeternity/./node_modules/core-js-pure/modules/es.symbol.replace.js","webpack://Aeternity/./node_modules/core-js-pure/modules/es.symbol.search.js","webpack://Aeternity/./node_modules/core-js-pure/modules/es.symbol.species.js","webpack://Aeternity/./node_modules/core-js-pure/modules/es.symbol.split.js","webpack://Aeternity/./node_modules/core-js-pure/modules/es.symbol.to-primitive.js","webpack://Aeternity/./node_modules/core-js-pure/modules/es.symbol.to-string-tag.js","webpack://Aeternity/./node_modules/core-js-pure/modules/es.symbol.unscopables.js","webpack://Aeternity/./node_modules/core-js-pure/modules/esnext.function.metadata.js","webpack://Aeternity/./node_modules/core-js-pure/modules/esnext.symbol.async-dispose.js","webpack://Aeternity/./node_modules/core-js-pure/modules/esnext.symbol.dispose.js","webpack://Aeternity/./node_modules/core-js-pure/modules/esnext.symbol.is-registered-symbol.js","webpack://Aeternity/./node_modules/core-js-pure/modules/esnext.symbol.is-registered.js","webpack://Aeternity/./node_modules/core-js-pure/modules/esnext.symbol.is-well-known-symbol.js","webpack://Aeternity/./node_modules/core-js-pure/modules/esnext.symbol.is-well-known.js","webpack://Aeternity/./node_modules/core-js-pure/modules/esnext.symbol.matcher.js","webpack://Aeternity/./node_modules/core-js-pure/modules/esnext.symbol.metadata-key.js","webpack://Aeternity/./node_modules/core-js-pure/modules/esnext.symbol.metadata.js","webpack://Aeternity/./node_modules/core-js-pure/modules/esnext.symbol.observable.js","webpack://Aeternity/./node_modules/core-js-pure/modules/esnext.symbol.pattern-match.js","webpack://Aeternity/./node_modules/core-js-pure/modules/esnext.symbol.replace-all.js","webpack://Aeternity/./node_modules/core-js-pure/modules/web.dom-collections.iterator.js","webpack://Aeternity/./node_modules/core-js-pure/stable/object/define-property.js","webpack://Aeternity/./node_modules/core-js-pure/stable/symbol/index.js","webpack://Aeternity/./node_modules/core-js-pure/stable/symbol/iterator.js","webpack://Aeternity/./node_modules/core-js-pure/stable/symbol/to-primitive.js","webpack://Aeternity/./node_modules/inherits/inherits_browser.js","webpack://Aeternity/./node_modules/safe-buffer/index.js","webpack://Aeternity/./node_modules/sha.js/hash.js","webpack://Aeternity/./node_modules/sha.js/sha256.js","webpack://Aeternity/external umd \"@aeternity/aepp-calldata\"","webpack://Aeternity/external umd \"@aeternity/argon2\"","webpack://Aeternity/external umd \"@aeternity/uuid\"","webpack://Aeternity/external umd \"@azure/core-client\"","webpack://Aeternity/external umd \"@azure/core-rest-pipeline\"","webpack://Aeternity/external umd \"aes-js\"","webpack://Aeternity/external umd \"bignumber.js\"","webpack://Aeternity/external umd \"bip32-path\"","webpack://Aeternity/external umd \"bs58\"","webpack://Aeternity/external umd \"buffer\"","webpack://Aeternity/external umd \"canonicalize\"","webpack://Aeternity/external umd \"events\"","webpack://Aeternity/external umd \"isomorphic-ws\"","webpack://Aeternity/external umd \"json-bigint\"","webpack://Aeternity/external umd \"rlp\"","webpack://Aeternity/external umd \"tweetnacl\"","webpack://Aeternity/external umd \"tweetnacl-auth\"","webpack://Aeternity/external umd \"varuint-bitcoin\"","webpack://Aeternity/external umd \"websocket\"","webpack://Aeternity/webpack/bootstrap","webpack://Aeternity/webpack/runtime/compat get default export","webpack://Aeternity/webpack/runtime/define property getters","webpack://Aeternity/webpack/runtime/global","webpack://Aeternity/webpack/runtime/hasOwnProperty shorthand","webpack://Aeternity/webpack/runtime/make namespace object","webpack://Aeternity/./src/utils/bignumber.ts","webpack://Aeternity/./src/utils/errors.ts","webpack://Aeternity/./src/utils/amount-formatter.ts","webpack://Aeternity/./src/utils/other.ts","webpack://Aeternity/./src/utils/encoder-types.ts","webpack://Aeternity/./src/utils/encoder.ts","webpack://Aeternity/./src/utils/crypto.ts","webpack://Aeternity/./src/tx/builder/constants.ts","webpack://Aeternity/./src/tx/builder/field-types/ct-version.ts","webpack://Aeternity/./src/tx/builder/field-types/entry.ts","webpack://Aeternity/./src/tx/builder/field-types/array.ts","webpack://Aeternity/./src/tx/builder/field-types/map.ts","webpack://Aeternity/./src/utils/bytes.ts","webpack://Aeternity/./src/tx/builder/helpers.ts","webpack://Aeternity/./src/tx/builder/field-types/u-int.ts","webpack://Aeternity/./src/tx/builder/field-types/short-u-int.ts","webpack://Aeternity/./src/tx/builder/field-types/short-u-int-const.ts","webpack://Aeternity/./src/tx/builder/field-types/address.ts","webpack://Aeternity/./src/tx/builder/field-types/encoded.ts","webpack://Aeternity/./src/tx/builder/field-types/raw.ts","webpack://Aeternity/./src/tx/builder/field-types/coin-amount.ts","webpack://Aeternity/./src/tx/builder/field-types/fee.ts","webpack://Aeternity/./src/tx/builder/field-types/ttl.ts","webpack://Aeternity/./src/tx/builder/field-types/nonce.ts","webpack://Aeternity/./src/tx/builder/field-types/pointers.ts","webpack://Aeternity/./src/tx/builder/field-types/field.ts","webpack://Aeternity/./src/tx/builder/field-types/name.ts","webpack://Aeternity/./src/tx/builder/field-types/name-fee.ts","webpack://Aeternity/./src/tx/builder/field-types/name-id.ts","webpack://Aeternity/./src/tx/builder/field-types/boolean.ts","webpack://Aeternity/./src/tx/builder/field-types/deposit.ts","webpack://Aeternity/./src/tx/builder/field-types/gas-limit.ts","webpack://Aeternity/./src/tx/builder/field-types/gas-price.ts","webpack://Aeternity/./src/tx/builder/field-types/abi-version.ts","webpack://Aeternity/./src/tx/builder/field-types/enumeration.ts","webpack://Aeternity/./src/tx/builder/field-types/string.ts","webpack://Aeternity/./node_modules/@babel/runtime-corejs3/helpers/esm/classExtractFieldDescriptor.js","webpack://Aeternity/./node_modules/@babel/runtime-corejs3/helpers/esm/classPrivateFieldSet.js","webpack://Aeternity/./node_modules/@babel/runtime-corejs3/helpers/esm/classApplyDescriptorSet.js","webpack://Aeternity/./node_modules/@babel/runtime-corejs3/helpers/esm/classPrivateFieldGet.js","webpack://Aeternity/./node_modules/@babel/runtime-corejs3/helpers/esm/classApplyDescriptorGet.js","webpack://Aeternity/./src/tx/builder/field-types/mptree.ts","webpack://Aeternity/./src/tx/builder/field-types/wrapped.ts","webpack://Aeternity/./src/tx/builder/schema.ts","webpack://Aeternity/./src/tx/builder/index.ts","webpack://Aeternity/./src/utils/semver-satisfies.ts","webpack://Aeternity/./src/utils/autorest.ts","webpack://Aeternity/./src/apis/node/models/mappers.ts","webpack://Aeternity/./src/apis/node/models/parameters.ts","webpack://Aeternity/./src/apis/node/node.ts","webpack://Aeternity/./src/Node.ts","webpack://Aeternity/./src/tx/transaction-signer.ts","webpack://Aeternity/./src/account/Base.ts","webpack://Aeternity/./src/utils/typed-data.ts","webpack://Aeternity/./src/account/Memory.ts","webpack://Aeternity/./src/tx/execution-cost.ts","webpack://Aeternity/./src/tx/validator.ts","webpack://Aeternity/./src/chain.ts","webpack://Aeternity/./src/utils/keystore.ts","webpack://Aeternity/./src/utils/hd-wallet.ts","webpack://Aeternity/./src/aens.ts","webpack://Aeternity/./src/contract/Contract.ts","webpack://Aeternity/./src/oracle.ts","webpack://Aeternity/./src/spend.ts","webpack://Aeternity/./src/contract/ga.ts","webpack://Aeternity/./node_modules/@babel/runtime-corejs3/helpers/esm/typeof.js","webpack://Aeternity/./node_modules/@babel/runtime-corejs3/helpers/esm/defineProperty.js","webpack://Aeternity/./node_modules/@babel/runtime-corejs3/helpers/esm/toPropertyKey.js","webpack://Aeternity/./node_modules/@babel/runtime-corejs3/helpers/esm/toPrimitive.js","webpack://Aeternity/./src/AeSdkMethods.ts","webpack://Aeternity/./src/contract/delegation-signature.ts","webpack://Aeternity/./src/AeSdkBase.ts","webpack://Aeternity/./src/AeSdk.ts","webpack://Aeternity/./src/aepp-wallet-communication/schema.ts","webpack://Aeternity/./src/account/Rpc.ts","webpack://Aeternity/./src/aepp-wallet-communication/rpc/RpcClient.ts","webpack://Aeternity/./src/AeSdkAepp.ts","webpack://Aeternity/./src/aepp-wallet-communication/rpc/types.ts","webpack://Aeternity/./src/utils/json-big.ts","webpack://Aeternity/./src/AeSdkWallet.ts","webpack://Aeternity/./src/account/Generalized.ts","webpack://Aeternity/./src/account/Ledger.ts","webpack://Aeternity/./src/account/LedgerFactory.ts","webpack://Aeternity/./src/contract/compiler/Base.ts","webpack://Aeternity/./src/apis/compiler/models/mappers.ts","webpack://Aeternity/./src/apis/compiler/models/parameters.ts","webpack://Aeternity/./src/apis/compiler/compiler.ts","webpack://Aeternity/./src/contract/compiler/Http.ts","webpack://Aeternity/./src/utils/string.ts","webpack://Aeternity/./src/channel/internal.ts","webpack://Aeternity/./src/channel/handlers.ts","webpack://Aeternity/./src/channel/Base.ts","webpack://Aeternity/./src/channel/Spend.ts","webpack://Aeternity/./src/channel/Contract.ts","webpack://Aeternity/./src/MiddlewareSubscriber.ts","webpack://Aeternity/./src/apis/middleware/models/parameters.ts","webpack://Aeternity/./src/apis/middleware/models/mappers.ts","webpack://Aeternity/./src/apis/middleware/middleware.ts","webpack://Aeternity/./src/Middleware.ts","webpack://Aeternity/./src/aepp-wallet-communication/connection-proxy.ts","webpack://Aeternity/./src/aepp-wallet-communication/connection/Browser.ts","webpack://Aeternity/./src/aepp-wallet-communication/connection/BrowserWindowMessage.ts","webpack://Aeternity/./src/aepp-wallet-communication/wallet-detector.ts","webpack://Aeternity/./src/aepp-wallet-communication/connection/BrowserRuntime.ts","webpack://Aeternity/./src/deprecated.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"@azure/core-rest-pipeline\"), require(\"buffer\"), require(\"rlp\"), require(\"bs58\"), require(\"bignumber.js\"), require(\"tweetnacl\"), require(\"varuint-bitcoin\"), require(\"@azure/core-client\"), require(\"@aeternity/aepp-calldata\"), require(\"canonicalize\"), require(\"@aeternity/uuid\"), require(\"@aeternity/argon2\"), require(\"tweetnacl-auth\"), require(\"bip32-path\"), require(\"aes-js\"), require(\"json-bigint\"), require(\"events\"), require(\"websocket\"), require(\"isomorphic-ws\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"@azure/core-rest-pipeline\", \"buffer\", \"rlp\", \"bs58\", \"bignumber.js\", \"tweetnacl\", \"varuint-bitcoin\", \"@azure/core-client\", \"@aeternity/aepp-calldata\", \"canonicalize\", \"@aeternity/uuid\", \"@aeternity/argon2\", \"tweetnacl-auth\", \"bip32-path\", \"aes-js\", \"json-bigint\", \"events\", \"websocket\", \"isomorphic-ws\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Aeternity\"] = factory(require(\"@azure/core-rest-pipeline\"), require(\"buffer\"), require(\"rlp\"), require(\"bs58\"), require(\"bignumber.js\"), require(\"tweetnacl\"), require(\"varuint-bitcoin\"), require(\"@azure/core-client\"), require(\"@aeternity/aepp-calldata\"), require(\"canonicalize\"), require(\"@aeternity/uuid\"), require(\"@aeternity/argon2\"), require(\"tweetnacl-auth\"), require(\"bip32-path\"), require(\"aes-js\"), require(\"json-bigint\"), require(\"events\"), require(\"websocket\"), require(\"isomorphic-ws\"));\n\telse\n\t\troot[\"Aeternity\"] = factory(root[\"@azure/core-rest-pipeline\"], root[\"buffer\"], root[\"rlp\"], root[\"bs58\"], root[\"bignumber.js\"], root[\"tweetnacl\"], root[\"varuint-bitcoin\"], root[\"@azure/core-client\"], root[\"@aeternity/aepp-calldata\"], root[\"canonicalize\"], root[\"@aeternity/uuid\"], root[\"@aeternity/argon2\"], root[\"tweetnacl-auth\"], root[\"bip32-path\"], root[\"aes-js\"], root[\"json-bigint\"], root[\"events\"], root[\"websocket\"], root[\"isomorphic-ws\"]);\n})(self, function(__WEBPACK_EXTERNAL_MODULE__5039__, __WEBPACK_EXTERNAL_MODULE__9408__, __WEBPACK_EXTERNAL_MODULE__3485__, __WEBPACK_EXTERNAL_MODULE__3783__, __WEBPACK_EXTERNAL_MODULE__5192__, __WEBPACK_EXTERNAL_MODULE__79__, __WEBPACK_EXTERNAL_MODULE__7480__, __WEBPACK_EXTERNAL_MODULE__4711__, __WEBPACK_EXTERNAL_MODULE__7946__, __WEBPACK_EXTERNAL_MODULE__6667__, __WEBPACK_EXTERNAL_MODULE__3983__, __WEBPACK_EXTERNAL_MODULE__7417__, __WEBPACK_EXTERNAL_MODULE__9882__, __WEBPACK_EXTERNAL_MODULE__1986__, __WEBPACK_EXTERNAL_MODULE__8236__, __WEBPACK_EXTERNAL_MODULE__2716__, __WEBPACK_EXTERNAL_MODULE__3735__, __WEBPACK_EXTERNAL_MODULE__8079__, __WEBPACK_EXTERNAL_MODULE__3153__) {\nreturn ","// Blake2B in pure Javascript\n// Adapted from the reference implementation in RFC7693\n// Ported to Javascript by DC - https://github.com/dcposch\n\nconst util = require('./util')\n\n// 64-bit unsigned addition\n// Sets v[a,a+1] += v[b,b+1]\n// v should be a Uint32Array\nfunction ADD64AA (v, a, b) {\n  const o0 = v[a] + v[b]\n  let o1 = v[a + 1] + v[b + 1]\n  if (o0 >= 0x100000000) {\n    o1++\n  }\n  v[a] = o0\n  v[a + 1] = o1\n}\n\n// 64-bit unsigned addition\n// Sets v[a,a+1] += b\n// b0 is the low 32 bits of b, b1 represents the high 32 bits\nfunction ADD64AC (v, a, b0, b1) {\n  let o0 = v[a] + b0\n  if (b0 < 0) {\n    o0 += 0x100000000\n  }\n  let o1 = v[a + 1] + b1\n  if (o0 >= 0x100000000) {\n    o1++\n  }\n  v[a] = o0\n  v[a + 1] = o1\n}\n\n// Little-endian byte access\nfunction B2B_GET32 (arr, i) {\n  return arr[i] ^ (arr[i + 1] << 8) ^ (arr[i + 2] << 16) ^ (arr[i + 3] << 24)\n}\n\n// G Mixing function\n// The ROTRs are inlined for speed\nfunction B2B_G (a, b, c, d, ix, iy) {\n  const x0 = m[ix]\n  const x1 = m[ix + 1]\n  const y0 = m[iy]\n  const y1 = m[iy + 1]\n\n  ADD64AA(v, a, b) // v[a,a+1] += v[b,b+1] ... in JS we must store a uint64 as two uint32s\n  ADD64AC(v, a, x0, x1) // v[a, a+1] += x ... x0 is the low 32 bits of x, x1 is the high 32 bits\n\n  // v[d,d+1] = (v[d,d+1] xor v[a,a+1]) rotated to the right by 32 bits\n  let xor0 = v[d] ^ v[a]\n  let xor1 = v[d + 1] ^ v[a + 1]\n  v[d] = xor1\n  v[d + 1] = xor0\n\n  ADD64AA(v, c, d)\n\n  // v[b,b+1] = (v[b,b+1] xor v[c,c+1]) rotated right by 24 bits\n  xor0 = v[b] ^ v[c]\n  xor1 = v[b + 1] ^ v[c + 1]\n  v[b] = (xor0 >>> 24) ^ (xor1 << 8)\n  v[b + 1] = (xor1 >>> 24) ^ (xor0 << 8)\n\n  ADD64AA(v, a, b)\n  ADD64AC(v, a, y0, y1)\n\n  // v[d,d+1] = (v[d,d+1] xor v[a,a+1]) rotated right by 16 bits\n  xor0 = v[d] ^ v[a]\n  xor1 = v[d + 1] ^ v[a + 1]\n  v[d] = (xor0 >>> 16) ^ (xor1 << 16)\n  v[d + 1] = (xor1 >>> 16) ^ (xor0 << 16)\n\n  ADD64AA(v, c, d)\n\n  // v[b,b+1] = (v[b,b+1] xor v[c,c+1]) rotated right by 63 bits\n  xor0 = v[b] ^ v[c]\n  xor1 = v[b + 1] ^ v[c + 1]\n  v[b] = (xor1 >>> 31) ^ (xor0 << 1)\n  v[b + 1] = (xor0 >>> 31) ^ (xor1 << 1)\n}\n\n// Initialization Vector\nconst BLAKE2B_IV32 = new Uint32Array([\n  0xf3bcc908, 0x6a09e667, 0x84caa73b, 0xbb67ae85, 0xfe94f82b, 0x3c6ef372,\n  0x5f1d36f1, 0xa54ff53a, 0xade682d1, 0x510e527f, 0x2b3e6c1f, 0x9b05688c,\n  0xfb41bd6b, 0x1f83d9ab, 0x137e2179, 0x5be0cd19\n])\n\nconst SIGMA8 = [\n  0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 14, 10, 4, 8, 9, 15, 13,\n  6, 1, 12, 0, 2, 11, 7, 5, 3, 11, 8, 12, 0, 5, 2, 15, 13, 10, 14, 3, 6, 7, 1,\n  9, 4, 7, 9, 3, 1, 13, 12, 11, 14, 2, 6, 5, 10, 4, 0, 15, 8, 9, 0, 5, 7, 2, 4,\n  10, 15, 14, 1, 11, 12, 6, 8, 3, 13, 2, 12, 6, 10, 0, 11, 8, 3, 4, 13, 7, 5,\n  15, 14, 1, 9, 12, 5, 1, 15, 14, 13, 4, 10, 0, 7, 6, 3, 9, 2, 8, 11, 13, 11, 7,\n  14, 12, 1, 3, 9, 5, 0, 15, 4, 8, 6, 2, 10, 6, 15, 14, 9, 11, 3, 0, 8, 12, 2,\n  13, 7, 1, 4, 10, 5, 10, 2, 8, 4, 7, 6, 1, 5, 15, 11, 9, 14, 3, 12, 13, 0, 0,\n  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 14, 10, 4, 8, 9, 15, 13, 6,\n  1, 12, 0, 2, 11, 7, 5, 3\n]\n\n// These are offsets into a uint64 buffer.\n// Multiply them all by 2 to make them offsets into a uint32 buffer,\n// because this is Javascript and we don't have uint64s\nconst SIGMA82 = new Uint8Array(\n  SIGMA8.map(function (x) {\n    return x * 2\n  })\n)\n\n// Compression function. 'last' flag indicates last block.\n// Note we're representing 16 uint64s as 32 uint32s\nconst v = new Uint32Array(32)\nconst m = new Uint32Array(32)\nfunction blake2bCompress (ctx, last) {\n  let i = 0\n\n  // init work variables\n  for (i = 0; i < 16; i++) {\n    v[i] = ctx.h[i]\n    v[i + 16] = BLAKE2B_IV32[i]\n  }\n\n  // low 64 bits of offset\n  v[24] = v[24] ^ ctx.t\n  v[25] = v[25] ^ (ctx.t / 0x100000000)\n  // high 64 bits not supported, offset may not be higher than 2**53-1\n\n  // last block flag set ?\n  if (last) {\n    v[28] = ~v[28]\n    v[29] = ~v[29]\n  }\n\n  // get little-endian words\n  for (i = 0; i < 32; i++) {\n    m[i] = B2B_GET32(ctx.b, 4 * i)\n  }\n\n  // twelve rounds of mixing\n  // uncomment the DebugPrint calls to log the computation\n  // and match the RFC sample documentation\n  // util.debugPrint('          m[16]', m, 64)\n  for (i = 0; i < 12; i++) {\n    // util.debugPrint('   (i=' + (i < 10 ? ' ' : '') + i + ') v[16]', v, 64)\n    B2B_G(0, 8, 16, 24, SIGMA82[i * 16 + 0], SIGMA82[i * 16 + 1])\n    B2B_G(2, 10, 18, 26, SIGMA82[i * 16 + 2], SIGMA82[i * 16 + 3])\n    B2B_G(4, 12, 20, 28, SIGMA82[i * 16 + 4], SIGMA82[i * 16 + 5])\n    B2B_G(6, 14, 22, 30, SIGMA82[i * 16 + 6], SIGMA82[i * 16 + 7])\n    B2B_G(0, 10, 20, 30, SIGMA82[i * 16 + 8], SIGMA82[i * 16 + 9])\n    B2B_G(2, 12, 22, 24, SIGMA82[i * 16 + 10], SIGMA82[i * 16 + 11])\n    B2B_G(4, 14, 16, 26, SIGMA82[i * 16 + 12], SIGMA82[i * 16 + 13])\n    B2B_G(6, 8, 18, 28, SIGMA82[i * 16 + 14], SIGMA82[i * 16 + 15])\n  }\n  // util.debugPrint('   (i=12) v[16]', v, 64)\n\n  for (i = 0; i < 16; i++) {\n    ctx.h[i] = ctx.h[i] ^ v[i] ^ v[i + 16]\n  }\n  // util.debugPrint('h[8]', ctx.h, 64)\n}\n\n// reusable parameterBlock\nconst parameterBlock = new Uint8Array([\n  0,\n  0,\n  0,\n  0, //  0: outlen, keylen, fanout, depth\n  0,\n  0,\n  0,\n  0, //  4: leaf length, sequential mode\n  0,\n  0,\n  0,\n  0, //  8: node offset\n  0,\n  0,\n  0,\n  0, // 12: node offset\n  0,\n  0,\n  0,\n  0, // 16: node depth, inner length, rfu\n  0,\n  0,\n  0,\n  0, // 20: rfu\n  0,\n  0,\n  0,\n  0, // 24: rfu\n  0,\n  0,\n  0,\n  0, // 28: rfu\n  0,\n  0,\n  0,\n  0, // 32: salt\n  0,\n  0,\n  0,\n  0, // 36: salt\n  0,\n  0,\n  0,\n  0, // 40: salt\n  0,\n  0,\n  0,\n  0, // 44: salt\n  0,\n  0,\n  0,\n  0, // 48: personal\n  0,\n  0,\n  0,\n  0, // 52: personal\n  0,\n  0,\n  0,\n  0, // 56: personal\n  0,\n  0,\n  0,\n  0 // 60: personal\n])\n\n// Creates a BLAKE2b hashing context\n// Requires an output length between 1 and 64 bytes\n// Takes an optional Uint8Array key\n// Takes an optinal Uint8Array salt\n// Takes an optinal Uint8Array personal\nfunction blake2bInit (outlen, key, salt, personal) {\n  if (outlen === 0 || outlen > 64) {\n    throw new Error('Illegal output length, expected 0 < length <= 64')\n  }\n  if (key && key.length > 64) {\n    throw new Error('Illegal key, expected Uint8Array with 0 < length <= 64')\n  }\n  if (salt && salt.length !== 16) {\n    throw new Error('Illegal salt, expected Uint8Array with length is 16')\n  }\n  if (personal && personal.length !== 16) {\n    throw new Error('Illegal personal, expected Uint8Array with length is 16')\n  }\n\n  // state, 'param block'\n  const ctx = {\n    b: new Uint8Array(128),\n    h: new Uint32Array(16),\n    t: 0, // input count\n    c: 0, // pointer within buffer\n    outlen: outlen // output length in bytes\n  }\n\n  // initialize parameterBlock before usage\n  parameterBlock.fill(0)\n  parameterBlock[0] = outlen\n  if (key) parameterBlock[1] = key.length\n  parameterBlock[2] = 1 // fanout\n  parameterBlock[3] = 1 // depth\n  if (salt) parameterBlock.set(salt, 32)\n  if (personal) parameterBlock.set(personal, 48)\n\n  // initialize hash state\n  for (let i = 0; i < 16; i++) {\n    ctx.h[i] = BLAKE2B_IV32[i] ^ B2B_GET32(parameterBlock, i * 4)\n  }\n\n  // key the hash, if applicable\n  if (key) {\n    blake2bUpdate(ctx, key)\n    // at the end\n    ctx.c = 128\n  }\n\n  return ctx\n}\n\n// Updates a BLAKE2b streaming hash\n// Requires hash context and Uint8Array (byte array)\nfunction blake2bUpdate (ctx, input) {\n  for (let i = 0; i < input.length; i++) {\n    if (ctx.c === 128) {\n      // buffer full ?\n      ctx.t += ctx.c // add counters\n      blake2bCompress(ctx, false) // compress (not last)\n      ctx.c = 0 // counter to zero\n    }\n    ctx.b[ctx.c++] = input[i]\n  }\n}\n\n// Completes a BLAKE2b streaming hash\n// Returns a Uint8Array containing the message digest\nfunction blake2bFinal (ctx) {\n  ctx.t += ctx.c // mark last block offset\n\n  while (ctx.c < 128) {\n    // fill up with zeros\n    ctx.b[ctx.c++] = 0\n  }\n  blake2bCompress(ctx, true) // final block flag = 1\n\n  // little endian convert and store\n  const out = new Uint8Array(ctx.outlen)\n  for (let i = 0; i < ctx.outlen; i++) {\n    out[i] = ctx.h[i >> 2] >> (8 * (i & 3))\n  }\n  return out\n}\n\n// Computes the BLAKE2B hash of a string or byte array, and returns a Uint8Array\n//\n// Returns a n-byte Uint8Array\n//\n// Parameters:\n// - input - the input bytes, as a string, Buffer or Uint8Array\n// - key - optional key Uint8Array, up to 64 bytes\n// - outlen - optional output length in bytes, default 64\n// - salt - optional salt bytes, string, Buffer or Uint8Array\n// - personal - optional personal bytes, string, Buffer or Uint8Array\nfunction blake2b (input, key, outlen, salt, personal) {\n  // preprocess inputs\n  outlen = outlen || 64\n  input = util.normalizeInput(input)\n  if (salt) {\n    salt = util.normalizeInput(salt)\n  }\n  if (personal) {\n    personal = util.normalizeInput(personal)\n  }\n\n  // do the math\n  const ctx = blake2bInit(outlen, key, salt, personal)\n  blake2bUpdate(ctx, input)\n  return blake2bFinal(ctx)\n}\n\n// Computes the BLAKE2B hash of a string or byte array\n//\n// Returns an n-byte hash in hex, all lowercase\n//\n// Parameters:\n// - input - the input bytes, as a string, Buffer, or Uint8Array\n// - key - optional key Uint8Array, up to 64 bytes\n// - outlen - optional output length in bytes, default 64\n// - salt - optional salt bytes, string, Buffer or Uint8Array\n// - personal - optional personal bytes, string, Buffer or Uint8Array\nfunction blake2bHex (input, key, outlen, salt, personal) {\n  const output = blake2b(input, key, outlen, salt, personal)\n  return util.toHex(output)\n}\n\nmodule.exports = {\n  blake2b: blake2b,\n  blake2bHex: blake2bHex,\n  blake2bInit: blake2bInit,\n  blake2bUpdate: blake2bUpdate,\n  blake2bFinal: blake2bFinal\n}\n","const ERROR_MSG_INPUT = 'Input must be an string, Buffer or Uint8Array'\n\n// For convenience, let people hash a string, not just a Uint8Array\nfunction normalizeInput (input) {\n  let ret\n  if (input instanceof Uint8Array) {\n    ret = input\n  } else if (typeof input === 'string') {\n    const encoder = new TextEncoder()\n    ret = encoder.encode(input)\n  } else {\n    throw new Error(ERROR_MSG_INPUT)\n  }\n  return ret\n}\n\n// Converts a Uint8Array to a hexadecimal string\n// For example, toHex([255, 0, 255]) returns \"ff00ff\"\nfunction toHex (bytes) {\n  return Array.prototype.map\n    .call(bytes, function (n) {\n      return (n < 16 ? '0' : '') + n.toString(16)\n    })\n    .join('')\n}\n\n// Converts any value in [0...2^32-1] to an 8-character hex string\nfunction uint32ToHex (val) {\n  return (0x100000000 + val).toString(16).substring(1)\n}\n\n// For debugging: prints out hash state in the same format as the RFC\n// sample computation exactly, so that you can diff\nfunction debugPrint (label, arr, size) {\n  let msg = '\\n' + label + ' = '\n  for (let i = 0; i < arr.length; i += 2) {\n    if (size === 32) {\n      msg += uint32ToHex(arr[i]).toUpperCase()\n      msg += ' '\n      msg += uint32ToHex(arr[i + 1]).toUpperCase()\n    } else if (size === 64) {\n      msg += uint32ToHex(arr[i + 1]).toUpperCase()\n      msg += uint32ToHex(arr[i]).toUpperCase()\n    } else throw new Error('Invalid size ' + size)\n    if (i % 6 === 4) {\n      msg += '\\n' + new Array(label.length + 4).join(' ')\n    } else if (i < arr.length - 2) {\n      msg += ' '\n    }\n  }\n  console.log(msg)\n}\n\n// For performance testing: generates N bytes of input, hashes M times\n// Measures and prints MB/second hash performance each time\nfunction testSpeed (hashFn, N, M) {\n  let startMs = new Date().getTime()\n\n  const input = new Uint8Array(N)\n  for (let i = 0; i < N; i++) {\n    input[i] = i % 256\n  }\n  const genMs = new Date().getTime()\n  console.log('Generated random input in ' + (genMs - startMs) + 'ms')\n  startMs = genMs\n\n  for (let i = 0; i < M; i++) {\n    const hashHex = hashFn(input)\n    const hashMs = new Date().getTime()\n    const ms = hashMs - startMs\n    startMs = hashMs\n    console.log('Hashed in ' + ms + 'ms: ' + hashHex.substring(0, 20) + '...')\n    console.log(\n      Math.round((N / (1 << 20) / (ms / 1000)) * 100) / 100 + ' MB PER SECOND'\n    )\n  }\n}\n\nmodule.exports = {\n  normalizeInput: normalizeInput,\n  toHex: toHex,\n  debugPrint: debugPrint,\n  testSpeed: testSpeed\n}\n","'use strict';\nvar parent = require('../../stable/object/define-property');\n\nmodule.exports = parent;\n","'use strict';\nvar parent = require('../../stable/symbol');\n\nrequire('../../modules/esnext.function.metadata');\nrequire('../../modules/esnext.symbol.async-dispose');\nrequire('../../modules/esnext.symbol.dispose');\nrequire('../../modules/esnext.symbol.metadata');\n\nmodule.exports = parent;\n","'use strict';\nvar parent = require('../../stable/symbol/iterator');\n\nmodule.exports = parent;\n","'use strict';\nvar parent = require('../../stable/symbol/to-primitive');\n\nmodule.exports = parent;\n","'use strict';\nrequire('../../modules/es.object.define-property');\nvar path = require('../../internals/path');\n\nvar Object = path.Object;\n\nvar defineProperty = module.exports = function defineProperty(it, key, desc) {\n  return Object.defineProperty(it, key, desc);\n};\n\nif (Object.defineProperty.sham) defineProperty.sham = true;\n","'use strict';\nrequire('../../modules/es.array.concat');\nrequire('../../modules/es.object.to-string');\nrequire('../../modules/es.symbol');\nrequire('../../modules/es.symbol.async-iterator');\nrequire('../../modules/es.symbol.description');\nrequire('../../modules/es.symbol.has-instance');\nrequire('../../modules/es.symbol.is-concat-spreadable');\nrequire('../../modules/es.symbol.iterator');\nrequire('../../modules/es.symbol.match');\nrequire('../../modules/es.symbol.match-all');\nrequire('../../modules/es.symbol.replace');\nrequire('../../modules/es.symbol.search');\nrequire('../../modules/es.symbol.species');\nrequire('../../modules/es.symbol.split');\nrequire('../../modules/es.symbol.to-primitive');\nrequire('../../modules/es.symbol.to-string-tag');\nrequire('../../modules/es.symbol.unscopables');\nrequire('../../modules/es.json.to-string-tag');\nrequire('../../modules/es.math.to-string-tag');\nrequire('../../modules/es.reflect.to-string-tag');\nvar path = require('../../internals/path');\n\nmodule.exports = path.Symbol;\n","'use strict';\nrequire('../../modules/es.array.iterator');\nrequire('../../modules/es.object.to-string');\nrequire('../../modules/es.string.iterator');\nrequire('../../modules/es.symbol.iterator');\nvar WrappedWellKnownSymbolModule = require('../../internals/well-known-symbol-wrapped');\n\nmodule.exports = WrappedWellKnownSymbolModule.f('iterator');\n","'use strict';\nrequire('../../modules/es.date.to-primitive');\nrequire('../../modules/es.symbol.to-primitive');\nvar WrappedWellKnownSymbolModule = require('../../internals/well-known-symbol-wrapped');\n\nmodule.exports = WrappedWellKnownSymbolModule.f('toPrimitive');\n","'use strict';\nvar parent = require('../../actual/object/define-property');\n\nmodule.exports = parent;\n","'use strict';\nvar parent = require('../../actual/symbol');\nrequire('../../modules/esnext.symbol.is-registered-symbol');\nrequire('../../modules/esnext.symbol.is-well-known-symbol');\nrequire('../../modules/esnext.symbol.matcher');\nrequire('../../modules/esnext.symbol.observable');\n// TODO: Remove from `core-js@4`\nrequire('../../modules/esnext.symbol.is-registered');\nrequire('../../modules/esnext.symbol.is-well-known');\nrequire('../../modules/esnext.symbol.metadata-key');\nrequire('../../modules/esnext.symbol.pattern-match');\nrequire('../../modules/esnext.symbol.replace-all');\n\nmodule.exports = parent;\n","'use strict';\nvar parent = require('../../actual/symbol/iterator');\n\nmodule.exports = parent;\n","'use strict';\nvar parent = require('../../actual/symbol/to-primitive');\n\nmodule.exports = parent;\n","'use strict';\nvar isCallable = require('../internals/is-callable');\nvar tryToString = require('../internals/try-to-string');\n\nvar $TypeError = TypeError;\n\n// `Assert: IsCallable(argument) is true`\nmodule.exports = function (argument) {\n  if (isCallable(argument)) return argument;\n  throw $TypeError(tryToString(argument) + ' is not a function');\n};\n","'use strict';\nvar isCallable = require('../internals/is-callable');\n\nvar $String = String;\nvar $TypeError = TypeError;\n\nmodule.exports = function (argument) {\n  if (typeof argument == 'object' || isCallable(argument)) return argument;\n  throw $TypeError(\"Can't set \" + $String(argument) + ' as a prototype');\n};\n","'use strict';\nmodule.exports = function () { /* empty */ };\n","'use strict';\nvar isObject = require('../internals/is-object');\n\nvar $String = String;\nvar $TypeError = TypeError;\n\n// `Assert: Type(argument) is Object`\nmodule.exports = function (argument) {\n  if (isObject(argument)) return argument;\n  throw $TypeError($String(argument) + ' is not an object');\n};\n","'use strict';\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar toAbsoluteIndex = require('../internals/to-absolute-index');\nvar lengthOfArrayLike = require('../internals/length-of-array-like');\n\n// `Array.prototype.{ indexOf, includes }` methods implementation\nvar createMethod = function (IS_INCLUDES) {\n  return function ($this, el, fromIndex) {\n    var O = toIndexedObject($this);\n    var length = lengthOfArrayLike(O);\n    var index = toAbsoluteIndex(fromIndex, length);\n    var value;\n    // Array#includes uses SameValueZero equality algorithm\n    // eslint-disable-next-line no-self-compare -- NaN check\n    if (IS_INCLUDES && el != el) while (length > index) {\n      value = O[index++];\n      // eslint-disable-next-line no-self-compare -- NaN check\n      if (value != value) return true;\n    // Array#indexOf ignores holes, Array#includes - not\n    } else for (;length > index; index++) {\n      if ((IS_INCLUDES || index in O) && O[index] === el) return IS_INCLUDES || index || 0;\n    } return !IS_INCLUDES && -1;\n  };\n};\n\nmodule.exports = {\n  // `Array.prototype.includes` method\n  // https://tc39.es/ecma262/#sec-array.prototype.includes\n  includes: createMethod(true),\n  // `Array.prototype.indexOf` method\n  // https://tc39.es/ecma262/#sec-array.prototype.indexof\n  indexOf: createMethod(false)\n};\n","'use strict';\nvar bind = require('../internals/function-bind-context');\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar IndexedObject = require('../internals/indexed-object');\nvar toObject = require('../internals/to-object');\nvar lengthOfArrayLike = require('../internals/length-of-array-like');\nvar arraySpeciesCreate = require('../internals/array-species-create');\n\nvar push = uncurryThis([].push);\n\n// `Array.prototype.{ forEach, map, filter, some, every, find, findIndex, filterReject }` methods implementation\nvar createMethod = function (TYPE) {\n  var IS_MAP = TYPE == 1;\n  var IS_FILTER = TYPE == 2;\n  var IS_SOME = TYPE == 3;\n  var IS_EVERY = TYPE == 4;\n  var IS_FIND_INDEX = TYPE == 6;\n  var IS_FILTER_REJECT = TYPE == 7;\n  var NO_HOLES = TYPE == 5 || IS_FIND_INDEX;\n  return function ($this, callbackfn, that, specificCreate) {\n    var O = toObject($this);\n    var self = IndexedObject(O);\n    var boundFunction = bind(callbackfn, that);\n    var length = lengthOfArrayLike(self);\n    var index = 0;\n    var create = specificCreate || arraySpeciesCreate;\n    var target = IS_MAP ? create($this, length) : IS_FILTER || IS_FILTER_REJECT ? create($this, 0) : undefined;\n    var value, result;\n    for (;length > index; index++) if (NO_HOLES || index in self) {\n      value = self[index];\n      result = boundFunction(value, index, O);\n      if (TYPE) {\n        if (IS_MAP) target[index] = result; // map\n        else if (result) switch (TYPE) {\n          case 3: return true;              // some\n          case 5: return value;             // find\n          case 6: return index;             // findIndex\n          case 2: push(target, value);      // filter\n        } else switch (TYPE) {\n          case 4: return false;             // every\n          case 7: push(target, value);      // filterReject\n        }\n      }\n    }\n    return IS_FIND_INDEX ? -1 : IS_SOME || IS_EVERY ? IS_EVERY : target;\n  };\n};\n\nmodule.exports = {\n  // `Array.prototype.forEach` method\n  // https://tc39.es/ecma262/#sec-array.prototype.foreach\n  forEach: createMethod(0),\n  // `Array.prototype.map` method\n  // https://tc39.es/ecma262/#sec-array.prototype.map\n  map: createMethod(1),\n  // `Array.prototype.filter` method\n  // https://tc39.es/ecma262/#sec-array.prototype.filter\n  filter: createMethod(2),\n  // `Array.prototype.some` method\n  // https://tc39.es/ecma262/#sec-array.prototype.some\n  some: createMethod(3),\n  // `Array.prototype.every` method\n  // https://tc39.es/ecma262/#sec-array.prototype.every\n  every: createMethod(4),\n  // `Array.prototype.find` method\n  // https://tc39.es/ecma262/#sec-array.prototype.find\n  find: createMethod(5),\n  // `Array.prototype.findIndex` method\n  // https://tc39.es/ecma262/#sec-array.prototype.findIndex\n  findIndex: createMethod(6),\n  // `Array.prototype.filterReject` method\n  // https://github.com/tc39/proposal-array-filtering\n  filterReject: createMethod(7)\n};\n","'use strict';\nvar fails = require('../internals/fails');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar V8_VERSION = require('../internals/engine-v8-version');\n\nvar SPECIES = wellKnownSymbol('species');\n\nmodule.exports = function (METHOD_NAME) {\n  // We can't use this feature detection in V8 since it causes\n  // deoptimization and serious performance degradation\n  // https://github.com/zloirock/core-js/issues/677\n  return V8_VERSION >= 51 || !fails(function () {\n    var array = [];\n    var constructor = array.constructor = {};\n    constructor[SPECIES] = function () {\n      return { foo: 1 };\n    };\n    return array[METHOD_NAME](Boolean).foo !== 1;\n  });\n};\n","'use strict';\nvar toAbsoluteIndex = require('../internals/to-absolute-index');\nvar lengthOfArrayLike = require('../internals/length-of-array-like');\nvar createProperty = require('../internals/create-property');\n\nvar $Array = Array;\nvar max = Math.max;\n\nmodule.exports = function (O, start, end) {\n  var length = lengthOfArrayLike(O);\n  var k = toAbsoluteIndex(start, length);\n  var fin = toAbsoluteIndex(end === undefined ? length : end, length);\n  var result = $Array(max(fin - k, 0));\n  for (var n = 0; k < fin; k++, n++) createProperty(result, n, O[k]);\n  result.length = n;\n  return result;\n};\n","'use strict';\nvar uncurryThis = require('../internals/function-uncurry-this');\n\nmodule.exports = uncurryThis([].slice);\n","'use strict';\nvar isArray = require('../internals/is-array');\nvar isConstructor = require('../internals/is-constructor');\nvar isObject = require('../internals/is-object');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar SPECIES = wellKnownSymbol('species');\nvar $Array = Array;\n\n// a part of `ArraySpeciesCreate` abstract operation\n// https://tc39.es/ecma262/#sec-arrayspeciescreate\nmodule.exports = function (originalArray) {\n  var C;\n  if (isArray(originalArray)) {\n    C = originalArray.constructor;\n    // cross-realm fallback\n    if (isConstructor(C) && (C === $Array || isArray(C.prototype))) C = undefined;\n    else if (isObject(C)) {\n      C = C[SPECIES];\n      if (C === null) C = undefined;\n    }\n  } return C === undefined ? $Array : C;\n};\n","'use strict';\nvar arraySpeciesConstructor = require('../internals/array-species-constructor');\n\n// `ArraySpeciesCreate` abstract operation\n// https://tc39.es/ecma262/#sec-arrayspeciescreate\nmodule.exports = function (originalArray, length) {\n  return new (arraySpeciesConstructor(originalArray))(length === 0 ? 0 : length);\n};\n","'use strict';\nvar uncurryThis = require('../internals/function-uncurry-this');\n\nvar toString = uncurryThis({}.toString);\nvar stringSlice = uncurryThis(''.slice);\n\nmodule.exports = function (it) {\n  return stringSlice(toString(it), 8, -1);\n};\n","'use strict';\nvar TO_STRING_TAG_SUPPORT = require('../internals/to-string-tag-support');\nvar isCallable = require('../internals/is-callable');\nvar classofRaw = require('../internals/classof-raw');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar TO_STRING_TAG = wellKnownSymbol('toStringTag');\nvar $Object = Object;\n\n// ES3 wrong here\nvar CORRECT_ARGUMENTS = classofRaw(function () { return arguments; }()) == 'Arguments';\n\n// fallback for IE11 Script Access Denied error\nvar tryGet = function (it, key) {\n  try {\n    return it[key];\n  } catch (error) { /* empty */ }\n};\n\n// getting tag from ES6+ `Object.prototype.toString`\nmodule.exports = TO_STRING_TAG_SUPPORT ? classofRaw : function (it) {\n  var O, tag, result;\n  return it === undefined ? 'Undefined' : it === null ? 'Null'\n    // @@toStringTag case\n    : typeof (tag = tryGet(O = $Object(it), TO_STRING_TAG)) == 'string' ? tag\n    // builtinTag case\n    : CORRECT_ARGUMENTS ? classofRaw(O)\n    // ES3 arguments fallback\n    : (result = classofRaw(O)) == 'Object' && isCallable(O.callee) ? 'Arguments' : result;\n};\n","'use strict';\nvar fails = require('../internals/fails');\n\nmodule.exports = !fails(function () {\n  function F() { /* empty */ }\n  F.prototype.constructor = null;\n  // eslint-disable-next-line es/no-object-getprototypeof -- required for testing\n  return Object.getPrototypeOf(new F()) !== F.prototype;\n});\n","'use strict';\n// `CreateIterResultObject` abstract operation\n// https://tc39.es/ecma262/#sec-createiterresultobject\nmodule.exports = function (value, done) {\n  return { value: value, done: done };\n};\n","'use strict';\nvar DESCRIPTORS = require('../internals/descriptors');\nvar definePropertyModule = require('../internals/object-define-property');\nvar createPropertyDescriptor = require('../internals/create-property-descriptor');\n\nmodule.exports = DESCRIPTORS ? function (object, key, value) {\n  return definePropertyModule.f(object, key, createPropertyDescriptor(1, value));\n} : function (object, key, value) {\n  object[key] = value;\n  return object;\n};\n","'use strict';\nmodule.exports = function (bitmap, value) {\n  return {\n    enumerable: !(bitmap & 1),\n    configurable: !(bitmap & 2),\n    writable: !(bitmap & 4),\n    value: value\n  };\n};\n","'use strict';\nvar toPropertyKey = require('../internals/to-property-key');\nvar definePropertyModule = require('../internals/object-define-property');\nvar createPropertyDescriptor = require('../internals/create-property-descriptor');\n\nmodule.exports = function (object, key, value) {\n  var propertyKey = toPropertyKey(key);\n  if (propertyKey in object) definePropertyModule.f(object, propertyKey, createPropertyDescriptor(0, value));\n  else object[propertyKey] = value;\n};\n","'use strict';\nvar defineProperty = require('../internals/object-define-property');\n\nmodule.exports = function (target, name, descriptor) {\n  return defineProperty.f(target, name, descriptor);\n};\n","'use strict';\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\n\nmodule.exports = function (target, key, value, options) {\n  if (options && options.enumerable) target[key] = value;\n  else createNonEnumerableProperty(target, key, value);\n  return target;\n};\n","'use strict';\nvar global = require('../internals/global');\n\n// eslint-disable-next-line es/no-object-defineproperty -- safe\nvar defineProperty = Object.defineProperty;\n\nmodule.exports = function (key, value) {\n  try {\n    defineProperty(global, key, { value: value, configurable: true, writable: true });\n  } catch (error) {\n    global[key] = value;\n  } return value;\n};\n","'use strict';\nvar fails = require('../internals/fails');\n\n// Detect IE8's incomplete defineProperty implementation\nmodule.exports = !fails(function () {\n  // eslint-disable-next-line es/no-object-defineproperty -- required for testing\n  return Object.defineProperty({}, 1, { get: function () { return 7; } })[1] != 7;\n});\n","'use strict';\nvar documentAll = typeof document == 'object' && document.all;\n\n// https://tc39.es/ecma262/#sec-IsHTMLDDA-internal-slot\n// eslint-disable-next-line unicorn/no-typeof-undefined -- required for testing\nvar IS_HTMLDDA = typeof documentAll == 'undefined' && documentAll !== undefined;\n\nmodule.exports = {\n  all: documentAll,\n  IS_HTMLDDA: IS_HTMLDDA\n};\n","'use strict';\nvar global = require('../internals/global');\nvar isObject = require('../internals/is-object');\n\nvar document = global.document;\n// typeof document.createElement is 'object' in old IE\nvar EXISTS = isObject(document) && isObject(document.createElement);\n\nmodule.exports = function (it) {\n  return EXISTS ? document.createElement(it) : {};\n};\n","'use strict';\nvar $TypeError = TypeError;\nvar MAX_SAFE_INTEGER = 0x1FFFFFFFFFFFFF; // 2 ** 53 - 1 == 9007199254740991\n\nmodule.exports = function (it) {\n  if (it > MAX_SAFE_INTEGER) throw $TypeError('Maximum allowed index exceeded');\n  return it;\n};\n","'use strict';\n// iterable DOM collections\n// flag - `iterable` interface - 'entries', 'keys', 'values', 'forEach' methods\nmodule.exports = {\n  CSSRuleList: 0,\n  CSSStyleDeclaration: 0,\n  CSSValueList: 0,\n  ClientRectList: 0,\n  DOMRectList: 0,\n  DOMStringList: 0,\n  DOMTokenList: 1,\n  DataTransferItemList: 0,\n  FileList: 0,\n  HTMLAllCollection: 0,\n  HTMLCollection: 0,\n  HTMLFormElement: 0,\n  HTMLSelectElement: 0,\n  MediaList: 0,\n  MimeTypeArray: 0,\n  NamedNodeMap: 0,\n  NodeList: 1,\n  PaintRequestList: 0,\n  Plugin: 0,\n  PluginArray: 0,\n  SVGLengthList: 0,\n  SVGNumberList: 0,\n  SVGPathSegList: 0,\n  SVGPointList: 0,\n  SVGStringList: 0,\n  SVGTransformList: 0,\n  SourceBufferList: 0,\n  StyleSheetList: 0,\n  TextTrackCueList: 0,\n  TextTrackList: 0,\n  TouchList: 0\n};\n","'use strict';\nmodule.exports = typeof navigator != 'undefined' && String(navigator.userAgent) || '';\n","'use strict';\nvar global = require('../internals/global');\nvar userAgent = require('../internals/engine-user-agent');\n\nvar process = global.process;\nvar Deno = global.Deno;\nvar versions = process && process.versions || Deno && Deno.version;\nvar v8 = versions && versions.v8;\nvar match, version;\n\nif (v8) {\n  match = v8.split('.');\n  // in old Chrome, versions of V8 isn't V8 = Chrome / 10\n  // but their correct versions are not interesting for us\n  version = match[0] > 0 && match[0] < 4 ? 1 : +(match[0] + match[1]);\n}\n\n// BrowserFS NodeJS `process` polyfill incorrectly set `.v8` to `0.0`\n// so check `userAgent` even if `.v8` exists, but 0\nif (!version && userAgent) {\n  match = userAgent.match(/Edge\\/(\\d+)/);\n  if (!match || match[1] >= 74) {\n    match = userAgent.match(/Chrome\\/(\\d+)/);\n    if (match) version = +match[1];\n  }\n}\n\nmodule.exports = version;\n","'use strict';\n// IE8- don't enum bug keys\nmodule.exports = [\n  'constructor',\n  'hasOwnProperty',\n  'isPrototypeOf',\n  'propertyIsEnumerable',\n  'toLocaleString',\n  'toString',\n  'valueOf'\n];\n","'use strict';\nvar global = require('../internals/global');\nvar apply = require('../internals/function-apply');\nvar uncurryThis = require('../internals/function-uncurry-this-clause');\nvar isCallable = require('../internals/is-callable');\nvar getOwnPropertyDescriptor = require('../internals/object-get-own-property-descriptor').f;\nvar isForced = require('../internals/is-forced');\nvar path = require('../internals/path');\nvar bind = require('../internals/function-bind-context');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\nvar hasOwn = require('../internals/has-own-property');\n\nvar wrapConstructor = function (NativeConstructor) {\n  var Wrapper = function (a, b, c) {\n    if (this instanceof Wrapper) {\n      switch (arguments.length) {\n        case 0: return new NativeConstructor();\n        case 1: return new NativeConstructor(a);\n        case 2: return new NativeConstructor(a, b);\n      } return new NativeConstructor(a, b, c);\n    } return apply(NativeConstructor, this, arguments);\n  };\n  Wrapper.prototype = NativeConstructor.prototype;\n  return Wrapper;\n};\n\n/*\n  options.target         - name of the target object\n  options.global         - target is the global object\n  options.stat           - export as static methods of target\n  options.proto          - export as prototype methods of target\n  options.real           - real prototype method for the `pure` version\n  options.forced         - export even if the native feature is available\n  options.bind           - bind methods to the target, required for the `pure` version\n  options.wrap           - wrap constructors to preventing global pollution, required for the `pure` version\n  options.unsafe         - use the simple assignment of property instead of delete + defineProperty\n  options.sham           - add a flag to not completely full polyfills\n  options.enumerable     - export as enumerable property\n  options.dontCallGetSet - prevent calling a getter on target\n  options.name           - the .name of the function if it does not match the key\n*/\nmodule.exports = function (options, source) {\n  var TARGET = options.target;\n  var GLOBAL = options.global;\n  var STATIC = options.stat;\n  var PROTO = options.proto;\n\n  var nativeSource = GLOBAL ? global : STATIC ? global[TARGET] : (global[TARGET] || {}).prototype;\n\n  var target = GLOBAL ? path : path[TARGET] || createNonEnumerableProperty(path, TARGET, {})[TARGET];\n  var targetPrototype = target.prototype;\n\n  var FORCED, USE_NATIVE, VIRTUAL_PROTOTYPE;\n  var key, sourceProperty, targetProperty, nativeProperty, resultProperty, descriptor;\n\n  for (key in source) {\n    FORCED = isForced(GLOBAL ? key : TARGET + (STATIC ? '.' : '#') + key, options.forced);\n    // contains in native\n    USE_NATIVE = !FORCED && nativeSource && hasOwn(nativeSource, key);\n\n    targetProperty = target[key];\n\n    if (USE_NATIVE) if (options.dontCallGetSet) {\n      descriptor = getOwnPropertyDescriptor(nativeSource, key);\n      nativeProperty = descriptor && descriptor.value;\n    } else nativeProperty = nativeSource[key];\n\n    // export native or implementation\n    sourceProperty = (USE_NATIVE && nativeProperty) ? nativeProperty : source[key];\n\n    if (USE_NATIVE && typeof targetProperty == typeof sourceProperty) continue;\n\n    // bind methods to global for calling from export context\n    if (options.bind && USE_NATIVE) resultProperty = bind(sourceProperty, global);\n    // wrap global constructors for prevent changes in this version\n    else if (options.wrap && USE_NATIVE) resultProperty = wrapConstructor(sourceProperty);\n    // make static versions for prototype methods\n    else if (PROTO && isCallable(sourceProperty)) resultProperty = uncurryThis(sourceProperty);\n    // default case\n    else resultProperty = sourceProperty;\n\n    // add a flag to not completely full polyfills\n    if (options.sham || (sourceProperty && sourceProperty.sham) || (targetProperty && targetProperty.sham)) {\n      createNonEnumerableProperty(resultProperty, 'sham', true);\n    }\n\n    createNonEnumerableProperty(target, key, resultProperty);\n\n    if (PROTO) {\n      VIRTUAL_PROTOTYPE = TARGET + 'Prototype';\n      if (!hasOwn(path, VIRTUAL_PROTOTYPE)) {\n        createNonEnumerableProperty(path, VIRTUAL_PROTOTYPE, {});\n      }\n      // export virtual prototype methods\n      createNonEnumerableProperty(path[VIRTUAL_PROTOTYPE], key, sourceProperty);\n      // export real prototype methods\n      if (options.real && targetPrototype && (FORCED || !targetPrototype[key])) {\n        createNonEnumerableProperty(targetPrototype, key, sourceProperty);\n      }\n    }\n  }\n};\n","'use strict';\nmodule.exports = function (exec) {\n  try {\n    return !!exec();\n  } catch (error) {\n    return true;\n  }\n};\n","'use strict';\nvar NATIVE_BIND = require('../internals/function-bind-native');\n\nvar FunctionPrototype = Function.prototype;\nvar apply = FunctionPrototype.apply;\nvar call = FunctionPrototype.call;\n\n// eslint-disable-next-line es/no-reflect -- safe\nmodule.exports = typeof Reflect == 'object' && Reflect.apply || (NATIVE_BIND ? call.bind(apply) : function () {\n  return call.apply(apply, arguments);\n});\n","'use strict';\nvar uncurryThis = require('../internals/function-uncurry-this-clause');\nvar aCallable = require('../internals/a-callable');\nvar NATIVE_BIND = require('../internals/function-bind-native');\n\nvar bind = uncurryThis(uncurryThis.bind);\n\n// optional / simple context binding\nmodule.exports = function (fn, that) {\n  aCallable(fn);\n  return that === undefined ? fn : NATIVE_BIND ? bind(fn, that) : function (/* ...args */) {\n    return fn.apply(that, arguments);\n  };\n};\n","'use strict';\nvar fails = require('../internals/fails');\n\nmodule.exports = !fails(function () {\n  // eslint-disable-next-line es/no-function-prototype-bind -- safe\n  var test = (function () { /* empty */ }).bind();\n  // eslint-disable-next-line no-prototype-builtins -- safe\n  return typeof test != 'function' || test.hasOwnProperty('prototype');\n});\n","'use strict';\nvar NATIVE_BIND = require('../internals/function-bind-native');\n\nvar call = Function.prototype.call;\n\nmodule.exports = NATIVE_BIND ? call.bind(call) : function () {\n  return call.apply(call, arguments);\n};\n","'use strict';\nvar DESCRIPTORS = require('../internals/descriptors');\nvar hasOwn = require('../internals/has-own-property');\n\nvar FunctionPrototype = Function.prototype;\n// eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe\nvar getDescriptor = DESCRIPTORS && Object.getOwnPropertyDescriptor;\n\nvar EXISTS = hasOwn(FunctionPrototype, 'name');\n// additional protection from minified / mangled / dropped function names\nvar PROPER = EXISTS && (function something() { /* empty */ }).name === 'something';\nvar CONFIGURABLE = EXISTS && (!DESCRIPTORS || (DESCRIPTORS && getDescriptor(FunctionPrototype, 'name').configurable));\n\nmodule.exports = {\n  EXISTS: EXISTS,\n  PROPER: PROPER,\n  CONFIGURABLE: CONFIGURABLE\n};\n","'use strict';\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar aCallable = require('../internals/a-callable');\n\nmodule.exports = function (object, key, method) {\n  try {\n    // eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe\n    return uncurryThis(aCallable(Object.getOwnPropertyDescriptor(object, key)[method]));\n  } catch (error) { /* empty */ }\n};\n","'use strict';\nvar classofRaw = require('../internals/classof-raw');\nvar uncurryThis = require('../internals/function-uncurry-this');\n\nmodule.exports = function (fn) {\n  // Nashorn bug:\n  //   https://github.com/zloirock/core-js/issues/1128\n  //   https://github.com/zloirock/core-js/issues/1130\n  if (classofRaw(fn) === 'Function') return uncurryThis(fn);\n};\n","'use strict';\nvar NATIVE_BIND = require('../internals/function-bind-native');\n\nvar FunctionPrototype = Function.prototype;\nvar call = FunctionPrototype.call;\nvar uncurryThisWithBind = NATIVE_BIND && FunctionPrototype.bind.bind(call, call);\n\nmodule.exports = NATIVE_BIND ? uncurryThisWithBind : function (fn) {\n  return function () {\n    return call.apply(fn, arguments);\n  };\n};\n","'use strict';\nvar path = require('../internals/path');\nvar global = require('../internals/global');\nvar isCallable = require('../internals/is-callable');\n\nvar aFunction = function (variable) {\n  return isCallable(variable) ? variable : undefined;\n};\n\nmodule.exports = function (namespace, method) {\n  return arguments.length < 2 ? aFunction(path[namespace]) || aFunction(global[namespace])\n    : path[namespace] && path[namespace][method] || global[namespace] && global[namespace][method];\n};\n","'use strict';\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar isArray = require('../internals/is-array');\nvar isCallable = require('../internals/is-callable');\nvar classof = require('../internals/classof-raw');\nvar toString = require('../internals/to-string');\n\nvar push = uncurryThis([].push);\n\nmodule.exports = function (replacer) {\n  if (isCallable(replacer)) return replacer;\n  if (!isArray(replacer)) return;\n  var rawLength = replacer.length;\n  var keys = [];\n  for (var i = 0; i < rawLength; i++) {\n    var element = replacer[i];\n    if (typeof element == 'string') push(keys, element);\n    else if (typeof element == 'number' || classof(element) == 'Number' || classof(element) == 'String') push(keys, toString(element));\n  }\n  var keysLength = keys.length;\n  var root = true;\n  return function (key, value) {\n    if (root) {\n      root = false;\n      return value;\n    }\n    if (isArray(this)) return value;\n    for (var j = 0; j < keysLength; j++) if (keys[j] === key) return value;\n  };\n};\n","'use strict';\nvar aCallable = require('../internals/a-callable');\nvar isNullOrUndefined = require('../internals/is-null-or-undefined');\n\n// `GetMethod` abstract operation\n// https://tc39.es/ecma262/#sec-getmethod\nmodule.exports = function (V, P) {\n  var func = V[P];\n  return isNullOrUndefined(func) ? undefined : aCallable(func);\n};\n","'use strict';\nvar check = function (it) {\n  return it && it.Math == Math && it;\n};\n\n// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028\nmodule.exports =\n  // eslint-disable-next-line es/no-global-this -- safe\n  check(typeof globalThis == 'object' && globalThis) ||\n  check(typeof window == 'object' && window) ||\n  // eslint-disable-next-line no-restricted-globals -- safe\n  check(typeof self == 'object' && self) ||\n  check(typeof global == 'object' && global) ||\n  // eslint-disable-next-line no-new-func -- fallback\n  (function () { return this; })() || this || Function('return this')();\n","'use strict';\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar toObject = require('../internals/to-object');\n\nvar hasOwnProperty = uncurryThis({}.hasOwnProperty);\n\n// `HasOwnProperty` abstract operation\n// https://tc39.es/ecma262/#sec-hasownproperty\n// eslint-disable-next-line es/no-object-hasown -- safe\nmodule.exports = Object.hasOwn || function hasOwn(it, key) {\n  return hasOwnProperty(toObject(it), key);\n};\n","'use strict';\nmodule.exports = {};\n","'use strict';\nvar getBuiltIn = require('../internals/get-built-in');\n\nmodule.exports = getBuiltIn('document', 'documentElement');\n","'use strict';\nvar DESCRIPTORS = require('../internals/descriptors');\nvar fails = require('../internals/fails');\nvar createElement = require('../internals/document-create-element');\n\n// Thanks to IE8 for its funny defineProperty\nmodule.exports = !DESCRIPTORS && !fails(function () {\n  // eslint-disable-next-line es/no-object-defineproperty -- required for testing\n  return Object.defineProperty(createElement('div'), 'a', {\n    get: function () { return 7; }\n  }).a != 7;\n});\n","'use strict';\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar fails = require('../internals/fails');\nvar classof = require('../internals/classof-raw');\n\nvar $Object = Object;\nvar split = uncurryThis(''.split);\n\n// fallback for non-array-like ES3 and non-enumerable old V8 strings\nmodule.exports = fails(function () {\n  // throws an error in rhino, see https://github.com/mozilla/rhino/issues/346\n  // eslint-disable-next-line no-prototype-builtins -- safe\n  return !$Object('z').propertyIsEnumerable(0);\n}) ? function (it) {\n  return classof(it) == 'String' ? split(it, '') : $Object(it);\n} : $Object;\n","'use strict';\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar isCallable = require('../internals/is-callable');\nvar store = require('../internals/shared-store');\n\nvar functionToString = uncurryThis(Function.toString);\n\n// this helper broken in `core-js@3.4.1-3.4.4`, so we can't use `shared` helper\nif (!isCallable(store.inspectSource)) {\n  store.inspectSource = function (it) {\n    return functionToString(it);\n  };\n}\n\nmodule.exports = store.inspectSource;\n","'use strict';\nvar NATIVE_WEAK_MAP = require('../internals/weak-map-basic-detection');\nvar global = require('../internals/global');\nvar isObject = require('../internals/is-object');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\nvar hasOwn = require('../internals/has-own-property');\nvar shared = require('../internals/shared-store');\nvar sharedKey = require('../internals/shared-key');\nvar hiddenKeys = require('../internals/hidden-keys');\n\nvar OBJECT_ALREADY_INITIALIZED = 'Object already initialized';\nvar TypeError = global.TypeError;\nvar WeakMap = global.WeakMap;\nvar set, get, has;\n\nvar enforce = function (it) {\n  return has(it) ? get(it) : set(it, {});\n};\n\nvar getterFor = function (TYPE) {\n  return function (it) {\n    var state;\n    if (!isObject(it) || (state = get(it)).type !== TYPE) {\n      throw TypeError('Incompatible receiver, ' + TYPE + ' required');\n    } return state;\n  };\n};\n\nif (NATIVE_WEAK_MAP || shared.state) {\n  var store = shared.state || (shared.state = new WeakMap());\n  /* eslint-disable no-self-assign -- prototype methods protection */\n  store.get = store.get;\n  store.has = store.has;\n  store.set = store.set;\n  /* eslint-enable no-self-assign -- prototype methods protection */\n  set = function (it, metadata) {\n    if (store.has(it)) throw TypeError(OBJECT_ALREADY_INITIALIZED);\n    metadata.facade = it;\n    store.set(it, metadata);\n    return metadata;\n  };\n  get = function (it) {\n    return store.get(it) || {};\n  };\n  has = function (it) {\n    return store.has(it);\n  };\n} else {\n  var STATE = sharedKey('state');\n  hiddenKeys[STATE] = true;\n  set = function (it, metadata) {\n    if (hasOwn(it, STATE)) throw TypeError(OBJECT_ALREADY_INITIALIZED);\n    metadata.facade = it;\n    createNonEnumerableProperty(it, STATE, metadata);\n    return metadata;\n  };\n  get = function (it) {\n    return hasOwn(it, STATE) ? it[STATE] : {};\n  };\n  has = function (it) {\n    return hasOwn(it, STATE);\n  };\n}\n\nmodule.exports = {\n  set: set,\n  get: get,\n  has: has,\n  enforce: enforce,\n  getterFor: getterFor\n};\n","'use strict';\nvar classof = require('../internals/classof-raw');\n\n// `IsArray` abstract operation\n// https://tc39.es/ecma262/#sec-isarray\n// eslint-disable-next-line es/no-array-isarray -- safe\nmodule.exports = Array.isArray || function isArray(argument) {\n  return classof(argument) == 'Array';\n};\n","'use strict';\nvar $documentAll = require('../internals/document-all');\n\nvar documentAll = $documentAll.all;\n\n// `IsCallable` abstract operation\n// https://tc39.es/ecma262/#sec-iscallable\nmodule.exports = $documentAll.IS_HTMLDDA ? function (argument) {\n  return typeof argument == 'function' || argument === documentAll;\n} : function (argument) {\n  return typeof argument == 'function';\n};\n","'use strict';\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar fails = require('../internals/fails');\nvar isCallable = require('../internals/is-callable');\nvar classof = require('../internals/classof');\nvar getBuiltIn = require('../internals/get-built-in');\nvar inspectSource = require('../internals/inspect-source');\n\nvar noop = function () { /* empty */ };\nvar empty = [];\nvar construct = getBuiltIn('Reflect', 'construct');\nvar constructorRegExp = /^\\s*(?:class|function)\\b/;\nvar exec = uncurryThis(constructorRegExp.exec);\nvar INCORRECT_TO_STRING = !constructorRegExp.exec(noop);\n\nvar isConstructorModern = function isConstructor(argument) {\n  if (!isCallable(argument)) return false;\n  try {\n    construct(noop, empty, argument);\n    return true;\n  } catch (error) {\n    return false;\n  }\n};\n\nvar isConstructorLegacy = function isConstructor(argument) {\n  if (!isCallable(argument)) return false;\n  switch (classof(argument)) {\n    case 'AsyncFunction':\n    case 'GeneratorFunction':\n    case 'AsyncGeneratorFunction': return false;\n  }\n  try {\n    // we can't check .prototype since constructors produced by .bind haven't it\n    // `Function#toString` throws on some built-it function in some legacy engines\n    // (for example, `DOMQuad` and similar in FF41-)\n    return INCORRECT_TO_STRING || !!exec(constructorRegExp, inspectSource(argument));\n  } catch (error) {\n    return true;\n  }\n};\n\nisConstructorLegacy.sham = true;\n\n// `IsConstructor` abstract operation\n// https://tc39.es/ecma262/#sec-isconstructor\nmodule.exports = !construct || fails(function () {\n  var called;\n  return isConstructorModern(isConstructorModern.call)\n    || !isConstructorModern(Object)\n    || !isConstructorModern(function () { called = true; })\n    || called;\n}) ? isConstructorLegacy : isConstructorModern;\n","'use strict';\nvar fails = require('../internals/fails');\nvar isCallable = require('../internals/is-callable');\n\nvar replacement = /#|\\.prototype\\./;\n\nvar isForced = function (feature, detection) {\n  var value = data[normalize(feature)];\n  return value == POLYFILL ? true\n    : value == NATIVE ? false\n    : isCallable(detection) ? fails(detection)\n    : !!detection;\n};\n\nvar normalize = isForced.normalize = function (string) {\n  return String(string).replace(replacement, '.').toLowerCase();\n};\n\nvar data = isForced.data = {};\nvar NATIVE = isForced.NATIVE = 'N';\nvar POLYFILL = isForced.POLYFILL = 'P';\n\nmodule.exports = isForced;\n","'use strict';\n// we can't use just `it == null` since of `document.all` special case\n// https://tc39.es/ecma262/#sec-IsHTMLDDA-internal-slot-aec\nmodule.exports = function (it) {\n  return it === null || it === undefined;\n};\n","'use strict';\nvar isCallable = require('../internals/is-callable');\nvar $documentAll = require('../internals/document-all');\n\nvar documentAll = $documentAll.all;\n\nmodule.exports = $documentAll.IS_HTMLDDA ? function (it) {\n  return typeof it == 'object' ? it !== null : isCallable(it) || it === documentAll;\n} : function (it) {\n  return typeof it == 'object' ? it !== null : isCallable(it);\n};\n","'use strict';\nmodule.exports = true;\n","'use strict';\nvar getBuiltIn = require('../internals/get-built-in');\nvar isCallable = require('../internals/is-callable');\nvar isPrototypeOf = require('../internals/object-is-prototype-of');\nvar USE_SYMBOL_AS_UID = require('../internals/use-symbol-as-uid');\n\nvar $Object = Object;\n\nmodule.exports = USE_SYMBOL_AS_UID ? function (it) {\n  return typeof it == 'symbol';\n} : function (it) {\n  var $Symbol = getBuiltIn('Symbol');\n  return isCallable($Symbol) && isPrototypeOf($Symbol.prototype, $Object(it));\n};\n","'use strict';\nvar IteratorPrototype = require('../internals/iterators-core').IteratorPrototype;\nvar create = require('../internals/object-create');\nvar createPropertyDescriptor = require('../internals/create-property-descriptor');\nvar setToStringTag = require('../internals/set-to-string-tag');\nvar Iterators = require('../internals/iterators');\n\nvar returnThis = function () { return this; };\n\nmodule.exports = function (IteratorConstructor, NAME, next, ENUMERABLE_NEXT) {\n  var TO_STRING_TAG = NAME + ' Iterator';\n  IteratorConstructor.prototype = create(IteratorPrototype, { next: createPropertyDescriptor(+!ENUMERABLE_NEXT, next) });\n  setToStringTag(IteratorConstructor, TO_STRING_TAG, false, true);\n  Iterators[TO_STRING_TAG] = returnThis;\n  return IteratorConstructor;\n};\n","'use strict';\nvar $ = require('../internals/export');\nvar call = require('../internals/function-call');\nvar IS_PURE = require('../internals/is-pure');\nvar FunctionName = require('../internals/function-name');\nvar isCallable = require('../internals/is-callable');\nvar createIteratorConstructor = require('../internals/iterator-create-constructor');\nvar getPrototypeOf = require('../internals/object-get-prototype-of');\nvar setPrototypeOf = require('../internals/object-set-prototype-of');\nvar setToStringTag = require('../internals/set-to-string-tag');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\nvar defineBuiltIn = require('../internals/define-built-in');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar Iterators = require('../internals/iterators');\nvar IteratorsCore = require('../internals/iterators-core');\n\nvar PROPER_FUNCTION_NAME = FunctionName.PROPER;\nvar CONFIGURABLE_FUNCTION_NAME = FunctionName.CONFIGURABLE;\nvar IteratorPrototype = IteratorsCore.IteratorPrototype;\nvar BUGGY_SAFARI_ITERATORS = IteratorsCore.BUGGY_SAFARI_ITERATORS;\nvar ITERATOR = wellKnownSymbol('iterator');\nvar KEYS = 'keys';\nvar VALUES = 'values';\nvar ENTRIES = 'entries';\n\nvar returnThis = function () { return this; };\n\nmodule.exports = function (Iterable, NAME, IteratorConstructor, next, DEFAULT, IS_SET, FORCED) {\n  createIteratorConstructor(IteratorConstructor, NAME, next);\n\n  var getIterationMethod = function (KIND) {\n    if (KIND === DEFAULT && defaultIterator) return defaultIterator;\n    if (!BUGGY_SAFARI_ITERATORS && KIND in IterablePrototype) return IterablePrototype[KIND];\n    switch (KIND) {\n      case KEYS: return function keys() { return new IteratorConstructor(this, KIND); };\n      case VALUES: return function values() { return new IteratorConstructor(this, KIND); };\n      case ENTRIES: return function entries() { return new IteratorConstructor(this, KIND); };\n    } return function () { return new IteratorConstructor(this); };\n  };\n\n  var TO_STRING_TAG = NAME + ' Iterator';\n  var INCORRECT_VALUES_NAME = false;\n  var IterablePrototype = Iterable.prototype;\n  var nativeIterator = IterablePrototype[ITERATOR]\n    || IterablePrototype['@@iterator']\n    || DEFAULT && IterablePrototype[DEFAULT];\n  var defaultIterator = !BUGGY_SAFARI_ITERATORS && nativeIterator || getIterationMethod(DEFAULT);\n  var anyNativeIterator = NAME == 'Array' ? IterablePrototype.entries || nativeIterator : nativeIterator;\n  var CurrentIteratorPrototype, methods, KEY;\n\n  // fix native\n  if (anyNativeIterator) {\n    CurrentIteratorPrototype = getPrototypeOf(anyNativeIterator.call(new Iterable()));\n    if (CurrentIteratorPrototype !== Object.prototype && CurrentIteratorPrototype.next) {\n      if (!IS_PURE && getPrototypeOf(CurrentIteratorPrototype) !== IteratorPrototype) {\n        if (setPrototypeOf) {\n          setPrototypeOf(CurrentIteratorPrototype, IteratorPrototype);\n        } else if (!isCallable(CurrentIteratorPrototype[ITERATOR])) {\n          defineBuiltIn(CurrentIteratorPrototype, ITERATOR, returnThis);\n        }\n      }\n      // Set @@toStringTag to native iterators\n      setToStringTag(CurrentIteratorPrototype, TO_STRING_TAG, true, true);\n      if (IS_PURE) Iterators[TO_STRING_TAG] = returnThis;\n    }\n  }\n\n  // fix Array.prototype.{ values, @@iterator }.name in V8 / FF\n  if (PROPER_FUNCTION_NAME && DEFAULT == VALUES && nativeIterator && nativeIterator.name !== VALUES) {\n    if (!IS_PURE && CONFIGURABLE_FUNCTION_NAME) {\n      createNonEnumerableProperty(IterablePrototype, 'name', VALUES);\n    } else {\n      INCORRECT_VALUES_NAME = true;\n      defaultIterator = function values() { return call(nativeIterator, this); };\n    }\n  }\n\n  // export additional methods\n  if (DEFAULT) {\n    methods = {\n      values: getIterationMethod(VALUES),\n      keys: IS_SET ? defaultIterator : getIterationMethod(KEYS),\n      entries: getIterationMethod(ENTRIES)\n    };\n    if (FORCED) for (KEY in methods) {\n      if (BUGGY_SAFARI_ITERATORS || INCORRECT_VALUES_NAME || !(KEY in IterablePrototype)) {\n        defineBuiltIn(IterablePrototype, KEY, methods[KEY]);\n      }\n    } else $({ target: NAME, proto: true, forced: BUGGY_SAFARI_ITERATORS || INCORRECT_VALUES_NAME }, methods);\n  }\n\n  // define iterator\n  if ((!IS_PURE || FORCED) && IterablePrototype[ITERATOR] !== defaultIterator) {\n    defineBuiltIn(IterablePrototype, ITERATOR, defaultIterator, { name: DEFAULT });\n  }\n  Iterators[NAME] = defaultIterator;\n\n  return methods;\n};\n","'use strict';\nvar fails = require('../internals/fails');\nvar isCallable = require('../internals/is-callable');\nvar isObject = require('../internals/is-object');\nvar create = require('../internals/object-create');\nvar getPrototypeOf = require('../internals/object-get-prototype-of');\nvar defineBuiltIn = require('../internals/define-built-in');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar IS_PURE = require('../internals/is-pure');\n\nvar ITERATOR = wellKnownSymbol('iterator');\nvar BUGGY_SAFARI_ITERATORS = false;\n\n// `%IteratorPrototype%` object\n// https://tc39.es/ecma262/#sec-%iteratorprototype%-object\nvar IteratorPrototype, PrototypeOfArrayIteratorPrototype, arrayIterator;\n\n/* eslint-disable es/no-array-prototype-keys -- safe */\nif ([].keys) {\n  arrayIterator = [].keys();\n  // Safari 8 has buggy iterators w/o `next`\n  if (!('next' in arrayIterator)) BUGGY_SAFARI_ITERATORS = true;\n  else {\n    PrototypeOfArrayIteratorPrototype = getPrototypeOf(getPrototypeOf(arrayIterator));\n    if (PrototypeOfArrayIteratorPrototype !== Object.prototype) IteratorPrototype = PrototypeOfArrayIteratorPrototype;\n  }\n}\n\nvar NEW_ITERATOR_PROTOTYPE = !isObject(IteratorPrototype) || fails(function () {\n  var test = {};\n  // FF44- legacy iterators case\n  return IteratorPrototype[ITERATOR].call(test) !== test;\n});\n\nif (NEW_ITERATOR_PROTOTYPE) IteratorPrototype = {};\nelse if (IS_PURE) IteratorPrototype = create(IteratorPrototype);\n\n// `%IteratorPrototype%[@@iterator]()` method\n// https://tc39.es/ecma262/#sec-%iteratorprototype%-@@iterator\nif (!isCallable(IteratorPrototype[ITERATOR])) {\n  defineBuiltIn(IteratorPrototype, ITERATOR, function () {\n    return this;\n  });\n}\n\nmodule.exports = {\n  IteratorPrototype: IteratorPrototype,\n  BUGGY_SAFARI_ITERATORS: BUGGY_SAFARI_ITERATORS\n};\n","'use strict';\nmodule.exports = {};\n","'use strict';\nvar toLength = require('../internals/to-length');\n\n// `LengthOfArrayLike` abstract operation\n// https://tc39.es/ecma262/#sec-lengthofarraylike\nmodule.exports = function (obj) {\n  return toLength(obj.length);\n};\n","'use strict';\nvar ceil = Math.ceil;\nvar floor = Math.floor;\n\n// `Math.trunc` method\n// https://tc39.es/ecma262/#sec-math.trunc\n// eslint-disable-next-line es/no-math-trunc -- safe\nmodule.exports = Math.trunc || function trunc(x) {\n  var n = +x;\n  return (n > 0 ? floor : ceil)(n);\n};\n","'use strict';\n/* global ActiveXObject -- old IE, WSH */\nvar anObject = require('../internals/an-object');\nvar definePropertiesModule = require('../internals/object-define-properties');\nvar enumBugKeys = require('../internals/enum-bug-keys');\nvar hiddenKeys = require('../internals/hidden-keys');\nvar html = require('../internals/html');\nvar documentCreateElement = require('../internals/document-create-element');\nvar sharedKey = require('../internals/shared-key');\n\nvar GT = '>';\nvar LT = '<';\nvar PROTOTYPE = 'prototype';\nvar SCRIPT = 'script';\nvar IE_PROTO = sharedKey('IE_PROTO');\n\nvar EmptyConstructor = function () { /* empty */ };\n\nvar scriptTag = function (content) {\n  return LT + SCRIPT + GT + content + LT + '/' + SCRIPT + GT;\n};\n\n// Create object with fake `null` prototype: use ActiveX Object with cleared prototype\nvar NullProtoObjectViaActiveX = function (activeXDocument) {\n  activeXDocument.write(scriptTag(''));\n  activeXDocument.close();\n  var temp = activeXDocument.parentWindow.Object;\n  activeXDocument = null; // avoid memory leak\n  return temp;\n};\n\n// Create object with fake `null` prototype: use iframe Object with cleared prototype\nvar NullProtoObjectViaIFrame = function () {\n  // Thrash, waste and sodomy: IE GC bug\n  var iframe = documentCreateElement('iframe');\n  var JS = 'java' + SCRIPT + ':';\n  var iframeDocument;\n  iframe.style.display = 'none';\n  html.appendChild(iframe);\n  // https://github.com/zloirock/core-js/issues/475\n  iframe.src = String(JS);\n  iframeDocument = iframe.contentWindow.document;\n  iframeDocument.open();\n  iframeDocument.write(scriptTag('document.F=Object'));\n  iframeDocument.close();\n  return iframeDocument.F;\n};\n\n// Check for document.domain and active x support\n// No need to use active x approach when document.domain is not set\n// see https://github.com/es-shims/es5-shim/issues/150\n// variation of https://github.com/kitcambridge/es5-shim/commit/4f738ac066346\n// avoid IE GC bug\nvar activeXDocument;\nvar NullProtoObject = function () {\n  try {\n    activeXDocument = new ActiveXObject('htmlfile');\n  } catch (error) { /* ignore */ }\n  NullProtoObject = typeof document != 'undefined'\n    ? document.domain && activeXDocument\n      ? NullProtoObjectViaActiveX(activeXDocument) // old IE\n      : NullProtoObjectViaIFrame()\n    : NullProtoObjectViaActiveX(activeXDocument); // WSH\n  var length = enumBugKeys.length;\n  while (length--) delete NullProtoObject[PROTOTYPE][enumBugKeys[length]];\n  return NullProtoObject();\n};\n\nhiddenKeys[IE_PROTO] = true;\n\n// `Object.create` method\n// https://tc39.es/ecma262/#sec-object.create\n// eslint-disable-next-line es/no-object-create -- safe\nmodule.exports = Object.create || function create(O, Properties) {\n  var result;\n  if (O !== null) {\n    EmptyConstructor[PROTOTYPE] = anObject(O);\n    result = new EmptyConstructor();\n    EmptyConstructor[PROTOTYPE] = null;\n    // add \"__proto__\" for Object.getPrototypeOf polyfill\n    result[IE_PROTO] = O;\n  } else result = NullProtoObject();\n  return Properties === undefined ? result : definePropertiesModule.f(result, Properties);\n};\n","'use strict';\nvar DESCRIPTORS = require('../internals/descriptors');\nvar V8_PROTOTYPE_DEFINE_BUG = require('../internals/v8-prototype-define-bug');\nvar definePropertyModule = require('../internals/object-define-property');\nvar anObject = require('../internals/an-object');\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar objectKeys = require('../internals/object-keys');\n\n// `Object.defineProperties` method\n// https://tc39.es/ecma262/#sec-object.defineproperties\n// eslint-disable-next-line es/no-object-defineproperties -- safe\nexports.f = DESCRIPTORS && !V8_PROTOTYPE_DEFINE_BUG ? Object.defineProperties : function defineProperties(O, Properties) {\n  anObject(O);\n  var props = toIndexedObject(Properties);\n  var keys = objectKeys(Properties);\n  var length = keys.length;\n  var index = 0;\n  var key;\n  while (length > index) definePropertyModule.f(O, key = keys[index++], props[key]);\n  return O;\n};\n","'use strict';\nvar DESCRIPTORS = require('../internals/descriptors');\nvar IE8_DOM_DEFINE = require('../internals/ie8-dom-define');\nvar V8_PROTOTYPE_DEFINE_BUG = require('../internals/v8-prototype-define-bug');\nvar anObject = require('../internals/an-object');\nvar toPropertyKey = require('../internals/to-property-key');\n\nvar $TypeError = TypeError;\n// eslint-disable-next-line es/no-object-defineproperty -- safe\nvar $defineProperty = Object.defineProperty;\n// eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe\nvar $getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\nvar ENUMERABLE = 'enumerable';\nvar CONFIGURABLE = 'configurable';\nvar WRITABLE = 'writable';\n\n// `Object.defineProperty` method\n// https://tc39.es/ecma262/#sec-object.defineproperty\nexports.f = DESCRIPTORS ? V8_PROTOTYPE_DEFINE_BUG ? function defineProperty(O, P, Attributes) {\n  anObject(O);\n  P = toPropertyKey(P);\n  anObject(Attributes);\n  if (typeof O === 'function' && P === 'prototype' && 'value' in Attributes && WRITABLE in Attributes && !Attributes[WRITABLE]) {\n    var current = $getOwnPropertyDescriptor(O, P);\n    if (current && current[WRITABLE]) {\n      O[P] = Attributes.value;\n      Attributes = {\n        configurable: CONFIGURABLE in Attributes ? Attributes[CONFIGURABLE] : current[CONFIGURABLE],\n        enumerable: ENUMERABLE in Attributes ? Attributes[ENUMERABLE] : current[ENUMERABLE],\n        writable: false\n      };\n    }\n  } return $defineProperty(O, P, Attributes);\n} : $defineProperty : function defineProperty(O, P, Attributes) {\n  anObject(O);\n  P = toPropertyKey(P);\n  anObject(Attributes);\n  if (IE8_DOM_DEFINE) try {\n    return $defineProperty(O, P, Attributes);\n  } catch (error) { /* empty */ }\n  if ('get' in Attributes || 'set' in Attributes) throw $TypeError('Accessors not supported');\n  if ('value' in Attributes) O[P] = Attributes.value;\n  return O;\n};\n","'use strict';\nvar DESCRIPTORS = require('../internals/descriptors');\nvar call = require('../internals/function-call');\nvar propertyIsEnumerableModule = require('../internals/object-property-is-enumerable');\nvar createPropertyDescriptor = require('../internals/create-property-descriptor');\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar toPropertyKey = require('../internals/to-property-key');\nvar hasOwn = require('../internals/has-own-property');\nvar IE8_DOM_DEFINE = require('../internals/ie8-dom-define');\n\n// eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe\nvar $getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n\n// `Object.getOwnPropertyDescriptor` method\n// https://tc39.es/ecma262/#sec-object.getownpropertydescriptor\nexports.f = DESCRIPTORS ? $getOwnPropertyDescriptor : function getOwnPropertyDescriptor(O, P) {\n  O = toIndexedObject(O);\n  P = toPropertyKey(P);\n  if (IE8_DOM_DEFINE) try {\n    return $getOwnPropertyDescriptor(O, P);\n  } catch (error) { /* empty */ }\n  if (hasOwn(O, P)) return createPropertyDescriptor(!call(propertyIsEnumerableModule.f, O, P), O[P]);\n};\n","'use strict';\n/* eslint-disable es/no-object-getownpropertynames -- safe */\nvar classof = require('../internals/classof-raw');\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar $getOwnPropertyNames = require('../internals/object-get-own-property-names').f;\nvar arraySlice = require('../internals/array-slice-simple');\n\nvar windowNames = typeof window == 'object' && window && Object.getOwnPropertyNames\n  ? Object.getOwnPropertyNames(window) : [];\n\nvar getWindowNames = function (it) {\n  try {\n    return $getOwnPropertyNames(it);\n  } catch (error) {\n    return arraySlice(windowNames);\n  }\n};\n\n// fallback for IE11 buggy Object.getOwnPropertyNames with iframe and window\nmodule.exports.f = function getOwnPropertyNames(it) {\n  return windowNames && classof(it) == 'Window'\n    ? getWindowNames(it)\n    : $getOwnPropertyNames(toIndexedObject(it));\n};\n","'use strict';\nvar internalObjectKeys = require('../internals/object-keys-internal');\nvar enumBugKeys = require('../internals/enum-bug-keys');\n\nvar hiddenKeys = enumBugKeys.concat('length', 'prototype');\n\n// `Object.getOwnPropertyNames` method\n// https://tc39.es/ecma262/#sec-object.getownpropertynames\n// eslint-disable-next-line es/no-object-getownpropertynames -- safe\nexports.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O) {\n  return internalObjectKeys(O, hiddenKeys);\n};\n","'use strict';\n// eslint-disable-next-line es/no-object-getownpropertysymbols -- safe\nexports.f = Object.getOwnPropertySymbols;\n","'use strict';\nvar hasOwn = require('../internals/has-own-property');\nvar isCallable = require('../internals/is-callable');\nvar toObject = require('../internals/to-object');\nvar sharedKey = require('../internals/shared-key');\nvar CORRECT_PROTOTYPE_GETTER = require('../internals/correct-prototype-getter');\n\nvar IE_PROTO = sharedKey('IE_PROTO');\nvar $Object = Object;\nvar ObjectPrototype = $Object.prototype;\n\n// `Object.getPrototypeOf` method\n// https://tc39.es/ecma262/#sec-object.getprototypeof\n// eslint-disable-next-line es/no-object-getprototypeof -- safe\nmodule.exports = CORRECT_PROTOTYPE_GETTER ? $Object.getPrototypeOf : function (O) {\n  var object = toObject(O);\n  if (hasOwn(object, IE_PROTO)) return object[IE_PROTO];\n  var constructor = object.constructor;\n  if (isCallable(constructor) && object instanceof constructor) {\n    return constructor.prototype;\n  } return object instanceof $Object ? ObjectPrototype : null;\n};\n","'use strict';\nvar uncurryThis = require('../internals/function-uncurry-this');\n\nmodule.exports = uncurryThis({}.isPrototypeOf);\n","'use strict';\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar hasOwn = require('../internals/has-own-property');\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar indexOf = require('../internals/array-includes').indexOf;\nvar hiddenKeys = require('../internals/hidden-keys');\n\nvar push = uncurryThis([].push);\n\nmodule.exports = function (object, names) {\n  var O = toIndexedObject(object);\n  var i = 0;\n  var result = [];\n  var key;\n  for (key in O) !hasOwn(hiddenKeys, key) && hasOwn(O, key) && push(result, key);\n  // Don't enum bug & hidden keys\n  while (names.length > i) if (hasOwn(O, key = names[i++])) {\n    ~indexOf(result, key) || push(result, key);\n  }\n  return result;\n};\n","'use strict';\nvar internalObjectKeys = require('../internals/object-keys-internal');\nvar enumBugKeys = require('../internals/enum-bug-keys');\n\n// `Object.keys` method\n// https://tc39.es/ecma262/#sec-object.keys\n// eslint-disable-next-line es/no-object-keys -- safe\nmodule.exports = Object.keys || function keys(O) {\n  return internalObjectKeys(O, enumBugKeys);\n};\n","'use strict';\nvar $propertyIsEnumerable = {}.propertyIsEnumerable;\n// eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe\nvar getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n\n// Nashorn ~ JDK8 bug\nvar NASHORN_BUG = getOwnPropertyDescriptor && !$propertyIsEnumerable.call({ 1: 2 }, 1);\n\n// `Object.prototype.propertyIsEnumerable` method implementation\n// https://tc39.es/ecma262/#sec-object.prototype.propertyisenumerable\nexports.f = NASHORN_BUG ? function propertyIsEnumerable(V) {\n  var descriptor = getOwnPropertyDescriptor(this, V);\n  return !!descriptor && descriptor.enumerable;\n} : $propertyIsEnumerable;\n","'use strict';\n/* eslint-disable no-proto -- safe */\nvar uncurryThisAccessor = require('../internals/function-uncurry-this-accessor');\nvar anObject = require('../internals/an-object');\nvar aPossiblePrototype = require('../internals/a-possible-prototype');\n\n// `Object.setPrototypeOf` method\n// https://tc39.es/ecma262/#sec-object.setprototypeof\n// Works with __proto__ only. Old v8 can't work with null proto objects.\n// eslint-disable-next-line es/no-object-setprototypeof -- safe\nmodule.exports = Object.setPrototypeOf || ('__proto__' in {} ? function () {\n  var CORRECT_SETTER = false;\n  var test = {};\n  var setter;\n  try {\n    setter = uncurryThisAccessor(Object.prototype, '__proto__', 'set');\n    setter(test, []);\n    CORRECT_SETTER = test instanceof Array;\n  } catch (error) { /* empty */ }\n  return function setPrototypeOf(O, proto) {\n    anObject(O);\n    aPossiblePrototype(proto);\n    if (CORRECT_SETTER) setter(O, proto);\n    else O.__proto__ = proto;\n    return O;\n  };\n}() : undefined);\n","'use strict';\nvar TO_STRING_TAG_SUPPORT = require('../internals/to-string-tag-support');\nvar classof = require('../internals/classof');\n\n// `Object.prototype.toString` method implementation\n// https://tc39.es/ecma262/#sec-object.prototype.tostring\nmodule.exports = TO_STRING_TAG_SUPPORT ? {}.toString : function toString() {\n  return '[object ' + classof(this) + ']';\n};\n","'use strict';\nvar call = require('../internals/function-call');\nvar isCallable = require('../internals/is-callable');\nvar isObject = require('../internals/is-object');\n\nvar $TypeError = TypeError;\n\n// `OrdinaryToPrimitive` abstract operation\n// https://tc39.es/ecma262/#sec-ordinarytoprimitive\nmodule.exports = function (input, pref) {\n  var fn, val;\n  if (pref === 'string' && isCallable(fn = input.toString) && !isObject(val = call(fn, input))) return val;\n  if (isCallable(fn = input.valueOf) && !isObject(val = call(fn, input))) return val;\n  if (pref !== 'string' && isCallable(fn = input.toString) && !isObject(val = call(fn, input))) return val;\n  throw $TypeError(\"Can't convert object to primitive value\");\n};\n","'use strict';\nmodule.exports = {};\n","'use strict';\nvar isNullOrUndefined = require('../internals/is-null-or-undefined');\n\nvar $TypeError = TypeError;\n\n// `RequireObjectCoercible` abstract operation\n// https://tc39.es/ecma262/#sec-requireobjectcoercible\nmodule.exports = function (it) {\n  if (isNullOrUndefined(it)) throw $TypeError(\"Can't call method on \" + it);\n  return it;\n};\n","'use strict';\nvar TO_STRING_TAG_SUPPORT = require('../internals/to-string-tag-support');\nvar defineProperty = require('../internals/object-define-property').f;\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\nvar hasOwn = require('../internals/has-own-property');\nvar toString = require('../internals/object-to-string');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar TO_STRING_TAG = wellKnownSymbol('toStringTag');\n\nmodule.exports = function (it, TAG, STATIC, SET_METHOD) {\n  if (it) {\n    var target = STATIC ? it : it.prototype;\n    if (!hasOwn(target, TO_STRING_TAG)) {\n      defineProperty(target, TO_STRING_TAG, { configurable: true, value: TAG });\n    }\n    if (SET_METHOD && !TO_STRING_TAG_SUPPORT) {\n      createNonEnumerableProperty(target, 'toString', toString);\n    }\n  }\n};\n","'use strict';\nvar shared = require('../internals/shared');\nvar uid = require('../internals/uid');\n\nvar keys = shared('keys');\n\nmodule.exports = function (key) {\n  return keys[key] || (keys[key] = uid(key));\n};\n","'use strict';\nvar global = require('../internals/global');\nvar defineGlobalProperty = require('../internals/define-global-property');\n\nvar SHARED = '__core-js_shared__';\nvar store = global[SHARED] || defineGlobalProperty(SHARED, {});\n\nmodule.exports = store;\n","'use strict';\nvar IS_PURE = require('../internals/is-pure');\nvar store = require('../internals/shared-store');\n\n(module.exports = function (key, value) {\n  return store[key] || (store[key] = value !== undefined ? value : {});\n})('versions', []).push({\n  version: '3.32.0',\n  mode: IS_PURE ? 'pure' : 'global',\n  copyright: '© 2014-2023 Denis Pushkarev (zloirock.ru)',\n  license: 'https://github.com/zloirock/core-js/blob/v3.32.0/LICENSE',\n  source: 'https://github.com/zloirock/core-js'\n});\n","'use strict';\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar toIntegerOrInfinity = require('../internals/to-integer-or-infinity');\nvar toString = require('../internals/to-string');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\n\nvar charAt = uncurryThis(''.charAt);\nvar charCodeAt = uncurryThis(''.charCodeAt);\nvar stringSlice = uncurryThis(''.slice);\n\nvar createMethod = function (CONVERT_TO_STRING) {\n  return function ($this, pos) {\n    var S = toString(requireObjectCoercible($this));\n    var position = toIntegerOrInfinity(pos);\n    var size = S.length;\n    var first, second;\n    if (position < 0 || position >= size) return CONVERT_TO_STRING ? '' : undefined;\n    first = charCodeAt(S, position);\n    return first < 0xD800 || first > 0xDBFF || position + 1 === size\n      || (second = charCodeAt(S, position + 1)) < 0xDC00 || second > 0xDFFF\n        ? CONVERT_TO_STRING\n          ? charAt(S, position)\n          : first\n        : CONVERT_TO_STRING\n          ? stringSlice(S, position, position + 2)\n          : (first - 0xD800 << 10) + (second - 0xDC00) + 0x10000;\n  };\n};\n\nmodule.exports = {\n  // `String.prototype.codePointAt` method\n  // https://tc39.es/ecma262/#sec-string.prototype.codepointat\n  codeAt: createMethod(false),\n  // `String.prototype.at` method\n  // https://github.com/mathiasbynens/String.prototype.at\n  charAt: createMethod(true)\n};\n","'use strict';\n/* eslint-disable es/no-symbol -- required for testing */\nvar V8_VERSION = require('../internals/engine-v8-version');\nvar fails = require('../internals/fails');\nvar global = require('../internals/global');\n\nvar $String = global.String;\n\n// eslint-disable-next-line es/no-object-getownpropertysymbols -- required for testing\nmodule.exports = !!Object.getOwnPropertySymbols && !fails(function () {\n  var symbol = Symbol();\n  // Chrome 38 Symbol has incorrect toString conversion\n  // `get-own-property-symbols` polyfill symbols converted to object are not Symbol instances\n  // nb: Do not call `String` directly to avoid this being optimized out to `symbol+''` which will,\n  // of course, fail.\n  return !$String(symbol) || !(Object(symbol) instanceof Symbol) ||\n    // Chrome 38-40 symbols are not inherited from DOM collections prototypes to instances\n    !Symbol.sham && V8_VERSION && V8_VERSION < 41;\n});\n","'use strict';\nvar call = require('../internals/function-call');\nvar getBuiltIn = require('../internals/get-built-in');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar defineBuiltIn = require('../internals/define-built-in');\n\nmodule.exports = function () {\n  var Symbol = getBuiltIn('Symbol');\n  var SymbolPrototype = Symbol && Symbol.prototype;\n  var valueOf = SymbolPrototype && SymbolPrototype.valueOf;\n  var TO_PRIMITIVE = wellKnownSymbol('toPrimitive');\n\n  if (SymbolPrototype && !SymbolPrototype[TO_PRIMITIVE]) {\n    // `Symbol.prototype[@@toPrimitive]` method\n    // https://tc39.es/ecma262/#sec-symbol.prototype-@@toprimitive\n    // eslint-disable-next-line no-unused-vars -- required for .length\n    defineBuiltIn(SymbolPrototype, TO_PRIMITIVE, function (hint) {\n      return call(valueOf, this);\n    }, { arity: 1 });\n  }\n};\n","'use strict';\nvar getBuiltIn = require('../internals/get-built-in');\nvar uncurryThis = require('../internals/function-uncurry-this');\n\nvar Symbol = getBuiltIn('Symbol');\nvar keyFor = Symbol.keyFor;\nvar thisSymbolValue = uncurryThis(Symbol.prototype.valueOf);\n\n// `Symbol.isRegisteredSymbol` method\n// https://tc39.es/proposal-symbol-predicates/#sec-symbol-isregisteredsymbol\nmodule.exports = Symbol.isRegisteredSymbol || function isRegisteredSymbol(value) {\n  try {\n    return keyFor(thisSymbolValue(value)) !== undefined;\n  } catch (error) {\n    return false;\n  }\n};\n","'use strict';\nvar shared = require('../internals/shared');\nvar getBuiltIn = require('../internals/get-built-in');\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar isSymbol = require('../internals/is-symbol');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar Symbol = getBuiltIn('Symbol');\nvar $isWellKnownSymbol = Symbol.isWellKnownSymbol;\nvar getOwnPropertyNames = getBuiltIn('Object', 'getOwnPropertyNames');\nvar thisSymbolValue = uncurryThis(Symbol.prototype.valueOf);\nvar WellKnownSymbolsStore = shared('wks');\n\nfor (var i = 0, symbolKeys = getOwnPropertyNames(Symbol), symbolKeysLength = symbolKeys.length; i < symbolKeysLength; i++) {\n  // some old engines throws on access to some keys like `arguments` or `caller`\n  try {\n    var symbolKey = symbolKeys[i];\n    if (isSymbol(Symbol[symbolKey])) wellKnownSymbol(symbolKey);\n  } catch (error) { /* empty */ }\n}\n\n// `Symbol.isWellKnownSymbol` method\n// https://tc39.es/proposal-symbol-predicates/#sec-symbol-iswellknownsymbol\n// We should patch it for newly added well-known symbols. If it's not required, this module just will not be injected\nmodule.exports = function isWellKnownSymbol(value) {\n  if ($isWellKnownSymbol && $isWellKnownSymbol(value)) return true;\n  try {\n    var symbol = thisSymbolValue(value);\n    for (var j = 0, keys = getOwnPropertyNames(WellKnownSymbolsStore), keysLength = keys.length; j < keysLength; j++) {\n      if (WellKnownSymbolsStore[keys[j]] == symbol) return true;\n    }\n  } catch (error) { /* empty */ }\n  return false;\n};\n","'use strict';\nvar NATIVE_SYMBOL = require('../internals/symbol-constructor-detection');\n\n/* eslint-disable es/no-symbol -- safe */\nmodule.exports = NATIVE_SYMBOL && !!Symbol['for'] && !!Symbol.keyFor;\n","'use strict';\nvar toIntegerOrInfinity = require('../internals/to-integer-or-infinity');\n\nvar max = Math.max;\nvar min = Math.min;\n\n// Helper for a popular repeating case of the spec:\n// Let integer be ? ToInteger(index).\n// If integer < 0, let result be max((length + integer), 0); else let result be min(integer, length).\nmodule.exports = function (index, length) {\n  var integer = toIntegerOrInfinity(index);\n  return integer < 0 ? max(integer + length, 0) : min(integer, length);\n};\n","'use strict';\n// toObject with fallback for non-array-like ES3 strings\nvar IndexedObject = require('../internals/indexed-object');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\n\nmodule.exports = function (it) {\n  return IndexedObject(requireObjectCoercible(it));\n};\n","'use strict';\nvar trunc = require('../internals/math-trunc');\n\n// `ToIntegerOrInfinity` abstract operation\n// https://tc39.es/ecma262/#sec-tointegerorinfinity\nmodule.exports = function (argument) {\n  var number = +argument;\n  // eslint-disable-next-line no-self-compare -- NaN check\n  return number !== number || number === 0 ? 0 : trunc(number);\n};\n","'use strict';\nvar toIntegerOrInfinity = require('../internals/to-integer-or-infinity');\n\nvar min = Math.min;\n\n// `ToLength` abstract operation\n// https://tc39.es/ecma262/#sec-tolength\nmodule.exports = function (argument) {\n  return argument > 0 ? min(toIntegerOrInfinity(argument), 0x1FFFFFFFFFFFFF) : 0; // 2 ** 53 - 1 == 9007199254740991\n};\n","'use strict';\nvar requireObjectCoercible = require('../internals/require-object-coercible');\n\nvar $Object = Object;\n\n// `ToObject` abstract operation\n// https://tc39.es/ecma262/#sec-toobject\nmodule.exports = function (argument) {\n  return $Object(requireObjectCoercible(argument));\n};\n","'use strict';\nvar call = require('../internals/function-call');\nvar isObject = require('../internals/is-object');\nvar isSymbol = require('../internals/is-symbol');\nvar getMethod = require('../internals/get-method');\nvar ordinaryToPrimitive = require('../internals/ordinary-to-primitive');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar $TypeError = TypeError;\nvar TO_PRIMITIVE = wellKnownSymbol('toPrimitive');\n\n// `ToPrimitive` abstract operation\n// https://tc39.es/ecma262/#sec-toprimitive\nmodule.exports = function (input, pref) {\n  if (!isObject(input) || isSymbol(input)) return input;\n  var exoticToPrim = getMethod(input, TO_PRIMITIVE);\n  var result;\n  if (exoticToPrim) {\n    if (pref === undefined) pref = 'default';\n    result = call(exoticToPrim, input, pref);\n    if (!isObject(result) || isSymbol(result)) return result;\n    throw $TypeError(\"Can't convert object to primitive value\");\n  }\n  if (pref === undefined) pref = 'number';\n  return ordinaryToPrimitive(input, pref);\n};\n","'use strict';\nvar toPrimitive = require('../internals/to-primitive');\nvar isSymbol = require('../internals/is-symbol');\n\n// `ToPropertyKey` abstract operation\n// https://tc39.es/ecma262/#sec-topropertykey\nmodule.exports = function (argument) {\n  var key = toPrimitive(argument, 'string');\n  return isSymbol(key) ? key : key + '';\n};\n","'use strict';\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar TO_STRING_TAG = wellKnownSymbol('toStringTag');\nvar test = {};\n\ntest[TO_STRING_TAG] = 'z';\n\nmodule.exports = String(test) === '[object z]';\n","'use strict';\nvar classof = require('../internals/classof');\n\nvar $String = String;\n\nmodule.exports = function (argument) {\n  if (classof(argument) === 'Symbol') throw TypeError('Cannot convert a Symbol value to a string');\n  return $String(argument);\n};\n","'use strict';\nvar $String = String;\n\nmodule.exports = function (argument) {\n  try {\n    return $String(argument);\n  } catch (error) {\n    return 'Object';\n  }\n};\n","'use strict';\nvar uncurryThis = require('../internals/function-uncurry-this');\n\nvar id = 0;\nvar postfix = Math.random();\nvar toString = uncurryThis(1.0.toString);\n\nmodule.exports = function (key) {\n  return 'Symbol(' + (key === undefined ? '' : key) + ')_' + toString(++id + postfix, 36);\n};\n","'use strict';\n/* eslint-disable es/no-symbol -- required for testing */\nvar NATIVE_SYMBOL = require('../internals/symbol-constructor-detection');\n\nmodule.exports = NATIVE_SYMBOL\n  && !Symbol.sham\n  && typeof Symbol.iterator == 'symbol';\n","'use strict';\nvar DESCRIPTORS = require('../internals/descriptors');\nvar fails = require('../internals/fails');\n\n// V8 ~ Chrome 36-\n// https://bugs.chromium.org/p/v8/issues/detail?id=3334\nmodule.exports = DESCRIPTORS && fails(function () {\n  // eslint-disable-next-line es/no-object-defineproperty -- required for testing\n  return Object.defineProperty(function () { /* empty */ }, 'prototype', {\n    value: 42,\n    writable: false\n  }).prototype != 42;\n});\n","'use strict';\nvar global = require('../internals/global');\nvar isCallable = require('../internals/is-callable');\n\nvar WeakMap = global.WeakMap;\n\nmodule.exports = isCallable(WeakMap) && /native code/.test(String(WeakMap));\n","'use strict';\nvar path = require('../internals/path');\nvar hasOwn = require('../internals/has-own-property');\nvar wrappedWellKnownSymbolModule = require('../internals/well-known-symbol-wrapped');\nvar defineProperty = require('../internals/object-define-property').f;\n\nmodule.exports = function (NAME) {\n  var Symbol = path.Symbol || (path.Symbol = {});\n  if (!hasOwn(Symbol, NAME)) defineProperty(Symbol, NAME, {\n    value: wrappedWellKnownSymbolModule.f(NAME)\n  });\n};\n","'use strict';\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nexports.f = wellKnownSymbol;\n","'use strict';\nvar global = require('../internals/global');\nvar shared = require('../internals/shared');\nvar hasOwn = require('../internals/has-own-property');\nvar uid = require('../internals/uid');\nvar NATIVE_SYMBOL = require('../internals/symbol-constructor-detection');\nvar USE_SYMBOL_AS_UID = require('../internals/use-symbol-as-uid');\n\nvar Symbol = global.Symbol;\nvar WellKnownSymbolsStore = shared('wks');\nvar createWellKnownSymbol = USE_SYMBOL_AS_UID ? Symbol['for'] || Symbol : Symbol && Symbol.withoutSetter || uid;\n\nmodule.exports = function (name) {\n  if (!hasOwn(WellKnownSymbolsStore, name)) {\n    WellKnownSymbolsStore[name] = NATIVE_SYMBOL && hasOwn(Symbol, name)\n      ? Symbol[name]\n      : createWellKnownSymbol('Symbol.' + name);\n  } return WellKnownSymbolsStore[name];\n};\n","'use strict';\nvar $ = require('../internals/export');\nvar fails = require('../internals/fails');\nvar isArray = require('../internals/is-array');\nvar isObject = require('../internals/is-object');\nvar toObject = require('../internals/to-object');\nvar lengthOfArrayLike = require('../internals/length-of-array-like');\nvar doesNotExceedSafeInteger = require('../internals/does-not-exceed-safe-integer');\nvar createProperty = require('../internals/create-property');\nvar arraySpeciesCreate = require('../internals/array-species-create');\nvar arrayMethodHasSpeciesSupport = require('../internals/array-method-has-species-support');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar V8_VERSION = require('../internals/engine-v8-version');\n\nvar IS_CONCAT_SPREADABLE = wellKnownSymbol('isConcatSpreadable');\n\n// We can't use this feature detection in V8 since it causes\n// deoptimization and serious performance degradation\n// https://github.com/zloirock/core-js/issues/679\nvar IS_CONCAT_SPREADABLE_SUPPORT = V8_VERSION >= 51 || !fails(function () {\n  var array = [];\n  array[IS_CONCAT_SPREADABLE] = false;\n  return array.concat()[0] !== array;\n});\n\nvar isConcatSpreadable = function (O) {\n  if (!isObject(O)) return false;\n  var spreadable = O[IS_CONCAT_SPREADABLE];\n  return spreadable !== undefined ? !!spreadable : isArray(O);\n};\n\nvar FORCED = !IS_CONCAT_SPREADABLE_SUPPORT || !arrayMethodHasSpeciesSupport('concat');\n\n// `Array.prototype.concat` method\n// https://tc39.es/ecma262/#sec-array.prototype.concat\n// with adding support of @@isConcatSpreadable and @@species\n$({ target: 'Array', proto: true, arity: 1, forced: FORCED }, {\n  // eslint-disable-next-line no-unused-vars -- required for `.length`\n  concat: function concat(arg) {\n    var O = toObject(this);\n    var A = arraySpeciesCreate(O, 0);\n    var n = 0;\n    var i, k, length, len, E;\n    for (i = -1, length = arguments.length; i < length; i++) {\n      E = i === -1 ? O : arguments[i];\n      if (isConcatSpreadable(E)) {\n        len = lengthOfArrayLike(E);\n        doesNotExceedSafeInteger(n + len);\n        for (k = 0; k < len; k++, n++) if (k in E) createProperty(A, n, E[k]);\n      } else {\n        doesNotExceedSafeInteger(n + 1);\n        createProperty(A, n++, E);\n      }\n    }\n    A.length = n;\n    return A;\n  }\n});\n","'use strict';\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar addToUnscopables = require('../internals/add-to-unscopables');\nvar Iterators = require('../internals/iterators');\nvar InternalStateModule = require('../internals/internal-state');\nvar defineProperty = require('../internals/object-define-property').f;\nvar defineIterator = require('../internals/iterator-define');\nvar createIterResultObject = require('../internals/create-iter-result-object');\nvar IS_PURE = require('../internals/is-pure');\nvar DESCRIPTORS = require('../internals/descriptors');\n\nvar ARRAY_ITERATOR = 'Array Iterator';\nvar setInternalState = InternalStateModule.set;\nvar getInternalState = InternalStateModule.getterFor(ARRAY_ITERATOR);\n\n// `Array.prototype.entries` method\n// https://tc39.es/ecma262/#sec-array.prototype.entries\n// `Array.prototype.keys` method\n// https://tc39.es/ecma262/#sec-array.prototype.keys\n// `Array.prototype.values` method\n// https://tc39.es/ecma262/#sec-array.prototype.values\n// `Array.prototype[@@iterator]` method\n// https://tc39.es/ecma262/#sec-array.prototype-@@iterator\n// `CreateArrayIterator` internal method\n// https://tc39.es/ecma262/#sec-createarrayiterator\nmodule.exports = defineIterator(Array, 'Array', function (iterated, kind) {\n  setInternalState(this, {\n    type: ARRAY_ITERATOR,\n    target: toIndexedObject(iterated), // target\n    index: 0,                          // next index\n    kind: kind                         // kind\n  });\n// `%ArrayIteratorPrototype%.next` method\n// https://tc39.es/ecma262/#sec-%arrayiteratorprototype%.next\n}, function () {\n  var state = getInternalState(this);\n  var target = state.target;\n  var kind = state.kind;\n  var index = state.index++;\n  if (!target || index >= target.length) {\n    state.target = undefined;\n    return createIterResultObject(undefined, true);\n  }\n  if (kind == 'keys') return createIterResultObject(index, false);\n  if (kind == 'values') return createIterResultObject(target[index], false);\n  return createIterResultObject([index, target[index]], false);\n}, 'values');\n\n// argumentsList[@@iterator] is %ArrayProto_values%\n// https://tc39.es/ecma262/#sec-createunmappedargumentsobject\n// https://tc39.es/ecma262/#sec-createmappedargumentsobject\nvar values = Iterators.Arguments = Iterators.Array;\n\n// https://tc39.es/ecma262/#sec-array.prototype-@@unscopables\naddToUnscopables('keys');\naddToUnscopables('values');\naddToUnscopables('entries');\n\n// V8 ~ Chrome 45- bug\nif (!IS_PURE && DESCRIPTORS && values.name !== 'values') try {\n  defineProperty(values, 'name', { value: 'values' });\n} catch (error) { /* empty */ }\n","'use strict';\nvar $ = require('../internals/export');\nvar getBuiltIn = require('../internals/get-built-in');\nvar apply = require('../internals/function-apply');\nvar call = require('../internals/function-call');\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar fails = require('../internals/fails');\nvar isCallable = require('../internals/is-callable');\nvar isSymbol = require('../internals/is-symbol');\nvar arraySlice = require('../internals/array-slice');\nvar getReplacerFunction = require('../internals/get-json-replacer-function');\nvar NATIVE_SYMBOL = require('../internals/symbol-constructor-detection');\n\nvar $String = String;\nvar $stringify = getBuiltIn('JSON', 'stringify');\nvar exec = uncurryThis(/./.exec);\nvar charAt = uncurryThis(''.charAt);\nvar charCodeAt = uncurryThis(''.charCodeAt);\nvar replace = uncurryThis(''.replace);\nvar numberToString = uncurryThis(1.0.toString);\n\nvar tester = /[\\uD800-\\uDFFF]/g;\nvar low = /^[\\uD800-\\uDBFF]$/;\nvar hi = /^[\\uDC00-\\uDFFF]$/;\n\nvar WRONG_SYMBOLS_CONVERSION = !NATIVE_SYMBOL || fails(function () {\n  var symbol = getBuiltIn('Symbol')();\n  // MS Edge converts symbol values to JSON as {}\n  return $stringify([symbol]) != '[null]'\n    // WebKit converts symbol values to JSON as null\n    || $stringify({ a: symbol }) != '{}'\n    // V8 throws on boxed symbols\n    || $stringify(Object(symbol)) != '{}';\n});\n\n// https://github.com/tc39/proposal-well-formed-stringify\nvar ILL_FORMED_UNICODE = fails(function () {\n  return $stringify('\\uDF06\\uD834') !== '\"\\\\udf06\\\\ud834\"'\n    || $stringify('\\uDEAD') !== '\"\\\\udead\"';\n});\n\nvar stringifyWithSymbolsFix = function (it, replacer) {\n  var args = arraySlice(arguments);\n  var $replacer = getReplacerFunction(replacer);\n  if (!isCallable($replacer) && (it === undefined || isSymbol(it))) return; // IE8 returns string on undefined\n  args[1] = function (key, value) {\n    // some old implementations (like WebKit) could pass numbers as keys\n    if (isCallable($replacer)) value = call($replacer, this, $String(key), value);\n    if (!isSymbol(value)) return value;\n  };\n  return apply($stringify, null, args);\n};\n\nvar fixIllFormed = function (match, offset, string) {\n  var prev = charAt(string, offset - 1);\n  var next = charAt(string, offset + 1);\n  if ((exec(low, match) && !exec(hi, next)) || (exec(hi, match) && !exec(low, prev))) {\n    return '\\\\u' + numberToString(charCodeAt(match, 0), 16);\n  } return match;\n};\n\nif ($stringify) {\n  // `JSON.stringify` method\n  // https://tc39.es/ecma262/#sec-json.stringify\n  $({ target: 'JSON', stat: true, arity: 3, forced: WRONG_SYMBOLS_CONVERSION || ILL_FORMED_UNICODE }, {\n    // eslint-disable-next-line no-unused-vars -- required for `.length`\n    stringify: function stringify(it, replacer, space) {\n      var args = arraySlice(arguments);\n      var result = apply(WRONG_SYMBOLS_CONVERSION ? stringifyWithSymbolsFix : $stringify, null, args);\n      return ILL_FORMED_UNICODE && typeof result == 'string' ? replace(result, tester, fixIllFormed) : result;\n    }\n  });\n}\n","'use strict';\nvar global = require('../internals/global');\nvar setToStringTag = require('../internals/set-to-string-tag');\n\n// JSON[@@toStringTag] property\n// https://tc39.es/ecma262/#sec-json-@@tostringtag\nsetToStringTag(global.JSON, 'JSON', true);\n","'use strict';\nvar $ = require('../internals/export');\nvar DESCRIPTORS = require('../internals/descriptors');\nvar defineProperty = require('../internals/object-define-property').f;\n\n// `Object.defineProperty` method\n// https://tc39.es/ecma262/#sec-object.defineproperty\n// eslint-disable-next-line es/no-object-defineproperty -- safe\n$({ target: 'Object', stat: true, forced: Object.defineProperty !== defineProperty, sham: !DESCRIPTORS }, {\n  defineProperty: defineProperty\n});\n","'use strict';\nvar $ = require('../internals/export');\nvar NATIVE_SYMBOL = require('../internals/symbol-constructor-detection');\nvar fails = require('../internals/fails');\nvar getOwnPropertySymbolsModule = require('../internals/object-get-own-property-symbols');\nvar toObject = require('../internals/to-object');\n\n// V8 ~ Chrome 38 and 39 `Object.getOwnPropertySymbols` fails on primitives\n// https://bugs.chromium.org/p/v8/issues/detail?id=3443\nvar FORCED = !NATIVE_SYMBOL || fails(function () { getOwnPropertySymbolsModule.f(1); });\n\n// `Object.getOwnPropertySymbols` method\n// https://tc39.es/ecma262/#sec-object.getownpropertysymbols\n$({ target: 'Object', stat: true, forced: FORCED }, {\n  getOwnPropertySymbols: function getOwnPropertySymbols(it) {\n    var $getOwnPropertySymbols = getOwnPropertySymbolsModule.f;\n    return $getOwnPropertySymbols ? $getOwnPropertySymbols(toObject(it)) : [];\n  }\n});\n","'use strict';\nvar charAt = require('../internals/string-multibyte').charAt;\nvar toString = require('../internals/to-string');\nvar InternalStateModule = require('../internals/internal-state');\nvar defineIterator = require('../internals/iterator-define');\nvar createIterResultObject = require('../internals/create-iter-result-object');\n\nvar STRING_ITERATOR = 'String Iterator';\nvar setInternalState = InternalStateModule.set;\nvar getInternalState = InternalStateModule.getterFor(STRING_ITERATOR);\n\n// `String.prototype[@@iterator]` method\n// https://tc39.es/ecma262/#sec-string.prototype-@@iterator\ndefineIterator(String, 'String', function (iterated) {\n  setInternalState(this, {\n    type: STRING_ITERATOR,\n    string: toString(iterated),\n    index: 0\n  });\n// `%StringIteratorPrototype%.next` method\n// https://tc39.es/ecma262/#sec-%stringiteratorprototype%.next\n}, function next() {\n  var state = getInternalState(this);\n  var string = state.string;\n  var index = state.index;\n  var point;\n  if (index >= string.length) return createIterResultObject(undefined, true);\n  point = charAt(string, index);\n  state.index += point.length;\n  return createIterResultObject(point, false);\n});\n","'use strict';\nvar defineWellKnownSymbol = require('../internals/well-known-symbol-define');\n\n// `Symbol.asyncIterator` well-known symbol\n// https://tc39.es/ecma262/#sec-symbol.asynciterator\ndefineWellKnownSymbol('asyncIterator');\n","'use strict';\nvar $ = require('../internals/export');\nvar global = require('../internals/global');\nvar call = require('../internals/function-call');\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar IS_PURE = require('../internals/is-pure');\nvar DESCRIPTORS = require('../internals/descriptors');\nvar NATIVE_SYMBOL = require('../internals/symbol-constructor-detection');\nvar fails = require('../internals/fails');\nvar hasOwn = require('../internals/has-own-property');\nvar isPrototypeOf = require('../internals/object-is-prototype-of');\nvar anObject = require('../internals/an-object');\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar toPropertyKey = require('../internals/to-property-key');\nvar $toString = require('../internals/to-string');\nvar createPropertyDescriptor = require('../internals/create-property-descriptor');\nvar nativeObjectCreate = require('../internals/object-create');\nvar objectKeys = require('../internals/object-keys');\nvar getOwnPropertyNamesModule = require('../internals/object-get-own-property-names');\nvar getOwnPropertyNamesExternal = require('../internals/object-get-own-property-names-external');\nvar getOwnPropertySymbolsModule = require('../internals/object-get-own-property-symbols');\nvar getOwnPropertyDescriptorModule = require('../internals/object-get-own-property-descriptor');\nvar definePropertyModule = require('../internals/object-define-property');\nvar definePropertiesModule = require('../internals/object-define-properties');\nvar propertyIsEnumerableModule = require('../internals/object-property-is-enumerable');\nvar defineBuiltIn = require('../internals/define-built-in');\nvar defineBuiltInAccessor = require('../internals/define-built-in-accessor');\nvar shared = require('../internals/shared');\nvar sharedKey = require('../internals/shared-key');\nvar hiddenKeys = require('../internals/hidden-keys');\nvar uid = require('../internals/uid');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar wrappedWellKnownSymbolModule = require('../internals/well-known-symbol-wrapped');\nvar defineWellKnownSymbol = require('../internals/well-known-symbol-define');\nvar defineSymbolToPrimitive = require('../internals/symbol-define-to-primitive');\nvar setToStringTag = require('../internals/set-to-string-tag');\nvar InternalStateModule = require('../internals/internal-state');\nvar $forEach = require('../internals/array-iteration').forEach;\n\nvar HIDDEN = sharedKey('hidden');\nvar SYMBOL = 'Symbol';\nvar PROTOTYPE = 'prototype';\n\nvar setInternalState = InternalStateModule.set;\nvar getInternalState = InternalStateModule.getterFor(SYMBOL);\n\nvar ObjectPrototype = Object[PROTOTYPE];\nvar $Symbol = global.Symbol;\nvar SymbolPrototype = $Symbol && $Symbol[PROTOTYPE];\nvar TypeError = global.TypeError;\nvar QObject = global.QObject;\nvar nativeGetOwnPropertyDescriptor = getOwnPropertyDescriptorModule.f;\nvar nativeDefineProperty = definePropertyModule.f;\nvar nativeGetOwnPropertyNames = getOwnPropertyNamesExternal.f;\nvar nativePropertyIsEnumerable = propertyIsEnumerableModule.f;\nvar push = uncurryThis([].push);\n\nvar AllSymbols = shared('symbols');\nvar ObjectPrototypeSymbols = shared('op-symbols');\nvar WellKnownSymbolsStore = shared('wks');\n\n// Don't use setters in Qt Script, https://github.com/zloirock/core-js/issues/173\nvar USE_SETTER = !QObject || !QObject[PROTOTYPE] || !QObject[PROTOTYPE].findChild;\n\n// fallback for old Android, https://code.google.com/p/v8/issues/detail?id=687\nvar setSymbolDescriptor = DESCRIPTORS && fails(function () {\n  return nativeObjectCreate(nativeDefineProperty({}, 'a', {\n    get: function () { return nativeDefineProperty(this, 'a', { value: 7 }).a; }\n  })).a != 7;\n}) ? function (O, P, Attributes) {\n  var ObjectPrototypeDescriptor = nativeGetOwnPropertyDescriptor(ObjectPrototype, P);\n  if (ObjectPrototypeDescriptor) delete ObjectPrototype[P];\n  nativeDefineProperty(O, P, Attributes);\n  if (ObjectPrototypeDescriptor && O !== ObjectPrototype) {\n    nativeDefineProperty(ObjectPrototype, P, ObjectPrototypeDescriptor);\n  }\n} : nativeDefineProperty;\n\nvar wrap = function (tag, description) {\n  var symbol = AllSymbols[tag] = nativeObjectCreate(SymbolPrototype);\n  setInternalState(symbol, {\n    type: SYMBOL,\n    tag: tag,\n    description: description\n  });\n  if (!DESCRIPTORS) symbol.description = description;\n  return symbol;\n};\n\nvar $defineProperty = function defineProperty(O, P, Attributes) {\n  if (O === ObjectPrototype) $defineProperty(ObjectPrototypeSymbols, P, Attributes);\n  anObject(O);\n  var key = toPropertyKey(P);\n  anObject(Attributes);\n  if (hasOwn(AllSymbols, key)) {\n    if (!Attributes.enumerable) {\n      if (!hasOwn(O, HIDDEN)) nativeDefineProperty(O, HIDDEN, createPropertyDescriptor(1, {}));\n      O[HIDDEN][key] = true;\n    } else {\n      if (hasOwn(O, HIDDEN) && O[HIDDEN][key]) O[HIDDEN][key] = false;\n      Attributes = nativeObjectCreate(Attributes, { enumerable: createPropertyDescriptor(0, false) });\n    } return setSymbolDescriptor(O, key, Attributes);\n  } return nativeDefineProperty(O, key, Attributes);\n};\n\nvar $defineProperties = function defineProperties(O, Properties) {\n  anObject(O);\n  var properties = toIndexedObject(Properties);\n  var keys = objectKeys(properties).concat($getOwnPropertySymbols(properties));\n  $forEach(keys, function (key) {\n    if (!DESCRIPTORS || call($propertyIsEnumerable, properties, key)) $defineProperty(O, key, properties[key]);\n  });\n  return O;\n};\n\nvar $create = function create(O, Properties) {\n  return Properties === undefined ? nativeObjectCreate(O) : $defineProperties(nativeObjectCreate(O), Properties);\n};\n\nvar $propertyIsEnumerable = function propertyIsEnumerable(V) {\n  var P = toPropertyKey(V);\n  var enumerable = call(nativePropertyIsEnumerable, this, P);\n  if (this === ObjectPrototype && hasOwn(AllSymbols, P) && !hasOwn(ObjectPrototypeSymbols, P)) return false;\n  return enumerable || !hasOwn(this, P) || !hasOwn(AllSymbols, P) || hasOwn(this, HIDDEN) && this[HIDDEN][P]\n    ? enumerable : true;\n};\n\nvar $getOwnPropertyDescriptor = function getOwnPropertyDescriptor(O, P) {\n  var it = toIndexedObject(O);\n  var key = toPropertyKey(P);\n  if (it === ObjectPrototype && hasOwn(AllSymbols, key) && !hasOwn(ObjectPrototypeSymbols, key)) return;\n  var descriptor = nativeGetOwnPropertyDescriptor(it, key);\n  if (descriptor && hasOwn(AllSymbols, key) && !(hasOwn(it, HIDDEN) && it[HIDDEN][key])) {\n    descriptor.enumerable = true;\n  }\n  return descriptor;\n};\n\nvar $getOwnPropertyNames = function getOwnPropertyNames(O) {\n  var names = nativeGetOwnPropertyNames(toIndexedObject(O));\n  var result = [];\n  $forEach(names, function (key) {\n    if (!hasOwn(AllSymbols, key) && !hasOwn(hiddenKeys, key)) push(result, key);\n  });\n  return result;\n};\n\nvar $getOwnPropertySymbols = function (O) {\n  var IS_OBJECT_PROTOTYPE = O === ObjectPrototype;\n  var names = nativeGetOwnPropertyNames(IS_OBJECT_PROTOTYPE ? ObjectPrototypeSymbols : toIndexedObject(O));\n  var result = [];\n  $forEach(names, function (key) {\n    if (hasOwn(AllSymbols, key) && (!IS_OBJECT_PROTOTYPE || hasOwn(ObjectPrototype, key))) {\n      push(result, AllSymbols[key]);\n    }\n  });\n  return result;\n};\n\n// `Symbol` constructor\n// https://tc39.es/ecma262/#sec-symbol-constructor\nif (!NATIVE_SYMBOL) {\n  $Symbol = function Symbol() {\n    if (isPrototypeOf(SymbolPrototype, this)) throw TypeError('Symbol is not a constructor');\n    var description = !arguments.length || arguments[0] === undefined ? undefined : $toString(arguments[0]);\n    var tag = uid(description);\n    var setter = function (value) {\n      if (this === ObjectPrototype) call(setter, ObjectPrototypeSymbols, value);\n      if (hasOwn(this, HIDDEN) && hasOwn(this[HIDDEN], tag)) this[HIDDEN][tag] = false;\n      setSymbolDescriptor(this, tag, createPropertyDescriptor(1, value));\n    };\n    if (DESCRIPTORS && USE_SETTER) setSymbolDescriptor(ObjectPrototype, tag, { configurable: true, set: setter });\n    return wrap(tag, description);\n  };\n\n  SymbolPrototype = $Symbol[PROTOTYPE];\n\n  defineBuiltIn(SymbolPrototype, 'toString', function toString() {\n    return getInternalState(this).tag;\n  });\n\n  defineBuiltIn($Symbol, 'withoutSetter', function (description) {\n    return wrap(uid(description), description);\n  });\n\n  propertyIsEnumerableModule.f = $propertyIsEnumerable;\n  definePropertyModule.f = $defineProperty;\n  definePropertiesModule.f = $defineProperties;\n  getOwnPropertyDescriptorModule.f = $getOwnPropertyDescriptor;\n  getOwnPropertyNamesModule.f = getOwnPropertyNamesExternal.f = $getOwnPropertyNames;\n  getOwnPropertySymbolsModule.f = $getOwnPropertySymbols;\n\n  wrappedWellKnownSymbolModule.f = function (name) {\n    return wrap(wellKnownSymbol(name), name);\n  };\n\n  if (DESCRIPTORS) {\n    // https://github.com/tc39/proposal-Symbol-description\n    defineBuiltInAccessor(SymbolPrototype, 'description', {\n      configurable: true,\n      get: function description() {\n        return getInternalState(this).description;\n      }\n    });\n    if (!IS_PURE) {\n      defineBuiltIn(ObjectPrototype, 'propertyIsEnumerable', $propertyIsEnumerable, { unsafe: true });\n    }\n  }\n}\n\n$({ global: true, constructor: true, wrap: true, forced: !NATIVE_SYMBOL, sham: !NATIVE_SYMBOL }, {\n  Symbol: $Symbol\n});\n\n$forEach(objectKeys(WellKnownSymbolsStore), function (name) {\n  defineWellKnownSymbol(name);\n});\n\n$({ target: SYMBOL, stat: true, forced: !NATIVE_SYMBOL }, {\n  useSetter: function () { USE_SETTER = true; },\n  useSimple: function () { USE_SETTER = false; }\n});\n\n$({ target: 'Object', stat: true, forced: !NATIVE_SYMBOL, sham: !DESCRIPTORS }, {\n  // `Object.create` method\n  // https://tc39.es/ecma262/#sec-object.create\n  create: $create,\n  // `Object.defineProperty` method\n  // https://tc39.es/ecma262/#sec-object.defineproperty\n  defineProperty: $defineProperty,\n  // `Object.defineProperties` method\n  // https://tc39.es/ecma262/#sec-object.defineproperties\n  defineProperties: $defineProperties,\n  // `Object.getOwnPropertyDescriptor` method\n  // https://tc39.es/ecma262/#sec-object.getownpropertydescriptors\n  getOwnPropertyDescriptor: $getOwnPropertyDescriptor\n});\n\n$({ target: 'Object', stat: true, forced: !NATIVE_SYMBOL }, {\n  // `Object.getOwnPropertyNames` method\n  // https://tc39.es/ecma262/#sec-object.getownpropertynames\n  getOwnPropertyNames: $getOwnPropertyNames\n});\n\n// `Symbol.prototype[@@toPrimitive]` method\n// https://tc39.es/ecma262/#sec-symbol.prototype-@@toprimitive\ndefineSymbolToPrimitive();\n\n// `Symbol.prototype[@@toStringTag]` property\n// https://tc39.es/ecma262/#sec-symbol.prototype-@@tostringtag\nsetToStringTag($Symbol, SYMBOL);\n\nhiddenKeys[HIDDEN] = true;\n","'use strict';\nvar $ = require('../internals/export');\nvar getBuiltIn = require('../internals/get-built-in');\nvar hasOwn = require('../internals/has-own-property');\nvar toString = require('../internals/to-string');\nvar shared = require('../internals/shared');\nvar NATIVE_SYMBOL_REGISTRY = require('../internals/symbol-registry-detection');\n\nvar StringToSymbolRegistry = shared('string-to-symbol-registry');\nvar SymbolToStringRegistry = shared('symbol-to-string-registry');\n\n// `Symbol.for` method\n// https://tc39.es/ecma262/#sec-symbol.for\n$({ target: 'Symbol', stat: true, forced: !NATIVE_SYMBOL_REGISTRY }, {\n  'for': function (key) {\n    var string = toString(key);\n    if (hasOwn(StringToSymbolRegistry, string)) return StringToSymbolRegistry[string];\n    var symbol = getBuiltIn('Symbol')(string);\n    StringToSymbolRegistry[string] = symbol;\n    SymbolToStringRegistry[symbol] = string;\n    return symbol;\n  }\n});\n","'use strict';\nvar defineWellKnownSymbol = require('../internals/well-known-symbol-define');\n\n// `Symbol.hasInstance` well-known symbol\n// https://tc39.es/ecma262/#sec-symbol.hasinstance\ndefineWellKnownSymbol('hasInstance');\n","'use strict';\nvar defineWellKnownSymbol = require('../internals/well-known-symbol-define');\n\n// `Symbol.isConcatSpreadable` well-known symbol\n// https://tc39.es/ecma262/#sec-symbol.isconcatspreadable\ndefineWellKnownSymbol('isConcatSpreadable');\n","'use strict';\nvar defineWellKnownSymbol = require('../internals/well-known-symbol-define');\n\n// `Symbol.iterator` well-known symbol\n// https://tc39.es/ecma262/#sec-symbol.iterator\ndefineWellKnownSymbol('iterator');\n","'use strict';\n// TODO: Remove this module from `core-js@4` since it's split to modules listed below\nrequire('../modules/es.symbol.constructor');\nrequire('../modules/es.symbol.for');\nrequire('../modules/es.symbol.key-for');\nrequire('../modules/es.json.stringify');\nrequire('../modules/es.object.get-own-property-symbols');\n","'use strict';\nvar $ = require('../internals/export');\nvar hasOwn = require('../internals/has-own-property');\nvar isSymbol = require('../internals/is-symbol');\nvar tryToString = require('../internals/try-to-string');\nvar shared = require('../internals/shared');\nvar NATIVE_SYMBOL_REGISTRY = require('../internals/symbol-registry-detection');\n\nvar SymbolToStringRegistry = shared('symbol-to-string-registry');\n\n// `Symbol.keyFor` method\n// https://tc39.es/ecma262/#sec-symbol.keyfor\n$({ target: 'Symbol', stat: true, forced: !NATIVE_SYMBOL_REGISTRY }, {\n  keyFor: function keyFor(sym) {\n    if (!isSymbol(sym)) throw TypeError(tryToString(sym) + ' is not a symbol');\n    if (hasOwn(SymbolToStringRegistry, sym)) return SymbolToStringRegistry[sym];\n  }\n});\n","'use strict';\nvar defineWellKnownSymbol = require('../internals/well-known-symbol-define');\n\n// `Symbol.matchAll` well-known symbol\n// https://tc39.es/ecma262/#sec-symbol.matchall\ndefineWellKnownSymbol('matchAll');\n","'use strict';\nvar defineWellKnownSymbol = require('../internals/well-known-symbol-define');\n\n// `Symbol.match` well-known symbol\n// https://tc39.es/ecma262/#sec-symbol.match\ndefineWellKnownSymbol('match');\n","'use strict';\nvar defineWellKnownSymbol = require('../internals/well-known-symbol-define');\n\n// `Symbol.replace` well-known symbol\n// https://tc39.es/ecma262/#sec-symbol.replace\ndefineWellKnownSymbol('replace');\n","'use strict';\nvar defineWellKnownSymbol = require('../internals/well-known-symbol-define');\n\n// `Symbol.search` well-known symbol\n// https://tc39.es/ecma262/#sec-symbol.search\ndefineWellKnownSymbol('search');\n","'use strict';\nvar defineWellKnownSymbol = require('../internals/well-known-symbol-define');\n\n// `Symbol.species` well-known symbol\n// https://tc39.es/ecma262/#sec-symbol.species\ndefineWellKnownSymbol('species');\n","'use strict';\nvar defineWellKnownSymbol = require('../internals/well-known-symbol-define');\n\n// `Symbol.split` well-known symbol\n// https://tc39.es/ecma262/#sec-symbol.split\ndefineWellKnownSymbol('split');\n","'use strict';\nvar defineWellKnownSymbol = require('../internals/well-known-symbol-define');\nvar defineSymbolToPrimitive = require('../internals/symbol-define-to-primitive');\n\n// `Symbol.toPrimitive` well-known symbol\n// https://tc39.es/ecma262/#sec-symbol.toprimitive\ndefineWellKnownSymbol('toPrimitive');\n\n// `Symbol.prototype[@@toPrimitive]` method\n// https://tc39.es/ecma262/#sec-symbol.prototype-@@toprimitive\ndefineSymbolToPrimitive();\n","'use strict';\nvar getBuiltIn = require('../internals/get-built-in');\nvar defineWellKnownSymbol = require('../internals/well-known-symbol-define');\nvar setToStringTag = require('../internals/set-to-string-tag');\n\n// `Symbol.toStringTag` well-known symbol\n// https://tc39.es/ecma262/#sec-symbol.tostringtag\ndefineWellKnownSymbol('toStringTag');\n\n// `Symbol.prototype[@@toStringTag]` property\n// https://tc39.es/ecma262/#sec-symbol.prototype-@@tostringtag\nsetToStringTag(getBuiltIn('Symbol'), 'Symbol');\n","'use strict';\nvar defineWellKnownSymbol = require('../internals/well-known-symbol-define');\n\n// `Symbol.unscopables` well-known symbol\n// https://tc39.es/ecma262/#sec-symbol.unscopables\ndefineWellKnownSymbol('unscopables');\n","'use strict';\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar defineProperty = require('../internals/object-define-property').f;\n\nvar METADATA = wellKnownSymbol('metadata');\nvar FunctionPrototype = Function.prototype;\n\n// Function.prototype[@@metadata]\n// https://github.com/tc39/proposal-decorator-metadata\nif (FunctionPrototype[METADATA] === undefined) {\n  defineProperty(FunctionPrototype, METADATA, {\n    value: null\n  });\n}\n","'use strict';\nvar defineWellKnownSymbol = require('../internals/well-known-symbol-define');\n\n// `Symbol.asyncDispose` well-known symbol\n// https://github.com/tc39/proposal-async-explicit-resource-management\ndefineWellKnownSymbol('asyncDispose');\n","'use strict';\nvar defineWellKnownSymbol = require('../internals/well-known-symbol-define');\n\n// `Symbol.dispose` well-known symbol\n// https://github.com/tc39/proposal-explicit-resource-management\ndefineWellKnownSymbol('dispose');\n","'use strict';\nvar $ = require('../internals/export');\nvar isRegisteredSymbol = require('../internals/symbol-is-registered');\n\n// `Symbol.isRegisteredSymbol` method\n// https://tc39.es/proposal-symbol-predicates/#sec-symbol-isregisteredsymbol\n$({ target: 'Symbol', stat: true }, {\n  isRegisteredSymbol: isRegisteredSymbol\n});\n","'use strict';\nvar $ = require('../internals/export');\nvar isRegisteredSymbol = require('../internals/symbol-is-registered');\n\n// `Symbol.isRegistered` method\n// obsolete version of https://tc39.es/proposal-symbol-predicates/#sec-symbol-isregisteredsymbol\n$({ target: 'Symbol', stat: true, name: 'isRegisteredSymbol' }, {\n  isRegistered: isRegisteredSymbol\n});\n","'use strict';\nvar $ = require('../internals/export');\nvar isWellKnownSymbol = require('../internals/symbol-is-well-known');\n\n// `Symbol.isWellKnownSymbol` method\n// https://tc39.es/proposal-symbol-predicates/#sec-symbol-iswellknownsymbol\n// We should patch it for newly added well-known symbols. If it's not required, this module just will not be injected\n$({ target: 'Symbol', stat: true, forced: true }, {\n  isWellKnownSymbol: isWellKnownSymbol\n});\n","'use strict';\nvar $ = require('../internals/export');\nvar isWellKnownSymbol = require('../internals/symbol-is-well-known');\n\n// `Symbol.isWellKnown` method\n// obsolete version of https://tc39.es/proposal-symbol-predicates/#sec-symbol-iswellknownsymbol\n// We should patch it for newly added well-known symbols. If it's not required, this module just will not be injected\n$({ target: 'Symbol', stat: true, name: 'isWellKnownSymbol', forced: true }, {\n  isWellKnown: isWellKnownSymbol\n});\n","'use strict';\nvar defineWellKnownSymbol = require('../internals/well-known-symbol-define');\n\n// `Symbol.matcher` well-known symbol\n// https://github.com/tc39/proposal-pattern-matching\ndefineWellKnownSymbol('matcher');\n","'use strict';\nvar defineWellKnownSymbol = require('../internals/well-known-symbol-define');\n\n// `Symbol.metadataKey` well-known symbol\n// https://github.com/tc39/proposal-decorator-metadata\ndefineWellKnownSymbol('metadataKey');\n","'use strict';\n// TODO: Remove from `core-js@4`\nvar defineWellKnownSymbol = require('../internals/well-known-symbol-define');\n\n// `Symbol.metadata` well-known symbol\n// https://github.com/tc39/proposal-decorators\ndefineWellKnownSymbol('metadata');\n","'use strict';\nvar defineWellKnownSymbol = require('../internals/well-known-symbol-define');\n\n// `Symbol.observable` well-known symbol\n// https://github.com/tc39/proposal-observable\ndefineWellKnownSymbol('observable');\n","'use strict';\n// TODO: remove from `core-js@4`\nvar defineWellKnownSymbol = require('../internals/well-known-symbol-define');\n\n// `Symbol.patternMatch` well-known symbol\n// https://github.com/tc39/proposal-pattern-matching\ndefineWellKnownSymbol('patternMatch');\n","'use strict';\n// TODO: remove from `core-js@4`\nvar defineWellKnownSymbol = require('../internals/well-known-symbol-define');\n\ndefineWellKnownSymbol('replaceAll');\n","'use strict';\nrequire('../modules/es.array.iterator');\nvar DOMIterables = require('../internals/dom-iterables');\nvar global = require('../internals/global');\nvar classof = require('../internals/classof');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\nvar Iterators = require('../internals/iterators');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar TO_STRING_TAG = wellKnownSymbol('toStringTag');\n\nfor (var COLLECTION_NAME in DOMIterables) {\n  var Collection = global[COLLECTION_NAME];\n  var CollectionPrototype = Collection && Collection.prototype;\n  if (CollectionPrototype && classof(CollectionPrototype) !== TO_STRING_TAG) {\n    createNonEnumerableProperty(CollectionPrototype, TO_STRING_TAG, COLLECTION_NAME);\n  }\n  Iterators[COLLECTION_NAME] = Iterators.Array;\n}\n","'use strict';\nvar parent = require('../../es/object/define-property');\n\nmodule.exports = parent;\n","'use strict';\nvar parent = require('../../es/symbol');\nrequire('../../modules/web.dom-collections.iterator');\n\nmodule.exports = parent;\n","'use strict';\nvar parent = require('../../es/symbol/iterator');\nrequire('../../modules/web.dom-collections.iterator');\n\nmodule.exports = parent;\n","'use strict';\nvar parent = require('../../es/symbol/to-primitive');\n\nmodule.exports = parent;\n","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      ctor.prototype = Object.create(superCtor.prototype, {\n        constructor: {\n          value: ctor,\n          enumerable: false,\n          writable: true,\n          configurable: true\n        }\n      })\n    }\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      var TempCtor = function () {}\n      TempCtor.prototype = superCtor.prototype\n      ctor.prototype = new TempCtor()\n      ctor.prototype.constructor = ctor\n    }\n  }\n}\n","/*! safe-buffer. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */\n/* eslint-disable node/no-deprecated-api */\nvar buffer = require('buffer')\nvar Buffer = buffer.Buffer\n\n// alternative to using Object.keys for old browsers\nfunction copyProps (src, dst) {\n  for (var key in src) {\n    dst[key] = src[key]\n  }\n}\nif (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {\n  module.exports = buffer\n} else {\n  // Copy properties from require('buffer')\n  copyProps(buffer, exports)\n  exports.Buffer = SafeBuffer\n}\n\nfunction SafeBuffer (arg, encodingOrOffset, length) {\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.prototype = Object.create(Buffer.prototype)\n\n// Copy static methods from Buffer\ncopyProps(Buffer, SafeBuffer)\n\nSafeBuffer.from = function (arg, encodingOrOffset, length) {\n  if (typeof arg === 'number') {\n    throw new TypeError('Argument must not be a number')\n  }\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.alloc = function (size, fill, encoding) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  var buf = Buffer(size)\n  if (fill !== undefined) {\n    if (typeof encoding === 'string') {\n      buf.fill(fill, encoding)\n    } else {\n      buf.fill(fill)\n    }\n  } else {\n    buf.fill(0)\n  }\n  return buf\n}\n\nSafeBuffer.allocUnsafe = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return Buffer(size)\n}\n\nSafeBuffer.allocUnsafeSlow = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return buffer.SlowBuffer(size)\n}\n","var Buffer = require('safe-buffer').Buffer\n\n// prototype class for hash functions\nfunction Hash (blockSize, finalSize) {\n  this._block = Buffer.alloc(blockSize)\n  this._finalSize = finalSize\n  this._blockSize = blockSize\n  this._len = 0\n}\n\nHash.prototype.update = function (data, enc) {\n  if (typeof data === 'string') {\n    enc = enc || 'utf8'\n    data = Buffer.from(data, enc)\n  }\n\n  var block = this._block\n  var blockSize = this._blockSize\n  var length = data.length\n  var accum = this._len\n\n  for (var offset = 0; offset < length;) {\n    var assigned = accum % blockSize\n    var remainder = Math.min(length - offset, blockSize - assigned)\n\n    for (var i = 0; i < remainder; i++) {\n      block[assigned + i] = data[offset + i]\n    }\n\n    accum += remainder\n    offset += remainder\n\n    if ((accum % blockSize) === 0) {\n      this._update(block)\n    }\n  }\n\n  this._len += length\n  return this\n}\n\nHash.prototype.digest = function (enc) {\n  var rem = this._len % this._blockSize\n\n  this._block[rem] = 0x80\n\n  // zero (rem + 1) trailing bits, where (rem + 1) is the smallest\n  // non-negative solution to the equation (length + 1 + (rem + 1)) === finalSize mod blockSize\n  this._block.fill(0, rem + 1)\n\n  if (rem >= this._finalSize) {\n    this._update(this._block)\n    this._block.fill(0)\n  }\n\n  var bits = this._len * 8\n\n  // uint32\n  if (bits <= 0xffffffff) {\n    this._block.writeUInt32BE(bits, this._blockSize - 4)\n\n  // uint64\n  } else {\n    var lowBits = (bits & 0xffffffff) >>> 0\n    var highBits = (bits - lowBits) / 0x100000000\n\n    this._block.writeUInt32BE(highBits, this._blockSize - 8)\n    this._block.writeUInt32BE(lowBits, this._blockSize - 4)\n  }\n\n  this._update(this._block)\n  var hash = this._hash()\n\n  return enc ? hash.toString(enc) : hash\n}\n\nHash.prototype._update = function () {\n  throw new Error('_update must be implemented by subclass')\n}\n\nmodule.exports = Hash\n","/**\n * A JavaScript implementation of the Secure Hash Algorithm, SHA-256, as defined\n * in FIPS 180-2\n * Version 2.2-beta Copyright Angel Marin, Paul Johnston 2000 - 2009.\n * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n *\n */\n\nvar inherits = require('inherits')\nvar Hash = require('./hash')\nvar Buffer = require('safe-buffer').Buffer\n\nvar K = [\n  0x428A2F98, 0x71374491, 0xB5C0FBCF, 0xE9B5DBA5,\n  0x3956C25B, 0x59F111F1, 0x923F82A4, 0xAB1C5ED5,\n  0xD807AA98, 0x12835B01, 0x243185BE, 0x550C7DC3,\n  0x72BE5D74, 0x80DEB1FE, 0x9BDC06A7, 0xC19BF174,\n  0xE49B69C1, 0xEFBE4786, 0x0FC19DC6, 0x240CA1CC,\n  0x2DE92C6F, 0x4A7484AA, 0x5CB0A9DC, 0x76F988DA,\n  0x983E5152, 0xA831C66D, 0xB00327C8, 0xBF597FC7,\n  0xC6E00BF3, 0xD5A79147, 0x06CA6351, 0x14292967,\n  0x27B70A85, 0x2E1B2138, 0x4D2C6DFC, 0x53380D13,\n  0x650A7354, 0x766A0ABB, 0x81C2C92E, 0x92722C85,\n  0xA2BFE8A1, 0xA81A664B, 0xC24B8B70, 0xC76C51A3,\n  0xD192E819, 0xD6990624, 0xF40E3585, 0x106AA070,\n  0x19A4C116, 0x1E376C08, 0x2748774C, 0x34B0BCB5,\n  0x391C0CB3, 0x4ED8AA4A, 0x5B9CCA4F, 0x682E6FF3,\n  0x748F82EE, 0x78A5636F, 0x84C87814, 0x8CC70208,\n  0x90BEFFFA, 0xA4506CEB, 0xBEF9A3F7, 0xC67178F2\n]\n\nvar W = new Array(64)\n\nfunction Sha256 () {\n  this.init()\n\n  this._w = W // new Array(64)\n\n  Hash.call(this, 64, 56)\n}\n\ninherits(Sha256, Hash)\n\nSha256.prototype.init = function () {\n  this._a = 0x6a09e667\n  this._b = 0xbb67ae85\n  this._c = 0x3c6ef372\n  this._d = 0xa54ff53a\n  this._e = 0x510e527f\n  this._f = 0x9b05688c\n  this._g = 0x1f83d9ab\n  this._h = 0x5be0cd19\n\n  return this\n}\n\nfunction ch (x, y, z) {\n  return z ^ (x & (y ^ z))\n}\n\nfunction maj (x, y, z) {\n  return (x & y) | (z & (x | y))\n}\n\nfunction sigma0 (x) {\n  return (x >>> 2 | x << 30) ^ (x >>> 13 | x << 19) ^ (x >>> 22 | x << 10)\n}\n\nfunction sigma1 (x) {\n  return (x >>> 6 | x << 26) ^ (x >>> 11 | x << 21) ^ (x >>> 25 | x << 7)\n}\n\nfunction gamma0 (x) {\n  return (x >>> 7 | x << 25) ^ (x >>> 18 | x << 14) ^ (x >>> 3)\n}\n\nfunction gamma1 (x) {\n  return (x >>> 17 | x << 15) ^ (x >>> 19 | x << 13) ^ (x >>> 10)\n}\n\nSha256.prototype._update = function (M) {\n  var W = this._w\n\n  var a = this._a | 0\n  var b = this._b | 0\n  var c = this._c | 0\n  var d = this._d | 0\n  var e = this._e | 0\n  var f = this._f | 0\n  var g = this._g | 0\n  var h = this._h | 0\n\n  for (var i = 0; i < 16; ++i) W[i] = M.readInt32BE(i * 4)\n  for (; i < 64; ++i) W[i] = (gamma1(W[i - 2]) + W[i - 7] + gamma0(W[i - 15]) + W[i - 16]) | 0\n\n  for (var j = 0; j < 64; ++j) {\n    var T1 = (h + sigma1(e) + ch(e, f, g) + K[j] + W[j]) | 0\n    var T2 = (sigma0(a) + maj(a, b, c)) | 0\n\n    h = g\n    g = f\n    f = e\n    e = (d + T1) | 0\n    d = c\n    c = b\n    b = a\n    a = (T1 + T2) | 0\n  }\n\n  this._a = (a + this._a) | 0\n  this._b = (b + this._b) | 0\n  this._c = (c + this._c) | 0\n  this._d = (d + this._d) | 0\n  this._e = (e + this._e) | 0\n  this._f = (f + this._f) | 0\n  this._g = (g + this._g) | 0\n  this._h = (h + this._h) | 0\n}\n\nSha256.prototype._hash = function () {\n  var H = Buffer.allocUnsafe(32)\n\n  H.writeInt32BE(this._a, 0)\n  H.writeInt32BE(this._b, 4)\n  H.writeInt32BE(this._c, 8)\n  H.writeInt32BE(this._d, 12)\n  H.writeInt32BE(this._e, 16)\n  H.writeInt32BE(this._f, 20)\n  H.writeInt32BE(this._g, 24)\n  H.writeInt32BE(this._h, 28)\n\n  return H\n}\n\nmodule.exports = Sha256\n","module.exports = __WEBPACK_EXTERNAL_MODULE__7946__;","module.exports = __WEBPACK_EXTERNAL_MODULE__7417__;","module.exports = __WEBPACK_EXTERNAL_MODULE__3983__;","module.exports = __WEBPACK_EXTERNAL_MODULE__4711__;","module.exports = __WEBPACK_EXTERNAL_MODULE__5039__;","module.exports = __WEBPACK_EXTERNAL_MODULE__8236__;","module.exports = __WEBPACK_EXTERNAL_MODULE__5192__;","module.exports = __WEBPACK_EXTERNAL_MODULE__1986__;","module.exports = __WEBPACK_EXTERNAL_MODULE__3783__;","module.exports = __WEBPACK_EXTERNAL_MODULE__9408__;","module.exports = __WEBPACK_EXTERNAL_MODULE__6667__;","module.exports = __WEBPACK_EXTERNAL_MODULE__3735__;","module.exports = __WEBPACK_EXTERNAL_MODULE__3153__;","module.exports = __WEBPACK_EXTERNAL_MODULE__2716__;","module.exports = __WEBPACK_EXTERNAL_MODULE__3485__;","module.exports = __WEBPACK_EXTERNAL_MODULE__79__;","module.exports = __WEBPACK_EXTERNAL_MODULE__9882__;","module.exports = __WEBPACK_EXTERNAL_MODULE__7480__;","module.exports = __WEBPACK_EXTERNAL_MODULE__8079__;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","/**\n * Big Number Helpers\n */\nimport BigNumber from 'bignumber.js';\n\n/**\n * Check if value is BigNumber, Number, BigInt or number string representation\n * @param number - number to check\n */\nexport const isBigNumber = (number: string | number | bigint | BigNumber): boolean => {\n  if (typeof number === 'bigint') return true;\n  return ['number', 'object', 'string'].includes(typeof number)\n    // eslint-disable-next-line no-restricted-globals\n    && (!isNaN(number as number) || Number.isInteger(number) || BigNumber.isBigNumber(number));\n};\n\n/**\n * BigNumber ceil operation\n */\nexport const ceil = (bigNumber: BigNumber): BigNumber => bigNumber\n  .integerValue(BigNumber.ROUND_CEIL);\n","// eslint-disable-next-line max-classes-per-file\nimport BigNumber from 'bignumber.js';\nimport { AensName, Int } from '../tx/builder/constants';\nimport * as Encoded from './encoder-types';\n\n/**\n * aepp-sdk originated error\n * @category exception\n */\nexport abstract class BaseError extends Error {\n  constructor(message: string) {\n    super(message);\n    this.name = 'BaseError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class AccountError extends BaseError {\n  constructor(message: string) {\n    super(message);\n    this.name = 'AccountError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class AensError extends BaseError {\n  constructor(message: string) {\n    super(message);\n    this.name = 'AensError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class AeppError extends BaseError {\n  constructor(message: string) {\n    super(message);\n    this.name = 'AeppError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class ChannelError extends BaseError {\n  constructor(message: string) {\n    super(message);\n    this.name = 'ChannelError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class CompilerError extends BaseError {\n  constructor(message: string) {\n    super(message);\n    this.name = 'CompilerError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class ContractError extends BaseError {\n  constructor(message: string) {\n    super(message);\n    this.name = 'ContractError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class CryptographyError extends BaseError {\n  constructor(message: string) {\n    super(message);\n    this.name = 'CryptographyError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class NodeError extends BaseError {\n  constructor(message: string) {\n    super(message);\n    this.name = 'NodeError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class TransactionError extends BaseError {\n  constructor(message: string) {\n    super(message);\n    this.name = 'TransactionError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class WalletError extends BaseError {\n  constructor(message: string) {\n    super(message);\n    this.name = 'WalletError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class ArgumentError extends BaseError {\n  constructor(argumentName: string, requirement: unknown, argumentValue: unknown) {\n    super(`${argumentName} should be ${requirement}, got ${argumentValue} instead`);\n    this.name = 'ArgumentError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class IllegalArgumentError extends CryptographyError {\n  constructor(message: string) {\n    super(message);\n    this.name = 'IllegalArgumentError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class ArgumentCountMismatchError extends BaseError {\n  constructor(functionName: string, requiredCount: number, providedCount: number) {\n    super(`${functionName} expects ${requiredCount} arguments, got ${providedCount} instead`);\n    this.name = 'ArgumentCountMismatchError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class InsufficientBalanceError extends BaseError {\n  constructor(message: string) {\n    super(message);\n    this.name = 'InsufficientBalanceError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class MissingParamError extends BaseError {\n  constructor(message: string) {\n    super(message);\n    this.name = 'MissingParamError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class NoSerializerFoundError extends BaseError {\n  constructor() {\n    super('Byte serialization not supported');\n    this.name = 'NoSerializerFoundError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class RequestTimedOutError extends BaseError {\n  constructor(height: number) {\n    super(`Giving up at height ${height}`);\n    this.name = 'RequestTimedOutError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class TxTimedOutError extends BaseError {\n  constructor(blocks: number, th: Encoded.TxHash) {\n    super([\n      `Giving up after ${blocks} blocks mined`,\n      `transaction hash: ${th}`,\n    ].join(', '));\n    this.name = 'TxTimedOutError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class TypeError extends BaseError {\n  constructor(message: string) {\n    super(message);\n    this.name = 'TypeError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class UnsupportedPlatformError extends BaseError {\n  constructor(message: string) {\n    super(message);\n    this.name = 'UnsupportedPlatformError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class UnsupportedProtocolError extends BaseError {\n  constructor(message: string) {\n    super(message);\n    this.name = 'UnsupportedProtocolError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class NotImplementedError extends BaseError {\n  constructor(message: string) {\n    super(message);\n    this.name = 'NotImplementedError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class UnsupportedVersionError extends BaseError {\n  constructor(dependency: string, version: string, geVersion: string, ltVersion: string) {\n    super(`Unsupported ${dependency} version ${version}. Supported: >= ${geVersion} < ${ltVersion}`);\n    this.name = 'UnsupportedVersionError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class InternalError extends BaseError {\n  constructor(message: string) {\n    super(message);\n    this.name = 'InternalError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class UnexpectedTsError extends InternalError {\n  constructor(message = 'Expected to not happen, required for TS') {\n    super(message);\n    this.name = 'UnexpectedTsError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class UnavailableAccountError extends AccountError {\n  constructor(address: Encoded.AccountAddress) {\n    super(`Account for ${address} not available`);\n    this.name = 'UnavailableAccountError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class AensPointerContextError extends AensError {\n  constructor(nameOrId: AensName | Encoded.Name, prefix: string) {\n    super(`Name ${nameOrId} don't have pointers for ${prefix}`);\n    this.name = 'AensPointerContextError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class InsufficientNameFeeError extends AensError {\n  constructor(nameFee: BigNumber, minNameFee: BigNumber) {\n    super(`the provided fee ${nameFee.toString()} is not enough to execute the claim, required: ${minNameFee.toString()}`);\n    this.name = 'InsufficientNameFeeError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class InvalidAensNameError extends AensError {\n  constructor(message: string) {\n    super(message);\n    this.name = 'InvalidAensNameError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class InvalidRpcMessageError extends AeppError {\n  constructor(message: string) {\n    super(`Received invalid message: ${message}`);\n    this.name = 'InvalidRpcMessageError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class MissingCallbackError extends AeppError {\n  constructor(id: number) {\n    super(`Can't find callback for this messageId ${id}`);\n    this.name = 'MissingCallbackError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class UnAuthorizedAccountError extends AeppError {\n  constructor(onAccount: Encoded.AccountAddress) {\n    super(`You do not have access to account ${onAccount}`);\n    this.name = 'UnAuthorizedAccountError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class UnknownRpcClientError extends AeppError {\n  constructor(id: string) {\n    super(`RpcClient with id ${id} do not exist`);\n    this.name = 'UnknownRpcClientError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class UnsubscribedAccountError extends AeppError {\n  constructor() {\n    super('You are not subscribed for an account.');\n    this.name = 'UnsubscribedAccountError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class ChannelCallError extends ChannelError {\n  constructor(message: string) {\n    super(message);\n    this.name = 'ChannelCallError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class ChannelConnectionError extends ChannelError {\n  constructor(message: string) {\n    super(message);\n    this.name = 'ChannelConnectionError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class ChannelPingTimedOutError extends ChannelError {\n  constructor() {\n    super('Server pong timed out');\n    this.name = 'ChannelPingTimedOutError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class UnexpectedChannelMessageError extends ChannelError {\n  constructor(message: string) {\n    super(message);\n    this.name = 'UnexpectedChannelMessageError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class ChannelIncomingMessageError extends ChannelError {\n  handlerError: Error;\n\n  incomingMessage: { [key: string]: any };\n\n  constructor(handlerError: Error, incomingMessage: { [key: string]: any }) {\n    super(handlerError.message);\n    this.handlerError = handlerError;\n    this.incomingMessage = incomingMessage;\n    this.name = 'ChannelIncomingMessageError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class UnknownChannelStateError extends ChannelError {\n  constructor() {\n    super('State Channels FSM entered unknown state');\n    this.name = 'UnknownChannelStateError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class InvalidAuthDataError extends CompilerError {\n  constructor(message: string) {\n    super(message);\n    this.name = 'InvalidAuthDataError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class BytecodeMismatchError extends ContractError {\n  constructor(source: 'source code' | 'bytecode') {\n    super(`Contract ${source} do not correspond to the bytecode deployed on the chain`);\n    this.name = 'BytecodeMismatchError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class DuplicateContractError extends ContractError {\n  constructor() {\n    super('Contract already deployed');\n    this.name = 'DuplicateContractError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class InactiveContractError extends ContractError {\n  constructor(contractAddress: Encoded.ContractAddress) {\n    super(`Contract with address ${contractAddress} not active`);\n    this.name = 'InactiveContractError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class InvalidMethodInvocationError extends ContractError {\n  constructor(message: string) {\n    super(message);\n    this.name = 'InvalidMethodInvocationError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class MissingContractAddressError extends ContractError {\n  constructor(message: string) {\n    super(message);\n    this.name = 'MissingContractAddressError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class MissingContractDefError extends ContractError {\n  constructor() {\n    super('Either ACI or sourceCode or sourceCodePath is required');\n    this.name = 'MissingContractDefError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class MissingFunctionNameError extends ContractError {\n  constructor() {\n    super('Function name is required');\n    this.name = 'MissingFunctionNameError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class NodeInvocationError extends ContractError {\n  transaction?: Encoded.Transaction;\n\n  constructor(message: string, transaction?: Encoded.Transaction) {\n    super(`Invocation failed${message == null ? '' : `: \"${message}\"`}`);\n    this.name = 'NodeInvocationError';\n    this.transaction = transaction;\n  }\n}\n\n/**\n * @category exception\n */\nexport class NoSuchContractFunctionError extends ContractError {\n  constructor(name: string) {\n    super(`Function ${name} doesn't exist in contract`);\n    this.name = 'NoSuchContractFunctionError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class NotPayableFunctionError extends ContractError {\n  constructor(amount: Int, fn: string) {\n    super(\n      `You try to pay \"${amount}\" to function \"${fn}\" which is not payable. `\n      + 'Only payable function can accept coins',\n    );\n    this.name = 'NotPayableFunctionError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class MissingEventDefinitionError extends ContractError {\n  constructor(eventNameHash: string, eventAddress: Encoded.ContractAddress) {\n    super(\n      `Can't find definition of ${eventNameHash} event emitted by ${eventAddress}`\n      + ' (use omitUnknown option to ignore events like this)',\n    );\n    this.name = 'MissingEventDefinitionError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class AmbiguousEventDefinitionError extends ContractError {\n  constructor(eventAddress: Encoded.ContractAddress, matchedEvents: Array<[string, string]>) {\n    super(\n      `Found multiple definitions of \"${matchedEvents[0][1]}\" event with different types emitted by`\n      + ` ${eventAddress} in ${matchedEvents.map(([name]) => `\"${name}\"`).join(', ')} contracts`\n      + ' (use contractAddressToName option to specify contract name corresponding to address)',\n    );\n    this.name = 'AmbiguousEventDefinitionError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class InvalidChecksumError extends CryptographyError {\n  constructor() {\n    super('Invalid checksum');\n    this.name = 'InvalidChecksumError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class InvalidPasswordError extends CryptographyError {\n  constructor() {\n    super('Invalid password or nonce');\n    this.name = 'InvalidPasswordError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class MerkleTreeHashMismatchError extends CryptographyError {\n  constructor() {\n    super('Node hash is not equal to provided one');\n    this.name = 'MerkleTreeHashMismatchError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class MissingNodeInTreeError extends CryptographyError {\n  constructor(message: string) {\n    super(message);\n    this.name = 'MissingNodeInTreeError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class UnknownNodeLengthError extends CryptographyError {\n  constructor(nodeLength: number) {\n    super(`Unknown node length: ${nodeLength}`);\n    this.name = 'UnknownNodeLengthError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class UnknownPathNibbleError extends CryptographyError {\n  constructor(nibble: number) {\n    super(`Unknown path nibble: ${nibble}`);\n    this.name = 'UnknownPathNibbleError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class DuplicateNodeError extends NodeError {\n  constructor(name: string) {\n    super(`Node with name ${name} already exist`);\n    this.name = 'DuplicateNodeError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class NodeNotFoundError extends NodeError {\n  constructor(message: string) {\n    super(message);\n    this.name = 'NodeNotFoundError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class DecodeError extends TransactionError {\n  constructor(message: string) {\n    super(message);\n    this.name = 'DecodeError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class PayloadLengthError extends TransactionError {\n  constructor(message: string) {\n    super(message);\n    this.name = 'PayloadLengthError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class DryRunError extends TransactionError {\n  constructor(message: string) {\n    super(message);\n    this.name = 'DryRunError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class IllegalBidFeeError extends TransactionError {\n  constructor(message: string) {\n    super(message);\n    this.name = 'IllegalBidFeeError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class InvalidSignatureError extends TransactionError {\n  constructor(message: string) {\n    super(message);\n    this.name = 'InvalidSignatureError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class PrefixNotFoundError extends TransactionError {\n  constructor(tag: number) {\n    super(`Prefix for id-tag ${tag} not found.`);\n    this.name = 'PrefixNotFoundError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class SchemaNotFoundError extends TransactionError {\n  constructor(key: string, version: number) {\n    super(`Transaction schema not implemented for tag ${key} version ${version}`);\n    this.name = 'SchemaNotFoundError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class TagNotFoundError extends TransactionError {\n  constructor(prefix: string) {\n    super(`Id tag for prefix ${prefix} not found.`);\n    this.name = 'DecodeError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class TxNotInChainError extends TransactionError {\n  constructor(txHash: Encoded.TxHash) {\n    super(`Transaction ${txHash} is removed from chain`);\n    this.name = 'TxNotInChainError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class AlreadyConnectedError extends WalletError {\n  constructor(message: string) {\n    super(message);\n    this.name = 'AlreadyConnectedError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class NoWalletConnectedError extends WalletError {\n  constructor(message: string) {\n    super(message);\n    this.name = 'NoWalletConnectedError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class RpcConnectionError extends WalletError {\n  constructor(message: string) {\n    super(message);\n    this.name = 'RpcConnectionError';\n  }\n}\n","import BigNumber from 'bignumber.js';\nimport { isBigNumber } from './bignumber';\nimport { ArgumentError } from './errors';\n\nexport enum AE_AMOUNT_FORMATS {\n  AE = 'ae',\n  MILI_AE = 'miliAE',\n  MICRO_AE = 'microAE',\n  NANO_AE = 'nanoAE',\n  PICO_AE = 'picoAE',\n  FEMTO_AE = 'femtoAE',\n  AETTOS = 'aettos',\n}\n\n/**\n * DENOMINATION_MAGNITUDE\n */\nconst DENOMINATION_MAGNITUDE = {\n  [AE_AMOUNT_FORMATS.AE]: 0,\n  [AE_AMOUNT_FORMATS.MILI_AE]: -3,\n  [AE_AMOUNT_FORMATS.MICRO_AE]: -6,\n  [AE_AMOUNT_FORMATS.NANO_AE]: -9,\n  [AE_AMOUNT_FORMATS.PICO_AE]: -12,\n  [AE_AMOUNT_FORMATS.FEMTO_AE]: -15,\n  [AE_AMOUNT_FORMATS.AETTOS]: -18,\n} as const;\n\n/**\n * Convert amount from one to other denomination\n * @param value - amount to convert\n * @param options - options\n * @param options.denomination - denomination of amount, can be ['ae', 'aettos']\n * @param options.targetDenomination - target denomination,\n * can be ['ae', 'aettos']\n */\nexport const formatAmount = (\n  value: string | number | bigint | BigNumber,\n  { denomination = AE_AMOUNT_FORMATS.AETTOS, targetDenomination = AE_AMOUNT_FORMATS.AETTOS }:\n  { denomination?: AE_AMOUNT_FORMATS; targetDenomination?: AE_AMOUNT_FORMATS },\n): string => {\n  if (!isBigNumber(value)) throw new ArgumentError('value', 'a number', value);\n\n  return new BigNumber(typeof value === 'bigint' ? value.toString() : value)\n    .shiftedBy(DENOMINATION_MAGNITUDE[denomination] - DENOMINATION_MAGNITUDE[targetDenomination])\n    .toFixed();\n};\n\n/**\n * Convert amount to AE\n * @param value - amount to convert\n * @param options - options\n * @param options.denomination - denomination of amount, can be ['ae', 'aettos']\n */\nexport const toAe = (\n  value: string | number | BigNumber,\n  { denomination = AE_AMOUNT_FORMATS.AETTOS }: { denomination?: AE_AMOUNT_FORMATS } = {},\n): string => formatAmount(value, { denomination, targetDenomination: AE_AMOUNT_FORMATS.AE });\n\n/**\n * Convert amount to aettos\n * @param value - amount to convert\n * @param options - options\n * @param options.denomination - denomination of amount, can be ['ae', 'aettos']\n */\nexport const toAettos = (\n  value: string | number | BigNumber,\n  { denomination = AE_AMOUNT_FORMATS.AE }: { denomination?: AE_AMOUNT_FORMATS } = {},\n): string => formatAmount(value, { denomination });\n\ninterface Prefix {\n  name: string;\n  magnitude: number;\n}\n\nconst prefixes: Prefix[] = [\n  { name: 'exa', magnitude: 18 },\n  { name: 'giga', magnitude: 9 },\n  { name: '', magnitude: 0 },\n  { name: 'pico', magnitude: -12 },\n];\n\nconst getNearestPrefix = (exponent: number): Prefix => prefixes.reduce((p, n) => (\n  Math.abs(n.magnitude - exponent) < Math.abs(p.magnitude - exponent) ? n : p));\n\nconst getLowerBoundPrefix = (exponent: number): Prefix => prefixes\n  .find((p) => p.magnitude <= exponent) ?? prefixes[prefixes.length - 1];\n\nexport const prefixedAmount = (rawValue: string | number | BigNumber): string => {\n  const value: BigNumber = new BigNumber(rawValue);\n\n  const exp = value.e ?? 0;\n  const { name, magnitude } = (exp < 0 ? getNearestPrefix : getLowerBoundPrefix)(exp);\n  const v = value\n    .shiftedBy(-magnitude)\n    .precision(9 + Math.min(exp - magnitude, 0))\n    .toFixed();\n  return `${v}${name !== '' ? ' ' : ''}${name}`;\n};\n","import { RestError } from '@azure/core-rest-pipeline';\n\nexport const pause = async (duration: number): Promise<void> => new Promise((resolve) => {\n  setTimeout(resolve, duration);\n});\n\nexport const mapObject = <InputV, OutputV>(\n  object: { [k: string]: InputV },\n  fn: (\n    value: [string, InputV], index: number, array: Array<[string, InputV]>\n  ) => [number | string, OutputV],\n): { [k: string]: OutputV } => Object.fromEntries(Object.entries(object).map(fn));\n\n// remove after dropping webpack4 support\nconst isWebpack4Buffer = (() => {\n  try {\n    Buffer.concat([Uint8Array.from([])]);\n    return false;\n  } catch (error) {\n    return true;\n  }\n})();\n\nexport const concatBuffers = isWebpack4Buffer\n  ? (list: readonly Uint8Array[], totalLength?: number): Buffer => (\n    Buffer.concat(list.map((el) => Buffer.from(el)), totalLength)\n  )\n  : Buffer.concat;\n\n/**\n * Object key type guard\n * @param key - Maybe object key\n * @param object - Object\n */\nexport function isKeyOfObject<T extends object>(\n  key: string | number | symbol,\n  object: T,\n): key is keyof T {\n  return key in object;\n}\n\n/**\n * Array item type guard\n * @param item - Maybe array item\n * @param array - Array\n */\nexport function isItemOfArray<T>(item: any, array: readonly T[]): item is T {\n  return array.includes(item);\n}\n\nexport function isAccountNotFoundError(error: Error): boolean {\n  return error instanceof RestError && error.statusCode === 404\n    && error.message.includes('Account not found');\n}\n\n// based on https://stackoverflow.com/a/50375286/6176994\nexport type UnionToIntersection<Union> =\n  (Union extends any ? (k: Union) => void : never) extends ((k: infer Intersection) => void)\n    ? Intersection : never;\n\nexport function ensureError(error: unknown): asserts error is Error {\n  if (error instanceof Error) return;\n  throw error;\n}\n","/**\n * @category transaction builder\n * @see {@link https://github.com/aeternity/protocol/blob/master/node/api/api_encoding.md}\n * @see {@link https://github.com/aeternity/aeserialization/blob/eb68fe331bd476910394966b7f5ede7a74d37e35/src/aeser_api_encoder.erl#L205-L230}\n */\nexport enum Encoding {\n  KeyBlockHash = 'kh',\n  MicroBlockHash = 'mh',\n  BlockPofHash = 'bf',\n  BlockTxHash = 'bx',\n  BlockStateHash = 'bs',\n  Channel = 'ch',\n  ContractAddress = 'ct',\n  ContractBytearray = 'cb',\n  ContractStoreKey = 'ck',\n  ContractStoreValue = 'cv',\n  Transaction = 'tx',\n  TxHash = 'th',\n  OracleAddress = 'ok',\n  OracleQuery = 'ov',\n  OracleQueryId = 'oq',\n  OracleResponse = 'or',\n  AccountAddress = 'ak',\n  Signature = 'sg',\n  Commitment = 'cm',\n  PeerPubkey = 'pp',\n  Name = 'nm',\n  State = 'st',\n  Poi = 'pi',\n  StateTrees = 'ss',\n  CallStateTree = 'cs',\n  Bytearray = 'ba',\n}\n\nexport type KeyBlockHash = `${Encoding.KeyBlockHash}_${string}`;\nexport type MicroBlockHash = `${Encoding.MicroBlockHash}_${string}`;\nexport type BlockPofHash = `${Encoding.BlockPofHash}_${string}`;\nexport type BlockTxHash = `${Encoding.BlockTxHash}_${string}`;\nexport type BlockStateHash = `${Encoding.BlockStateHash}_${string}`;\nexport type Channel = `${Encoding.Channel}_${string}`;\nexport type ContractAddress = `${Encoding.ContractAddress}_${string}`;\nexport type ContractBytearray = `${Encoding.ContractBytearray}_${string}`;\nexport type ContractStoreKey = `${Encoding.ContractStoreKey}_${string}`;\nexport type ContractStoreValue = `${Encoding.ContractStoreValue}_${string}`;\nexport type Transaction = `${Encoding.Transaction}_${string}`;\nexport type TxHash = `${Encoding.TxHash}_${string}`;\nexport type OracleAddress = `${Encoding.OracleAddress}_${string}`;\nexport type OracleQuery = `${Encoding.OracleQuery}_${string}`;\nexport type OracleQueryId = `${Encoding.OracleQueryId}_${string}`;\nexport type OracleResponse = `${Encoding.OracleResponse}_${string}`;\nexport type AccountAddress = `${Encoding.AccountAddress}_${string}`;\nexport type Signature = `${Encoding.Signature}_${string}`;\nexport type Commitment = `${Encoding.Commitment}_${string}`;\nexport type PeerPubkey = `${Encoding.PeerPubkey}_${string}`;\nexport type Name = `${Encoding.Name}_${string}`;\nexport type State = `${Encoding.State}_${string}`;\nexport type Poi = `${Encoding.Poi}_${string}`;\nexport type StateTrees = `${Encoding.StateTrees}_${string}`;\nexport type CallStateTree = `${Encoding.CallStateTree}_${string}`;\nexport type Bytearray = `${Encoding.Bytearray}_${string}`;\n\nexport type Generic<Type extends Encoding> = `${Type}_${string}`;\nexport type Any = `${Encoding}_${string}`;\n","import { encode as bs58Encode, decode as bs58Decode } from 'bs58';\n// js extension is required for mjs build, not importing the whole package to reduce bundle size\n// eslint-disable-next-line import/extensions\nimport Sha256 from 'sha.js/sha256.js';\nimport {\n  DecodeError,\n  ArgumentError,\n  InvalidChecksumError,\n  PayloadLengthError,\n} from './errors';\nimport { concatBuffers, isKeyOfObject } from './other';\nimport * as Encoded from './encoder-types';\nimport { Encoding } from './encoder-types';\n\nexport { Encoded, Encoding };\n\n/**\n * Calculate SHA256 hash of `input`\n * @param input - Data to hash\n * @returns Hash\n */\nexport function sha256hash(input: Uint8Array | string): Buffer {\n  return new Sha256().update(input).digest();\n}\n\n/**\n * @see {@link https://github.com/aeternity/aeserialization/blob/eb68fe331bd476910394966b7f5ede7a74d37e35/src/aeser_api_encoder.erl#L177-L202}\n */\nconst base64Types = [\n  Encoding.ContractBytearray,\n  Encoding.ContractStoreKey,\n  Encoding.ContractStoreValue,\n  Encoding.Transaction,\n  Encoding.OracleQuery,\n  Encoding.OracleResponse,\n  Encoding.State,\n  Encoding.Poi,\n  Encoding.StateTrees,\n  Encoding.CallStateTree,\n  Encoding.Bytearray,\n] as const;\nconst base58Types = [\n  Encoding.KeyBlockHash,\n  Encoding.MicroBlockHash,\n  Encoding.BlockPofHash,\n  Encoding.BlockTxHash,\n  Encoding.BlockStateHash,\n  Encoding.Channel,\n  Encoding.ContractAddress,\n  Encoding.TxHash,\n  Encoding.OracleAddress,\n  Encoding.OracleQueryId,\n  Encoding.AccountAddress,\n  Encoding.Signature,\n  Encoding.Commitment,\n  Encoding.PeerPubkey,\n  Encoding.Name,\n] as const;\n\n/**\n * @see {@link https://github.com/aeternity/aeserialization/blob/eb68fe331bd476910394966b7f5ede7a74d37e35/src/aeser_api_encoder.erl#L261-L286}\n */\nconst byteSizeForType = {\n  [Encoding.KeyBlockHash]: 32,\n  [Encoding.MicroBlockHash]: 32,\n  [Encoding.BlockPofHash]: 32,\n  [Encoding.BlockTxHash]: 32,\n  [Encoding.BlockStateHash]: 32,\n  [Encoding.Channel]: 32,\n  [Encoding.ContractAddress]: 32,\n  [Encoding.TxHash]: 32,\n  [Encoding.OracleAddress]: 32,\n  [Encoding.OracleQueryId]: 32,\n  [Encoding.AccountAddress]: 32,\n  [Encoding.Signature]: 64,\n  [Encoding.Commitment]: 32,\n  [Encoding.PeerPubkey]: 32,\n  [Encoding.State]: 32,\n} as const;\n\nfunction ensureValidLength(data: Uint8Array, type: Encoding): void {\n  if (!isKeyOfObject(type, byteSizeForType)) return;\n  const reqLen = byteSizeForType[type];\n  if (reqLen == null || data.length === reqLen) return;\n  throw new PayloadLengthError(`Payload should be ${reqLen} bytes, got ${data.length} instead`);\n}\n\nconst getChecksum = (payload: Uint8Array): Buffer => sha256hash(sha256hash(payload)).slice(0, 4);\n\nconst addChecksum = (payload: Uint8Array): Buffer => concatBuffers([payload, getChecksum(payload)]);\n\nfunction getPayload(buffer: Buffer): Buffer {\n  const payload = buffer.slice(0, -4);\n  if (!getChecksum(payload).equals(buffer.slice(-4))) throw new InvalidChecksumError();\n  return payload;\n}\n\nconst base64 = {\n  encode: (buffer: Uint8Array) => addChecksum(buffer).toString('base64'),\n  decode: (string: string) => getPayload(Buffer.from(string, 'base64')),\n};\n\nconst base58 = {\n  encode: (buffer: Uint8Array) => bs58Encode(addChecksum(buffer)),\n  decode: (string: string) => getPayload(Buffer.from(bs58Decode(string))),\n};\n\nconst parseType = (maybeType: unknown): [Encoding, typeof base64] => {\n  const base64Type = base64Types.find((t) => t === maybeType);\n  if (base64Type != null) return [base64Type, base64];\n  const base58Type = base58Types.find((t) => t === maybeType);\n  if (base58Type != null) return [base58Type, base58];\n  throw new ArgumentError('prefix', `one of ${[...base58Types, ...base64Types].join(', ')}`, maybeType);\n};\n\n/**\n * Decode data using the default encoding/decoding algorithm\n * @param data - An Base58/64check encoded and prefixed string\n * (ex tx_..., sg_..., ak_....)\n * @returns Decoded data\n */\nexport function decode(data: Encoded.Any): Buffer {\n  const [prefix, encodedPayload, extra] = data.split('_');\n  if (encodedPayload == null) throw new DecodeError(`Encoded string missing payload: ${data}`);\n  if (extra != null) throw new DecodeError(`Encoded string have extra parts: ${data}`);\n  const [type, encoder] = parseType(prefix);\n  const payload = encoder.decode(encodedPayload);\n  ensureValidLength(payload, type);\n  return payload;\n}\n\n/**\n * Encode data using the default encoding/decoding algorithm\n * @param data - An decoded data\n * @param type - Prefix of Transaction\n * @returns Encoded string Base58check or Base64check data\n */\nexport function encode<Type extends Encoding>(\n  data: Uint8Array,\n  type: Type,\n): Encoded.Generic<Type> {\n  const [, encoder] = parseType(type);\n  ensureValidLength(data, type);\n  return `${type}_${encoder.encode(data)}`;\n}\n","import nacl, { SignKeyPair } from 'tweetnacl';\n// js extension is required for mjs build, not importing the whole package to reduce bundle size\n// eslint-disable-next-line import/extensions\nimport { blake2b } from 'blakejs/blake2b.js';\nimport { encode as varuintEncode } from 'varuint-bitcoin';\n\nimport { concatBuffers } from './other';\nimport {\n  decode, encode, Encoded, Encoding,\n} from './encoder';\nimport { ArgumentError } from './errors';\n\n/**\n * Generate address from secret key\n * @param secret - Private key as hex string\n * @returns Public key encoded as address\n */\nexport function getAddressFromPriv(secret: string | Uint8Array): Encoded.AccountAddress {\n  const secretBuffer = typeof secret === 'string' ? Buffer.from(secret, 'hex') : secret;\n  const keys = nacl.sign.keyPair.fromSecretKey(secretBuffer);\n  return encode(keys.publicKey, Encoding.AccountAddress);\n}\n\n/**\n * Check if address is valid\n * @param address - Address\n * @param prefix - Transaction prefix. Default: 'ak'\n * @returns is valid\n */\nexport function isAddressValid(\n  address: string,\n  prefix: Encoding = Encoding.AccountAddress,\n): boolean {\n  try {\n    decode(address as Encoded.Generic<typeof prefix>);\n    const actualPrefix = address.split('_')[0];\n    if (actualPrefix !== prefix) {\n      throw new ArgumentError('Encoded string type', prefix, actualPrefix);\n    }\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Generate a random salt (positive integer)\n * @returns random salt\n */\nexport function genSalt(): number {\n  const [random] = new BigUint64Array(nacl.randomBytes(8).buffer);\n  return Number(random % BigInt(Number.MAX_SAFE_INTEGER));\n}\n\n/**\n * Converts a positive integer to the smallest possible\n * representation in a binary digit representation\n * @param value - Value to encode\n * @returns Encoded number\n */\nexport function encodeUnsigned(value: number): Buffer {\n  const binary = Buffer.allocUnsafe(4);\n  binary.writeUInt32BE(value);\n  return binary.slice(binary.findIndex((i) => i !== 0));\n}\n\n/**\n * Calculate 256bits Blake2b hash of `input`\n * @param input - Data to hash\n * @returns Hash\n */\nexport function hash(input: string | Uint8Array): Buffer {\n  return Buffer.from(blake2b(input, undefined, 32)); // 256 bits\n}\n\n// Todo Duplicated in tx builder. remove\n/**\n * Compute contract address\n * @category contract\n * @param owner - Address of contract owner\n * @param nonce - Round when contract was created\n * @returns Contract address\n */\nexport function encodeContractAddress(\n  owner: Encoded.AccountAddress,\n  nonce: number,\n): Encoded.ContractAddress {\n  const publicKey = decode(owner);\n  const binary = concatBuffers([publicKey, encodeUnsigned(nonce)]);\n  return encode(hash(binary), Encoding.ContractAddress);\n}\n\n// KEY-PAIR HELPERS\n\n/**\n * Generate keyPair from secret key\n * @param secret - secret key\n * @returns Object with Private(privateKey) and Public(publicKey) keys\n */\nexport function generateKeyPairFromSecret(secret: Uint8Array): SignKeyPair {\n  return nacl.sign.keyPair.fromSecretKey(secret);\n}\n\n/**\n * Generate a random ED25519 keypair\n * @param raw - Whether to return raw (binary) keys\n * @returns Key pair\n */\nexport function generateKeyPair(raw: true): { publicKey: Buffer; secretKey: Buffer };\nexport function generateKeyPair(raw?: false): {\n  publicKey: Encoded.AccountAddress; secretKey: string;\n};\nexport function generateKeyPair(raw = false): {\n  publicKey: Encoded.AccountAddress | Buffer;\n  secretKey: string | Buffer;\n} {\n  const keyPair = nacl.sign.keyPair();\n  const publicBuffer = Buffer.from(keyPair.publicKey);\n  const secretBuffer = Buffer.from(keyPair.secretKey);\n\n  if (raw) {\n    return {\n      publicKey: publicBuffer,\n      secretKey: secretBuffer,\n    };\n  }\n  return {\n    publicKey: encode(publicBuffer, Encoding.AccountAddress),\n    secretKey: secretBuffer.toString('hex'),\n  };\n}\n\n// SIGNATURES\n\n/**\n * Generate signature\n * @param data - Data to sign\n * @param privateKey - Key to sign with\n * @returns Signature\n */\nexport function sign(data: string | Uint8Array, privateKey: string | Uint8Array): Uint8Array {\n  return nacl.sign.detached(Buffer.from(data), Buffer.from(privateKey));\n}\n\n/**\n * Verify that signature was signed by public key\n * @param data - Data that was signed\n * @param signature - Signature of data\n * @param address - Address to verify against\n * @returns is data was signed by address\n */\nexport function verify(\n  data: Uint8Array,\n  signature: Uint8Array,\n  address: Encoded.AccountAddress,\n): boolean {\n  return nacl.sign.detached.verify(data, signature, decode(address));\n}\n\nconst messagePrefix = Buffer.from('aeternity Signed Message:\\n', 'utf8');\nexport const messagePrefixLength = varuintEncode(messagePrefix.length);\n\n// TODO: consider rename to hashMessage\nexport function messageToHash(message: string): Buffer {\n  const msg = Buffer.from(message, 'utf8');\n  return hash(concatBuffers([messagePrefixLength, messagePrefix, varuintEncode(msg.length), msg]));\n}\n\nexport function signMessage(message: string, privateKey: string | Buffer): Uint8Array {\n  return sign(messageToHash(message), privateKey);\n}\n\n/**\n * Verify that message was signed by address\n * @param message - Message that was signed\n * @param signature - Signature of message\n * @param address - Address to verify against\n * @returns is data was signed by address\n */\n// TODO: deprecate in favour of `verify(messageToHash(message), ...`, also the name is confusing\n// it should contain \"signature\"\nexport function verifyMessage(\n  message: string,\n  signature: Uint8Array,\n  address: Encoded.AccountAddress,\n): boolean {\n  return verify(messageToHash(message), signature, address);\n}\n\n/**\n * Check key pair for validity\n *\n * Signs a message, and then verifies that signature\n * @param privateKey - Private key to verify\n * @param publicKey - Public key to verify as hex string\n * @returns Valid?\n */\nexport function isValidKeypair(\n  privateKey: string | Uint8Array,\n  publicKey: string | Uint8Array,\n): boolean {\n  const message = Buffer.from('TheMessage');\n  const signature = sign(message, privateKey);\n  const publicKeyBuffer = typeof publicKey === 'string' ? Buffer.from(publicKey, 'hex') : publicKey;\n  return verify(message, signature, encode(publicKeyBuffer, Encoding.AccountAddress));\n}\n","import BigNumber from 'bignumber.js';\nimport { mapObject } from '../../utils/other';\n\nexport const MAX_AUTH_FUN_GAS = 50000;\nexport type Int = number | string | BigNumber;\n// # AENS\nexport type AensName = `${string}.chain`;\nexport const NAME_TTL = 180000;\n// # max number of block into the future that the name is going to be available\n// # https://github.com/aeternity/protocol/blob/epoch-v0.22.0/AENS.md#update\n// # https://github.com/aeternity/protocol/blob/44a93d3aab957ca820183c3520b9daf6b0fedff4/AENS.md#aens-entry\nexport const NAME_MAX_TTL = 36000;\nexport const NAME_MAX_CLIENT_TTL = 84600;\nexport const CLIENT_TTL = NAME_MAX_CLIENT_TTL;\nexport const MIN_GAS_PRICE = 1e9;\n// # see https://github.com/aeternity/aeternity/blob/72e440b8731422e335f879a31ecbbee7ac23a1cf/apps/aecore/src/aec_governance.erl#L67\nexport const NAME_FEE_MULTIPLIER = 1e14; // 100000000000000\nexport const NAME_FEE_BID_INCREMENT = 0.05; // # the increment is in percentage\n// # see https://github.com/aeternity/aeternity/blob/72e440b8731422e335f879a31ecbbee7ac23a1cf/apps/aecore/src/aec_governance.erl#L272\nexport const NAME_BID_TIMEOUT_BLOCKS = 480; // # ~1 day\n// # this is the max length for a domain that requires a base fee to be paid\nexport const NAME_MAX_LENGTH_FEE = 31;\n// # https://github.com/aeternity/aeternity/blob/72e440b8731422e335f879a31ecbbee7ac23a1cf/apps/aecore/src/aec_governance.erl#L290\n// # https://github.com/aeternity/protocol/blob/master/AENS.md#protocol-fees-and-protection-times\n// # bid ranges:\nexport const NAME_BID_RANGES = mapObject({\n  31: 3,\n  30: 5,\n  29: 8,\n  28: 13,\n  27: 21,\n  26: 34,\n  25: 55,\n  24: 89,\n  23: 144,\n  22: 233,\n  21: 377,\n  20: 610,\n  19: 987,\n  18: 1597,\n  17: 2584,\n  16: 4181,\n  15: 6765,\n  14: 10946,\n  13: 17711,\n  12: 28657,\n  11: 46368,\n  10: 75025,\n  9: 121393,\n  8: 196418,\n  7: 317811,\n  6: 514229,\n  5: 832040,\n  4: 1346269,\n  3: 2178309,\n  2: 3524578,\n  1: 5702887,\n}, ([key, value]) => [key, new BigNumber(value).times(NAME_FEE_MULTIPLIER)]);\n\nexport enum ConsensusProtocolVersion {\n  Iris = 5,\n  Ceres = 6,\n}\n\n/**\n * @category transaction builder\n * @see {@link https://github.com/aeternity/protocol/blob/0f6dee3d9d1e8e2469816798f5c7587a6c918f94/contracts/contract_vms.md#virtual-machines-on-the-%C3%A6ternity-blockchain}\n */\nexport enum VmVersion {\n  NoVm = 0,\n  Sophia = 1,\n  SophiaImprovementsMinerva = 3,\n  SophiaImprovementsFortuna = 4,\n  Fate = 5,\n  SophiaImprovementsLima = 6,\n  Fate2 = 7,\n  Fate3 = 8,\n}\n\n/**\n * @category transaction builder\n * @see {@link https://github.com/aeternity/protocol/blob/0f6dee3d9d1e8e2469816798f5c7587a6c918f94/contracts/contract_vms.md#virtual-machines-on-the-%C3%A6ternity-blockchain}\n */\nexport enum AbiVersion {\n  NoAbi = 0,\n  Sophia = 1,\n  Fate = 3,\n}\n\n/**\n * Enum with tag types\n * @category transaction builder\n * @see {@link https://github.com/aeternity/protocol/blob/0f6dee3d9d1e8e2469816798f5c7587a6c918f94/serializations.md#binary-serialization}\n * @see {@link https://github.com/aeternity/aeserialization/blob/eb68fe331bd476910394966b7f5ede7a74d37e35/src/aeser_chain_objects.erl#L39-L97}\n */\n// TODO: implement serialisation for commented-out tags\nexport enum Tag {\n  Account = 10,\n  SignedTx = 11,\n  SpendTx = 12,\n  Oracle = 20,\n  // OracleQuery = 21,\n  OracleRegisterTx = 22,\n  OracleQueryTx = 23,\n  OracleResponseTx = 24,\n  OracleExtendTx = 25,\n  Name = 30,\n  // NameCommitment = 31,\n  NameClaimTx = 32,\n  NamePreclaimTx = 33,\n  NameUpdateTx = 34,\n  NameRevokeTx = 35,\n  NameTransferTx = 36,\n  // NameAuction = 37,\n  Contract = 40,\n  ContractCall = 41,\n  ContractCreateTx = 42,\n  ContractCallTx = 43,\n  ChannelCreateTx = 50,\n  // ChannelSetDelegatesTx = 501,\n  ChannelDepositTx = 51,\n  ChannelWithdrawTx = 52,\n  ChannelForceProgressTx = 521,\n  ChannelCloseMutualTx = 53,\n  ChannelCloseSoloTx = 54,\n  ChannelSlashTx = 55,\n  ChannelSettleTx = 56,\n  ChannelOffChainTx = 57,\n  ChannelOffChainUpdateTransfer = 570,\n  ChannelOffChainUpdateDeposit = 571,\n  ChannelOffChainUpdateWithdraw = 572,\n  ChannelOffChainUpdateCreateContract = 573,\n  ChannelOffChainUpdateCallContract = 574,\n  // ChannelOffChainUpdateMeta = 576,\n  ChannelClientReconnectTx = 575,\n  Channel = 58,\n  ChannelSnapshotSoloTx = 59,\n  TreesPoi = 60,\n  // TreesDb = 61,\n  StateTrees = 62,\n  Mtree = 63,\n  MtreeValue = 64,\n  ContractsMtree = 621,\n  CallsMtree = 622,\n  ChannelsMtree = 623,\n  NameserviceMtree = 624,\n  OraclesMtree = 625,\n  AccountsMtree = 626,\n  // CompilerSophia = 70,\n  GaAttachTx = 80,\n  GaMetaTx = 81,\n  PayingForTx = 82,\n  GaMetaTxAuthData = 810,\n  // KeyBlock = 100,\n  // MicroBlock = 101,\n  // LightMicroBlock = 102,\n  // Pof = 200,\n}\n","import { ConsensusProtocolVersion, VmVersion, AbiVersion } from '../constants';\nimport Node from '../../../Node';\n\n/*\n * First abi/vm by default\n * @see {@link https://github.com/aeternity/protocol/blob/71cf111/contracts/contract_vms.md#virtual-machines-on-the-æternity-blockchain}\n */\nexport const ProtocolToVmAbi = {\n  [ConsensusProtocolVersion.Iris]: {\n    'contract-create': {\n      vmVersion: [VmVersion.Fate2], abiVersion: [AbiVersion.Fate],\n    },\n    'contract-call': {\n      vmVersion: [], abiVersion: [AbiVersion.Fate, AbiVersion.Sophia],\n    },\n    'oracle-call': {\n      vmVersion: [], abiVersion: [AbiVersion.NoAbi, AbiVersion.Fate],\n    },\n  },\n  [ConsensusProtocolVersion.Ceres]: {\n    'contract-create': {\n      vmVersion: [VmVersion.Fate3], abiVersion: [AbiVersion.Fate],\n    },\n    'contract-call': {\n      vmVersion: [], abiVersion: [AbiVersion.Fate],\n    },\n    'oracle-call': {\n      vmVersion: [], abiVersion: [AbiVersion.NoAbi, AbiVersion.Fate],\n    },\n  },\n} as const;\n\nexport interface CtVersion {\n  vmVersion: VmVersion;\n  abiVersion: AbiVersion;\n}\n\nexport function getProtocolDetails(\n  protocolVersion: ConsensusProtocolVersion,\n  type: 'contract-create' | 'contract-call' | 'oracle-call',\n): CtVersion {\n  const protocol = ProtocolToVmAbi[protocolVersion][type];\n  return {\n    vmVersion: protocol.vmVersion[0] ?? VmVersion.Fate2,\n    abiVersion: protocol.abiVersion[0],\n  };\n}\n\nexport default {\n  serialize(\n    value: CtVersion | undefined,\n    params: {},\n    { consensusProtocolVersion = ConsensusProtocolVersion.Iris }:\n    { consensusProtocolVersion?: ConsensusProtocolVersion },\n  ): Buffer {\n    value ??= getProtocolDetails(consensusProtocolVersion, 'contract-create');\n\n    return Buffer.from([value.vmVersion, 0, value.abiVersion]);\n  },\n\n  async prepare(\n    value: CtVersion | undefined,\n    params: {},\n    // TODO: { consensusProtocolVersion: ConsensusProtocolVersion } | { onNode: Node } | {}\n    options: { consensusProtocolVersion?: ConsensusProtocolVersion; onNode?: Node },\n  ): Promise<CtVersion | undefined> {\n    if (value != null) return value;\n    if (options.consensusProtocolVersion != null) return undefined;\n    if (Object.keys(ConsensusProtocolVersion).length === 2) return undefined;\n    if (options.onNode != null) {\n      return getProtocolDetails(\n        (await options.onNode.getNodeInfo()).consensusProtocolVersion,\n        'contract-create',\n      );\n    }\n    return undefined;\n  },\n\n  deserialize(buffer: Buffer): CtVersion {\n    const [vm, , abi] = buffer;\n    return { vmVersion: +vm, abiVersion: +abi };\n  },\n};\n","import {\n  decode, encode, Encoded, Encoding,\n} from '../../../utils/encoder';\nimport { Tag } from '../constants';\nimport { ArgumentError } from '../../../utils/errors';\nimport type { unpackTx as unpackTxType, buildTx as buildTxType } from '../index';\n\nexport default function genEntryField<T extends Tag = Tag>(tag?: T): {\n  serialize: (\n    // TODO: replace with `TxParams & { tag: T }`,\n    //  but fix TS2502 value is referenced directly or indirectly in its own type annotation\n    value: any,\n    options: { buildTx: typeof buildTxType },\n  ) => Buffer;\n  deserialize: (\n    value: Buffer, options: { unpackTx: typeof unpackTxType },\n    // TODO: replace with `TxUnpacked & { tag: T }`,\n    //  TS2577 Return type annotation circularly references itself\n  ) => any;\n} {\n  return {\n    serialize(txParams, { buildTx }) {\n      if (ArrayBuffer.isView(txParams)) return Buffer.from(txParams as any);\n      if (typeof txParams === 'string' && txParams.startsWith('tx_')) {\n        return decode(txParams as Encoded.Transaction);\n      }\n      return decode(buildTx({ ...txParams, ...tag != null && { tag } }));\n    },\n\n    deserialize(buf, { unpackTx }) {\n      const tx = unpackTx(encode(buf, Encoding.Transaction));\n      if (tag != null && tx.tag !== tag) throw new ArgumentError('Tag', Tag[tag], Tag[tx.tag]);\n      return tx;\n    },\n  };\n}\n","export default function genArrayField<Input, Output, Binary>(\n  itemHandler: {\n    serialize: (value: Input, params: unknown) => Binary;\n    deserialize: (value: Binary, params: unknown) => Output;\n  },\n): {\n    serialize: (value: readonly Input[], params: unknown) => Binary[];\n    deserialize: (value: Binary[], params: unknown) => Output[];\n  } {\n  return {\n    serialize(items, params) {\n      return items.map((item) => itemHandler.serialize(item, params));\n    },\n\n    deserialize(buffers, params) {\n      return buffers.map((buffer) => itemHandler.deserialize(buffer, params));\n    },\n  };\n}\n","import { Tag } from '../constants';\nimport {\n  encode, Encoding, Encoded, decode,\n} from '../../../utils/encoder';\nimport type { unpackTx as unpackTxType, buildTx as buildTxType } from '../index';\n\nexport default function genMapField<E extends Encoding, T extends Tag>(encoding: E, tag: T): {\n  serialize: (\n    // TODO: replace with `TxParams & { tag: T }`,\n    //  but fix TS2502 value is referenced directly or indirectly in its own type annotation\n    value: Record<Encoded.Generic<E>, any>, options: { buildTx: typeof buildTxType }\n  ) => Buffer;\n  deserialize: (\n    value: Buffer, options: { unpackTx: typeof unpackTxType },\n    // TODO: replace with `TxUnpacked & { tag: T }`,\n    //  TS2577 Return type annotation circularly references itself\n  ) => Record<Encoded.Generic<E>, any>;\n  recursiveType: true;\n} {\n  return {\n    serialize(object, { buildTx }) {\n      return decode(buildTx({\n        tag: Tag.Mtree,\n        values: Object.entries(object).map(([key, value]) => ({\n          tag: Tag.MtreeValue,\n          key: decode(key as Encoded.Generic<E>),\n          value: decode(buildTx({ ...value as any, tag })),\n        })),\n      }));\n    },\n\n    deserialize(buffer, { unpackTx }) {\n      const { values } = unpackTx(encode(buffer, Encoding.Transaction), Tag.Mtree);\n      return Object.fromEntries(values\n        // TODO: remove after resolving https://github.com/aeternity/aeternity/issues/4066\n        .filter(({ key }) => encoding !== Encoding.ContractAddress || key.length === 32)\n        .map(({ key, value }) => [\n          encode(key, encoding),\n          unpackTx(encode(value, Encoding.Transaction), tag),\n        ])) as Record<Encoded.Generic<E>, any>;\n    },\n\n    recursiveType: true,\n  };\n}\n","import BigNumber from 'bignumber.js';\nimport { NoSerializerFoundError, TypeError } from './errors';\n\n/**\n * Convert string, number, or BigNumber to byte array\n * @param val - value to convert\n * @param big - enables force conversion to BigNumber\n * @returns Buffer\n */\n// eslint-disable-next-line import/prefer-default-export\nexport function toBytes(val?: null | string | number | BigNumber, big = false): Buffer {\n  // Encode a value to bytes.\n  // If the value is an int it will be encoded as bytes big endian\n  // Raises ValueError if the input is not an int or string\n\n  if (val == null) return Buffer.from([]);\n  if (Number.isInteger(val) || BigNumber.isBigNumber(val) || big) {\n    if (!BigNumber.isBigNumber(val)) val = new BigNumber(val);\n    if (!val.isInteger()) throw new TypeError(`Unexpected not integer value: ${val.toFixed()}`);\n    let hexString = val.toString(16);\n    if (hexString.length % 2 === 1) hexString = `0${hexString}`;\n    return Buffer.from(hexString, 'hex');\n  }\n  if (typeof val === 'string') {\n    return Buffer.from(val);\n  }\n  throw new NoSerializerFoundError();\n}\n","import BigNumber from 'bignumber.js';\nimport { genSalt, hash } from '../../utils/crypto';\nimport {\n  decode, encode, Encoded, Encoding,\n} from '../../utils/encoder';\nimport { toBytes } from '../../utils/bytes';\nimport { concatBuffers } from '../../utils/other';\nimport {\n  AensName,\n  NAME_BID_RANGES,\n  NAME_BID_TIMEOUT_BLOCKS,\n  NAME_FEE_BID_INCREMENT,\n  NAME_MAX_LENGTH_FEE,\n} from './constants';\nimport { ceil } from '../../utils/bignumber';\nimport { ArgumentError, IllegalBidFeeError } from '../../utils/errors';\n\n/**\n * JavaScript-based Transaction builder helper function's\n */\n\n/**\n * Build a contract public key\n * @category contract\n * @param ownerId - The public key of the owner account\n * @param nonce - the nonce of the transaction\n * @returns Contract public key\n */\nexport function buildContractId(\n  ownerId: Encoded.AccountAddress,\n  nonce: number | BigNumber,\n): Encoded.ContractAddress {\n  const ownerIdAndNonce = Buffer.from([...decode(ownerId), ...toBytes(nonce)]);\n  const b2bHash = hash(ownerIdAndNonce);\n  return encode(b2bHash, Encoding.ContractAddress);\n}\n\n/**\n * Build a oracle query id\n * @category oracle\n * @param senderId - The public key of the sender account\n * @param nonce - the nonce of the transaction\n * @param oracleId - The oracle public key\n * @returns Contract public key\n */\nexport function oracleQueryId(\n  senderId: Encoded.AccountAddress,\n  nonce: number | BigNumber | string,\n  oracleId: Encoded.OracleAddress,\n): Encoded.OracleQueryId {\n  function _int32(val: number | string | BigNumber): Buffer {\n    const nonceBE = toBytes(val, true);\n    return concatBuffers([Buffer.alloc(32 - nonceBE.length), nonceBE]);\n  }\n\n  const b2bHash = hash(\n    Buffer.from([...decode(senderId), ..._int32(nonce), ...decode(oracleId)]),\n  );\n  return encode(b2bHash, Encoding.OracleQueryId);\n}\n\nconst AENS_SUFFIX = '.chain';\n\nexport function nameToPunycode(maybeName: string): AensName {\n  const [name, suffix, ...other] = maybeName.split('.');\n  if (other.length !== 0) throw new ArgumentError('aens name', 'including only one dot', maybeName);\n  if (suffix !== AENS_SUFFIX.slice(1)) {\n    throw new ArgumentError('aens name', `suffixed with ${AENS_SUFFIX}`, maybeName);\n  }\n  if (/\\p{Emoji_Presentation}/u.test(name)) {\n    throw new ArgumentError('aens name', 'not containing emoji', maybeName);\n  }\n  let punycode;\n  try {\n    const u = new URL(`http://${name}.${suffix}`);\n    if (u.username + u.password + u.port + u.search + u.hash !== '' || u.pathname !== '/') {\n      throw new ArgumentError('aens name', 'valid', maybeName);\n    }\n    punycode = u.host;\n  } catch (error) {\n    if (error instanceof TypeError && error.message.includes('Invalid URL')) {\n      throw new ArgumentError('aens name', 'valid', maybeName);\n    }\n    throw error;\n  }\n  if (!/^[a-z0-9.-]+$/i.test(punycode)) {\n    throw new ArgumentError('aens name', 'without illegal chars', maybeName);\n  }\n  if (punycode.length > 63 + AENS_SUFFIX.length) {\n    throw new ArgumentError('aens name', 'not too long', maybeName);\n  }\n  return punycode as AensName;\n}\n\n/**\n * Encode an AENS name\n * @category AENS\n * @param name - Name to encode\n * @returns `nm_` prefixed encoded AENS name\n */\nexport function produceNameId(name: AensName): Encoded.Name {\n  return encode(hash(nameToPunycode(name)), Encoding.Name);\n}\n\n/**\n * Generate the commitment hash by hashing the salt and\n * name, base 58 encoding the result and prepending 'cm_'\n * @category transaction builder\n * @param name - Name to be registered\n * @param salt - Random number\n * @returns Commitment hash\n */\nexport function commitmentHash(\n  name: AensName,\n  salt: number = genSalt(),\n): Encoded.Commitment {\n  return encode(\n    hash(concatBuffers([\n      Buffer.from(nameToPunycode(name)),\n      Buffer.from(salt.toString(16).padStart(64, '0'), 'hex'),\n    ])),\n    Encoding.Commitment,\n  );\n}\n\n/**\n * Utility function to convert bytes to int\n * @category transaction builder\n * @param buf - Value\n * @returns Buffer Buffer from number(BigEndian)\n */\nexport function readInt(buf: Buffer = Buffer.from([])): string {\n  return new BigNumber(Buffer.from(buf).toString('hex'), 16).toString(10);\n}\n\n/**\n * Ensure that name is valid AENS name, would throw an exception otherwise\n * @category AENS\n * @param name - AENS name\n */\nexport function ensureName(maybeName: string): asserts maybeName is AensName {\n  nameToPunycode(maybeName);\n}\n\n/**\n * Is AENS name valid\n * @category AENS\n * @param name - AENS name\n */\n// TODO: consider renaming to isName\nexport function isNameValid(maybeName: string): maybeName is AensName {\n  try {\n    ensureName(maybeName);\n    return true;\n  } catch (error) {\n    return false;\n  }\n}\n\nconst encodingToPointerKey = [\n  [Encoding.AccountAddress, 'account_pubkey'],\n  [Encoding.OracleAddress, 'oracle_pubkey'],\n  [Encoding.ContractAddress, 'contract_pubkey'],\n  [Encoding.Channel, 'channel'],\n] as const;\n\n/**\n * @category AENS\n * @param identifier - account/oracle/contract address, or channel\n * @returns default AENS pointer key\n */\nexport function getDefaultPointerKey(\n  identifier: Encoded.Generic<typeof encodingToPointerKey[number][0]>,\n): typeof encodingToPointerKey[number][1] {\n  decode(identifier);\n  const encoding = identifier.substring(0, 2);\n  const result = encodingToPointerKey.find(([e]) => e === encoding)?.[1];\n  if (result != null) return result;\n  throw new ArgumentError(\n    'identifier',\n    `prefixed with one of ${encodingToPointerKey.map(([e]) => `${e}_`).join(', ')}`,\n    identifier,\n  );\n}\n\n/**\n * Get the minimum AENS name fee\n * @category AENS\n * @param name - the AENS name to get the fee for\n * @returns the minimum fee for the AENS name auction\n */\nexport function getMinimumNameFee(name: AensName): BigNumber {\n  const nameLength = nameToPunycode(name).length - AENS_SUFFIX.length;\n  return NAME_BID_RANGES[Math.min(nameLength, NAME_MAX_LENGTH_FEE)];\n}\n\n/**\n * Compute bid fee for AENS auction\n * @category AENS\n * @param name - the AENS name to get the fee for\n * @param options - Options\n * @param options.startFee - Auction start fee\n * @param options.increment - Bid multiplier(In percentage, must be between 0 and 1)\n * @returns Bid fee\n */\nexport function computeBidFee(\n  name: AensName,\n  { startFee, increment = NAME_FEE_BID_INCREMENT }:\n  { startFee?: number | string | BigNumber; increment?: number } = {},\n): BigNumber {\n  if (!(Number(increment) === increment && increment % 1 !== 0)) throw new IllegalBidFeeError(`Increment must be float. Current increment ${increment}`);\n  if (increment < NAME_FEE_BID_INCREMENT) throw new IllegalBidFeeError(`minimum increment percentage is ${NAME_FEE_BID_INCREMENT}`);\n  // FIXME: increment should be used somehow here\n  return ceil(\n    new BigNumber(startFee ?? getMinimumNameFee(name))\n      .times(new BigNumber(NAME_FEE_BID_INCREMENT).plus(1)),\n  );\n}\n\n/**\n * Compute auction end height\n * @category AENS\n * @param name - Name to compute auction end for\n * @param claimHeight - Auction starting height\n * @see {@link https://github.com/aeternity/aeternity/blob/72e440b8731422e335f879a31ecbbee7ac23a1cf/apps/aecore/src/aec_governance.erl#L273}\n * @returns Auction end height\n */\nexport function computeAuctionEndBlock(name: AensName, claimHeight: number): number {\n  const length = nameToPunycode(name).length - AENS_SUFFIX.length;\n  const h = (length <= 4 ? 62 * NAME_BID_TIMEOUT_BLOCKS : null)\n    ?? (length <= 8 ? 31 * NAME_BID_TIMEOUT_BLOCKS : null)\n    ?? (length <= 12 ? NAME_BID_TIMEOUT_BLOCKS : null)\n    ?? 0;\n  return h + claimHeight;\n}\n\n/**\n * Is name accept going to auction\n * @category AENS\n */\nexport function isAuctionName(name: AensName): boolean {\n  return nameToPunycode(name).length < 13 + AENS_SUFFIX.length;\n}\n","import { readInt } from '../helpers';\nimport { Int } from '../constants';\nimport { ArgumentError } from '../../../utils/errors';\nimport { toBytes } from '../../../utils/bytes';\n\nexport default {\n  serialize(value: Int): Buffer {\n    if (Number(value) < 0) throw new ArgumentError('value', 'greater or equal to 0', value);\n    return toBytes(value, true);\n  },\n\n  deserialize(value: Buffer): string {\n    return readInt(value);\n  },\n};\n","import uInt from './u-int';\n\nexport default {\n  serialize(value: number): Buffer {\n    return uInt.serialize(value);\n  },\n\n  deserialize(value: Buffer): number {\n    return +uInt.deserialize(value);\n  },\n};\n","import { ArgumentError } from '../../../utils/errors';\nimport shortUInt from './short-u-int';\n\nexport default function genShortUIntConstField<\n  Value extends number, Optional extends boolean = false,\n>(constValue: Value, optional?: Optional): {\n  serialize: Optional extends true ? (value?: Value) => Buffer : (value: Value) => Buffer;\n  deserialize: (value: Buffer) => Value;\n  constValue: Value;\n  constValueOptional: boolean;\n} {\n  return {\n    serialize(value?: Value) {\n      if ((optional !== true || value != null) && value !== constValue) {\n        throw new ArgumentError('ShortUIntConst', constValue, value);\n      }\n      return shortUInt.serialize(constValue);\n    },\n\n    deserialize(buf) {\n      const value = shortUInt.deserialize(buf);\n      if (value !== constValue) throw new ArgumentError('ShortUIntConst', constValue, value);\n      return constValue;\n    },\n\n    constValue,\n\n    constValueOptional: optional === true,\n  };\n}\n","import { ArgumentError, PrefixNotFoundError, TagNotFoundError } from '../../../utils/errors';\nimport { toBytes } from '../../../utils/bytes';\nimport {\n  decode, encode, Encoded, Encoding,\n} from '../../../utils/encoder';\nimport { isItemOfArray } from '../../../utils/other';\n\n/**\n * Map of prefix to ID tag constant\n * @see {@link https://github.com/aeternity/protocol/blob/master/serializations.md#the-id-type}\n * @see {@link https://github.com/aeternity/aeserialization/blob/eb68fe331bd476910394966b7f5ede7a74d37e35/src/aeser_id.erl#L97-L102}\n * @see {@link https://github.com/aeternity/aeserialization/blob/eb68fe331bd476910394966b7f5ede7a74d37e35/src/aeser_api_encoder.erl#L163-L168}\n */\nexport const idTagToEncoding = [\n  Encoding.AccountAddress,\n  Encoding.Name,\n  Encoding.Commitment,\n  Encoding.OracleAddress,\n  Encoding.ContractAddress,\n  Encoding.Channel,\n] as const;\n\nexport type AddressEncodings = typeof idTagToEncoding[number];\n\nexport default function genAddressField<Encoding extends AddressEncodings>(\n  ...encodings: Encoding[]\n): {\n    serialize: (value: Encoded.Generic<Encoding>) => Buffer;\n    deserialize: (value: Buffer) => Encoded.Generic<Encoding>;\n  } {\n  return {\n    /**\n     * Utility function to create and _id type\n     * @param hashId - Encoded hash\n     * @returns Buffer Buffer with ID tag and decoded HASh\n     */\n    serialize(hashId) {\n      const enc = hashId.slice(0, 2);\n      if (!isItemOfArray(enc, idTagToEncoding)) throw new TagNotFoundError(enc);\n      if (!isItemOfArray(enc, encodings)) {\n        throw new ArgumentError('Address encoding', encodings.join(', '), enc);\n      }\n      const idTag = idTagToEncoding.indexOf(enc) + 1;\n      return Buffer.from([...toBytes(idTag), ...decode(hashId)]);\n    },\n\n    /**\n     * Utility function to read and _id type\n     * @param buf - Data\n     * @returns Encoded hash string with prefix\n     */\n    deserialize(buf) {\n      const idTag = Buffer.from(buf).readUIntBE(0, 1);\n      const enc = idTagToEncoding[idTag - 1];\n      if (enc == null) throw new PrefixNotFoundError(idTag);\n      if (!isItemOfArray(enc, encodings)) {\n        throw new ArgumentError('Address encoding', encodings.join(', '), enc);\n      }\n      return encode(buf.subarray(1), enc) as Encoded.Generic<Encoding>;\n    },\n  };\n}\n","import {\n  decode, encode, Encoded, Encoding,\n} from '../../../utils/encoder';\nimport { ArgumentError } from '../../../utils/errors';\n\nexport default function genEncodedField<E extends Encoding, Optional extends boolean = false>(\n  encoding: E,\n  optional?: Optional,\n): {\n    serialize: Optional extends true\n      ? (value?: Encoded.Generic<E>) => Buffer : (value: Encoded.Generic<E>) => Buffer;\n    deserialize: (value: Buffer) => Encoded.Generic<E>;\n  } {\n  return {\n    serialize(encodedData?: Encoded.Generic<E>) {\n      if (encodedData == null) {\n        if (optional === true) return Buffer.from([]);\n        throw new ArgumentError('Encoded data', 'provided', encodedData);\n      }\n      return decode(encodedData);\n    },\n\n    deserialize(buffer) {\n      return encode(buffer, encoding);\n    },\n  };\n}\n","export default {\n  serialize(buffer: Uint8Array): Buffer {\n    return Buffer.from(buffer);\n  },\n\n  deserialize(buffer: Buffer): Buffer {\n    return buffer;\n  },\n};\n","import uInt from './u-int';\nimport { Int } from '../constants';\nimport { AE_AMOUNT_FORMATS, formatAmount } from '../../../utils/amount-formatter';\n\nexport default {\n  ...uInt,\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  serializeAettos(value: string | undefined, params: {}): string {\n    return value ?? '0';\n  },\n\n  serialize(\n    value: Int | undefined,\n    params: {},\n    { denomination = AE_AMOUNT_FORMATS.AETTOS }: { denomination?: AE_AMOUNT_FORMATS },\n  ): Buffer {\n    return uInt.serialize(\n      this.serializeAettos(\n        value != null ? formatAmount(value, { denomination }) : value,\n        params,\n      ),\n    );\n  },\n};\n","import BigNumber from 'bignumber.js';\nimport { IllegalArgumentError } from '../../../utils/errors';\nimport { MIN_GAS_PRICE, Tag } from '../constants';\nimport coinAmount from './coin-amount';\nimport { isKeyOfObject } from '../../../utils/other';\nimport { decode, Encoded } from '../../../utils/encoder';\nimport type { unpackTx as unpackTxType, buildTx as buildTxType } from '../index';\n\nconst BASE_GAS = 15000;\nconst GAS_PER_BYTE = 20;\nconst KEY_BLOCK_INTERVAL = 3;\n\n/**\n * Calculate the Base fee gas\n * @see {@link https://github.com/aeternity/protocol/blob/master/consensus/README.md#gas}\n * @param txType - The transaction type\n * @returns The base fee\n * @example\n * ```js\n * TX_FEE_BASE('channelForceProgress') => new BigNumber(30 * 15000)\n * ```\n */\nconst TX_FEE_BASE_GAS = (txType: Tag): BigNumber => {\n  const feeFactors = {\n    [Tag.ChannelForceProgressTx]: 30,\n    [Tag.ChannelOffChainTx]: 0,\n    [Tag.ChannelOffChainUpdateCallContract]: 0,\n    [Tag.ChannelOffChainUpdateCreateContract]: 0,\n    [Tag.ChannelOffChainUpdateDeposit]: 0,\n    [Tag.ChannelOffChainUpdateWithdraw]: 0,\n    [Tag.ChannelOffChainUpdateTransfer]: 0,\n    [Tag.ContractCreateTx]: 5,\n    [Tag.ContractCallTx]: 12,\n    [Tag.GaAttachTx]: 5,\n    [Tag.GaMetaTx]: 5,\n    [Tag.PayingForTx]: 1 / 5,\n  } as const;\n  const factor = feeFactors[txType as keyof typeof feeFactors] ?? 1;\n  return new BigNumber(factor * BASE_GAS);\n};\n\n/**\n * Calculate fee for Other types of transactions\n * @see {@link https://github.com/aeternity/protocol/blob/master/consensus/README.md#gas}\n * @param txType - The transaction type\n * @param txSize - The transaction size\n * @returns parameters - The transaction parameters\n * @returns parameters.relativeTtl - The relative ttl\n * @returns parameters.innerTxSize - The size of the inner transaction\n * @returns The Other fee\n * @example\n * ```js\n * TX_FEE_OTHER_GAS('oracleResponse',10, { relativeTtl: 10, innerTxSize: 10 })\n *  => new BigNumber(10).times(20).plus(Math.ceil(32000 * 10 / Math.floor(60 * 24 * 365 / 2)))\n * ```\n */\nconst TX_FEE_OTHER_GAS = (\n  txType: Tag,\n  txSize: number,\n  { relativeTtl, innerTxSize }: { relativeTtl: number; innerTxSize: number },\n): BigNumber => {\n  switch (txType) {\n    case Tag.OracleRegisterTx:\n    case Tag.OracleExtendTx:\n    case Tag.OracleQueryTx:\n    case Tag.OracleResponseTx:\n      return new BigNumber(txSize)\n        .times(GAS_PER_BYTE)\n        .plus(\n          Math.ceil((32000 * relativeTtl) / Math.floor((60 * 24 * 365) / KEY_BLOCK_INTERVAL)),\n        );\n    case Tag.GaMetaTx:\n    case Tag.PayingForTx:\n      return new BigNumber(txSize).minus(innerTxSize).times(GAS_PER_BYTE);\n    default:\n      return new BigNumber(txSize).times(GAS_PER_BYTE);\n  }\n};\n\nfunction getOracleRelativeTtl(params: any): number {\n  const ttlKeys = {\n    [Tag.OracleRegisterTx]: 'oracleTtlValue',\n    [Tag.OracleExtendTx]: 'oracleTtlValue',\n    [Tag.OracleQueryTx]: 'queryTtlValue',\n    [Tag.OracleResponseTx]: 'responseTtlValue',\n  } as const;\n\n  const { tag } = params;\n  if (!isKeyOfObject(tag, ttlKeys)) return 1;\n  return params[ttlKeys[tag]];\n}\n\n/**\n * Calculate fee based on tx type and params\n */\nexport function buildFee(\n  builtTx: Encoded.Transaction,\n  unpackTx: typeof unpackTxType,\n  buildTx: typeof buildTxType,\n): BigNumber {\n  const { length } = decode(builtTx);\n  const txObject = unpackTx(builtTx);\n\n  let innerTxSize = 0;\n  if (txObject.tag === Tag.GaMetaTx || txObject.tag === Tag.PayingForTx) {\n    innerTxSize = decode(buildTx(txObject.tx.encodedTx)).length;\n  }\n\n  return TX_FEE_BASE_GAS(txObject.tag)\n    .plus(TX_FEE_OTHER_GAS(txObject.tag, length, {\n      relativeTtl: getOracleRelativeTtl(txObject), innerTxSize,\n    }))\n    .times(MIN_GAS_PRICE);\n}\n\n/**\n * Calculate min fee\n * @category transaction builder\n * @param rebuildTx - Callback to get built transaction with specific fee\n */\nfunction calculateMinFee(\n  rebuildTx: (value: BigNumber) => Encoded.Transaction,\n  unpackTx: typeof unpackTxType,\n  buildTx: typeof buildTxType,\n): BigNumber {\n  let fee = new BigNumber(0);\n  let previousFee;\n  do {\n    previousFee = fee;\n    fee = buildFee(rebuildTx(fee), unpackTx, buildTx);\n  } while (!fee.eq(previousFee));\n  return fee;\n}\n\nexport default {\n  ...coinAmount,\n\n  serializeAettos(\n    _value: string | undefined,\n    {\n      rebuildTx, unpackTx, buildTx, _computingMinFee, _pickBiggerFee,\n    }: {\n      rebuildTx: (params: any) => Encoded.Transaction;\n      unpackTx: typeof unpackTxType;\n      buildTx: typeof buildTxType;\n      _computingMinFee?: BigNumber;\n      _pickBiggerFee?: boolean;\n    },\n  ): string {\n    if (_computingMinFee != null) return _computingMinFee.toFixed();\n    const minFee = calculateMinFee(\n      (fee) => rebuildTx({ _computingMinFee: fee }),\n      unpackTx,\n      buildTx,\n    );\n    const value = new BigNumber(_value ?? minFee);\n    if (minFee.gt(value)) {\n      if (_pickBiggerFee === true) return minFee.toFixed();\n      throw new IllegalArgumentError(`Fee ${value.toString()} must be bigger than ${minFee}`);\n    }\n    return value.toFixed();\n  },\n};\n","import shortUInt from './short-u-int';\nimport Node from '../../../Node';\nimport { ArgumentError } from '../../../utils/errors';\n\nexport default {\n  ...shortUInt,\n\n  serialize(value: number | undefined): Buffer {\n    return shortUInt.serialize(value ?? 0);\n  },\n\n  async prepare(\n    value: number | undefined,\n    params: {},\n    // TODO: { absoluteTtl: true } | { absoluteTtl: false, onNode: Node }\n    { onNode, absoluteTtl }: { onNode?: Node; absoluteTtl?: boolean },\n  ) {\n    if (absoluteTtl !== true && value !== 0 && value != null) {\n      if (onNode == null) throw new ArgumentError('onNode', 'provided', onNode);\n      value += (await onNode.getCurrentKeyBlock()).height;\n    }\n    return value;\n  },\n};\n","import { isAccountNotFoundError } from '../../../utils/other';\nimport shortUInt from './short-u-int';\nimport Node from '../../../Node';\nimport { ArgumentError } from '../../../utils/errors';\nimport { NextNonceStrategy } from '../../../apis/node';\n\nexport default function genNonceField<SenderKey extends string>(senderKey: SenderKey): {\n  serialize: (value: number) => Buffer;\n  // TODO: (value: number) => Promise<number> | (value: undefined, ...) => Promise<number>\n  prepare: (\n    value: number | undefined,\n    params: {},\n    // TODO: replace `string` with AddressEncodings\n    options: { [key in SenderKey]: string } & { strategy?: NextNonceStrategy; onNode?: Node },\n  ) => Promise<number>;\n  deserialize: (value: Buffer) => number;\n  senderKey: string;\n} {\n  return {\n    ...shortUInt,\n\n    async prepare(value, params, options) {\n      if (value != null) return value;\n      const { onNode, strategy } = options;\n      const senderId = options[senderKey];\n      const requirement = 'provided (or provide `nonce` instead)';\n      if (onNode == null) throw new ArgumentError('onNode', requirement, onNode);\n      if (senderId == null) throw new ArgumentError('senderId', requirement, senderId);\n      return (\n        await onNode.getAccountNextNonce(senderId.replace(/^ok_/, 'ak_'), { strategy })\n          .catch((error) => {\n            if (!isAccountNotFoundError(error)) throw error;\n            return { nextNonce: 1 };\n          })\n      ).nextNonce;\n    },\n\n    senderKey,\n  };\n}\n","import { NamePointer as NamePointerString } from '../../../apis/node';\nimport { toBytes } from '../../../utils/bytes';\nimport { Encoded } from '../../../utils/encoder';\nimport { IllegalArgumentError } from '../../../utils/errors';\nimport address, { AddressEncodings, idTagToEncoding } from './address';\n\nconst addressAny = address(...idTagToEncoding);\n\n// TODO: remove after fixing node types\ntype NamePointer = NamePointerString & {\n  id: Encoded.Generic<AddressEncodings>;\n};\n\nexport default {\n  /**\n   * Helper function to build pointers for name update TX\n   * @param pointers - Array of pointers\n   * `([ { key: 'account_pubkey', id: 'ak_32klj5j23k23j5423l434l2j3423'} ])`\n   * @returns Serialized pointers array\n   */\n  serialize(pointers: NamePointer[]): Buffer[][] {\n    if (pointers.length > 32) {\n      throw new IllegalArgumentError(`Expected 32 pointers or less, got ${pointers.length} instead`);\n    }\n\n    return pointers.map(\n      (pointer) => [toBytes(pointer.key), addressAny.serialize(pointer.id)],\n    );\n  },\n\n  /**\n   * Helper function to read pointers from name update TX\n   * @param pointers - Array of pointers\n   * @returns Deserialize pointer array\n   */\n  deserialize(pointers: Array<[key: Buffer, id: Buffer]>): NamePointer[] {\n    return pointers.map(\n      ([key, id]) => ({ key: key.toString(), id: addressAny.deserialize(id) }),\n    );\n  },\n};\n","export default {\n  serialize(value: string): Buffer {\n    return Buffer.from(value);\n  },\n\n  deserialize(value: Buffer): string {\n    return value.toString();\n  },\n};\n","import field from './field';\nimport { AensName } from '../constants';\n\nexport default {\n  /**\n   * @param value - AENS name\n   */\n  serialize(value: AensName): Buffer {\n    return field.serialize(value);\n  },\n\n  /**\n   * @param value - AENS name\n   */\n  deserialize(value: Buffer): AensName {\n    return field.deserialize(value) as AensName;\n  },\n};\n","import BigNumber from 'bignumber.js';\nimport { getMinimumNameFee } from '../helpers';\nimport { InsufficientNameFeeError } from '../../../utils/errors';\nimport coinAmount from './coin-amount';\nimport { AensName, Int } from '../constants';\n\nexport default {\n  ...coinAmount,\n\n  serializeAettos(\n    _value: string | undefined,\n    txFields: { name: AensName },\n  ): string {\n    const minNameFee = getMinimumNameFee(txFields.name);\n    const value = new BigNumber(_value ?? minNameFee);\n    if (minNameFee.gt(value)) throw new InsufficientNameFeeError(value, minNameFee);\n    return value.toFixed();\n  },\n\n  /**\n   * @param value - AENS name fee Buffer\n   * @param txFields - Transaction fields\n   * @param txFields.name - AENS Name in transaction\n   */\n  serialize(\n    value: Int | undefined,\n    txFields: { name: AensName } & Parameters<typeof coinAmount['serialize']>[1],\n    parameters: Parameters<typeof coinAmount['serialize']>[2],\n  ): Buffer {\n    return coinAmount.serialize.call(this, value, txFields, parameters);\n  },\n};\n","import { AensName } from '../constants';\nimport { produceNameId, isNameValid } from '../helpers';\nimport address from './address';\nimport { Encoded, Encoding } from '../../../utils/encoder';\n\nconst addressName = address(Encoding.Name);\n\nexport default {\n  ...addressName,\n\n  /**\n   * @param value - AENS name ID\n   */\n  serialize(value: AensName | Encoded.Name): Buffer {\n    return addressName.serialize(isNameValid(value) ? produceNameId(value) : value);\n  },\n};\n","export default {\n  serialize(value: boolean): Buffer {\n    return Buffer.from([value ? 1 : 0]);\n  },\n\n  deserialize(buffer: Buffer): boolean {\n    return buffer[0] === 1;\n  },\n};\n","import coinAmount from './coin-amount';\nimport { Int } from '../constants';\nimport { IllegalArgumentError } from '../../../utils/errors';\n\nexport default {\n  ...coinAmount,\n\n  /**\n   * @param value - Deposit value in string format. Should be equal to '0'.\n   * @param options - Options\n   * @param parameters - Parameters\n   * @returns Deposit value Buffer.\n   */\n  serialize(\n    value: Int | undefined,\n    options: Parameters<typeof coinAmount['serialize']>[1],\n    parameters: Parameters<typeof coinAmount['serialize']>[2],\n  ): Buffer {\n    value ??= 0;\n    if (+value !== 0) throw new IllegalArgumentError(`Contract deposit is not refundable, so it should be equal 0, got ${value.toString()} instead`);\n    return coinAmount.serialize(value, options, parameters);\n  },\n};\n","import { IllegalArgumentError } from '../../../utils/errors';\nimport { MIN_GAS_PRICE, Tag, MAX_AUTH_FUN_GAS } from '../constants';\nimport shortUInt from './short-u-int';\nimport { buildFee } from './fee';\nimport type { unpackTx as unpackTxType, buildTx as buildTxType } from '../index';\n\nfunction calculateGasLimitMax(\n  gasMax: number,\n  rebuildTx: (value: number) => any,\n  unpackTx: typeof unpackTxType,\n  buildTx: typeof buildTxType,\n): number {\n  return gasMax - +buildFee(rebuildTx(gasMax), unpackTx, buildTx).dividedBy(MIN_GAS_PRICE);\n}\n\nexport default {\n  ...shortUInt,\n\n  serialize(\n    _value: number | undefined,\n    {\n      tag, rebuildTx, unpackTx, buildTx, _computingGasLimit,\n    }: {\n      tag: Tag;\n      rebuildTx: (params: any) => any;\n      unpackTx: typeof unpackTxType;\n      buildTx: typeof buildTxType;\n      _computingGasLimit?: number;\n    },\n    { gasMax = 6e6 }: { gasMax?: number },\n  ): Buffer {\n    if (_computingGasLimit != null) return shortUInt.serialize(_computingGasLimit);\n\n    const gasLimitMax = tag === Tag.GaMetaTx ? MAX_AUTH_FUN_GAS : calculateGasLimitMax(\n      gasMax,\n      (gasLimit) => rebuildTx({ _computingGasLimit: gasLimit, _pickBiggerFee: true }),\n      unpackTx,\n      buildTx,\n    );\n    const value = _value ?? gasLimitMax;\n    if (value > gasLimitMax) {\n      throw new IllegalArgumentError(`Gas limit ${value} must be less or equal to ${gasLimitMax}`);\n    }\n    return shortUInt.serialize(value);\n  },\n};\n","import coinAmount from './coin-amount';\nimport { IllegalArgumentError } from '../../../utils/errors';\nimport { MIN_GAS_PRICE } from '../constants';\n\nexport default {\n  ...coinAmount,\n\n  serializeAettos(value: string | undefined = MIN_GAS_PRICE.toString()): string {\n    if (+value < MIN_GAS_PRICE) {\n      throw new IllegalArgumentError(`Gas price ${value.toString()} must be bigger than ${MIN_GAS_PRICE}`);\n    }\n    return value;\n  },\n};\n","import { Tag, ConsensusProtocolVersion, AbiVersion } from '../constants';\nimport { getProtocolDetails } from './ct-version';\nimport Node from '../../../Node';\n\nexport default {\n  _getProtocolDetails(c: ConsensusProtocolVersion, tag: Tag): AbiVersion {\n    const kind = Tag.ContractCallTx === tag || Tag.GaMetaTx === tag\n      ? 'contract-call' : 'oracle-call';\n    return getProtocolDetails(c, kind).abiVersion;\n  },\n\n  serialize(\n    value: AbiVersion | undefined,\n    { tag }: { tag: Tag },\n    { consensusProtocolVersion = ConsensusProtocolVersion.Iris }:\n    { consensusProtocolVersion?: ConsensusProtocolVersion },\n  ): Buffer {\n    const result = value ?? this._getProtocolDetails(consensusProtocolVersion, tag);\n\n    return Buffer.from([result]);\n  },\n\n  async prepare(\n    value: AbiVersion | undefined,\n    { tag }: { tag: Tag },\n    // TODO: { consensusProtocolVersion: ConsensusProtocolVersion } | { onNode: Node } | {}\n    options: { consensusProtocolVersion?: ConsensusProtocolVersion; onNode?: Node },\n  ): Promise<AbiVersion | undefined> {\n    if (value != null) return value;\n    if (options.consensusProtocolVersion != null) return undefined;\n    if (Object.keys(ConsensusProtocolVersion).length === 2) return undefined;\n    if (options.onNode != null) {\n      return this._getProtocolDetails(\n        (await options.onNode.getNodeInfo()).consensusProtocolVersion,\n        tag,\n      );\n    }\n    return undefined;\n  },\n\n  deserialize(buffer: Buffer): AbiVersion {\n    return buffer[0];\n  },\n};\n","import { ArgumentError } from '../../../utils/errors';\nimport { isItemOfArray } from '../../../utils/other';\n\nexport default function genEnumerationField<\n  Enum extends { [key: string]: number | string },\n>(enm: Enum): {\n  serialize: (value: Enum[keyof Enum]) => Buffer;\n  deserialize: (value: Buffer) => Enum[keyof Enum];\n} {\n  const values = Object.values(enm).filter((v) => typeof v === 'number');\n  return {\n    serialize(value) {\n      if (typeof value !== 'number') throw new ArgumentError('value', 'to be a number', value);\n      if (value > 0xff) throw new ArgumentError('value', 'to be less than 256', value);\n      if (!isItemOfArray(value, values)) {\n        throw new ArgumentError('value', 'to be a value of Enum', value);\n      }\n      return Buffer.from([value]);\n    },\n\n    deserialize(buffer) {\n      if (buffer.length !== 1) {\n        throw new ArgumentError('buffer', 'to have single element', buffer.length);\n      }\n      const value = buffer[0];\n      if (!isItemOfArray(value, values)) {\n        throw new ArgumentError('value', 'to be a value of Enum', value);\n      }\n      return value as Enum[keyof Enum];\n    },\n  };\n}\n","import { toBytes } from '../../../utils/bytes';\n\nexport default {\n  serialize(string: string): Buffer {\n    return toBytes(string);\n  },\n\n  deserialize(buffer: Buffer): string {\n    return buffer.toString();\n  },\n};\n","export default function _classExtractFieldDescriptor(receiver, privateMap, action) {\n  if (!privateMap.has(receiver)) {\n    throw new TypeError(\"attempted to \" + action + \" private field on non-instance\");\n  }\n  return privateMap.get(receiver);\n}","import classApplyDescriptorSet from \"./classApplyDescriptorSet.js\";\nimport classExtractFieldDescriptor from \"./classExtractFieldDescriptor.js\";\nexport default function _classPrivateFieldSet(receiver, privateMap, value) {\n  var descriptor = classExtractFieldDescriptor(receiver, privateMap, \"set\");\n  classApplyDescriptorSet(receiver, descriptor, value);\n  return value;\n}","export default function _classApplyDescriptorSet(receiver, descriptor, value) {\n  if (descriptor.set) {\n    descriptor.set.call(receiver, value);\n  } else {\n    if (!descriptor.writable) {\n      throw new TypeError(\"attempted to set read only private field\");\n    }\n    descriptor.value = value;\n  }\n}","import classApplyDescriptorGet from \"./classApplyDescriptorGet.js\";\nimport classExtractFieldDescriptor from \"./classExtractFieldDescriptor.js\";\nexport default function _classPrivateFieldGet(receiver, privateMap) {\n  var descriptor = classExtractFieldDescriptor(receiver, privateMap, \"get\");\n  return classApplyDescriptorGet(receiver, descriptor);\n}","export default function _classApplyDescriptorGet(receiver, descriptor) {\n  if (descriptor.get) {\n    return descriptor.get.call(receiver);\n  }\n  return descriptor.value;\n}","import { encode as rlpEncode, Input } from 'rlp';\nimport { Tag } from '../constants';\nimport { hash } from '../../../utils/crypto';\nimport {\n  MerkleTreeHashMismatchError,\n  MissingNodeInTreeError,\n  UnknownPathNibbleError,\n  UnexpectedTsError,\n  UnknownNodeLengthError,\n  InternalError,\n} from '../../../utils/errors';\nimport {\n  decode, encode, Encoded, Encoding,\n} from '../../../utils/encoder';\nimport type { unpackTx } from '..';\nimport type { TxUnpacked } from '../schema.generated';\n\nenum NodeType {\n  Branch,\n  Extension,\n  Leaf,\n}\n\ntype MPTreeBinary = [Buffer, Array<[Buffer, Buffer[]]>];\n\nclass MPTree<E extends Encoding, T extends Tag> {\n  readonly #rootHash: string;\n\n  #isComplete = true;\n\n  get isComplete(): boolean {\n    return this.#isComplete;\n  }\n\n  readonly #nodes: { [key: string]: Buffer[] };\n\n  readonly #encoding: E;\n\n  readonly #tag: T;\n\n  readonly #unpackTx: typeof unpackTx;\n\n  static #nodeHash(node: Input): string {\n    return Buffer.from(hash(rlpEncode(node))).toString('hex');\n  }\n\n  /**\n   * Deserialize Merkle Patricia Tree\n   * @param binary - Binary\n   * @param tag - Tag to use to decode value\n   * @param unpTx - Implementation of unpackTx use to decode values\n   * @returns Merkle Patricia Tree\n   */\n  constructor(binary: MPTreeBinary, encoding: E, tag: T, unpTx: typeof unpackTx) {\n    this.#encoding = encoding;\n    this.#tag = tag;\n    this.#unpackTx = unpTx;\n    this.#rootHash = binary[0].toString('hex');\n    this.#nodes = Object.fromEntries(\n      binary[1].map((node) => [node[0].toString('hex'), node[1]]),\n    );\n\n    if (this.#nodes[this.#rootHash] == null) {\n      if (Object.keys(this.#nodes).length !== 0) {\n        throw new MissingNodeInTreeError('Can\\'t find a node by root hash');\n      }\n      this.#isComplete = false;\n      return;\n    }\n    Object.entries(this.#nodes).forEach(([key, node]) => {\n      if (MPTree.#nodeHash(node) !== key) throw new MerkleTreeHashMismatchError();\n      const { type } = MPTree.#parseNode(node);\n      switch (type) {\n        case NodeType.Branch:\n          node\n            .slice(0, 16)\n            .filter((n) => n.length)\n            .forEach((n) => {\n              // TODO: enable after resolving https://github.com/aeternity/aeternity/issues/4066\n              // if (n.length !== 32) {\n              //   throw new ArgumentError('MPTree branch item length', 32, n.length);\n              // }\n              if (this.#nodes[n.toString('hex')] == null) this.#isComplete = false;\n            });\n          break;\n        case NodeType.Extension:\n          if (this.#nodes[node[1].toString('hex')] == null) {\n            throw new MissingNodeInTreeError('Can\\'t find a node by hash in extension node');\n          }\n          break;\n        case NodeType.Leaf:\n          break;\n        default:\n          throw new InternalError(`Unknown MPTree node type: ${type}`);\n      }\n    });\n  }\n\n  isEqual(tree: MPTree<E, T>): boolean {\n    return this.#rootHash === tree.#rootHash;\n  }\n\n  static #parseNode(node: Buffer[]): { type: NodeType; value?: Buffer; path?: string } {\n    switch (node.length) {\n      case 17:\n        return {\n          type: NodeType.Branch,\n          ...node[16].length !== 0 && { value: node[16] },\n        };\n      case 2: {\n        const nibble = node[0][0] >> 4; // eslint-disable-line no-bitwise\n        if (nibble > 3) throw new UnknownPathNibbleError(nibble);\n        const type = nibble <= 1 ? NodeType.Extension : NodeType.Leaf;\n        const slice = [0, 2].includes(nibble) ? 2 : 1;\n        return {\n          type,\n          ...type === NodeType.Leaf && { value: node[1] },\n          path: node[0].toString('hex').slice(slice),\n        };\n      }\n      default:\n        throw new UnknownNodeLengthError(node.length);\n    }\n  }\n\n  /**\n   * Serialize Merkle Patricia Tree\n   * @returns Binary\n   */\n  serialize(): MPTreeBinary {\n    return [\n      Buffer.from(this.#rootHash, 'hex'),\n      Object.entries(this.#nodes).map(([mptHash, value]) => ([\n        Buffer.from(mptHash, 'hex'),\n        value,\n      ])),\n    ];\n  }\n\n  /**\n   * Retrieve value from Merkle Patricia Tree\n   * @param _key - The key of the element to retrieve\n   * @returns Value associated to the specified key\n   */\n  #getRaw(_key: string): Buffer | undefined {\n    let searchFrom = this.#rootHash;\n    let key = _key;\n    while (true) { // eslint-disable-line no-constant-condition\n      const node = this.#nodes[searchFrom];\n      if (node == null) {\n        if (!this.isComplete) return undefined;\n        throw new InternalError('Can\\'t find node in complete tree');\n      }\n      const { type, value, path } = MPTree.#parseNode(node);\n      switch (type) {\n        case NodeType.Branch:\n          if (key.length === 0) return value;\n          searchFrom = node[+`0x${key[0]}`].toString('hex');\n          key = key.substring(1);\n          break;\n        case NodeType.Extension:\n          if (key.substring(0, path?.length) !== path) return undefined;\n          searchFrom = node[1].toString('hex');\n          key = key.substring(path.length);\n          break;\n        case NodeType.Leaf:\n          if (path !== key) return undefined;\n          return value;\n        default:\n          throw new InternalError(`Unknown MPTree node type: ${type}`);\n      }\n    }\n  }\n\n  /**\n   * Retrieve value from Merkle Patricia Tree\n   * @param key - The key of the element to retrieve\n   * @returns Value associated to the specified key\n   */\n  get(key: Encoded.Generic<E>): TxUnpacked & { tag: T } | undefined {\n    const d = this.#getRaw(decode(key).toString('hex'));\n    if (d == null) return d;\n    return this.#unpackTx(encode(d, Encoding.Transaction), this.#tag);\n  }\n\n  #entriesRaw(): Array<[string, Buffer]> {\n    const entries: Array<[string, Buffer]> = [];\n    const rec = (searchFrom: string, key: string): void => {\n      const node = this.#nodes[searchFrom];\n      if (node == null) {\n        if (!this.isComplete) return;\n        throw new InternalError('Can\\'t find node in complete tree');\n      }\n      const { type, value, path } = MPTree.#parseNode(node);\n      switch (type) {\n        case NodeType.Branch:\n          node\n            .slice(0, 16)\n            .map((t, idx): [typeof t, number] => [t, idx])\n            .filter(([t]) => t.length)\n            .forEach(([t, idx]) => rec(t.toString('hex'), key + idx.toString(16)));\n          if (value != null) entries.push([key, value]);\n          break;\n        case NodeType.Extension:\n          rec(node[1].toString('hex'), key + path);\n          break;\n        case NodeType.Leaf:\n          if (value == null) throw new UnexpectedTsError();\n          entries.push([key + path, value]);\n          break;\n        default:\n          throw new InternalError(`Unknown MPTree node type: ${type}`);\n      }\n    };\n    rec(this.#rootHash, '');\n    return entries;\n  }\n\n  toObject(): Record<Encoded.Generic<E>, TxUnpacked & { tag: T }> {\n    return Object.fromEntries(this.#entriesRaw()\n      // TODO: remove after resolving https://github.com/aeternity/aeternity/issues/4066\n      .filter(([k]) => this.#encoding !== Encoding.ContractAddress || k.length !== 66)\n      .map(([k, v]) => [\n        encode(Buffer.from(k, 'hex'), this.#encoding),\n        this.#unpackTx(encode(v, Encoding.Transaction), this.#tag),\n      ])) as Record<Encoded.Generic<E>, TxUnpacked & { tag: T }>;\n  }\n}\n\nexport default function genMPTreeField<E extends Encoding, T extends Tag>(encoding: E, tag: T): {\n  serialize: (value: MPTree<E, T>) => MPTreeBinary;\n  deserialize: (value: MPTreeBinary, o: { unpackTx: typeof unpackTx }) => MPTree<E, T>;\n} {\n  return {\n    serialize(value) {\n      return value.serialize();\n    },\n\n    deserialize(value, { unpackTx }) {\n      return new MPTree(value, encoding, tag, unpackTx);\n    },\n  };\n}\n","import { Tag } from '../constants';\nimport { encode, Encoding, decode } from '../../../utils/encoder';\nimport type { unpackTx as unpackTxType, buildTx as buildTxType } from '../index';\n\ntype TagWrapping = Tag.AccountsMtree | Tag.CallsMtree | Tag.ChannelsMtree | Tag.ContractsMtree\n| Tag.NameserviceMtree | Tag.OraclesMtree;\n\nexport default function genWrappedField<T extends TagWrapping>(tag: T): {\n  serialize: (\n    // TODO: replace with `(TxParams & { tag: T })['payload']`,\n    //  but fix TS2502 value is referenced directly or indirectly in its own type annotation\n    value: any, options: { buildTx: typeof buildTxType }\n  ) => Buffer;\n  deserialize: (\n    value: Buffer, options: { unpackTx: typeof unpackTxType },\n    // TODO: replace with `(TxUnpacked & { tag: T })['payload']`,\n    //  TS2577 Return type annotation circularly references itself\n  ) => any;\n  recursiveType: true;\n} {\n  return {\n    serialize(payload, { buildTx }) {\n      return decode(buildTx({ tag, payload }));\n    },\n\n    deserialize(buffer, { unpackTx }) {\n      return unpackTx<TagWrapping>(encode(buffer, Encoding.Transaction), tag).payload;\n    },\n\n    recursiveType: true,\n  };\n}\n","/**\n * Transaction Schema for TxBuilder\n */\n// # RLP version number\n// # https://github.com/aeternity/protocol/blob/master/serializations.md#binary-serialization\n\nimport { Tag } from './constants';\nimport SchemaTypes from './SchemaTypes';\nimport {\n  uInt, shortUInt, coinAmount, name, nameId, nameFee, deposit, gasLimit, gasPrice, fee,\n  address, pointers, entry, enumeration, mptree, shortUIntConst, string, encoded, raw,\n  array, boolean, ctVersion, abiVersion, ttl, nonce, map, wrapped,\n} from './field-types';\nimport { Encoded, Encoding } from '../../utils/encoder';\nimport { idTagToEncoding } from './field-types/address';\n\nexport enum ORACLE_TTL_TYPES {\n  delta = 0,\n  block = 1,\n}\n\n// # ORACLE\nexport const ORACLE_TTL = { type: ORACLE_TTL_TYPES.delta, value: 500 };\nexport const QUERY_TTL = { type: ORACLE_TTL_TYPES.delta, value: 10 };\nexport const RESPONSE_TTL = { type: ORACLE_TTL_TYPES.delta, value: 10 };\n// # CONTRACT\nexport const DRY_RUN_ACCOUNT = {\n  pub: 'ak_11111111111111111111111111111111273Yts',\n  amount: 100000000000000000000000000000000000n,\n} as const;\n\nexport enum CallReturnType {\n  Ok = 0,\n  Error = 1,\n  Revert = 2,\n}\n\n// TODO: figure out how to omit overriding types of recursive fields\ninterface EntryAny {\n  serialize: (value: TxParams | Uint8Array | Encoded.Transaction) => Buffer;\n  deserialize: (value: Buffer) => TxUnpacked;\n  recursiveType: true;\n}\n\nconst entryAny = entry() as unknown as EntryAny;\n\ninterface EntrySignedTx {\n  serialize: (value: TxParams & { tag: Tag.SignedTx } | Uint8Array | Encoded.Transaction) => Buffer;\n  deserialize: (value: Buffer) => TxUnpacked & { tag: Tag.SignedTx };\n  recursiveType: true;\n}\n\nconst entrySignedTx = entry(Tag.SignedTx) as unknown as EntrySignedTx;\n\ninterface EntryMtreeValueArray {\n  serialize: (\n    value: Array<TxParams & { tag: Tag.MtreeValue } | Uint8Array | Encoded.Transaction>,\n  ) => Buffer[];\n  deserialize: (value: Buffer[]) => Array<TxUnpacked & { tag: Tag.MtreeValue }>;\n  recursiveType: true;\n}\n\nconst entryMtreeValueArray = array(entry(Tag.MtreeValue)) as unknown as EntryMtreeValueArray;\n\ninterface EntryTreesPoi {\n  serialize: (value: TxParams & { tag: Tag.TreesPoi } | Uint8Array | Encoded.Transaction) => Buffer;\n  deserialize: (value: Buffer) => TxUnpacked & { tag: Tag.TreesPoi };\n  recursiveType: true;\n}\n\nconst entryTreesPoi = entry(Tag.TreesPoi) as unknown as EntryTreesPoi;\n\ninterface MapContracts {\n  serialize: (\n    value: Record<Encoded.ContractAddress, TxParams & { tag: Tag.Contract }>,\n  ) => Buffer;\n  deserialize: (\n    value: Buffer,\n  ) => Record<Encoded.ContractAddress, TxUnpacked & { tag: Tag.Contract }>;\n  recursiveType: true;\n}\n\nconst mapContracts = map(Encoding.ContractAddress, Tag.Contract) as unknown as MapContracts;\n\ninterface MapAccounts {\n  serialize: (\n    value: Record<Encoded.AccountAddress, TxParams & { tag: Tag.Account }>,\n  ) => Buffer;\n  deserialize: (value: Buffer) => Record<Encoded.AccountAddress, TxUnpacked & { tag: Tag.Account }>;\n  recursiveType: true;\n}\n\nconst mapAccounts = map(Encoding.AccountAddress, Tag.Account) as unknown as MapAccounts;\n\ninterface MapCalls {\n  serialize: (\n    value: Record<Encoded.Bytearray, TxParams & { tag: Tag.ContractCall }>,\n  ) => Buffer;\n  deserialize: (value: Buffer) => Record<Encoded.Bytearray, TxUnpacked & { tag: Tag.ContractCall }>;\n  recursiveType: true;\n}\n\nconst mapCalls = map(Encoding.Bytearray, Tag.ContractCall) as unknown as MapCalls;\n\ninterface MapChannels {\n  serialize: (\n    value: Record<Encoded.Channel, TxParams & { tag: Tag.Channel }>,\n  ) => Buffer;\n  deserialize: (value: Buffer) => Record<Encoded.Channel, TxUnpacked & { tag: Tag.Channel }>;\n  recursiveType: true;\n}\n\nconst mapChannels = map(Encoding.Channel, Tag.Channel) as unknown as MapChannels;\n\ninterface MapNames {\n  serialize: (\n    value: Record<Encoded.Name, TxParams & { tag: Tag.Name }>,\n  ) => Buffer;\n  deserialize: (value: Buffer) => Record<Encoded.Name, TxUnpacked & { tag: Tag.Name }>;\n  recursiveType: true;\n}\n\nconst mapNames = map(Encoding.Name, Tag.Name) as unknown as MapNames;\n\ninterface MapOracles {\n  serialize: (\n    value: Record<Encoded.OracleAddress, TxParams & { tag: Tag.Oracle }>,\n  ) => Buffer;\n  deserialize: (value: Buffer) => Record<Encoded.OracleAddress, TxUnpacked & { tag: Tag.Oracle }>;\n  recursiveType: true;\n}\n\nconst mapOracles = map(Encoding.OracleAddress, Tag.Oracle) as unknown as MapOracles;\n\n/**\n * @see {@link https://github.com/aeternity/protocol/blob/c007deeac4a01e401238412801ac7084ac72d60e/serializations.md#accounts-version-1-basic-accounts}\n */\nexport const txSchema = [{\n  tag: shortUIntConst(Tag.Account),\n  version: shortUIntConst(1),\n  nonce: shortUInt,\n  balance: uInt,\n}, {\n  tag: shortUIntConst(Tag.Account),\n  version: shortUIntConst(2, true),\n  flags: uInt,\n  nonce: shortUInt,\n  balance: uInt,\n  gaContract: address(Encoding.ContractAddress, Encoding.Name),\n  gaAuthFun: encoded(Encoding.ContractBytearray),\n}, {\n  tag: shortUIntConst(Tag.SignedTx),\n  version: shortUIntConst(1, true),\n  signatures: array(raw),\n  encodedTx: entryAny,\n}, {\n  tag: shortUIntConst(Tag.SpendTx),\n  version: shortUIntConst(1, true),\n  senderId: address(Encoding.AccountAddress),\n  recipientId: address(Encoding.AccountAddress, Encoding.Name),\n  amount: coinAmount,\n  fee,\n  ttl,\n  nonce: nonce('senderId'),\n  payload: encoded(Encoding.Bytearray, true),\n}, {\n  tag: shortUIntConst(Tag.Name),\n  version: shortUIntConst(1, true),\n  accountId: address(Encoding.AccountAddress),\n  nameTtl: shortUInt,\n  status: raw,\n  clientTtl: shortUInt,\n  pointers,\n}, {\n  tag: shortUIntConst(Tag.NamePreclaimTx),\n  version: shortUIntConst(1, true),\n  accountId: address(Encoding.AccountAddress),\n  nonce: nonce('accountId'),\n  commitmentId: address(Encoding.Commitment),\n  fee,\n  ttl,\n}, {\n  tag: shortUIntConst(Tag.NameClaimTx),\n  version: shortUIntConst(2, true),\n  accountId: address(Encoding.AccountAddress),\n  nonce: nonce('accountId'),\n  name,\n  nameSalt: uInt,\n  nameFee,\n  fee,\n  ttl,\n}, {\n  tag: shortUIntConst(Tag.NameUpdateTx),\n  version: shortUIntConst(1, true),\n  accountId: address(Encoding.AccountAddress),\n  nonce: nonce('accountId'),\n  nameId,\n  nameTtl: shortUInt,\n  pointers,\n  clientTtl: shortUInt,\n  fee,\n  ttl,\n}, {\n  tag: shortUIntConst(Tag.NameTransferTx),\n  version: shortUIntConst(1, true),\n  accountId: address(Encoding.AccountAddress),\n  nonce: nonce('accountId'),\n  nameId,\n  recipientId: address(Encoding.AccountAddress, Encoding.Name),\n  fee,\n  ttl,\n}, {\n  tag: shortUIntConst(Tag.NameRevokeTx),\n  version: shortUIntConst(1, true),\n  accountId: address(Encoding.AccountAddress),\n  nonce: nonce('accountId'),\n  nameId,\n  fee,\n  ttl,\n}, {\n  tag: shortUIntConst(Tag.Contract),\n  version: shortUIntConst(1, true),\n  owner: address(Encoding.AccountAddress),\n  ctVersion,\n  code: encoded(Encoding.ContractBytearray),\n  log: encoded(Encoding.ContractBytearray),\n  active: boolean,\n  referers: array(address(Encoding.AccountAddress)),\n  deposit,\n}, {\n  tag: shortUIntConst(Tag.ContractCreateTx),\n  version: shortUIntConst(1, true),\n  ownerId: address(Encoding.AccountAddress),\n  nonce: nonce('ownerId'),\n  code: encoded(Encoding.ContractBytearray),\n  ctVersion,\n  fee,\n  ttl,\n  deposit,\n  amount: coinAmount,\n  gasLimit,\n  gasPrice,\n  callData: encoded(Encoding.ContractBytearray),\n}, {\n  tag: shortUIntConst(Tag.ContractCallTx),\n  version: shortUIntConst(1, true),\n  callerId: address(Encoding.AccountAddress),\n  nonce: nonce('callerId'),\n  contractId: address(Encoding.ContractAddress, Encoding.Name),\n  abiVersion,\n  fee,\n  ttl,\n  amount: coinAmount,\n  gasLimit,\n  gasPrice,\n  callData: encoded(Encoding.ContractBytearray),\n}, {\n  tag: shortUIntConst(Tag.ContractCall),\n  version: shortUIntConst(2, true),\n  callerId: address(Encoding.AccountAddress),\n  callerNonce: shortUInt,\n  height: shortUInt,\n  contractId: address(Encoding.ContractAddress),\n  // TODO: rename after resolving https://github.com/aeternity/protocol/issues/506\n  gasPrice: uInt,\n  gasUsed: shortUInt,\n  returnValue: encoded(Encoding.ContractBytearray),\n  returnType: enumeration(CallReturnType),\n  // TODO: add serialization for\n  //  <log> :: [ { <address> :: id, [ <topics> :: binary() }, <data> :: binary() } ]\n  log: array(raw),\n}, {\n  tag: shortUIntConst(Tag.Oracle),\n  version: shortUIntConst(1, true),\n  accountId: address(Encoding.AccountAddress),\n  queryFormat: string,\n  responseFormat: string,\n  queryFee: coinAmount,\n  oracleTtlValue: shortUInt,\n  abiVersion,\n}, {\n  tag: shortUIntConst(Tag.OracleRegisterTx),\n  version: shortUIntConst(1, true),\n  accountId: address(Encoding.AccountAddress),\n  nonce: nonce('accountId'),\n  queryFormat: string,\n  responseFormat: string,\n  queryFee: coinAmount,\n  oracleTtlType: enumeration(ORACLE_TTL_TYPES),\n  oracleTtlValue: shortUInt,\n  fee,\n  ttl,\n  abiVersion,\n}, {\n  tag: shortUIntConst(Tag.OracleExtendTx),\n  version: shortUIntConst(1, true),\n  oracleId: address(Encoding.OracleAddress, Encoding.Name),\n  nonce: nonce('oracleId'),\n  oracleTtlType: enumeration(ORACLE_TTL_TYPES),\n  oracleTtlValue: shortUInt,\n  fee,\n  ttl,\n}, {\n  tag: shortUIntConst(Tag.OracleQueryTx),\n  version: shortUIntConst(1, true),\n  senderId: address(Encoding.AccountAddress),\n  nonce: nonce('senderId'),\n  oracleId: address(Encoding.OracleAddress, Encoding.Name),\n  query: string,\n  queryFee: coinAmount,\n  queryTtlType: enumeration(ORACLE_TTL_TYPES),\n  queryTtlValue: shortUInt,\n  responseTtlType: enumeration(ORACLE_TTL_TYPES),\n  responseTtlValue: shortUInt,\n  fee,\n  ttl,\n}, {\n  tag: shortUIntConst(Tag.OracleResponseTx),\n  version: shortUIntConst(1, true),\n  oracleId: address(Encoding.OracleAddress),\n  nonce: nonce('oracleId'),\n  queryId: encoded(Encoding.OracleQueryId),\n  response: string,\n  responseTtlType: enumeration(ORACLE_TTL_TYPES),\n  responseTtlValue: shortUInt,\n  fee,\n  ttl,\n}, {\n  tag: shortUIntConst(Tag.ChannelCreateTx),\n  version: shortUIntConst(2, true),\n  initiator: address(Encoding.AccountAddress),\n  initiatorAmount: uInt,\n  responder: address(Encoding.AccountAddress),\n  responderAmount: uInt,\n  channelReserve: uInt,\n  lockPeriod: uInt,\n  ttl,\n  fee,\n  initiatorDelegateIds: array(address(...idTagToEncoding)),\n  responderDelegateIds: array(address(...idTagToEncoding)),\n  stateHash: encoded(Encoding.State),\n  nonce: nonce('initiator'),\n}, {\n  tag: shortUIntConst(Tag.ChannelCloseMutualTx),\n  version: shortUIntConst(1, true),\n  channelId: address(Encoding.Channel),\n  fromId: address(Encoding.AccountAddress),\n  initiatorAmountFinal: uInt,\n  responderAmountFinal: uInt,\n  ttl,\n  fee,\n  nonce: nonce('fromId'),\n}, {\n  tag: shortUIntConst(Tag.ChannelCloseSoloTx),\n  version: shortUIntConst(1, true),\n  channelId: address(Encoding.Channel),\n  fromId: address(Encoding.AccountAddress),\n  payload: encoded(Encoding.Transaction),\n  poi: entryTreesPoi,\n  ttl,\n  fee,\n  nonce: nonce('fromId'),\n}, {\n  tag: shortUIntConst(Tag.ChannelSlashTx),\n  version: shortUIntConst(1, true),\n  channelId: address(Encoding.Channel),\n  fromId: address(Encoding.AccountAddress),\n  payload: encoded(Encoding.Transaction),\n  poi: entryTreesPoi,\n  ttl,\n  fee,\n  nonce: nonce('fromId'),\n}, {\n  tag: shortUIntConst(Tag.ChannelDepositTx),\n  version: shortUIntConst(1, true),\n  channelId: address(Encoding.Channel),\n  fromId: address(Encoding.AccountAddress),\n  amount: uInt,\n  ttl,\n  fee,\n  stateHash: encoded(Encoding.State),\n  round: shortUInt,\n  nonce: nonce('fromId'),\n}, {\n  tag: shortUIntConst(Tag.ChannelWithdrawTx),\n  version: shortUIntConst(1, true),\n  channelId: address(Encoding.Channel),\n  toId: address(Encoding.AccountAddress),\n  amount: uInt,\n  ttl,\n  fee,\n  stateHash: encoded(Encoding.State),\n  round: shortUInt,\n  nonce: nonce('fromId'),\n}, {\n  tag: shortUIntConst(Tag.ChannelSettleTx),\n  version: shortUIntConst(1, true),\n  channelId: address(Encoding.Channel),\n  fromId: address(Encoding.AccountAddress),\n  initiatorAmountFinal: uInt,\n  responderAmountFinal: uInt,\n  ttl,\n  fee,\n  nonce: nonce('fromId'),\n}, {\n  tag: shortUIntConst(Tag.ChannelForceProgressTx),\n  version: shortUIntConst(1, true),\n  channelId: address(Encoding.Channel),\n  fromId: address(Encoding.AccountAddress),\n  payload: encoded(Encoding.Transaction),\n  round: shortUInt,\n  update: encoded(Encoding.ContractBytearray),\n  stateHash: encoded(Encoding.State),\n  offChainTrees: encoded(Encoding.StateTrees),\n  ttl,\n  fee,\n  nonce: nonce('fromId'),\n}, {\n  tag: shortUIntConst(Tag.ChannelOffChainTx),\n  version: shortUIntConst(2, true),\n  channelId: address(Encoding.Channel),\n  round: shortUInt,\n  stateHash: encoded(Encoding.State),\n}, {\n  tag: shortUIntConst(Tag.Channel),\n  version: shortUIntConst(3, true),\n  initiator: address(Encoding.AccountAddress),\n  responder: address(Encoding.AccountAddress),\n  channelAmount: uInt,\n  initiatorAmount: uInt,\n  responderAmount: uInt,\n  channelReserve: uInt,\n  initiatorDelegateIds: array(address(...idTagToEncoding)),\n  responderDelegateIds: array(address(...idTagToEncoding)),\n  stateHash: encoded(Encoding.State),\n  round: shortUInt,\n  soloRound: uInt,\n  lockPeriod: uInt,\n  lockedUntil: uInt,\n  initiatorAuth: encoded(Encoding.ContractBytearray),\n  responderAuth: encoded(Encoding.ContractBytearray),\n}, {\n  tag: shortUIntConst(Tag.ChannelSnapshotSoloTx),\n  version: shortUIntConst(1, true),\n  channelId: address(Encoding.Channel),\n  fromId: address(Encoding.AccountAddress),\n  payload: encoded(Encoding.Transaction),\n  ttl,\n  fee,\n  nonce: nonce('fromId'),\n}, {\n  tag: shortUIntConst(Tag.ChannelOffChainUpdateTransfer),\n  version: shortUIntConst(1, true),\n  from: address(Encoding.AccountAddress),\n  to: address(Encoding.AccountAddress),\n  amount: uInt,\n}, {\n  tag: shortUIntConst(Tag.ChannelOffChainUpdateDeposit),\n  version: shortUIntConst(1, true),\n  from: address(Encoding.AccountAddress),\n  amount: uInt,\n}, {\n  tag: shortUIntConst(Tag.ChannelOffChainUpdateWithdraw),\n  version: shortUIntConst(1, true),\n  from: address(Encoding.AccountAddress),\n  amount: uInt,\n}, {\n  tag: shortUIntConst(Tag.ChannelOffChainUpdateCreateContract),\n  version: shortUIntConst(1, true),\n  owner: address(Encoding.AccountAddress),\n  ctVersion,\n  code: encoded(Encoding.ContractBytearray),\n  deposit: uInt,\n  callData: encoded(Encoding.ContractBytearray),\n}, {\n  tag: shortUIntConst(Tag.ChannelOffChainUpdateCallContract),\n  version: shortUIntConst(1, true),\n  caller: address(Encoding.AccountAddress),\n  contract: address(Encoding.ContractAddress),\n  abiVersion,\n  amount: uInt,\n  callData: encoded(Encoding.ContractBytearray),\n  callStack: raw,\n  gasPrice,\n  gasLimit,\n}, {\n  tag: shortUIntConst(Tag.ChannelClientReconnectTx),\n  version: shortUIntConst(1, true),\n  channelId: address(Encoding.Channel),\n  round: shortUInt,\n  role: string,\n  pubkey: address(Encoding.AccountAddress),\n}, {\n  tag: shortUIntConst(Tag.TreesPoi),\n  version: shortUIntConst(1, true),\n  // TODO: inline an extra wrapping array after resolving https://github.com/aeternity/protocol/issues/505\n  accounts: array(mptree(Encoding.AccountAddress, Tag.Account)),\n  calls: array(mptree(Encoding.Bytearray, Tag.ContractCall)),\n  channels: array(mptree(Encoding.Channel, Tag.Channel)),\n  contracts: array(mptree(Encoding.ContractAddress, Tag.Contract)),\n  ns: array(mptree(Encoding.Name, Tag.Name)),\n  oracles: array(mptree(Encoding.OracleAddress, Tag.Oracle)),\n}, {\n  tag: shortUIntConst(Tag.StateTrees),\n  version: shortUIntConst(0, true),\n  contracts: wrapped(Tag.ContractsMtree) as unknown as MapContracts,\n  calls: wrapped(Tag.CallsMtree) as unknown as MapCalls,\n  channels: wrapped(Tag.ChannelsMtree) as unknown as MapChannels,\n  ns: wrapped(Tag.NameserviceMtree) as unknown as MapNames,\n  oracles: wrapped(Tag.OraclesMtree) as unknown as MapOracles,\n  accounts: wrapped(Tag.AccountsMtree) as unknown as MapAccounts,\n}, {\n  tag: shortUIntConst(Tag.Mtree),\n  version: shortUIntConst(1, true),\n  values: entryMtreeValueArray,\n}, {\n  tag: shortUIntConst(Tag.MtreeValue),\n  version: shortUIntConst(1, true),\n  key: raw,\n  value: raw,\n}, {\n  tag: shortUIntConst(Tag.ContractsMtree),\n  version: shortUIntConst(1, true),\n  payload: mapContracts,\n}, {\n  tag: shortUIntConst(Tag.CallsMtree),\n  version: shortUIntConst(1, true),\n  payload: mapCalls,\n}, {\n  tag: shortUIntConst(Tag.ChannelsMtree),\n  version: shortUIntConst(1, true),\n  payload: mapChannels,\n}, {\n  tag: shortUIntConst(Tag.NameserviceMtree),\n  version: shortUIntConst(1, true),\n  payload: mapNames,\n}, {\n  tag: shortUIntConst(Tag.OraclesMtree),\n  version: shortUIntConst(1, true),\n  payload: mapOracles,\n}, {\n  tag: shortUIntConst(Tag.AccountsMtree),\n  version: shortUIntConst(1, true),\n  payload: mapAccounts,\n}, {\n  tag: shortUIntConst(Tag.GaAttachTx),\n  version: shortUIntConst(1, true),\n  ownerId: address(Encoding.AccountAddress),\n  nonce: nonce('ownerId'),\n  code: encoded(Encoding.ContractBytearray),\n  authFun: raw,\n  ctVersion,\n  fee,\n  ttl,\n  gasLimit,\n  gasPrice,\n  callData: encoded(Encoding.ContractBytearray),\n}, {\n  tag: shortUIntConst(Tag.GaMetaTx),\n  version: shortUIntConst(2, true),\n  gaId: address(Encoding.AccountAddress),\n  authData: encoded(Encoding.ContractBytearray),\n  abiVersion,\n  fee,\n  gasLimit,\n  gasPrice,\n  tx: entrySignedTx,\n}, {\n  tag: shortUIntConst(Tag.PayingForTx),\n  version: shortUIntConst(1, true),\n  payerId: address(Encoding.AccountAddress),\n  nonce: nonce('payerId'),\n  fee,\n  tx: entrySignedTx,\n}, {\n  tag: shortUIntConst(Tag.GaMetaTxAuthData),\n  version: shortUIntConst(1, true),\n  fee: coinAmount,\n  gasPrice,\n  txHash: encoded(Encoding.TxHash),\n}] as const;\n\ntype TxSchema = SchemaTypes<typeof txSchema>;\nexport type TxParams = TxSchema['TxParams'];\nexport type TxParamsAsync = TxSchema['TxParamsAsync'];\nexport type TxUnpacked = TxSchema['TxUnpacked'];\n","import { decode as rlpDecode, encode as rlpEncode } from 'rlp';\nimport {\n  decode, encode, Encoded, Encoding,\n} from '../../utils/encoder';\nimport { hash } from '../../utils/crypto';\nimport { BinaryData, Field } from './field-types';\nimport { txSchema } from './schema';\nimport { TxUnpacked, TxParams, TxParamsAsync } from './schema.generated';\nimport { Tag } from './constants';\nimport { buildContractId, readInt } from './helpers';\nimport { ArgumentError, DecodeError, SchemaNotFoundError } from '../../utils/errors';\n\n/**\n * JavaScript-based Transaction builder\n */\n\nexport function getSchema(tag: Tag, version?: number): Array<[string, Field]> {\n  const schemas = txSchema.filter((s) => s.tag.constValue === tag);\n  if (schemas.length === 0) throw new SchemaNotFoundError(`${Tag[tag]} (${tag})`, 0);\n  version ??= Math.max(...schemas.map((schema) => schema.version.constValue));\n  const schema = schemas.find((s) => s.version.constValue === version);\n  if (schema == null) throw new SchemaNotFoundError(`${Tag[tag]} (${tag})`, version);\n  return Object.entries(schema);\n}\n\ntype TxEncoding = Encoding.Transaction | Encoding.Poi | Encoding.StateTrees\n| Encoding.CallStateTree;\n\n/**\n * Build transaction hash\n * @category transaction builder\n * @param params - Object with tx params\n * @param options - options\n * @param options.prefix - Prefix of transaction\n * @returns object Base64Check transaction hash with 'tx_' prefix\n */\nexport function buildTx<E extends TxEncoding = Encoding.Transaction>(\n  params: TxParams,\n  { prefix }: { prefix?: E } = {},\n): Encoded.Generic<E> {\n  const schema = getSchema(params.tag, params.version);\n\n  const binary = schema.map(([key, field]) => (\n    field.serialize(\n      // @ts-expect-error the type of `params[key]` can't be determined accurately\n      params[key],\n      {\n        ...params,\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        unpackTx,\n        buildTx,\n        rebuildTx: (overrideParams: any) => buildTx(\n          { ...params, ...overrideParams },\n        ),\n      },\n      params,\n    )\n  ));\n\n  // @ts-expect-error looks like a TypeScript edge case\n  return encode(rlpEncode(binary), prefix ?? Encoding.Transaction);\n}\n\nexport type BuildTxOptions <TxType extends Tag, OmitFields extends string> =\n  Omit<TxParamsAsync & { tag: TxType }, 'tag' | OmitFields>;\n\n/**\n * @category transaction builder\n */\nexport async function buildTxAsync(params: TxParamsAsync): Promise<Encoded.Transaction> {\n  await Promise.all(\n    getSchema(params.tag, params.version)\n      .map(async ([key, field]) => {\n        if (field.prepare == null) return;\n        // @ts-expect-error the type of `params[key]` can't be determined accurately\n        params[key] = await field.prepare(params[key], params, params);\n      }),\n  );\n\n  // @ts-expect-error after preparation properties should be compatible with sync tx builder\n  return buildTx(params);\n}\n\n/**\n * Unpack transaction encoded as string\n * @category transaction builder\n * @param encodedTx - Transaction to unpack\n * @param txType - Expected transaction type\n * @returns Object with transaction param's\n */\nexport function unpackTx<TxType extends Tag>(\n  encodedTx: Encoded.Generic<TxEncoding>,\n  txType?: TxType,\n): TxUnpacked & { tag: TxType } {\n  const binary = rlpDecode(decode(encodedTx));\n  const tag = +readInt(binary[0] as Buffer);\n  const version = +readInt(binary[1] as Buffer);\n  const schema = getSchema(tag, version);\n  if (txType != null && txType !== tag) throw new DecodeError(`Expected transaction to have ${Tag[txType]} tag, got ${Tag[tag]} instead`);\n  if (binary.length !== schema.length) {\n    throw new ArgumentError('Transaction RLP length', schema.length, binary.length);\n  }\n  return schema.reduce<any>(\n    (acc, [name, field], index) => {\n      // eslint-disable-next-line @typescript-eslint/no-use-before-define\n      const deserialized = field.deserialize(binary[index] as BinaryData, { unpackTx });\n      return { ...acc, [name]: deserialized };\n    },\n    {},\n  ) as any;\n}\n\n/**\n * Build a transaction hash\n * @category transaction builder\n * @param rawTx - base64 or rlp encoded transaction\n * @returns Transaction hash\n */\nexport function buildTxHash(rawTx: Encoded.Transaction | Uint8Array): Encoded.TxHash {\n  const data = typeof rawTx === 'string' && rawTx.startsWith('tx_')\n    ? decode(rawTx)\n    : rawTx;\n  return encode(hash(data), Encoding.TxHash);\n}\n\n/**\n * Build a contract public key by contractCreateTx or gaAttach\n * @category contract\n * @param contractTx - Transaction\n * @returns Contract public key\n */\nexport function buildContractIdByContractTx(\n  contractTx: Encoded.Transaction,\n): Encoded.ContractAddress {\n  const params = unpackTx(contractTx);\n  if (Tag.ContractCreateTx !== params.tag && Tag.GaAttachTx !== params.tag) {\n    throw new ArgumentError('contractTx', 'a contractCreateTx or gaAttach', params.tag);\n  }\n  return buildContractId(params.ownerId, params.nonce);\n}\n","export default function semverSatisfies(\n  version: string,\n  geVersion: string,\n  ltVersion: string,\n): boolean {\n  const getComponents = (v: string): number[] => v\n    .split(/[-+]/)[0].split('.').map((i) => +i);\n\n  const versionComponents = getComponents(version);\n  const geComponents = getComponents(geVersion);\n  const ltComponents = getComponents(ltVersion);\n\n  const base = Math.max(...versionComponents, ...geComponents, ...ltComponents) + 1;\n  const componentsToNumber = (components: number[]): number => components.reverse()\n    .reduce((acc, n, idx) => acc + n * base ** idx, 0);\n\n  const vNumber = componentsToNumber(versionComponents);\n  const geNumber = componentsToNumber(geComponents);\n  const ltNumber = componentsToNumber(ltComponents);\n  return vNumber >= geNumber && vNumber < ltNumber;\n}\n","import { RestError, PipelineResponse, PipelinePolicy } from '@azure/core-rest-pipeline';\nimport { AdditionalPolicyConfig } from '@azure/core-client';\nimport { pause } from './other';\nimport semverSatisfies from './semver-satisfies';\nimport { UnsupportedVersionError } from './errors';\n\nexport const genRequestQueuesPolicy = (): AdditionalPolicyConfig => {\n  const requestQueues = new Map<string, Promise<unknown>>();\n\n  return {\n    policy: {\n      name: 'request-queues',\n      async sendRequest(request, next) {\n        const key = request.headers.get('__queue');\n        request.headers.delete('__queue');\n        const getResponse = async (): Promise<PipelineResponse> => next(request);\n        if (key == null) return getResponse();\n        const req = (requestQueues.get(key) ?? Promise.resolve()).then(getResponse);\n        // TODO: remove pause after fixing https://github.com/aeternity/aeternity/issues/3803\n        // gap to ensure that node won't reject the nonce\n        requestQueues.set(key, req.then(async () => pause(750), () => {}));\n        return req;\n      },\n    },\n    position: 'perCall',\n  };\n};\n\nexport const genCombineGetRequestsPolicy = (): AdditionalPolicyConfig => {\n  const pendingGetRequests = new Map<string, Promise<PipelineResponse>>();\n\n  return {\n    policy: {\n      name: 'combine-get-requests',\n      async sendRequest(request, next) {\n        if (request.method !== 'GET') return next(request);\n        const key = JSON.stringify([request.url, request.body]);\n        const response = pendingGetRequests.get(key) ?? next(request);\n        pendingGetRequests.set(key, response);\n        try {\n          return await response;\n        } finally {\n          pendingGetRequests.delete(key);\n        }\n      },\n    },\n    position: 'perCall',\n  };\n};\n\nexport const genAggressiveCacheGetResponsesPolicy = (): AdditionalPolicyConfig => {\n  const getRequests = new Map<string, Promise<PipelineResponse>>();\n\n  return {\n    policy: {\n      name: 'aggressive-cache-get-responses',\n      async sendRequest(request, next) {\n        if (request.method !== 'GET') return next(request);\n        const key = JSON.stringify([request.url, request.body]);\n        const response = getRequests.get(key) ?? next(request);\n        getRequests.set(key, response);\n        return response;\n      },\n    },\n    position: 'perCall',\n  };\n};\n\nexport const genErrorFormatterPolicy = (\n  getMessage: (b: any) => string,\n): AdditionalPolicyConfig => ({\n  policy: {\n    name: 'error-formatter',\n    async sendRequest(request, next) {\n      try {\n        return await next(request);\n      } catch (error) {\n        if (!(error instanceof RestError) || error.request == null) throw error;\n        if (error.response?.bodyAsText == null) throw error;\n\n        let body;\n        try {\n          body = JSON.parse(error.response.bodyAsText);\n        } catch (e) {\n          throw error;\n        }\n        error.message = `${new URL(error.request.url).pathname.slice(1)} error`;\n        const message = getMessage(body);\n        if (message !== '') error.message += `:${message}`;\n        throw error;\n      }\n    },\n  },\n  position: 'perCall',\n});\n\nexport const genVersionCheckPolicy = (\n  name: string,\n  ignorePath: string,\n  versionPromise: Promise<string | Error>,\n  geVersion: string,\n  ltVersion: string,\n): PipelinePolicy => ({\n  name: 'version-check',\n  async sendRequest(request, next) {\n    if (new URL(request.url).pathname === ignorePath) return next(request);\n    const version = await versionPromise;\n    if (version instanceof Error) throw version;\n    const args = [version, geVersion, ltVersion] as const;\n    if (!semverSatisfies(...args)) throw new UnsupportedVersionError(name, ...args);\n    return next(request);\n  },\n});\n\nexport const genRetryOnFailurePolicy = (\n  retryCount: number,\n  retryOverallDelay: number,\n): AdditionalPolicyConfig => ({\n  policy: {\n    name: 'retry-on-failure',\n    async sendRequest(request, next) {\n      const statusesToNotRetry = [200, 400, 403, 500];\n\n      const intervals = new Array(retryCount).fill(0)\n        .map((_, idx) => ((idx + 1) / retryCount) ** 2);\n      const intervalSum = intervals.reduce((a, b) => a + b);\n      const intervalsInMs = intervals.map((el) => (el / intervalSum) * retryOverallDelay);\n\n      let error = new RestError('Not expected to be thrown');\n      for (let attempt = 0; attempt <= retryCount; attempt += 1) {\n        if (attempt !== 0) await pause(intervalsInMs[attempt - 1]);\n        try {\n          return await next(request);\n        } catch (e) {\n          if (!(e instanceof RestError)) throw e;\n          if (statusesToNotRetry.includes(e.response?.status ?? 0)) throw e;\n          error = e;\n        }\n      }\n      throw error;\n    },\n  },\n  position: 'perCall',\n});\n","import * as coreClient from \"@azure/core-client\";\n\nexport const Header: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Header\",\n    modelProperties: {\n      hash: {\n        serializedName: \"hash\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      height: {\n        serializedName: \"height\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      prevHash: {\n        serializedName: \"prev_hash\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      prevKeyHash: {\n        serializedName: \"prev_key_hash\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      stateHash: {\n        serializedName: \"state_hash\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      miner: {\n        serializedName: \"miner\",\n        type: {\n          name: \"String\"\n        }\n      },\n      beneficiary: {\n        serializedName: \"beneficiary\",\n        type: {\n          name: \"String\"\n        }\n      },\n      target: {\n        serializedName: \"target\",\n        type: {\n          name: \"String\"\n        }\n      },\n      pow: {\n        constraints: {\n          MinItems: 42,\n          MaxItems: 42\n        },\n        serializedName: \"pow\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      nonce: {\n        serializedName: \"nonce\",\n        type: {\n          name: \"String\"\n        }\n      },\n      time: {\n        serializedName: \"time\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"version\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      info: {\n        serializedName: \"info\",\n        type: {\n          name: \"String\"\n        }\n      },\n      pofHash: {\n        serializedName: \"pof_hash\",\n        type: {\n          name: \"String\"\n        }\n      },\n      txsHash: {\n        serializedName: \"txs_hash\",\n        type: {\n          name: \"String\"\n        }\n      },\n      signature: {\n        serializedName: \"signature\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ErrorModel: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ErrorModel\",\n    modelProperties: {\n      reason: {\n        serializedName: \"reason\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const KeyBlock: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"KeyBlock\",\n    modelProperties: {\n      hash: {\n        serializedName: \"hash\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      height: {\n        serializedName: \"height\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      prevHash: {\n        serializedName: \"prev_hash\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      prevKeyHash: {\n        serializedName: \"prev_key_hash\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      stateHash: {\n        serializedName: \"state_hash\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      miner: {\n        serializedName: \"miner\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      beneficiary: {\n        serializedName: \"beneficiary\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      target: {\n        serializedName: \"target\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      pow: {\n        constraints: {\n          MinItems: 42,\n          MaxItems: 42\n        },\n        serializedName: \"pow\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      nonce: {\n        serializedName: \"nonce\",\n        type: {\n          name: \"String\"\n        }\n      },\n      time: {\n        serializedName: \"time\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"version\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      info: {\n        serializedName: \"info\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const HashResponse: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"HashResponse\",\n    modelProperties: {\n      hash: {\n        serializedName: \"hash\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const HeightResponse: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"HeightResponse\",\n    modelProperties: {\n      height: {\n        serializedName: \"height\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const MicroBlockHeader: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"MicroBlockHeader\",\n    modelProperties: {\n      hash: {\n        serializedName: \"hash\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      height: {\n        serializedName: \"height\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      pofHash: {\n        serializedName: \"pof_hash\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      prevHash: {\n        serializedName: \"prev_hash\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      prevKeyHash: {\n        serializedName: \"prev_key_hash\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      stateHash: {\n        serializedName: \"state_hash\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      txsHash: {\n        serializedName: \"txs_hash\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      signature: {\n        serializedName: \"signature\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      time: {\n        serializedName: \"time\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"version\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const SignedTxs: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SignedTxs\",\n    modelProperties: {\n      transactions: {\n        serializedName: \"transactions\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"SignedTx\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const SignedTx: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SignedTx\",\n    modelProperties: {\n      tx: {\n        serializedName: \"tx\",\n        type: {\n          name: \"Composite\",\n          className: \"Tx\"\n        }\n      },\n      blockHeight: {\n        serializedName: \"block_height\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      blockHash: {\n        serializedName: \"block_hash\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      hash: {\n        serializedName: \"hash\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      signatures: {\n        serializedName: \"signatures\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const Tx: coreClient.CompositeMapper = {\n  serializedName: \"Tx\",\n  type: {\n    name: \"Composite\",\n    className: \"Tx\",\n    uberParent: \"Tx\",\n    polymorphicDiscriminator: {\n      serializedName: \"type\",\n      clientName: \"type\"\n    },\n    modelProperties: {\n      recipientId: {\n        serializedName: \"recipient_id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      amount: {\n        serializedName: \"amount\",\n        type: {\n          name: \"String\"\n        }\n      },\n      fee: {\n        serializedName: \"fee\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      ttl: {\n        serializedName: \"ttl\",\n        type: {\n          name: \"String\"\n        }\n      },\n      senderId: {\n        serializedName: \"sender_id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      nonce: {\n        serializedName: \"nonce\",\n        type: {\n          name: \"String\"\n        }\n      },\n      payload: {\n        serializedName: \"payload\",\n        type: {\n          name: \"String\"\n        }\n      },\n      initiatorId: {\n        serializedName: \"initiator_id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      initiatorAmount: {\n        serializedName: \"initiator_amount\",\n        type: {\n          name: \"String\"\n        }\n      },\n      responderId: {\n        serializedName: \"responder_id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      responderAmount: {\n        serializedName: \"responder_amount\",\n        type: {\n          name: \"String\"\n        }\n      },\n      channelReserve: {\n        serializedName: \"channel_reserve\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lockPeriod: {\n        serializedName: \"lock_period\",\n        type: {\n          name: \"String\"\n        }\n      },\n      stateHash: {\n        serializedName: \"state_hash\",\n        type: {\n          name: \"String\"\n        }\n      },\n      delegateIds: {\n        serializedName: \"delegate_ids\",\n        type: {\n          name: \"Composite\",\n          className: \"Delegates\"\n        }\n      },\n      channelId: {\n        serializedName: \"channel_id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      fromId: {\n        serializedName: \"from_id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      round: {\n        serializedName: \"round\",\n        type: {\n          name: \"String\"\n        }\n      },\n      toId: {\n        serializedName: \"to_id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      update: {\n        serializedName: \"update\",\n        type: {\n          name: \"Composite\",\n          className: \"OffChainUpdate\"\n        }\n      },\n      offchainTrees: {\n        serializedName: \"offchain_trees\",\n        type: {\n          name: \"String\"\n        }\n      },\n      initiatorAmountFinal: {\n        serializedName: \"initiator_amount_final\",\n        type: {\n          name: \"String\"\n        }\n      },\n      responderAmountFinal: {\n        serializedName: \"responder_amount_final\",\n        type: {\n          name: \"String\"\n        }\n      },\n      poi: {\n        serializedName: \"poi\",\n        type: {\n          name: \"String\"\n        }\n      },\n      initiatorDelegateIds: {\n        serializedName: \"initiator_delegate_ids\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      responderDelegateIds: {\n        serializedName: \"responder_delegate_ids\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      queryFormat: {\n        serializedName: \"query_format\",\n        type: {\n          name: \"String\"\n        }\n      },\n      responseFormat: {\n        serializedName: \"response_format\",\n        type: {\n          name: \"String\"\n        }\n      },\n      queryFee: {\n        serializedName: \"query_fee\",\n        type: {\n          name: \"String\"\n        }\n      },\n      oracleTtl: {\n        serializedName: \"oracle_ttl\",\n        type: {\n          name: \"Composite\",\n          className: \"RelativeTTL\"\n        }\n      },\n      accountId: {\n        serializedName: \"account_id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      abiVersion: {\n        serializedName: \"abi_version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      oracleId: {\n        serializedName: \"oracle_id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      query: {\n        serializedName: \"query\",\n        type: {\n          name: \"String\"\n        }\n      },\n      queryTtl: {\n        serializedName: \"query_ttl\",\n        type: {\n          name: \"Composite\",\n          className: \"Ttl\"\n        }\n      },\n      responseTtl: {\n        serializedName: \"response_ttl\",\n        type: {\n          name: \"Composite\",\n          className: \"RelativeTTL\"\n        }\n      },\n      queryId: {\n        serializedName: \"query_id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      response: {\n        serializedName: \"response\",\n        type: {\n          name: \"String\"\n        }\n      },\n      commitmentId: {\n        serializedName: \"commitment_id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      name: {\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      nameSalt: {\n        serializedName: \"name_salt\",\n        type: {\n          name: \"String\"\n        }\n      },\n      nameFee: {\n        serializedName: \"name_fee\",\n        type: {\n          name: \"String\"\n        }\n      },\n      nameId: {\n        serializedName: \"name_id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      nameTtl: {\n        serializedName: \"name_ttl\",\n        type: {\n          name: \"String\"\n        }\n      },\n      pointers: {\n        serializedName: \"pointers\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"NamePointer\"\n            }\n          }\n        }\n      },\n      clientTtl: {\n        serializedName: \"client_ttl\",\n        type: {\n          name: \"String\"\n        }\n      },\n      ownerId: {\n        serializedName: \"owner_id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      code: {\n        serializedName: \"code\",\n        type: {\n          name: \"String\"\n        }\n      },\n      vmVersion: {\n        serializedName: \"vm_version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      deposit: {\n        serializedName: \"deposit\",\n        type: {\n          name: \"String\"\n        }\n      },\n      gas: {\n        serializedName: \"gas\",\n        type: {\n          name: \"String\"\n        }\n      },\n      gasPrice: {\n        serializedName: \"gas_price\",\n        type: {\n          name: \"String\"\n        }\n      },\n      callData: {\n        serializedName: \"call_data\",\n        type: {\n          name: \"String\"\n        }\n      },\n      callerId: {\n        serializedName: \"caller_id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      contractId: {\n        serializedName: \"contract_id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      authFun: {\n        constraints: {\n          Pattern: new RegExp(\"^(0x|0X)?[a-fA-F0-9]+$\")\n        },\n        serializedName: \"auth_fun\",\n        type: {\n          name: \"String\"\n        }\n      },\n      gaId: {\n        serializedName: \"ga_id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      authData: {\n        serializedName: \"auth_data\",\n        type: {\n          name: \"String\"\n        }\n      },\n      tx: {\n        serializedName: \"tx\",\n        type: {\n          name: \"Composite\",\n          className: \"SignedTx\"\n        }\n      },\n      payerId: {\n        serializedName: \"payer_id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"version\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      type: {\n        serializedName: \"type\",\n        required: true,\n        type: {\n          name: \"Enum\",\n          allowedValues: [\n            \"SpendTx\",\n            \"ChannelCreateTx\",\n            \"ChannelDepositTx\",\n            \"ChannelWithdrawTx\",\n            \"ChannelForceProgressTx\",\n            \"ChannelCloseMutualTx\",\n            \"ChannelCloseSoloTx\",\n            \"ChannelSlashTx\",\n            \"ChannelSettleTx\",\n            \"ChannelSnapshotSoloTx\",\n            \"ChannelSetDelegatesTx\",\n            \"OracleRegisterTx\",\n            \"OracleExtendTx\",\n            \"OracleQueryTx\",\n            \"OracleRespondTx\",\n            \"NamePreclaimTx\",\n            \"NameClaimTx\",\n            \"NameUpdateTx\",\n            \"NameTransferTx\",\n            \"NameRevokeTx\",\n            \"ContractCreateTx\",\n            \"ContractCallTx\",\n            \"GAAttachTx\",\n            \"GAMetaTx\",\n            \"PayingForTx\"\n          ]\n        }\n      }\n    }\n  }\n};\n\nexport const Delegates: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Delegates\",\n    modelProperties: {\n      initiator: {\n        serializedName: \"initiator\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      responder: {\n        serializedName: \"responder\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const OffChainUpdate: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"OffChainUpdate\",\n    uberParent: \"OffChainUpdate\",\n    polymorphicDiscriminator: {\n      serializedName: \"op\",\n      clientName: \"op\"\n    },\n    modelProperties: {\n      op: {\n        serializedName: \"op\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const RelativeTTL: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"RelativeTTL\",\n    modelProperties: {\n      type: {\n        defaultValue: \"delta\",\n        isConstant: true,\n        serializedName: \"type\",\n        type: {\n          name: \"String\"\n        }\n      },\n      value: {\n        serializedName: \"value\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const Ttl: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Ttl\",\n    modelProperties: {\n      type: {\n        serializedName: \"type\",\n        required: true,\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"delta\", \"block\"]\n        }\n      },\n      value: {\n        serializedName: \"value\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const NamePointer: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"NamePointer\",\n    modelProperties: {\n      key: {\n        serializedName: \"key\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      id: {\n        serializedName: \"id\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const CountResponse: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CountResponse\",\n    modelProperties: {\n      count: {\n        serializedName: \"count\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const Generation: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Generation\",\n    modelProperties: {\n      keyBlock: {\n        serializedName: \"key_block\",\n        type: {\n          name: \"Composite\",\n          className: \"KeyBlock\"\n        }\n      },\n      microBlocks: {\n        serializedName: \"micro_blocks\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const Account: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Account\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      balance: {\n        serializedName: \"balance\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      nonce: {\n        serializedName: \"nonce\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      payable: {\n        serializedName: \"payable\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      kind: {\n        serializedName: \"kind\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"basic\", \"generalized\"]\n        }\n      },\n      contractId: {\n        serializedName: \"contract_id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      authFun: {\n        serializedName: \"auth_fun\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const NextNonceResponse: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"NextNonceResponse\",\n    modelProperties: {\n      nextNonce: {\n        serializedName: \"next_nonce\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const DryRunInput: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DryRunInput\",\n    modelProperties: {\n      top: {\n        serializedName: \"top\",\n        type: {\n          name: \"String\"\n        }\n      },\n      accounts: {\n        serializedName: \"accounts\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"DryRunAccount\"\n            }\n          }\n        }\n      },\n      txs: {\n        serializedName: \"txs\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"DryRunInputItem\"\n            }\n          }\n        }\n      },\n      txEvents: {\n        defaultValue: false,\n        serializedName: \"tx_events\",\n        type: {\n          name: \"Boolean\"\n        }\n      }\n    }\n  }\n};\n\nexport const DryRunAccount: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DryRunAccount\",\n    modelProperties: {\n      pubKey: {\n        serializedName: \"pub_key\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      amount: {\n        serializedName: \"amount\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const DryRunInputItem: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DryRunInputItem\",\n    modelProperties: {\n      tx: {\n        serializedName: \"tx\",\n        type: {\n          name: \"String\"\n        }\n      },\n      callReq: {\n        serializedName: \"call_req\",\n        type: {\n          name: \"Composite\",\n          className: \"DryRunCallReq\"\n        }\n      }\n    }\n  }\n};\n\nexport const DryRunCallReq: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DryRunCallReq\",\n    modelProperties: {\n      calldata: {\n        serializedName: \"calldata\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      contract: {\n        serializedName: \"contract\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      amount: {\n        serializedName: \"amount\",\n        type: {\n          name: \"String\"\n        }\n      },\n      gas: {\n        serializedName: \"gas\",\n        type: {\n          name: \"String\"\n        }\n      },\n      caller: {\n        serializedName: \"caller\",\n        type: {\n          name: \"String\"\n        }\n      },\n      nonce: {\n        serializedName: \"nonce\",\n        type: {\n          name: \"String\"\n        }\n      },\n      abiVersion: {\n        serializedName: \"abi_version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      context: {\n        serializedName: \"context\",\n        type: {\n          name: \"Composite\",\n          className: \"DryRunCallContext\"\n        }\n      }\n    }\n  }\n};\n\nexport const DryRunCallContext: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DryRunCallContext\",\n    modelProperties: {\n      tx: {\n        serializedName: \"tx\",\n        type: {\n          name: \"String\"\n        }\n      },\n      txHash: {\n        serializedName: \"tx_hash\",\n        type: {\n          name: \"String\"\n        }\n      },\n      stateful: {\n        serializedName: \"stateful\",\n        type: {\n          name: \"Boolean\"\n        }\n      }\n    }\n  }\n};\n\nexport const DryRunResults: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DryRunResults\",\n    modelProperties: {\n      results: {\n        serializedName: \"results\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"DryRunResult\"\n            }\n          }\n        }\n      },\n      txEvents: {\n        serializedName: \"tx_events\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Dictionary\",\n              value: { type: { name: \"any\" } }\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const DryRunResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DryRunResult\",\n    modelProperties: {\n      type: {\n        serializedName: \"type\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      result: {\n        serializedName: \"result\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      reason: {\n        serializedName: \"reason\",\n        type: {\n          name: \"String\"\n        }\n      },\n      callObj: {\n        serializedName: \"call_obj\",\n        type: {\n          name: \"Composite\",\n          className: \"ContractCallObject\"\n        }\n      }\n    }\n  }\n};\n\nexport const ContractCallObject: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ContractCallObject\",\n    modelProperties: {\n      callerId: {\n        serializedName: \"caller_id\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      callerNonce: {\n        serializedName: \"caller_nonce\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      height: {\n        serializedName: \"height\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      contractId: {\n        serializedName: \"contract_id\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      gasPrice: {\n        serializedName: \"gas_price\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      gasUsed: {\n        serializedName: \"gas_used\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      log: {\n        serializedName: \"log\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Event\"\n            }\n          }\n        }\n      },\n      returnValue: {\n        serializedName: \"return_value\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      returnType: {\n        serializedName: \"return_type\",\n        required: true,\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"ok\", \"error\", \"revert\"]\n        }\n      }\n    }\n  }\n};\n\nexport const Event: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Event\",\n    modelProperties: {\n      address: {\n        serializedName: \"address\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      topics: {\n        serializedName: \"topics\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      data: {\n        serializedName: \"data\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const TxInfoObject: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"TxInfoObject\",\n    modelProperties: {\n      callInfo: {\n        serializedName: \"call_info\",\n        type: {\n          name: \"Composite\",\n          className: \"ContractCallObject\"\n        }\n      },\n      gaInfo: {\n        serializedName: \"ga_info\",\n        type: {\n          name: \"Composite\",\n          className: \"GAObject\"\n        }\n      },\n      txInfo: {\n        serializedName: \"tx_info\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const GAObject: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"GAObject\",\n    modelProperties: {\n      callerId: {\n        serializedName: \"caller_id\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      height: {\n        serializedName: \"height\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      gasPrice: {\n        serializedName: \"gas_price\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      gasUsed: {\n        serializedName: \"gas_used\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      returnValue: {\n        serializedName: \"return_value\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      returnType: {\n        serializedName: \"return_type\",\n        required: true,\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"ok\", \"error\"]\n        }\n      },\n      innerObject: {\n        serializedName: \"inner_object\",\n        type: {\n          name: \"Composite\",\n          className: \"TxInfoObject\"\n        }\n      }\n    }\n  }\n};\n\nexport const EncodedTx: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"EncodedTx\",\n    modelProperties: {\n      tx: {\n        serializedName: \"tx\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const PostTxResponse: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"PostTxResponse\",\n    modelProperties: {\n      txHash: {\n        serializedName: \"tx_hash\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ContractObject: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ContractObject\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      ownerId: {\n        serializedName: \"owner_id\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      vmVersion: {\n        serializedName: \"vm_version\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      abiVersion: {\n        serializedName: \"abi_version\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      active: {\n        serializedName: \"active\",\n        required: true,\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      referrerIds: {\n        serializedName: \"referrer_ids\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      deposit: {\n        serializedName: \"deposit\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ByteCode: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ByteCode\",\n    modelProperties: {\n      bytecode: {\n        serializedName: \"bytecode\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const PoI: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"PoI\",\n    modelProperties: {\n      poi: {\n        serializedName: \"poi\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const RegisteredOracle: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"RegisteredOracle\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      queryFormat: {\n        serializedName: \"query_format\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      responseFormat: {\n        serializedName: \"response_format\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      queryFee: {\n        serializedName: \"query_fee\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      ttl: {\n        serializedName: \"ttl\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      abiVersion: {\n        serializedName: \"abi_version\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const OracleQueries: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"OracleQueries\",\n    modelProperties: {\n      oracleQueries: {\n        serializedName: \"oracle_queries\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"OracleQuery\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const OracleQuery: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"OracleQuery\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      senderId: {\n        serializedName: \"sender_id\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      senderNonce: {\n        serializedName: \"sender_nonce\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      oracleId: {\n        serializedName: \"oracle_id\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      query: {\n        serializedName: \"query\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      response: {\n        serializedName: \"response\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      ttl: {\n        serializedName: \"ttl\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      responseTtl: {\n        serializedName: \"response_ttl\",\n        type: {\n          name: \"Composite\",\n          className: \"Ttl\"\n        }\n      },\n      fee: {\n        serializedName: \"fee\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const NameEntry: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"NameEntry\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      owner: {\n        serializedName: \"owner\",\n        type: {\n          name: \"String\"\n        }\n      },\n      ttl: {\n        serializedName: \"ttl\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      pointers: {\n        serializedName: \"pointers\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"NamePointer\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const Channel: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Channel\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      initiatorId: {\n        serializedName: \"initiator_id\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      responderId: {\n        serializedName: \"responder_id\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      channelAmount: {\n        serializedName: \"channel_amount\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      initiatorAmount: {\n        serializedName: \"initiator_amount\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      responderAmount: {\n        serializedName: \"responder_amount\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      channelReserve: {\n        serializedName: \"channel_reserve\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      delegateIds: {\n        serializedName: \"delegate_ids\",\n        type: {\n          name: \"Composite\",\n          className: \"Delegates\"\n        }\n      },\n      stateHash: {\n        serializedName: \"state_hash\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      round: {\n        serializedName: \"round\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      soloRound: {\n        serializedName: \"solo_round\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      lockPeriod: {\n        serializedName: \"lock_period\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      lockedUntil: {\n        serializedName: \"locked_until\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const PeerPubKey: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"PeerPubKey\",\n    modelProperties: {\n      pubkey: {\n        serializedName: \"pubkey\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const Status: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Status\",\n    modelProperties: {\n      genesisKeyBlockHash: {\n        serializedName: \"genesis_key_block_hash\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      solutions: {\n        serializedName: \"solutions\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      difficulty: {\n        serializedName: \"difficulty\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      syncing: {\n        serializedName: \"syncing\",\n        required: true,\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      syncProgress: {\n        constraints: {\n          InclusiveMaximum: 100,\n          InclusiveMinimum: 0\n        },\n        serializedName: \"sync_progress\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      listening: {\n        serializedName: \"listening\",\n        required: true,\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      protocols: {\n        serializedName: \"protocols\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Protocol\"\n            }\n          }\n        }\n      },\n      nodeVersion: {\n        serializedName: \"node_version\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      nodeRevision: {\n        serializedName: \"node_revision\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      peerCount: {\n        serializedName: \"peer_count\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      peerConnections: {\n        serializedName: \"peer_connections\",\n        type: {\n          name: \"Composite\",\n          className: \"PeerConnections\"\n        }\n      },\n      pendingTransactionsCount: {\n        serializedName: \"pending_transactions_count\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      networkId: {\n        serializedName: \"network_id\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      peerPubkey: {\n        serializedName: \"peer_pubkey\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      topKeyBlockHash: {\n        serializedName: \"top_key_block_hash\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      topBlockHeight: {\n        serializedName: \"top_block_height\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const Protocol: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Protocol\",\n    modelProperties: {\n      version: {\n        serializedName: \"version\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      effectiveAtHeight: {\n        serializedName: \"effective_at_height\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const PeerConnections: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"PeerConnections\",\n    modelProperties: {\n      inbound: {\n        serializedName: \"inbound\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      outbound: {\n        serializedName: \"outbound\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const SpendTx: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SpendTx\",\n    modelProperties: {\n      recipientId: {\n        serializedName: \"recipient_id\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      amount: {\n        serializedName: \"amount\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      fee: {\n        serializedName: \"fee\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      ttl: {\n        serializedName: \"ttl\",\n        type: {\n          name: \"String\"\n        }\n      },\n      senderId: {\n        serializedName: \"sender_id\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      nonce: {\n        serializedName: \"nonce\",\n        type: {\n          name: \"String\"\n        }\n      },\n      payload: {\n        serializedName: \"payload\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const OracleRegisterTx: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"OracleRegisterTx\",\n    modelProperties: {\n      queryFormat: {\n        serializedName: \"query_format\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      responseFormat: {\n        serializedName: \"response_format\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      queryFee: {\n        serializedName: \"query_fee\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      oracleTtl: {\n        serializedName: \"oracle_ttl\",\n        type: {\n          name: \"Composite\",\n          className: \"Ttl\"\n        }\n      },\n      accountId: {\n        serializedName: \"account_id\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      nonce: {\n        serializedName: \"nonce\",\n        type: {\n          name: \"String\"\n        }\n      },\n      fee: {\n        serializedName: \"fee\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      ttl: {\n        serializedName: \"ttl\",\n        type: {\n          name: \"String\"\n        }\n      },\n      abiVersion: {\n        serializedName: \"abi_version\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const OracleExtendTx: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"OracleExtendTx\",\n    modelProperties: {\n      fee: {\n        serializedName: \"fee\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      oracleTtl: {\n        serializedName: \"oracle_ttl\",\n        type: {\n          name: \"Composite\",\n          className: \"RelativeTTL\"\n        }\n      },\n      oracleId: {\n        serializedName: \"oracle_id\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      nonce: {\n        serializedName: \"nonce\",\n        type: {\n          name: \"String\"\n        }\n      },\n      ttl: {\n        serializedName: \"ttl\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const OracleQueryTx: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"OracleQueryTx\",\n    modelProperties: {\n      oracleId: {\n        serializedName: \"oracle_id\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      query: {\n        serializedName: \"query\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      queryFee: {\n        serializedName: \"query_fee\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      queryTtl: {\n        serializedName: \"query_ttl\",\n        type: {\n          name: \"Composite\",\n          className: \"Ttl\"\n        }\n      },\n      responseTtl: {\n        serializedName: \"response_ttl\",\n        type: {\n          name: \"Composite\",\n          className: \"RelativeTTL\"\n        }\n      },\n      fee: {\n        serializedName: \"fee\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      ttl: {\n        serializedName: \"ttl\",\n        type: {\n          name: \"String\"\n        }\n      },\n      senderId: {\n        serializedName: \"sender_id\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      nonce: {\n        serializedName: \"nonce\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const OracleRespondTx: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"OracleRespondTx\",\n    modelProperties: {\n      queryId: {\n        serializedName: \"query_id\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      response: {\n        serializedName: \"response\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      responseTtl: {\n        serializedName: \"response_ttl\",\n        type: {\n          name: \"Composite\",\n          className: \"RelativeTTL\"\n        }\n      },\n      fee: {\n        serializedName: \"fee\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      ttl: {\n        serializedName: \"ttl\",\n        type: {\n          name: \"String\"\n        }\n      },\n      oracleId: {\n        serializedName: \"oracle_id\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      nonce: {\n        serializedName: \"nonce\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const NamePreclaimTx: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"NamePreclaimTx\",\n    modelProperties: {\n      commitmentId: {\n        serializedName: \"commitment_id\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      fee: {\n        serializedName: \"fee\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      ttl: {\n        serializedName: \"ttl\",\n        type: {\n          name: \"String\"\n        }\n      },\n      accountId: {\n        serializedName: \"account_id\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      nonce: {\n        serializedName: \"nonce\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const NameClaimTx: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"NameClaimTx\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      nameSalt: {\n        serializedName: \"name_salt\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      nameFee: {\n        serializedName: \"name_fee\",\n        type: {\n          name: \"String\"\n        }\n      },\n      fee: {\n        serializedName: \"fee\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      ttl: {\n        serializedName: \"ttl\",\n        type: {\n          name: \"String\"\n        }\n      },\n      accountId: {\n        serializedName: \"account_id\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      nonce: {\n        serializedName: \"nonce\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const NameUpdateTx: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"NameUpdateTx\",\n    modelProperties: {\n      nameId: {\n        serializedName: \"name_id\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      nameTtl: {\n        serializedName: \"name_ttl\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      pointers: {\n        serializedName: \"pointers\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"NamePointer\"\n            }\n          }\n        }\n      },\n      clientTtl: {\n        serializedName: \"client_ttl\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      fee: {\n        serializedName: \"fee\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      ttl: {\n        serializedName: \"ttl\",\n        type: {\n          name: \"String\"\n        }\n      },\n      accountId: {\n        serializedName: \"account_id\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      nonce: {\n        serializedName: \"nonce\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const NameTransferTx: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"NameTransferTx\",\n    modelProperties: {\n      nameId: {\n        serializedName: \"name_id\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      recipientId: {\n        serializedName: \"recipient_id\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      fee: {\n        serializedName: \"fee\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      ttl: {\n        serializedName: \"ttl\",\n        type: {\n          name: \"String\"\n        }\n      },\n      accountId: {\n        serializedName: \"account_id\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      nonce: {\n        serializedName: \"nonce\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const NameRevokeTx: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"NameRevokeTx\",\n    modelProperties: {\n      nameId: {\n        serializedName: \"name_id\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      fee: {\n        serializedName: \"fee\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      ttl: {\n        serializedName: \"ttl\",\n        type: {\n          name: \"String\"\n        }\n      },\n      accountId: {\n        serializedName: \"account_id\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      nonce: {\n        serializedName: \"nonce\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const CommitmentId: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CommitmentId\",\n    modelProperties: {\n      commitmentId: {\n        serializedName: \"commitment_id\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const NameHash: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"NameHash\",\n    modelProperties: {\n      nameId: {\n        serializedName: \"name_id\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ChannelCreateTx: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ChannelCreateTx\",\n    modelProperties: {\n      initiatorId: {\n        serializedName: \"initiator_id\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      initiatorAmount: {\n        serializedName: \"initiator_amount\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      responderId: {\n        serializedName: \"responder_id\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      responderAmount: {\n        serializedName: \"responder_amount\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      channelReserve: {\n        serializedName: \"channel_reserve\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      lockPeriod: {\n        serializedName: \"lock_period\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      ttl: {\n        serializedName: \"ttl\",\n        type: {\n          name: \"String\"\n        }\n      },\n      fee: {\n        serializedName: \"fee\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      nonce: {\n        serializedName: \"nonce\",\n        type: {\n          name: \"String\"\n        }\n      },\n      stateHash: {\n        serializedName: \"state_hash\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      delegateIds: {\n        serializedName: \"delegate_ids\",\n        type: {\n          name: \"Composite\",\n          className: \"Delegates\"\n        }\n      }\n    }\n  }\n};\n\nexport const ChannelDepositTx: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ChannelDepositTx\",\n    modelProperties: {\n      channelId: {\n        serializedName: \"channel_id\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      fromId: {\n        serializedName: \"from_id\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      amount: {\n        serializedName: \"amount\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      ttl: {\n        serializedName: \"ttl\",\n        type: {\n          name: \"String\"\n        }\n      },\n      fee: {\n        serializedName: \"fee\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      nonce: {\n        serializedName: \"nonce\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      stateHash: {\n        serializedName: \"state_hash\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      round: {\n        serializedName: \"round\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ChannelWithdrawTx: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ChannelWithdrawTx\",\n    modelProperties: {\n      channelId: {\n        serializedName: \"channel_id\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      toId: {\n        serializedName: \"to_id\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      amount: {\n        serializedName: \"amount\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      ttl: {\n        serializedName: \"ttl\",\n        type: {\n          name: \"String\"\n        }\n      },\n      fee: {\n        serializedName: \"fee\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      nonce: {\n        serializedName: \"nonce\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      stateHash: {\n        serializedName: \"state_hash\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      round: {\n        serializedName: \"round\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ChannelForceProgressTx: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ChannelForceProgressTx\",\n    modelProperties: {\n      channelId: {\n        serializedName: \"channel_id\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      fromId: {\n        serializedName: \"from_id\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      payload: {\n        serializedName: \"payload\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      round: {\n        serializedName: \"round\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      update: {\n        serializedName: \"update\",\n        type: {\n          name: \"Composite\",\n          className: \"OffChainUpdate\"\n        }\n      },\n      stateHash: {\n        serializedName: \"state_hash\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      ttl: {\n        serializedName: \"ttl\",\n        type: {\n          name: \"String\"\n        }\n      },\n      fee: {\n        serializedName: \"fee\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      nonce: {\n        serializedName: \"nonce\",\n        type: {\n          name: \"String\"\n        }\n      },\n      offchainTrees: {\n        serializedName: \"offchain_trees\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ChannelCloseMutualTx: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ChannelCloseMutualTx\",\n    modelProperties: {\n      channelId: {\n        serializedName: \"channel_id\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      fromId: {\n        serializedName: \"from_id\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      initiatorAmountFinal: {\n        serializedName: \"initiator_amount_final\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      responderAmountFinal: {\n        serializedName: \"responder_amount_final\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      ttl: {\n        serializedName: \"ttl\",\n        type: {\n          name: \"String\"\n        }\n      },\n      fee: {\n        serializedName: \"fee\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      nonce: {\n        serializedName: \"nonce\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ChannelCloseSoloTx: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ChannelCloseSoloTx\",\n    modelProperties: {\n      channelId: {\n        serializedName: \"channel_id\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      fromId: {\n        serializedName: \"from_id\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      payload: {\n        serializedName: \"payload\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      ttl: {\n        serializedName: \"ttl\",\n        type: {\n          name: \"String\"\n        }\n      },\n      fee: {\n        serializedName: \"fee\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      nonce: {\n        serializedName: \"nonce\",\n        type: {\n          name: \"String\"\n        }\n      },\n      poi: {\n        serializedName: \"poi\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ChannelSlashTx: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ChannelSlashTx\",\n    modelProperties: {\n      channelId: {\n        serializedName: \"channel_id\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      fromId: {\n        serializedName: \"from_id\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      payload: {\n        serializedName: \"payload\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      ttl: {\n        serializedName: \"ttl\",\n        type: {\n          name: \"String\"\n        }\n      },\n      fee: {\n        serializedName: \"fee\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      nonce: {\n        serializedName: \"nonce\",\n        type: {\n          name: \"String\"\n        }\n      },\n      poi: {\n        serializedName: \"poi\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ChannelSettleTx: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ChannelSettleTx\",\n    modelProperties: {\n      channelId: {\n        serializedName: \"channel_id\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      fromId: {\n        serializedName: \"from_id\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      initiatorAmountFinal: {\n        serializedName: \"initiator_amount_final\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      responderAmountFinal: {\n        serializedName: \"responder_amount_final\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      ttl: {\n        serializedName: \"ttl\",\n        type: {\n          name: \"String\"\n        }\n      },\n      fee: {\n        serializedName: \"fee\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      nonce: {\n        serializedName: \"nonce\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ChannelSnapshotSoloTx: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ChannelSnapshotSoloTx\",\n    modelProperties: {\n      channelId: {\n        serializedName: \"channel_id\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      fromId: {\n        serializedName: \"from_id\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      payload: {\n        serializedName: \"payload\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      ttl: {\n        serializedName: \"ttl\",\n        type: {\n          name: \"String\"\n        }\n      },\n      fee: {\n        serializedName: \"fee\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      nonce: {\n        serializedName: \"nonce\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ChannelSetDelegatesTx: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ChannelSetDelegatesTx\",\n    modelProperties: {\n      channelId: {\n        serializedName: \"channel_id\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      fromId: {\n        serializedName: \"from_id\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      initiatorDelegateIds: {\n        serializedName: \"initiator_delegate_ids\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      responderDelegateIds: {\n        serializedName: \"responder_delegate_ids\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      stateHash: {\n        serializedName: \"state_hash\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      round: {\n        serializedName: \"round\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      payload: {\n        serializedName: \"payload\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      ttl: {\n        serializedName: \"ttl\",\n        type: {\n          name: \"String\"\n        }\n      },\n      fee: {\n        serializedName: \"fee\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      nonce: {\n        serializedName: \"nonce\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const PubKey: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"PubKey\",\n    modelProperties: {\n      pubKey: {\n        serializedName: \"pub_key\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const PeerDetails: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"PeerDetails\",\n    modelProperties: {\n      host: {\n        serializedName: \"host\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      port: {\n        serializedName: \"port\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      firstSeen: {\n        serializedName: \"first_seen\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      lastSeen: {\n        serializedName: \"last_seen\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      genesisHash: {\n        serializedName: \"genesis_hash\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      topHash: {\n        serializedName: \"top_hash\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      topDifficulty: {\n        serializedName: \"top_difficulty\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      networkId: {\n        serializedName: \"network_id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      nodeVersion: {\n        serializedName: \"node_version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      nodeRevision: {\n        serializedName: \"node_revision\",\n        type: {\n          name: \"String\"\n        }\n      },\n      nodeVendor: {\n        serializedName: \"node_vendor\",\n        type: {\n          name: \"String\"\n        }\n      },\n      nodeOs: {\n        serializedName: \"node_os\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const Peers: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Peers\",\n    modelProperties: {\n      peers: {\n        serializedName: \"peers\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      blocked: {\n        serializedName: \"blocked\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const PeerCount: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"PeerCount\",\n    modelProperties: {\n      connected: {\n        serializedName: \"connected\",\n        type: {\n          name: \"Composite\",\n          className: \"PeerCountConnected\"\n        }\n      },\n      available: {\n        serializedName: \"available\",\n        type: {\n          name: \"Composite\",\n          className: \"PeerCountAvailable\"\n        }\n      },\n      blocked: {\n        serializedName: \"blocked\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const PeerCountConnected: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"PeerCountConnected\",\n    modelProperties: {\n      inbound: {\n        serializedName: \"inbound\",\n        type: {\n          name: \"String\"\n        }\n      },\n      outbound: {\n        serializedName: \"outbound\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const PeerCountAvailable: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"PeerCountAvailable\",\n    modelProperties: {\n      verified: {\n        serializedName: \"verified\",\n        type: {\n          name: \"String\"\n        }\n      },\n      unverified: {\n        serializedName: \"unverified\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ContractCreateTx: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ContractCreateTx\",\n    modelProperties: {\n      ownerId: {\n        serializedName: \"owner_id\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      nonce: {\n        serializedName: \"nonce\",\n        type: {\n          name: \"String\"\n        }\n      },\n      code: {\n        serializedName: \"code\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      vmVersion: {\n        serializedName: \"vm_version\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      abiVersion: {\n        serializedName: \"abi_version\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      deposit: {\n        serializedName: \"deposit\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      amount: {\n        serializedName: \"amount\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      gas: {\n        serializedName: \"gas\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      gasPrice: {\n        serializedName: \"gas_price\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      fee: {\n        serializedName: \"fee\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      ttl: {\n        serializedName: \"ttl\",\n        type: {\n          name: \"String\"\n        }\n      },\n      callData: {\n        serializedName: \"call_data\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ContractCallTx: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ContractCallTx\",\n    modelProperties: {\n      callerId: {\n        serializedName: \"caller_id\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      nonce: {\n        serializedName: \"nonce\",\n        type: {\n          name: \"String\"\n        }\n      },\n      contractId: {\n        serializedName: \"contract_id\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      abiVersion: {\n        serializedName: \"abi_version\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      fee: {\n        serializedName: \"fee\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      ttl: {\n        serializedName: \"ttl\",\n        type: {\n          name: \"String\"\n        }\n      },\n      amount: {\n        serializedName: \"amount\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      gas: {\n        serializedName: \"gas\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      gasPrice: {\n        serializedName: \"gas_price\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      callData: {\n        serializedName: \"call_data\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const UnsignedTx: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"UnsignedTx\",\n    modelProperties: {\n      tx: {\n        serializedName: \"tx\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const TokenSupply: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"TokenSupply\",\n    modelProperties: {\n      accounts: {\n        serializedName: \"accounts\",\n        type: {\n          name: \"String\"\n        }\n      },\n      contracts: {\n        serializedName: \"contracts\",\n        type: {\n          name: \"String\"\n        }\n      },\n      contractOracles: {\n        serializedName: \"contract_oracles\",\n        type: {\n          name: \"String\"\n        }\n      },\n      locked: {\n        serializedName: \"locked\",\n        type: {\n          name: \"String\"\n        }\n      },\n      oracles: {\n        serializedName: \"oracles\",\n        type: {\n          name: \"String\"\n        }\n      },\n      oracleQueries: {\n        serializedName: \"oracle_queries\",\n        type: {\n          name: \"String\"\n        }\n      },\n      pendingRewards: {\n        serializedName: \"pending_rewards\",\n        type: {\n          name: \"String\"\n        }\n      },\n      total: {\n        serializedName: \"total\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const GAAttachTx: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"GAAttachTx\",\n    modelProperties: {\n      ownerId: {\n        serializedName: \"owner_id\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      nonce: {\n        serializedName: \"nonce\",\n        type: {\n          name: \"String\"\n        }\n      },\n      code: {\n        serializedName: \"code\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      vmVersion: {\n        serializedName: \"vm_version\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      abiVersion: {\n        serializedName: \"abi_version\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      gas: {\n        serializedName: \"gas\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      gasPrice: {\n        serializedName: \"gas_price\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      fee: {\n        serializedName: \"fee\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      ttl: {\n        serializedName: \"ttl\",\n        type: {\n          name: \"String\"\n        }\n      },\n      callData: {\n        serializedName: \"call_data\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      authFun: {\n        constraints: {\n          Pattern: new RegExp(\"^(0x|0X)?[a-fA-F0-9]+$\")\n        },\n        serializedName: \"auth_fun\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const GAMetaTx: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"GAMetaTx\",\n    modelProperties: {\n      gaId: {\n        serializedName: \"ga_id\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      abiVersion: {\n        serializedName: \"abi_version\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      gas: {\n        serializedName: \"gas\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      gasPrice: {\n        serializedName: \"gas_price\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      fee: {\n        serializedName: \"fee\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      ttl: {\n        serializedName: \"ttl\",\n        type: {\n          name: \"String\"\n        }\n      },\n      authData: {\n        serializedName: \"auth_data\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      tx: {\n        serializedName: \"tx\",\n        type: {\n          name: \"Composite\",\n          className: \"SignedTx\"\n        }\n      }\n    }\n  }\n};\n\nexport const PayingForTx: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"PayingForTx\",\n    modelProperties: {\n      payerId: {\n        serializedName: \"payer_id\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      fee: {\n        serializedName: \"fee\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      nonce: {\n        serializedName: \"nonce\",\n        type: {\n          name: \"String\"\n        }\n      },\n      tx: {\n        serializedName: \"tx\",\n        type: {\n          name: \"Composite\",\n          className: \"SignedTx\"\n        }\n      }\n    }\n  }\n};\n\nexport const CheckTxInPoolResponse: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CheckTxInPoolResponse\",\n    modelProperties: {\n      status: {\n        serializedName: \"status\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const OffChainTransfer: coreClient.CompositeMapper = {\n  serializedName: \"OffChainTransfer\",\n  type: {\n    name: \"Composite\",\n    className: \"OffChainTransfer\",\n    uberParent: \"OffChainUpdate\",\n    polymorphicDiscriminator: OffChainUpdate.type.polymorphicDiscriminator,\n    modelProperties: {\n      ...OffChainUpdate.type.modelProperties,\n      from: {\n        serializedName: \"from\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      to: {\n        serializedName: \"to\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      amount: {\n        serializedName: \"amount\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const OffChainWithdrawal: coreClient.CompositeMapper = {\n  serializedName: \"OffChainWithdrawal\",\n  type: {\n    name: \"Composite\",\n    className: \"OffChainWithdrawal\",\n    uberParent: \"OffChainUpdate\",\n    polymorphicDiscriminator: OffChainUpdate.type.polymorphicDiscriminator,\n    modelProperties: {\n      ...OffChainUpdate.type.modelProperties,\n      to: {\n        serializedName: \"to\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      amount: {\n        serializedName: \"amount\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const OffChainDeposit: coreClient.CompositeMapper = {\n  serializedName: \"OffChainDeposit\",\n  type: {\n    name: \"Composite\",\n    className: \"OffChainDeposit\",\n    uberParent: \"OffChainUpdate\",\n    polymorphicDiscriminator: OffChainUpdate.type.polymorphicDiscriminator,\n    modelProperties: {\n      ...OffChainUpdate.type.modelProperties,\n      from: {\n        serializedName: \"from\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      amount: {\n        serializedName: \"amount\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const OffChainNewContract: coreClient.CompositeMapper = {\n  serializedName: \"OffChainNewContract\",\n  type: {\n    name: \"Composite\",\n    className: \"OffChainNewContract\",\n    uberParent: \"OffChainUpdate\",\n    polymorphicDiscriminator: OffChainUpdate.type.polymorphicDiscriminator,\n    modelProperties: {\n      ...OffChainUpdate.type.modelProperties,\n      owner: {\n        serializedName: \"owner\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      vmVersion: {\n        serializedName: \"vm_version\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      abiVersion: {\n        serializedName: \"abi_version\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      code: {\n        serializedName: \"code\",\n        type: {\n          name: \"Composite\",\n          className: \"ByteCode\"\n        }\n      },\n      deposit: {\n        serializedName: \"deposit\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      callData: {\n        serializedName: \"call_data\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const OffChainCallContract: coreClient.CompositeMapper = {\n  serializedName: \"OffChainCallContract\",\n  type: {\n    name: \"Composite\",\n    className: \"OffChainCallContract\",\n    uberParent: \"OffChainUpdate\",\n    polymorphicDiscriminator: OffChainUpdate.type.polymorphicDiscriminator,\n    modelProperties: {\n      ...OffChainUpdate.type.modelProperties,\n      caller: {\n        serializedName: \"caller\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      contract: {\n        serializedName: \"contract\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      abiVersion: {\n        serializedName: \"abi_version\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      amount: {\n        serializedName: \"amount\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      gas: {\n        serializedName: \"gas\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      gasPrice: {\n        serializedName: \"gas_price\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      callData: {\n        serializedName: \"call_data\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const CreateContractUnsignedTx: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CreateContractUnsignedTx\",\n    modelProperties: {\n      ...UnsignedTx.type.modelProperties,\n      contractId: {\n        serializedName: \"contract_id\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport let discriminators = {\n  \"Tx.Tx\": Tx,\n  OffChainUpdate: OffChainUpdate,\n  \"OffChainUpdate.OffChainTransfer\": OffChainTransfer,\n  \"OffChainUpdate.OffChainWithdrawal\": OffChainWithdrawal,\n  \"OffChainUpdate.OffChainDeposit\": OffChainDeposit,\n  \"OffChainUpdate.OffChainNewContract\": OffChainNewContract,\n  \"OffChainUpdate.OffChainCallContract\": OffChainCallContract\n};\n","import {\n  OperationParameter,\n  OperationURLParameter,\n  OperationQueryParameter\n} from \"@azure/core-client\";\nimport {\n  DryRunInput as DryRunInputMapper,\n  EncodedTx as EncodedTxMapper\n} from \"../models/mappers\";\n\nexport const accept: OperationParameter = {\n  parameterPath: \"accept\",\n  mapper: {\n    defaultValue: \"application/json\",\n    isConstant: true,\n    serializedName: \"Accept\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const $host: OperationURLParameter = {\n  parameterPath: \"$host\",\n  mapper: {\n    serializedName: \"$host\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  },\n  skipEncoding: true\n};\n\nexport const intAsString: OperationQueryParameter = {\n  parameterPath: \"intAsString\",\n  mapper: {\n    defaultValue: false,\n    serializedName: \"int-as-string\",\n    type: {\n      name: \"Boolean\"\n    }\n  }\n};\n\nexport const hash: OperationURLParameter = {\n  parameterPath: \"hash\",\n  mapper: {\n    serializedName: \"hash\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const height: OperationURLParameter = {\n  parameterPath: \"height\",\n  mapper: {\n    constraints: {\n      InclusiveMaximum: 18446744073709552000,\n      InclusiveMinimum: 0\n    },\n    serializedName: \"height\",\n    required: true,\n    type: {\n      name: \"Number\"\n    }\n  }\n};\n\nexport const index: OperationURLParameter = {\n  parameterPath: \"index\",\n  mapper: {\n    constraints: {\n      InclusiveMinimum: 1\n    },\n    serializedName: \"index\",\n    required: true,\n    type: {\n      name: \"Number\"\n    }\n  }\n};\n\nexport const pubkey: OperationURLParameter = {\n  parameterPath: \"pubkey\",\n  mapper: {\n    serializedName: \"pubkey\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const strategy: OperationQueryParameter = {\n  parameterPath: [\"options\", \"strategy\"],\n  mapper: {\n    defaultValue: \"max\",\n    serializedName: \"strategy\",\n    type: {\n      name: \"Enum\",\n      allowedValues: [\"max\", \"continuity\"]\n    }\n  }\n};\n\nexport const contentType: OperationParameter = {\n  parameterPath: [\"options\", \"contentType\"],\n  mapper: {\n    defaultValue: \"application/json\",\n    isConstant: true,\n    serializedName: \"Content-Type\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const body: OperationParameter = {\n  parameterPath: \"body\",\n  mapper: DryRunInputMapper\n};\n\nexport const body1: OperationParameter = {\n  parameterPath: \"body\",\n  mapper: EncodedTxMapper\n};\n\nexport const from: OperationQueryParameter = {\n  parameterPath: [\"options\", \"from\"],\n  mapper: {\n    serializedName: \"from\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const limit: OperationQueryParameter = {\n  parameterPath: [\"options\", \"limit\"],\n  mapper: {\n    defaultValue: 20,\n    constraints: {\n      InclusiveMaximum: 1000,\n      InclusiveMinimum: 1\n    },\n    serializedName: \"limit\",\n    type: {\n      name: \"Number\"\n    }\n  }\n};\n\nexport const type: OperationQueryParameter = {\n  parameterPath: [\"options\", \"type\"],\n  mapper: {\n    defaultValue: \"all\",\n    serializedName: \"type\",\n    type: {\n      name: \"Enum\",\n      allowedValues: [\"open\", \"closed\", \"all\"]\n    }\n  }\n};\n\nexport const queryId: OperationURLParameter = {\n  parameterPath: \"queryId\",\n  mapper: {\n    serializedName: \"query-id\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const name: OperationURLParameter = {\n  parameterPath: \"name\",\n  mapper: {\n    serializedName: \"name\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n","import * as coreClient from \"@azure/core-client\";\nimport * as Parameters from \"./models/parameters\";\nimport * as Mappers from \"./models/mappers\";\nimport {\n  NodeOptionalParams,\n  GetTopHeaderOptionalParams,\n  GetTopHeaderResponse,\n  GetCurrentKeyBlockOptionalParams,\n  GetCurrentKeyBlockResponse,\n  GetCurrentKeyBlockHashOptionalParams,\n  GetCurrentKeyBlockHashResponse,\n  GetCurrentKeyBlockHeightOptionalParams,\n  GetCurrentKeyBlockHeightResponse,\n  GetPendingKeyBlockOptionalParams,\n  GetPendingKeyBlockResponse,\n  GetKeyBlockByHashOptionalParams,\n  GetKeyBlockByHashResponse,\n  GetKeyBlockByHeightOptionalParams,\n  GetKeyBlockByHeightResponse,\n  GetMicroBlockHeaderByHashOptionalParams,\n  GetMicroBlockHeaderByHashResponse,\n  GetMicroBlockTransactionsByHashOptionalParams,\n  GetMicroBlockTransactionsByHashResponse,\n  GetMicroBlockTransactionByHashAndIndexOptionalParams,\n  GetMicroBlockTransactionByHashAndIndexResponse,\n  GetMicroBlockTransactionsCountByHashOptionalParams,\n  GetMicroBlockTransactionsCountByHashResponse,\n  GetCurrentGenerationOptionalParams,\n  GetCurrentGenerationResponse,\n  GetGenerationByHashOptionalParams,\n  GetGenerationByHashResponse,\n  GetGenerationByHeightOptionalParams,\n  GetGenerationByHeightResponse,\n  GetAccountByPubkeyOptionalParams,\n  GetAccountByPubkeyResponse,\n  GetAccountByPubkeyAndHeightOptionalParams,\n  GetAccountByPubkeyAndHeightResponse,\n  GetAccountByPubkeyAndHashOptionalParams,\n  GetAccountByPubkeyAndHashResponse,\n  GetPendingAccountTransactionsByPubkeyOptionalParams,\n  GetPendingAccountTransactionsByPubkeyResponse,\n  GetAccountNextNonceOptionalParams,\n  GetAccountNextNonceResponse,\n  DryRunInput,\n  ProtectedDryRunTxsOptionalParams,\n  ProtectedDryRunTxsResponse,\n  GetTransactionByHashOptionalParams,\n  GetTransactionByHashResponse,\n  GetTransactionInfoByHashOptionalParams,\n  GetTransactionInfoByHashResponse,\n  EncodedTx,\n  PostTransactionOptionalParams,\n  PostTransactionResponse,\n  GetContractOptionalParams,\n  GetContractResponse,\n  GetContractCodeOptionalParams,\n  GetContractCodeResponse,\n  GetContractPoIOptionalParams,\n  GetContractPoIResponse,\n  GetOracleByPubkeyOptionalParams,\n  GetOracleByPubkeyResponse,\n  GetOracleQueriesByPubkeyOptionalParams,\n  GetOracleQueriesByPubkeyResponse,\n  GetOracleQueryByPubkeyAndQueryIdOptionalParams,\n  GetOracleQueryByPubkeyAndQueryIdResponse,\n  GetNameEntryByNameOptionalParams,\n  GetNameEntryByNameResponse,\n  GetChannelByPubkeyOptionalParams,\n  GetChannelByPubkeyResponse,\n  GetPeerPubkeyOptionalParams,\n  GetPeerPubkeyResponse,\n  GetStatusOptionalParams,\n  GetStatusResponse,\n  GetChainEndsOptionalParams,\n  GetChainEndsResponse\n} from \"./models\";\n\nexport class Node extends coreClient.ServiceClient {\n  $host: string;\n  intAsString?: boolean;\n\n  /**\n   * Initializes a new instance of the Node class.\n   * @param $host server parameter\n   * @param options The parameter options\n   */\n  constructor($host: string, options?: NodeOptionalParams) {\n    if ($host === undefined) {\n      throw new Error(\"'$host' cannot be null\");\n    }\n\n    // Initializing default values for options\n    if (!options) {\n      options = {};\n    }\n    const defaults: NodeOptionalParams = {\n      requestContentType: \"application/json; charset=utf-8\"\n    };\n\n    const packageDetails = `azsdk-js-node/1.0.0-beta.1`;\n    const userAgentPrefix =\n      options.userAgentOptions && options.userAgentOptions.userAgentPrefix\n        ? `${options.userAgentOptions.userAgentPrefix} ${packageDetails}`\n        : `${packageDetails}`;\n\n    const optionsWithDefaults = {\n      ...defaults,\n      ...options,\n      userAgentOptions: {\n        userAgentPrefix\n      },\n      endpoint: options.endpoint ?? options.baseUri ?? \"{$host}\"\n    };\n    super(optionsWithDefaults);\n    // Parameter assignments\n    this.$host = $host;\n  }\n\n  /**\n   * Get the top header (either key or micro block)\n   * @param options The options parameters.\n   */\n  getTopHeader(\n    options?: GetTopHeaderOptionalParams\n  ): Promise<GetTopHeaderResponse> {\n    return this.sendOperationRequest({ options }, getTopHeaderOperationSpec);\n  }\n\n  /**\n   * Get the current key block\n   * @param options The options parameters.\n   */\n  getCurrentKeyBlock(\n    options?: GetCurrentKeyBlockOptionalParams\n  ): Promise<GetCurrentKeyBlockResponse> {\n    return this.sendOperationRequest(\n      { options },\n      getCurrentKeyBlockOperationSpec\n    );\n  }\n\n  /**\n   * Get the hash of the current key block\n   * @param options The options parameters.\n   */\n  getCurrentKeyBlockHash(\n    options?: GetCurrentKeyBlockHashOptionalParams\n  ): Promise<GetCurrentKeyBlockHashResponse> {\n    return this.sendOperationRequest(\n      { options },\n      getCurrentKeyBlockHashOperationSpec\n    );\n  }\n\n  /**\n   * Get the height of the current key block\n   * @param options The options parameters.\n   */\n  getCurrentKeyBlockHeight(\n    options?: GetCurrentKeyBlockHeightOptionalParams\n  ): Promise<GetCurrentKeyBlockHeightResponse> {\n    return this.sendOperationRequest(\n      { options },\n      getCurrentKeyBlockHeightOperationSpec\n    );\n  }\n\n  /**\n   * Get the pending key block\n   * @param options The options parameters.\n   */\n  getPendingKeyBlock(\n    options?: GetPendingKeyBlockOptionalParams\n  ): Promise<GetPendingKeyBlockResponse> {\n    return this.sendOperationRequest(\n      { options },\n      getPendingKeyBlockOperationSpec\n    );\n  }\n\n  /**\n   * Get a key block by hash\n   * @param hash The hash of the block - either a keyblock or a microblock\n   * @param options The options parameters.\n   */\n  getKeyBlockByHash(\n    hash: string,\n    options?: GetKeyBlockByHashOptionalParams\n  ): Promise<GetKeyBlockByHashResponse> {\n    return this.sendOperationRequest(\n      { hash, options },\n      getKeyBlockByHashOperationSpec\n    );\n  }\n\n  /**\n   * Get a key block by height\n   * @param height The height\n   * @param options The options parameters.\n   */\n  getKeyBlockByHeight(\n    height: number,\n    options?: GetKeyBlockByHeightOptionalParams\n  ): Promise<GetKeyBlockByHeightResponse> {\n    return this.sendOperationRequest(\n      { height, options },\n      getKeyBlockByHeightOperationSpec\n    );\n  }\n\n  /**\n   * Get a micro block header by hash\n   * @param hash The hash of the block - either a keyblock or a microblock\n   * @param options The options parameters.\n   */\n  getMicroBlockHeaderByHash(\n    hash: string,\n    options?: GetMicroBlockHeaderByHashOptionalParams\n  ): Promise<GetMicroBlockHeaderByHashResponse> {\n    return this.sendOperationRequest(\n      { hash, options },\n      getMicroBlockHeaderByHashOperationSpec\n    );\n  }\n\n  /**\n   * Get micro block transactions by hash\n   * @param hash The hash of the micro block\n   * @param options The options parameters.\n   */\n  getMicroBlockTransactionsByHash(\n    hash: string,\n    options?: GetMicroBlockTransactionsByHashOptionalParams\n  ): Promise<GetMicroBlockTransactionsByHashResponse> {\n    return this.sendOperationRequest(\n      { hash, options },\n      getMicroBlockTransactionsByHashOperationSpec\n    );\n  }\n\n  /**\n   * Get a micro block transaction by hash and index\n   * @param hash The hash of the micro block\n   * @param index The index of the transaction in a block\n   * @param options The options parameters.\n   */\n  getMicroBlockTransactionByHashAndIndex(\n    hash: string,\n    index: number,\n    options?: GetMicroBlockTransactionByHashAndIndexOptionalParams\n  ): Promise<GetMicroBlockTransactionByHashAndIndexResponse> {\n    return this.sendOperationRequest(\n      { hash, index, options },\n      getMicroBlockTransactionByHashAndIndexOperationSpec\n    );\n  }\n\n  /**\n   * Get micro block transaction count by hash\n   * @param hash The hash of the micro block\n   * @param options The options parameters.\n   */\n  getMicroBlockTransactionsCountByHash(\n    hash: string,\n    options?: GetMicroBlockTransactionsCountByHashOptionalParams\n  ): Promise<GetMicroBlockTransactionsCountByHashResponse> {\n    return this.sendOperationRequest(\n      { hash, options },\n      getMicroBlockTransactionsCountByHashOperationSpec\n    );\n  }\n\n  /**\n   * Get the current generation\n   * @param options The options parameters.\n   */\n  getCurrentGeneration(\n    options?: GetCurrentGenerationOptionalParams\n  ): Promise<GetCurrentGenerationResponse> {\n    return this.sendOperationRequest(\n      { options },\n      getCurrentGenerationOperationSpec\n    );\n  }\n\n  /**\n   * Get a generation by hash\n   * @param hash The hash of the key block\n   * @param options The options parameters.\n   */\n  getGenerationByHash(\n    hash: string,\n    options?: GetGenerationByHashOptionalParams\n  ): Promise<GetGenerationByHashResponse> {\n    return this.sendOperationRequest(\n      { hash, options },\n      getGenerationByHashOperationSpec\n    );\n  }\n\n  /**\n   * Get a generation by height\n   * @param height The height\n   * @param options The options parameters.\n   */\n  getGenerationByHeight(\n    height: number,\n    options?: GetGenerationByHeightOptionalParams\n  ): Promise<GetGenerationByHeightResponse> {\n    return this.sendOperationRequest(\n      { height, options },\n      getGenerationByHeightOperationSpec\n    );\n  }\n\n  /**\n   * Get an account by public key\n   * @param pubkey The public key of the account\n   * @param options The options parameters.\n   */\n  getAccountByPubkey(\n    pubkey: string,\n    options?: GetAccountByPubkeyOptionalParams\n  ): Promise<GetAccountByPubkeyResponse> {\n    return this.sendOperationRequest(\n      { pubkey, options },\n      getAccountByPubkeyOperationSpec\n    );\n  }\n\n  /**\n   * Get an account by public key after the opening key block of the generation at height\n   * @param pubkey The public key of the account\n   * @param height The height\n   * @param options The options parameters.\n   */\n  getAccountByPubkeyAndHeight(\n    pubkey: string,\n    height: number,\n    options?: GetAccountByPubkeyAndHeightOptionalParams\n  ): Promise<GetAccountByPubkeyAndHeightResponse> {\n    return this.sendOperationRequest(\n      { pubkey, height, options },\n      getAccountByPubkeyAndHeightOperationSpec\n    );\n  }\n\n  /**\n   * Get an account by public key after the block indicated by hash. Can be either a micro block or a\n   * keyblock hash\n   * @param pubkey The public key of the account\n   * @param hash The hash of the block - either a keyblock or a microblock\n   * @param options The options parameters.\n   */\n  getAccountByPubkeyAndHash(\n    pubkey: string,\n    hash: string,\n    options?: GetAccountByPubkeyAndHashOptionalParams\n  ): Promise<GetAccountByPubkeyAndHashResponse> {\n    return this.sendOperationRequest(\n      { pubkey, hash, options },\n      getAccountByPubkeyAndHashOperationSpec\n    );\n  }\n\n  /**\n   * Get pending account transactions by public key\n   * @param pubkey The public key of the account\n   * @param options The options parameters.\n   */\n  getPendingAccountTransactionsByPubkey(\n    pubkey: string,\n    options?: GetPendingAccountTransactionsByPubkeyOptionalParams\n  ): Promise<GetPendingAccountTransactionsByPubkeyResponse> {\n    return this.sendOperationRequest(\n      { pubkey, options },\n      getPendingAccountTransactionsByPubkeyOperationSpec\n    );\n  }\n\n  /**\n   * Get an account's next nonce; This is computed according to whatever is the current account nonce and\n   * what transactions are currently present in the transaction pool\n   * @param pubkey The public key of the account\n   * @param options The options parameters.\n   */\n  getAccountNextNonce(\n    pubkey: string,\n    options?: GetAccountNextNonceOptionalParams\n  ): Promise<GetAccountNextNonceResponse> {\n    return this.sendOperationRequest(\n      { pubkey, options },\n      getAccountNextNonceOperationSpec\n    );\n  }\n\n  /**\n   * Dry-run transactions on top of a given block. Supports all TXs except GAMetaTx, PayingForTx and\n   * OffchainTx. The maximum gas limit of all calls is capped. The maximum gas limit per request is a\n   * global node setting. Since DryRunCallReq object do not have a mandatory gas field, if not set a\n   * default value of 1000000 is being used instead.\n   * @param body transactions\n   * @param options The options parameters.\n   */\n  protectedDryRunTxs(\n    body: DryRunInput,\n    options?: ProtectedDryRunTxsOptionalParams\n  ): Promise<ProtectedDryRunTxsResponse> {\n    return this.sendOperationRequest(\n      { body, options },\n      protectedDryRunTxsOperationSpec\n    );\n  }\n\n  /**\n   * Get a transaction by hash\n   * @param hash The hash of the transaction\n   * @param options The options parameters.\n   */\n  getTransactionByHash(\n    hash: string,\n    options?: GetTransactionByHashOptionalParams\n  ): Promise<GetTransactionByHashResponse> {\n    return this.sendOperationRequest(\n      { hash, options },\n      getTransactionByHashOperationSpec\n    );\n  }\n\n  /**\n   * @param hash The hash of the transaction\n   * @param options The options parameters.\n   */\n  getTransactionInfoByHash(\n    hash: string,\n    options?: GetTransactionInfoByHashOptionalParams\n  ): Promise<GetTransactionInfoByHashResponse> {\n    return this.sendOperationRequest(\n      { hash, options },\n      getTransactionInfoByHashOperationSpec\n    );\n  }\n\n  /**\n   * Post a new transaction\n   * @param body The new transaction\n   * @param options The options parameters.\n   */\n  postTransaction(\n    body: EncodedTx,\n    options?: PostTransactionOptionalParams\n  ): Promise<PostTransactionResponse> {\n    return this.sendOperationRequest(\n      { body, options },\n      postTransactionOperationSpec\n    );\n  }\n\n  /**\n   * Get a contract by pubkey\n   * @param pubkey Contract pubkey to get proof for\n   * @param options The options parameters.\n   */\n  getContract(\n    pubkey: string,\n    options?: GetContractOptionalParams\n  ): Promise<GetContractResponse> {\n    return this.sendOperationRequest(\n      { pubkey, options },\n      getContractOperationSpec\n    );\n  }\n\n  /**\n   * Get contract code by pubkey\n   * @param pubkey Contract pubkey to get proof for\n   * @param options The options parameters.\n   */\n  getContractCode(\n    pubkey: string,\n    options?: GetContractCodeOptionalParams\n  ): Promise<GetContractCodeResponse> {\n    return this.sendOperationRequest(\n      { pubkey, options },\n      getContractCodeOperationSpec\n    );\n  }\n\n  /**\n   * Get a proof of inclusion for a contract\n   * @param pubkey Contract pubkey to get proof for\n   * @param options The options parameters.\n   */\n  getContractPoI(\n    pubkey: string,\n    options?: GetContractPoIOptionalParams\n  ): Promise<GetContractPoIResponse> {\n    return this.sendOperationRequest(\n      { pubkey, options },\n      getContractPoIOperationSpec\n    );\n  }\n\n  /**\n   * Get an oracle by public key\n   * @param pubkey The public key of the oracle\n   * @param options The options parameters.\n   */\n  getOracleByPubkey(\n    pubkey: string,\n    options?: GetOracleByPubkeyOptionalParams\n  ): Promise<GetOracleByPubkeyResponse> {\n    return this.sendOperationRequest(\n      { pubkey, options },\n      getOracleByPubkeyOperationSpec\n    );\n  }\n\n  /**\n   * Get oracle queries by public key\n   * @param pubkey The public key of the oracle\n   * @param options The options parameters.\n   */\n  getOracleQueriesByPubkey(\n    pubkey: string,\n    options?: GetOracleQueriesByPubkeyOptionalParams\n  ): Promise<GetOracleQueriesByPubkeyResponse> {\n    return this.sendOperationRequest(\n      { pubkey, options },\n      getOracleQueriesByPubkeyOperationSpec\n    );\n  }\n\n  /**\n   * Get an oracle query by public key and query ID\n   * @param pubkey The public key of the oracle\n   * @param queryId The ID of the query\n   * @param options The options parameters.\n   */\n  getOracleQueryByPubkeyAndQueryId(\n    pubkey: string,\n    queryId: string,\n    options?: GetOracleQueryByPubkeyAndQueryIdOptionalParams\n  ): Promise<GetOracleQueryByPubkeyAndQueryIdResponse> {\n    return this.sendOperationRequest(\n      { pubkey, queryId, options },\n      getOracleQueryByPubkeyAndQueryIdOperationSpec\n    );\n  }\n\n  /**\n   * Get name entry from naming system\n   * @param name The name key of the name entry\n   * @param options The options parameters.\n   */\n  getNameEntryByName(\n    name: string,\n    options?: GetNameEntryByNameOptionalParams\n  ): Promise<GetNameEntryByNameResponse> {\n    return this.sendOperationRequest(\n      { name, options },\n      getNameEntryByNameOperationSpec\n    );\n  }\n\n  /**\n   * Get channel by public key\n   * @param pubkey The pubkey of the channel\n   * @param options The options parameters.\n   */\n  getChannelByPubkey(\n    pubkey: string,\n    options?: GetChannelByPubkeyOptionalParams\n  ): Promise<GetChannelByPubkeyResponse> {\n    return this.sendOperationRequest(\n      { pubkey, options },\n      getChannelByPubkeyOperationSpec\n    );\n  }\n\n  /**\n   * Get peer public key\n   * @param options The options parameters.\n   */\n  getPeerPubkey(\n    options?: GetPeerPubkeyOptionalParams\n  ): Promise<GetPeerPubkeyResponse> {\n    return this.sendOperationRequest({ options }, getPeerPubkeyOperationSpec);\n  }\n\n  /**\n   * Get the status of a node\n   * @param options The options parameters.\n   */\n  getStatus(options?: GetStatusOptionalParams): Promise<GetStatusResponse> {\n    return this.sendOperationRequest({ options }, getStatusOperationSpec);\n  }\n\n  /**\n   * Get oldest keyblock hashes counting from genesis including orphans\n   * @param options The options parameters.\n   */\n  getChainEnds(\n    options?: GetChainEndsOptionalParams\n  ): Promise<GetChainEndsResponse> {\n    return this.sendOperationRequest({ options }, getChainEndsOperationSpec);\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst getTopHeaderOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/headers/top\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Header\n    },\n    404: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true\n    }\n  },\n  queryParameters: [Parameters.intAsString],\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getCurrentKeyBlockOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/key-blocks/current\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.KeyBlock\n    },\n    404: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true\n    }\n  },\n  queryParameters: [Parameters.intAsString],\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getCurrentKeyBlockHashOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/key-blocks/current/hash\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.HashResponse\n    },\n    404: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true\n    }\n  },\n  queryParameters: [Parameters.intAsString],\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getCurrentKeyBlockHeightOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/key-blocks/current/height\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.HeightResponse\n    },\n    404: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true\n    }\n  },\n  queryParameters: [Parameters.intAsString],\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getPendingKeyBlockOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/key-blocks/pending\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.KeyBlock\n    },\n    400: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true\n    },\n    404: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true\n    }\n  },\n  queryParameters: [Parameters.intAsString],\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getKeyBlockByHashOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/key-blocks/hash/{hash}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.KeyBlock\n    },\n    400: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true\n    },\n    404: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true\n    }\n  },\n  queryParameters: [Parameters.intAsString],\n  urlParameters: [Parameters.$host, Parameters.hash],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getKeyBlockByHeightOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/key-blocks/height/{height}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.KeyBlock\n    },\n    404: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true\n    }\n  },\n  queryParameters: [Parameters.intAsString],\n  urlParameters: [Parameters.$host, Parameters.height],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getMicroBlockHeaderByHashOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/micro-blocks/hash/{hash}/header\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.MicroBlockHeader\n    },\n    400: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true\n    },\n    404: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true\n    }\n  },\n  queryParameters: [Parameters.intAsString],\n  urlParameters: [Parameters.$host, Parameters.hash],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getMicroBlockTransactionsByHashOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/micro-blocks/hash/{hash}/transactions\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SignedTxs\n    },\n    400: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true\n    },\n    404: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true\n    }\n  },\n  queryParameters: [Parameters.intAsString],\n  urlParameters: [Parameters.$host, Parameters.hash],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getMicroBlockTransactionByHashAndIndexOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/micro-blocks/hash/{hash}/transactions/index/{index}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SignedTx\n    },\n    400: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true\n    },\n    404: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true\n    }\n  },\n  queryParameters: [Parameters.intAsString],\n  urlParameters: [Parameters.$host, Parameters.hash, Parameters.index],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getMicroBlockTransactionsCountByHashOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/micro-blocks/hash/{hash}/transactions/count\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.CountResponse\n    },\n    400: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true\n    },\n    404: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true\n    }\n  },\n  queryParameters: [Parameters.intAsString],\n  urlParameters: [Parameters.$host, Parameters.hash],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getCurrentGenerationOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/generations/current\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Generation\n    },\n    404: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true\n    }\n  },\n  queryParameters: [Parameters.intAsString],\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getGenerationByHashOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/generations/hash/{hash}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Generation\n    },\n    400: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true\n    },\n    404: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true\n    }\n  },\n  queryParameters: [Parameters.intAsString],\n  urlParameters: [Parameters.$host, Parameters.hash],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getGenerationByHeightOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/generations/height/{height}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Generation\n    },\n    404: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true\n    }\n  },\n  queryParameters: [Parameters.intAsString],\n  urlParameters: [Parameters.$host, Parameters.height],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getAccountByPubkeyOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/accounts/{pubkey}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Account\n    },\n    400: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true\n    },\n    404: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true\n    }\n  },\n  queryParameters: [Parameters.intAsString],\n  urlParameters: [Parameters.$host, Parameters.pubkey],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getAccountByPubkeyAndHeightOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/accounts/{pubkey}/height/{height}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Account\n    },\n    400: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true\n    },\n    404: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true\n    }\n  },\n  queryParameters: [Parameters.intAsString],\n  urlParameters: [Parameters.$host, Parameters.height, Parameters.pubkey],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getAccountByPubkeyAndHashOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/accounts/{pubkey}/hash/{hash}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Account\n    },\n    400: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true\n    },\n    404: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true\n    }\n  },\n  queryParameters: [Parameters.intAsString],\n  urlParameters: [Parameters.$host, Parameters.hash, Parameters.pubkey],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getPendingAccountTransactionsByPubkeyOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/accounts/{pubkey}/transactions/pending\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SignedTxs\n    },\n    400: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true\n    },\n    404: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true\n    }\n  },\n  queryParameters: [Parameters.intAsString],\n  urlParameters: [Parameters.$host, Parameters.pubkey],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getAccountNextNonceOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/accounts/{pubkey}/next-nonce\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.NextNonceResponse\n    },\n    400: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true\n    },\n    404: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true\n    }\n  },\n  queryParameters: [Parameters.intAsString, Parameters.strategy],\n  urlParameters: [Parameters.$host, Parameters.pubkey],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst protectedDryRunTxsOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/dry-run\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DryRunResults\n    },\n    403: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true\n    }\n  },\n  requestBody: Parameters.body,\n  queryParameters: [Parameters.intAsString],\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst getTransactionByHashOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/transactions/{hash}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SignedTx\n    },\n    400: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true\n    },\n    404: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true\n    }\n  },\n  queryParameters: [Parameters.intAsString],\n  urlParameters: [Parameters.$host, Parameters.hash],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getTransactionInfoByHashOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/transactions/{hash}/info\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.TxInfoObject\n    },\n    400: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true\n    },\n    404: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true\n    }\n  },\n  queryParameters: [Parameters.intAsString],\n  urlParameters: [Parameters.$host, Parameters.hash],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst postTransactionOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/transactions\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.PostTxResponse\n    },\n    400: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true\n    }\n  },\n  requestBody: Parameters.body1,\n  queryParameters: [Parameters.intAsString],\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst getContractOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/contracts/{pubkey}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ContractObject\n    },\n    400: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true\n    },\n    404: {\n      isError: true\n    }\n  },\n  queryParameters: [Parameters.intAsString],\n  urlParameters: [Parameters.$host, Parameters.pubkey],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getContractCodeOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/contracts/{pubkey}/code\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ByteCode\n    },\n    400: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true\n    },\n    404: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true\n    }\n  },\n  queryParameters: [Parameters.intAsString],\n  urlParameters: [Parameters.$host, Parameters.pubkey],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getContractPoIOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/contracts/{pubkey}/poi\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.PoI\n    },\n    400: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true\n    },\n    404: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true\n    }\n  },\n  queryParameters: [Parameters.intAsString],\n  urlParameters: [Parameters.$host, Parameters.pubkey],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getOracleByPubkeyOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/oracles/{pubkey}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.RegisteredOracle\n    },\n    400: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true\n    },\n    404: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true\n    }\n  },\n  queryParameters: [Parameters.intAsString],\n  urlParameters: [Parameters.$host, Parameters.pubkey],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getOracleQueriesByPubkeyOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/oracles/{pubkey}/queries\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.OracleQueries\n    },\n    400: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true\n    },\n    404: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true\n    }\n  },\n  queryParameters: [\n    Parameters.intAsString,\n    Parameters.from,\n    Parameters.limit,\n    Parameters.type\n  ],\n  urlParameters: [Parameters.$host, Parameters.pubkey],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getOracleQueryByPubkeyAndQueryIdOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/oracles/{pubkey}/queries/{query-id}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.OracleQuery\n    },\n    400: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true\n    },\n    404: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true\n    }\n  },\n  queryParameters: [Parameters.intAsString],\n  urlParameters: [Parameters.$host, Parameters.pubkey, Parameters.queryId],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getNameEntryByNameOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/names/{name}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.NameEntry\n    },\n    400: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true\n    },\n    404: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true\n    }\n  },\n  queryParameters: [Parameters.intAsString],\n  urlParameters: [Parameters.$host, Parameters.name],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getChannelByPubkeyOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/channels/{pubkey}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Channel\n    },\n    400: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true\n    },\n    404: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true\n    }\n  },\n  queryParameters: [Parameters.intAsString],\n  urlParameters: [Parameters.$host, Parameters.pubkey],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getPeerPubkeyOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/peers/pubkey\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.PeerPubKey\n    }\n  },\n  queryParameters: [Parameters.intAsString],\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getStatusOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/status\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Status\n    }\n  },\n  queryParameters: [Parameters.intAsString],\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getChainEndsOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/status/chain-ends\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: {\n        type: { name: \"Sequence\", element: { type: { name: \"String\" } } }\n      }\n    }\n  },\n  queryParameters: [Parameters.intAsString],\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","// eslint-disable-next-line max-classes-per-file\nimport BigNumber from 'bignumber.js';\nimport { OperationArguments, OperationSpec } from '@azure/core-client';\nimport {\n  genRequestQueuesPolicy, genCombineGetRequestsPolicy, genErrorFormatterPolicy,\n  genVersionCheckPolicy, genRetryOnFailurePolicy,\n} from './utils/autorest';\nimport { Node as NodeApi, NodeOptionalParams, ErrorModel } from './apis/node';\nimport { mapObject } from './utils/other';\nimport { UnsupportedVersionError } from './utils/errors';\nimport { Encoded } from './utils/encoder';\nimport { ConsensusProtocolVersion } from './tx/builder/constants';\n\nconst bigIntPropertyNames = [\n  'balance', 'queryFee', 'fee', 'amount', 'nameFee', 'channelAmount',\n  'initiatorAmount', 'responderAmount', 'channelReserve', 'initiatorAmountFinal',\n  'responderAmountFinal', 'gasPrice', 'deposit',\n] as const;\n\nconst numberPropertyNames = [\n  'time', 'gas', 'gasUsed', 'nameSalt',\n  'nonce', 'nextNonce', 'height', 'blockHeight', 'topBlockHeight',\n  'ttl', 'nameTtl', 'clientTtl',\n  'inbound', 'outbound', 'peerCount', 'pendingTransactionsCount', 'effectiveAtHeight',\n  'version', 'solutions', 'round',\n] as const;\n\nclass NodeTransformed extends NodeApi {\n  override async sendOperationRequest(\n    operationArguments: OperationArguments,\n    operationSpec: OperationSpec,\n  ): Promise<any> {\n    const args = mapObject(\n      operationArguments,\n      ([key, value]) => [key, this.#encodeArg(value)],\n    ) as OperationArguments;\n    return this.#decodeRes(await super.sendOperationRequest(args, operationSpec));\n  }\n\n  #mapData(data: any, transform: {\n    bigInt: (v: any) => any;\n    number: (v: any) => any;\n  }): unknown {\n    if (Array.isArray(data)) return data.map((d) => this.#mapData(d, transform));\n    if (data != null && typeof data === 'object') {\n      return mapObject(data, ([key, value]) => {\n        if (value == null) return [key, value];\n        if (bigIntPropertyNames.some((k) => k === key)) return [key, transform.bigInt(value)];\n        if (numberPropertyNames.some((k) => k === key)) return [key, transform.number(value)];\n        return [key, this.#mapData(value, transform)];\n      });\n    }\n    return data;\n  }\n\n  #encodeArg(data: any): any {\n    return this.#mapData(data, {\n      bigInt: (value) => {\n        if (value instanceof BigNumber) return value.toFixed();\n        return value.toString();\n      },\n      number: (value) => value.toString(),\n    });\n  }\n\n  #decodeRes(data: any): any {\n    return this.#mapData(data, {\n      bigInt: (value) => BigInt(value),\n      number: (value) => +value,\n    });\n  }\n}\n\ntype BigIntPropertyNames = typeof bigIntPropertyNames[number];\ntype NumberPropertyNames = typeof numberPropertyNames[number];\ntype PreserveOptional<NewType, OrigType> =\n  OrigType extends undefined ? NewType | undefined : NewType;\nexport type TransformNodeType<Type> =\n  Type extends (...args: infer Args) => infer Ret\n    ? (...args: TransformNodeType<Args>) => TransformNodeType<Ret>\n    : Type extends [infer Item, ...infer Rest]\n      ? [TransformNodeType<Item>, ...TransformNodeType<Rest>]\n      : Type extends Array<infer Item>\n        ? Array<TransformNodeType<Item>>\n        : Type extends Promise<infer T>\n          ? Promise<TransformNodeType<T>>\n          : Type extends { [P in any]: any }\n            ? {\n              [Property in keyof Type]:\n              Property extends BigIntPropertyNames\n                ? PreserveOptional<bigint, Type[Property]>\n                : Property extends NumberPropertyNames\n                  ? PreserveOptional<number, Type[Property]>\n                  : Property extends 'txHash'\n                    ? PreserveOptional<Encoded.TxHash, Type[Property]>\n                    : Property extends 'bytecode'\n                      ? PreserveOptional<Encoded.ContractBytearray, Type[Property]>\n                      : TransformNodeType<Type[Property]>\n            }\n            : Type;\ntype NodeTransformedApi = new (...args: ConstructorParameters<typeof NodeApi>) => {\n  [Name in keyof InstanceType<typeof NodeApi>]:\n  Name extends 'pipeline' | 'sendRequest' | 'sendOperationRequest'\n    ? NodeApi[Name] : TransformNodeType<NodeApi[Name]>\n};\n\ninterface NodeInfo {\n  url: string;\n  nodeNetworkId: string;\n  version: string;\n  consensusProtocolVersion: ConsensusProtocolVersion;\n}\n\nexport default class Node extends (NodeTransformed as unknown as NodeTransformedApi) {\n  #networkIdPromise?: Promise<string | Error>;\n\n  /**\n   * @param url - Url for node API\n   * @param options - Options\n   * @param options.ignoreVersion - Don't ensure that the node is supported\n   * @param options.retryCount - Amount of extra requests to do in case of failure\n   * @param options.retryOverallDelay - Time in ms to wait between all retries\n   */\n  constructor(\n    url: string,\n    {\n      ignoreVersion = false, retryCount = 3, retryOverallDelay = 800, ...options\n    }: NodeOptionalParams & {\n      ignoreVersion?: boolean;\n      retryCount?: number;\n      retryOverallDelay?: number;\n    } = {},\n  ) {\n    // eslint-disable-next-line constructor-super\n    super(url, {\n      allowInsecureConnection: true,\n      additionalPolicies: [\n        genRequestQueuesPolicy(),\n        genCombineGetRequestsPolicy(),\n        genRetryOnFailurePolicy(retryCount, retryOverallDelay),\n        genErrorFormatterPolicy((body: ErrorModel) => ` ${body.reason}`),\n      ],\n      ...options,\n    });\n    if (!ignoreVersion) {\n      const statusPromise = this.getStatus();\n      const versionPromise = statusPromise.then(({ nodeVersion }) => nodeVersion, (error) => error);\n      this.#networkIdPromise = statusPromise.then(({ networkId }) => networkId, (error) => error);\n      this.pipeline.addPolicy(\n        genVersionCheckPolicy('node', '/v3/status', versionPromise, '6.2.0', '7.0.0'),\n      );\n    }\n    this.intAsString = true;\n  }\n\n  async getNetworkId(): Promise<string> {\n    this.#networkIdPromise ??= this.getStatus().then(({ networkId }) => networkId);\n    const networkId = await this.#networkIdPromise;\n    if (networkId instanceof Error) throw networkId;\n    return networkId;\n  }\n\n  async getNodeInfo(): Promise<NodeInfo> {\n    const {\n      nodeVersion,\n      networkId: nodeNetworkId,\n      protocols,\n      topBlockHeight,\n    } = await this.getStatus();\n\n    const consensusProtocolVersion = protocols\n      .filter(({ effectiveAtHeight }) => topBlockHeight >= effectiveAtHeight)\n      .reduce(\n        (acc, p) => (p.effectiveAtHeight > acc.effectiveAtHeight ? p : acc),\n        { effectiveAtHeight: -1, version: 0 },\n      )\n      .version;\n    if (ConsensusProtocolVersion[consensusProtocolVersion] == null) {\n      const version = consensusProtocolVersion.toString();\n      const versions = Object.values(ConsensusProtocolVersion)\n        .filter((el) => typeof el === 'number').map((el) => +el);\n      const geVersion = Math.min(...versions).toString();\n      const ltVersion = (Math.max(...versions) + 1).toString();\n      throw new UnsupportedVersionError('consensus protocol', version, geVersion, ltVersion);\n    }\n\n    return {\n      url: this.$host,\n      nodeNetworkId,\n      version: nodeVersion,\n      consensusProtocolVersion,\n    };\n  }\n}\n","import { Encoded } from '../utils/encoder';\nimport { buildTx, getSchema, unpackTx } from './builder';\nimport { Tag } from './builder/constants';\nimport { TransactionError, UnexpectedTsError } from '../utils/errors';\n\n/**\n * Returns account address that signed a transaction\n * @param transaction - transaction to get a signer of\n */\nexport default function getTransactionSignerAddress(\n  transaction: Encoded.Transaction,\n): Encoded.AccountAddress {\n  const params = unpackTx(transaction);\n  switch (params.tag) {\n    case Tag.SignedTx:\n      return getTransactionSignerAddress(buildTx(params.encodedTx));\n    case Tag.GaMetaTx:\n      return params.gaId;\n    default:\n  }\n\n  const nonce = getSchema(params.tag, params.version).find(([name]) => name === 'nonce')?.[1];\n  if (nonce == null) throw new TransactionError(`Transaction doesn't have nonce: ${Tag[params.tag]}`);\n  if (!('senderKey' in nonce)) throw new UnexpectedTsError();\n  const address = params[nonce.senderKey as keyof typeof params] as unknown as string;\n  return address.replace(/^ok_/, 'ak_') as Encoded.AccountAddress;\n}\n","import { Encoded } from '../utils/encoder';\nimport Node from '../Node';\nimport CompilerBase from '../contract/compiler/Base';\nimport { AensName, Int } from '../tx/builder/constants';\nimport { AciValue, Domain } from '../utils/typed-data';\nimport { NotImplementedError } from '../utils/errors';\n\ninterface AuthData {\n  fee?: Int;\n  gasLimit?: number;\n  gasPrice?: Int;\n  callData?: Encoded.ContractBytearray;\n  sourceCode?: string;\n  args?: any[];\n}\n\n/**\n * Account is one of the three basic building blocks of an\n * {@link AeSdk} and provides access to a signing key pair.\n */\nexport default abstract class AccountBase {\n  /**\n   * Sign encoded transaction\n   * @param tx - Transaction to sign\n   * @param options - Options\n   * @param options.innerTx - Sign as inner transaction for PayingFor\n   * @param options.authData - Object with gaMeta params\n   * @returns Signed transaction\n   */\n  abstract signTransaction(\n    tx: Encoded.Transaction,\n    options: {\n      innerTx?: boolean;\n      networkId?: string;\n      authData?: AuthData | ((tx: Encoded.Transaction) => Promise<AuthData>);\n      onNode?: Node;\n      onCompiler?: CompilerBase;\n      aeppOrigin?: string;\n      aeppRpcClientId?: string;\n    },\n  ): Promise<Encoded.Transaction>;\n\n  /**\n   * Sign message\n   * @param message - Message to sign\n   * @param options - Options\n   * @returns Signature\n   */\n  abstract signMessage(\n    message: string,\n    options?: {\n      aeppOrigin?: string;\n      aeppRpcClientId?: string;\n    },\n  ): Promise<Uint8Array>;\n\n  /**\n   * Sign typed data\n   * @param type - Type of data to sign\n   * @param data - Encoded data to sign\n   * @param options - Options\n   * @returns Signature\n   */\n  // TODO: make abstract in the next major release\n  // eslint-disable-next-line class-methods-use-this\n  async signTypedData(\n    /* eslint-disable @typescript-eslint/no-unused-vars */\n    data: Encoded.ContractBytearray,\n    aci: AciValue,\n    options?: Domain & {\n      aeppOrigin?: string;\n      aeppRpcClientId?: string;\n    },\n    /* eslint-enable @typescript-eslint/no-unused-vars */\n  ): Promise<Encoded.Signature> {\n    throw new NotImplementedError('signTypedData method');\n  }\n\n  /**\n   * Sign delegation of AENS, oracle operations to a contract\n   * @param contractAddress - Address of a contract to delegate permissions to\n   * @param options - Options\n   * @returns Signature\n   */\n  // TODO: make abstract in the next major release\n  // eslint-disable-next-line class-methods-use-this\n  async signDelegationToContract(\n    /* eslint-disable @typescript-eslint/no-unused-vars */\n    contractAddress: Encoded.ContractAddress,\n    options?: {\n      networkId?: string;\n      aeppOrigin?: string;\n      aeppRpcClientId?: string;\n    },\n    /* eslint-enable @typescript-eslint/no-unused-vars */\n  ): Promise<Encoded.Signature> {\n    throw new NotImplementedError('signDelegationToContract method');\n  }\n\n  /**\n   * Sign delegation of an AENS name to a contract\n   * @param contractAddress - Address of a contract to delegate permissions to\n   * @param name - AENS name to manage by a contract\n   * @param options - Options\n   * @returns Signature\n   */\n  // TODO: make abstract in the next major release\n  // eslint-disable-next-line class-methods-use-this\n  async signNameDelegationToContract(\n    /* eslint-disable @typescript-eslint/no-unused-vars */\n    contractAddress: Encoded.ContractAddress,\n    name: AensName,\n    options?: {\n      networkId?: string;\n      aeppOrigin?: string;\n      aeppRpcClientId?: string;\n    },\n    /* eslint-enable @typescript-eslint/no-unused-vars */\n  ): Promise<Encoded.Signature> {\n    throw new NotImplementedError('signNameDelegationToContract method');\n  }\n\n  /**\n   * Sign delegation of oracle query to a contract\n   *\n   * Warning! Implementations needs to ensure that decoded oracle query id is not equal to decoded\n   * current account address unless https://github.com/aeternity/aesophia/issues/475 is fixed.\n   *\n   * Warning! Implementations needs to ensure that oracle query and contract exists unless\n   * https://github.com/aeternity/aesophia/issues/474 is fixed.\n   *\n   * @param contractAddress - Address of a contract to delegate permissions to\n   * @param oracleQueryId - Oracle query ID to reply by a contract\n   * @param options - Options\n   * @returns Signature\n   */\n  // TODO: make abstract in the next major release\n  // eslint-disable-next-line class-methods-use-this\n  async signOracleQueryDelegationToContract(\n    /* eslint-disable @typescript-eslint/no-unused-vars */\n    contractAddress: Encoded.ContractAddress,\n    oracleQueryId: Encoded.OracleQueryId,\n    options?: {\n      networkId?: string;\n      aeppOrigin?: string;\n      aeppRpcClientId?: string;\n    },\n    /* eslint-enable @typescript-eslint/no-unused-vars */\n  ): Promise<Encoded.Signature> {\n    throw new NotImplementedError('signOracleQueryDelegationToContract method');\n  }\n\n  /**\n   * Sign data blob\n   * @param data - Data blob to sign\n   * @param options - Options\n   * @returns Signature\n   */\n  abstract sign(data: string | Uint8Array, options?: any): Promise<Uint8Array>;\n\n  /**\n   * Account address\n   */\n  readonly address!: Encoded.AccountAddress;\n}\n","import { TypeResolver, ContractByteArrayEncoder } from '@aeternity/aepp-calldata';\nimport canonicalize from 'canonicalize';\nimport { Encoded, decode } from './encoder';\nimport { hash, messagePrefixLength } from './crypto';\nimport { concatBuffers } from './other';\n\n/**\n * Hashes arbitrary object, can be used to inline the aci hash to contract source code\n */\nexport function hashJson(data: unknown): Buffer {\n  return hash(canonicalize(data) ?? '');\n}\n\n// TODO: move this type to calldata library https://github.com/aeternity/aepp-calldata-js/issues/215\n// based on https://github.com/aeternity/aepp-calldata-js/blob/82b5a98f9b308482627da8d7484d213e9cf87151/src/AciTypeResolver.js#L129\nexport type AciValue = 'void' | 'unit' | 'int' | 'bool' | 'string' | 'bits' | 'hash' | 'signature'\n| 'address' | 'contract_pubkey' | 'Chain.ttl' | 'Chain.ga_meta_tx' | 'Chain.paying_for_tx'\n| 'Chain.base_tx' | 'AENS.pointee' | 'AENS.name' | 'MCL_BLS12_381.fr' | 'MCL_BLS12_381.fp'\n| { 'Set.set': readonly [AciValue] }\n| { bytes: number }\n| { list: readonly [AciValue] }\n| { map: readonly [AciValue, AciValue] }\n| { tuple: readonly AciValue[] }\n| { record: ReadonlyArray<{ name: string; type: AciValue }> }\n| { variant: ReadonlyArray<{ [key: string]: readonly AciValue[] }> }\n| { option: readonly [AciValue] }\n| { oracle: readonly [AciValue, AciValue] }\n| { oracle_query: readonly [AciValue, AciValue] };\n\nexport interface Domain {\n  name?: string;\n  version?: number;\n  networkId?: string;\n  contractAddress?: Encoded.ContractAddress;\n}\n\n/**\n * Hashes domain object, can be used to inline domain hash to contract source code\n */\nexport function hashDomain(domain: Domain): Buffer {\n  const domainAci = {\n    record: [{\n      name: 'name',\n      type: { option: ['string'] },\n    }, {\n      name: 'version',\n      type: { option: ['int'] },\n    }, {\n      name: 'networkId',\n      type: { option: ['string'] },\n    }, {\n      name: 'contractAddress',\n      type: { option: ['contract_pubkey'] },\n    }],\n  } as const;\n  const domainType = new TypeResolver().resolveType(domainAci, {});\n  const fateValue = new ContractByteArrayEncoder().encodeWithType(domain, domainType);\n  return hash(decode(fateValue));\n}\n\nexport function hashTypedData(\n  data: Encoded.ContractBytearray,\n  aci: AciValue,\n  domain: Domain,\n): Buffer {\n  return hash(concatBuffers([\n    messagePrefixLength, new Uint8Array([0]), hashDomain(domain), hashJson(aci), hash(decode(data)),\n  ]));\n}\n","import AccountBase from './Base';\nimport {\n  generateKeyPairFromSecret, sign, generateKeyPair, hash, messageToHash,\n} from '../utils/crypto';\nimport { ArgumentError } from '../utils/errors';\nimport {\n  decode, encode, Encoded, Encoding,\n} from '../utils/encoder';\nimport { concatBuffers } from '../utils/other';\nimport { hashTypedData, AciValue } from '../utils/typed-data';\nimport { buildTx } from '../tx/builder';\nimport { Tag, AensName } from '../tx/builder/constants';\nimport { produceNameId } from '../tx/builder/helpers';\n\nconst secretKeys = new WeakMap();\n\nexport function getBufferToSign(\n  transaction: Encoded.Transaction,\n  networkId: string,\n  innerTx: boolean,\n): Uint8Array {\n  const prefixes = [networkId];\n  if (innerTx) prefixes.push('inner_tx');\n  const rlpBinaryTx = decode(transaction);\n  return concatBuffers([Buffer.from(prefixes.join('-')), hash(rlpBinaryTx)]);\n}\n\n/**\n * In-memory account class\n */\nexport default class AccountMemory extends AccountBase {\n  override readonly address: Encoded.AccountAddress;\n\n  /**\n   * @param secretKey - Secret key\n   */\n  constructor(secretKey: string | Uint8Array) {\n    super();\n    secretKey = typeof secretKey === 'string' ? Buffer.from(secretKey, 'hex') : secretKey;\n    if (secretKey.length !== 64) {\n      throw new ArgumentError('secretKey', '64 bytes', secretKey.length);\n    }\n    secretKeys.set(this, secretKey);\n    this.address = encode(\n      generateKeyPairFromSecret(secretKeys.get(this)).publicKey,\n      Encoding.AccountAddress,\n    );\n  }\n\n  /**\n   * Generates a new AccountMemory using a random secret key\n   */\n  static generate(): AccountMemory {\n    return new AccountMemory(generateKeyPair().secretKey);\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  override async sign(data: string | Uint8Array, options?: any): Promise<Uint8Array> {\n    return sign(data, secretKeys.get(this));\n  }\n\n  override async signTransaction(\n    transaction: Encoded.Transaction,\n    { innerTx, networkId, ...options }: { innerTx?: boolean; networkId?: string } = {},\n  ): Promise<Encoded.Transaction> {\n    if (networkId == null) {\n      throw new ArgumentError('networkId', 'provided', networkId);\n    }\n    const rlpBinaryTx = decode(transaction);\n    const txWithNetworkId = getBufferToSign(transaction, networkId, innerTx === true);\n\n    const signatures = [await this.sign(txWithNetworkId, options)];\n    return buildTx({ tag: Tag.SignedTx, encodedTx: rlpBinaryTx, signatures });\n  }\n\n  override async signMessage(message: string, options?: any): Promise<Uint8Array> {\n    return this.sign(messageToHash(message), options);\n  }\n\n  override async signTypedData(\n    data: Encoded.ContractBytearray,\n    aci: AciValue,\n    {\n      name, version, networkId, contractAddress, ...options\n    }: Parameters<AccountBase['signTypedData']>[2] = {},\n  ): Promise<Encoded.Signature> {\n    const dHash = hashTypedData(data, aci, {\n      name, version, networkId, contractAddress,\n    });\n    const signature = await this.sign(dHash, options);\n    return encode(signature, Encoding.Signature);\n  }\n\n  override async signDelegationToContract(\n    contractAddress: Encoded.ContractAddress,\n    { networkId }: { networkId?: string } = {},\n  ): Promise<Encoded.Signature> {\n    if (networkId == null) throw new ArgumentError('networkId', 'provided', networkId);\n    const payload = concatBuffers([\n      Buffer.from(networkId),\n      decode(this.address),\n      decode(contractAddress),\n    ]);\n    const signature = await this.sign(payload);\n    return encode(signature, Encoding.Signature);\n  }\n\n  override async signNameDelegationToContract(\n    contractAddress: Encoded.ContractAddress,\n    name: AensName,\n    { networkId }: { networkId?: string } = {},\n  ): Promise<Encoded.Signature> {\n    if (networkId == null) throw new ArgumentError('networkId', 'provided', networkId);\n    const payload = concatBuffers([\n      Buffer.from(networkId),\n      decode(this.address),\n      decode(produceNameId(name)),\n      decode(contractAddress),\n    ]);\n    const signature = await this.sign(payload);\n    return encode(signature, Encoding.Signature);\n  }\n\n  override async signOracleQueryDelegationToContract(\n    contractAddress: Encoded.ContractAddress,\n    oracleQueryId: Encoded.OracleQueryId,\n    { networkId }: { networkId?: string } = {},\n  ): Promise<Encoded.Signature> {\n    const oracleQueryIdDecoded = decode(oracleQueryId);\n    const addressDecoded = decode(this.address);\n    // TODO: remove after fixing https://github.com/aeternity/aesophia/issues/475\n    if (oracleQueryIdDecoded.compare(addressDecoded) === 0) {\n      throw new ArgumentError('oracleQueryId', 'not equal to account address', oracleQueryId);\n    }\n    if (networkId == null) throw new ArgumentError('networkId', 'provided', networkId);\n    const payload = concatBuffers([\n      Buffer.from(networkId),\n      oracleQueryIdDecoded,\n      decode(contractAddress),\n    ]);\n    const signature = await this.sign(payload);\n    return encode(signature, Encoding.Signature);\n  }\n}\n","import { Encoded } from '../utils/encoder';\nimport { buildTx, buildTxHash, unpackTx } from './builder';\nimport { Tag } from './builder/constants';\nimport { verify } from '../utils/crypto';\nimport { getBufferToSign } from '../account/Memory';\nimport { IllegalArgumentError, InternalError, TransactionError } from '../utils/errors';\nimport Node from '../Node';\nimport getTransactionSignerAddress from './transaction-signer';\n\n/**\n * Calculates the cost of transaction execution\n * Provides an upper cost of contract-call-related transactions because of `gasLimit`.\n * Also assumes that oracle query fee is 0 unless it is provided in options.\n *\n * The idea is that if you need to show transaction details with some accuracy you can define\n * expense fields that you want to show separately. And to show `getExecutionCost` result as a fee,\n * subtracting all fields shown separately.\n *\n * @example\n * ```vue\n * <template>\n * Amount: {{ txUnpacked.amount }}\n * Name fee: {{ txUnpacked.nameFee }}\n * Other fees: {{ getExecutionCost(txEncoded) - txUnpacked.amount - txUnpacked.nameFee }}\n * </template>\n * ```\n *\n * Doing this way you won't worry to show wrong fee for a transaction you may not support. Because\n * the SDK calculates the overall price of any transaction on its side.\n *\n * @param transaction - Transaction to calculate the cost of\n * @param innerTx - Should be provided if transaction wrapped with Tag.PayingForTx\n * @param gasUsed - Amount of gas actually used to make calculation more accurate\n * @param queryFee - Oracle query fee\n * @param isInitiator - Is transaction signer an initiator of state channel\n */\nexport function getExecutionCost(\n  transaction: Encoded.Transaction,\n  {\n    innerTx, gasUsed, queryFee, isInitiator,\n  }: {\n    innerTx?: 'fee-payer' | 'freeloader';\n    gasUsed?: number;\n    queryFee?: string;\n    isInitiator?: boolean;\n  } = {},\n): bigint {\n  const params = unpackTx(transaction);\n  if (params.tag === Tag.SignedTx) {\n    throw new IllegalArgumentError('Transaction shouldn\\'t be a SignedTx, use `getExecutionCostBySignedTx` instead');\n  }\n\n  let res = 0n;\n  if ('fee' in params && innerTx !== 'freeloader') {\n    res += BigInt(params.fee);\n  }\n  if (params.tag === Tag.NameClaimTx) {\n    res += BigInt(params.nameFee);\n  }\n  if (params.tag === Tag.OracleQueryTx) {\n    res += BigInt(params.queryFee);\n  }\n  if (params.tag === Tag.OracleResponseTx) {\n    res -= BigInt(queryFee ?? 0);\n  }\n  if (params.tag === Tag.ChannelSettleTx) {\n    if (isInitiator === true) res -= BigInt(params.initiatorAmountFinal);\n    if (isInitiator === false) res -= BigInt(params.responderAmountFinal);\n  }\n  if (\n    ((params.tag === Tag.SpendTx && params.senderId !== params.recipientId)\n    || params.tag === Tag.ContractCreateTx || params.tag === Tag.ContractCallTx\n    || params.tag === Tag.ChannelDepositTx) && innerTx !== 'fee-payer'\n  ) {\n    res += BigInt(params.amount);\n  }\n  if (params.tag === Tag.ContractCreateTx) res += BigInt(params.deposit);\n  if (\n    (params.tag === Tag.ContractCreateTx || params.tag === Tag.ContractCallTx\n      || params.tag === Tag.GaAttachTx || params.tag === Tag.GaMetaTx)\n    && innerTx !== 'freeloader'\n  ) {\n    res += BigInt(params.gasPrice) * BigInt(gasUsed ?? params.gasLimit);\n  }\n  if (params.tag === Tag.GaMetaTx || params.tag === Tag.PayingForTx) {\n    res += getExecutionCost(\n      buildTx(params.tx.encodedTx),\n      params.tag === Tag.PayingForTx ? { innerTx: 'fee-payer' } : {},\n    );\n  }\n  return res;\n}\n\n/**\n * Calculates the cost of signed transaction execution\n * @param transaction - Transaction to calculate the cost of\n * @param networkId - Network id used to sign the transaction\n * @param options - Options\n */\nexport function getExecutionCostBySignedTx(\n  transaction: Encoded.Transaction,\n  networkId: string,\n  options?: Omit<Parameters<typeof getExecutionCost>[1], 'innerTx'>,\n): bigint {\n  const params = unpackTx(transaction, Tag.SignedTx);\n  if (params.encodedTx.tag === Tag.GaMetaTx) {\n    return getExecutionCost(buildTx(params.encodedTx), options);\n  }\n\n  const tx = buildTx(params.encodedTx);\n  const address = getTransactionSignerAddress(tx);\n  const [isInnerTx, isNotInnerTx] = [true, false]\n    .map((f) => verify(getBufferToSign(tx, networkId, f), params.signatures[0], address));\n  if (!isInnerTx && !isNotInnerTx) throw new TransactionError('Can\\'t verify signature');\n  return getExecutionCost(\n    buildTx(params.encodedTx),\n    { ...isInnerTx && { innerTx: 'freeloader' }, ...options },\n  );\n}\n\n/**\n * Calculates the cost of signed and not signed transaction execution using node\n * @param transaction - Transaction to calculate the cost of\n * @param node - Node to use\n * @param isMined - Is transaction already mined or not\n * @param options - Options\n */\nexport async function getExecutionCostUsingNode(\n  transaction: Encoded.Transaction,\n  node: Node,\n  { isMined, ...options }: { isMined?: boolean } & Parameters<typeof getExecutionCost>[1] = {},\n): Promise<bigint> {\n  let params = unpackTx(transaction);\n  const isSignedTx = params.tag === Tag.SignedTx;\n  const txHash = isSignedTx && isMined === true && buildTxHash(transaction);\n  if (params.tag === Tag.SignedTx) params = params.encodedTx;\n\n  // TODO: set gasUsed for PayingForTx after solving https://github.com/aeternity/aeternity/issues/4087\n  if (\n    options.gasUsed == null && txHash !== false\n    && [Tag.ContractCreateTx, Tag.ContractCallTx, Tag.GaAttachTx, Tag.GaMetaTx].includes(params.tag)\n  ) {\n    const { callInfo, gaInfo } = await node.getTransactionInfoByHash(txHash);\n    const combinedInfo = callInfo ?? gaInfo;\n    if (combinedInfo == null) {\n      throw new InternalError(`callInfo and gaInfo is not available for transaction ${txHash}`);\n    }\n    options.gasUsed = combinedInfo.gasUsed;\n  }\n\n  if (options.queryFee == null && Tag.OracleResponseTx === params.tag) {\n    options.queryFee = (await node.getOracleByPubkey(params.oracleId)).queryFee.toString();\n  }\n\n  if (options.isInitiator == null && Tag.ChannelSettleTx === params.tag && isMined !== true) {\n    const { initiatorId } = await node.getChannelByPubkey(params.channelId);\n    options.isInitiator = params.fromId === initiatorId;\n  }\n\n  return isSignedTx\n    ? getExecutionCostBySignedTx(transaction, await node.getNetworkId(), options)\n    : getExecutionCost(transaction, options);\n}\n","import { RestError } from '@azure/core-rest-pipeline';\nimport { hash, verify } from '../utils/crypto';\nimport { TxUnpacked } from './builder/schema.generated';\nimport { CtVersion, ProtocolToVmAbi } from './builder/field-types/ct-version';\nimport { Tag, ConsensusProtocolVersion } from './builder/constants';\nimport { buildTx, unpackTx } from './builder';\nimport { concatBuffers, isAccountNotFoundError } from '../utils/other';\nimport { Encoded, decode } from '../utils/encoder';\nimport Node, { TransformNodeType } from '../Node';\nimport { Account } from '../apis/node';\nimport { genAggressiveCacheGetResponsesPolicy } from '../utils/autorest';\nimport { UnexpectedTsError } from '../utils/errors';\nimport getTransactionSignerAddress from './transaction-signer';\nimport { getExecutionCostUsingNode } from './execution-cost';\n\nexport interface ValidatorResult {\n  message: string;\n  key: string;\n  checkedKeys: string[];\n}\n\ntype Validator = (\n  tx: TxUnpacked,\n  options: {\n    // TODO: remove after fixing node types\n    account: TransformNodeType<Account> & { id: Encoded.AccountAddress };\n    nodeNetworkId: string;\n    parentTxTypes: Tag[];\n    node: Node;\n    height: number;\n    consensusProtocolVersion: ConsensusProtocolVersion;\n  }\n) => ValidatorResult[] | Promise<ValidatorResult[]>;\n\nconst validators: Validator[] = [];\n\nasync function verifyTransactionInternal(\n  tx: TxUnpacked,\n  node: Node,\n  parentTxTypes: Tag[],\n): Promise<ValidatorResult[]> {\n  const address = getTransactionSignerAddress(buildTx(tx));\n  const [account, { height }, { consensusProtocolVersion, nodeNetworkId }] = await Promise.all([\n    node.getAccountByPubkey(address)\n      .catch((error) => {\n        if (!isAccountNotFoundError(error)) throw error;\n        return { id: address, balance: 0n, nonce: 0 };\n      })\n      // TODO: remove after fixing https://github.com/aeternity/aepp-sdk-js/issues/1537\n      .then((acc) => ({ ...acc, id: acc.id as Encoded.AccountAddress })),\n    node.getCurrentKeyBlockHeight(),\n    node.getNodeInfo(),\n  ]);\n\n  return (await Promise.all(\n    validators.map(async (v) => v(\n      tx,\n      {\n        node, account, height, consensusProtocolVersion, nodeNetworkId, parentTxTypes,\n      },\n    )),\n  )).flat();\n}\n\n/**\n * Transaction Validator\n * This function validates some transaction properties,\n * to make sure it can be posted it to the chain\n * @category transaction builder\n * @param transaction - Base64Check-encoded transaction\n * @param nodeNotCached - Node to validate transaction against\n * @returns Array with verification errors\n * @example const errors = await verifyTransaction(transaction, node)\n */\nexport default async function verifyTransaction(\n  transaction: Parameters<typeof unpackTx>[0],\n  nodeNotCached: Node,\n): Promise<ValidatorResult[]> {\n  const node = new Node(nodeNotCached.$host, {\n    ignoreVersion: true,\n    pipeline: nodeNotCached.pipeline.clone(),\n    additionalPolicies: [genAggressiveCacheGetResponsesPolicy()],\n  });\n  return verifyTransactionInternal(unpackTx(transaction), node, []);\n}\n\nvalidators.push(\n  (tx, { account, nodeNetworkId, parentTxTypes }) => {\n    if (tx.tag !== Tag.SignedTx) return [];\n    const { encodedTx, signatures } = tx;\n    if ((encodedTx ?? signatures) == null) return [];\n    if (signatures.length !== 1) return []; // TODO: Support multisignature like in state channels\n    const prefix = Buffer.from([\n      nodeNetworkId,\n      ...parentTxTypes.includes(Tag.PayingForTx) ? ['inner_tx'] : [],\n    ].join('-'));\n    const txBinary = decode(buildTx(encodedTx));\n    const txWithNetworkId = concatBuffers([prefix, txBinary]);\n    const txHashWithNetworkId = concatBuffers([prefix, hash(txBinary)]);\n    if (verify(txWithNetworkId, signatures[0], account.id)\n      || verify(txHashWithNetworkId, signatures[0], account.id)) return [];\n    return [{\n      message: 'Signature cannot be verified, please ensure that you transaction have'\n        + ' the correct prefix and the correct private key for the sender address',\n      key: 'InvalidSignature',\n      checkedKeys: ['encodedTx', 'signatures'],\n    }];\n  },\n  async (tx, { node, parentTxTypes }) => {\n    let nestedTx;\n    if ('encodedTx' in tx) nestedTx = tx.encodedTx;\n    if ('tx' in tx) nestedTx = tx.tx;\n    if (nestedTx == null) return [];\n    return verifyTransactionInternal(nestedTx, node, [...parentTxTypes, tx.tag]);\n  },\n  (tx, { height }) => {\n    if (!('ttl' in tx)) return [];\n    if (tx.ttl === 0 || tx.ttl >= height) return [];\n    return [{\n      message: `TTL ${tx.ttl} is already expired, current height is ${height}`,\n      key: 'ExpiredTTL',\n      checkedKeys: ['ttl'],\n    }];\n  },\n  async (tx, { account, parentTxTypes, node }) => {\n    if (parentTxTypes.length !== 0) return [];\n    const cost = await getExecutionCostUsingNode(buildTx(tx), node).catch(() => 0n);\n    if (cost <= account.balance) return [];\n    return [{\n      message: `Account balance ${account.balance} is not enough to execute the transaction that costs ${cost}`,\n      key: 'InsufficientBalance',\n      checkedKeys: ['amount', 'fee', 'nameFee', 'gasLimit', 'gasPrice'],\n    }];\n  },\n  (tx, { account }) => {\n    let message;\n    if (tx.tag === Tag.SignedTx && account.kind === 'generalized' && tx.signatures.length !== 0) {\n      message = 'Generalized account can\\'t be used to generate SignedTx with signatures';\n    }\n    if (tx.tag === Tag.GaMetaTx && account.kind === 'basic') {\n      message = 'Basic account can\\'t be used to generate GaMetaTx';\n    }\n    if (message == null) return [];\n    return [{ message, key: 'InvalidAccountType', checkedKeys: ['tag'] }];\n  },\n  // TODO: revert nonce check\n  // TODO: ensure nonce valid when paying for own tx\n  (tx, { consensusProtocolVersion }) => {\n    const oracleCall = Tag.Oracle === tx.tag || Tag.OracleRegisterTx === tx.tag;\n    const contractCreate = Tag.ContractCreateTx === tx.tag || Tag.GaAttachTx === tx.tag;\n    const contractCall = Tag.ContractCallTx === tx.tag || Tag.GaMetaTx === tx.tag;\n    const type = (oracleCall ? 'oracle-call' : null)\n      ?? (contractCreate ? 'contract-create' : null)\n      ?? (contractCall ? 'contract-call' : null);\n    if (type == null) return [];\n    const protocol = ProtocolToVmAbi[consensusProtocolVersion][type] as {\n      abiVersion: readonly any[];\n      vmVersion: readonly any[];\n    };\n\n    let ctVersion: Partial<CtVersion> | undefined;\n    if ('abiVersion' in tx) ctVersion = { abiVersion: tx.abiVersion };\n    if ('ctVersion' in tx) ctVersion = tx.ctVersion;\n    if (ctVersion == null) throw new UnexpectedTsError();\n    if (\n      !protocol.abiVersion.includes(ctVersion.abiVersion)\n      || (contractCreate && !protocol.vmVersion.includes(ctVersion.vmVersion))\n    ) {\n      return [{\n        message: `ABI/VM version ${JSON.stringify(ctVersion)} is wrong, supported is: ${JSON.stringify(protocol)}`,\n        key: 'VmAndAbiVersionMismatch',\n        checkedKeys: ['ctVersion', 'abiVersion'],\n      }];\n    }\n    return [];\n  },\n  async (tx, { node }) => {\n    if (Tag.ContractCallTx !== tx.tag) return [];\n    try {\n      const { active } = await node.getContract(tx.contractId);\n      if (active) return [];\n      return [{\n        message: `Contract ${tx.contractId} is not active`,\n        key: 'ContractNotActive',\n        checkedKeys: ['contractId'],\n      }];\n    } catch (error) {\n      if (!(error instanceof RestError) || error.response?.bodyAsText == null) throw error;\n      return [{\n        message: JSON.parse(error.response.bodyAsText).reason, // TODO: use parsedBody instead\n        key: 'ContractNotFound',\n        checkedKeys: ['contractId'],\n      }];\n    }\n  },\n);\n","import { AE_AMOUNT_FORMATS, formatAmount } from './utils/amount-formatter';\nimport verifyTransaction, { ValidatorResult } from './tx/validator';\nimport { ensureError, isAccountNotFoundError, pause } from './utils/other';\nimport { isNameValid, produceNameId } from './tx/builder/helpers';\nimport { DRY_RUN_ACCOUNT } from './tx/builder/schema';\nimport { AensName } from './tx/builder/constants';\nimport {\n  AensPointerContextError, DryRunError, InvalidAensNameError, TransactionError,\n  TxTimedOutError, TxNotInChainError, InternalError,\n} from './utils/errors';\nimport Node, { TransformNodeType } from './Node';\nimport {\n  Account as AccountNode, ByteCode, ContractObject, DryRunResult, DryRunResults,\n  Generation, KeyBlock, MicroBlockHeader, NameEntry, SignedTx,\n} from './apis/node';\nimport {\n  decode, encode, Encoded, Encoding,\n} from './utils/encoder';\nimport AccountBase from './account/Base';\nimport { buildTxHash } from './tx/builder';\n\n/**\n * @category chain\n */\nexport function _getPollInterval(\n  type: 'block' | 'microblock', // TODO: rename to 'key-block' | 'micro-block'\n  { _expectedMineRate = 180000, _microBlockCycle = 3000, _maxPollInterval = 5000 }:\n  { _expectedMineRate?: number; _microBlockCycle?: number; _maxPollInterval?: number },\n): number {\n  const base = {\n    block: _expectedMineRate,\n    microblock: _microBlockCycle,\n  }[type];\n  return Math.min(base / 3, _maxPollInterval);\n}\n\n/**\n * @category exception\n */\nexport class InvalidTxError extends TransactionError {\n  validation: ValidatorResult[];\n\n  transaction: Encoded.Transaction;\n\n  constructor(\n    message: string,\n    validation: ValidatorResult[],\n    transaction: Encoded.Transaction,\n  ) {\n    super(message);\n    this.name = 'InvalidTxError';\n    this.validation = validation;\n    this.transaction = transaction;\n  }\n}\n\n/**\n * Obtain current height of the chain\n * @category chain\n * @returns Current chain height\n */\nexport async function getHeight({ onNode }: { onNode: Node }): Promise<number> {\n  return (await onNode.getCurrentKeyBlockHeight()).height;\n}\n\n/**\n * Wait for a transaction to be mined\n * @category chain\n * @param th - The hash of transaction to poll\n * @param options - Options\n * @param options.interval - Interval (in ms) at which to poll the chain\n * @param options.blocks - Number of blocks mined after which to fail\n * @param options.onNode - Node to use\n * @returns The transaction as it was mined\n */\nexport async function poll(\n  th: Encoded.TxHash,\n  {\n    blocks = 5, interval, onNode, ...options\n  }:\n  { blocks?: number; interval?: number; onNode: Node } & Parameters<typeof _getPollInterval>[1],\n): Promise<TransformNodeType<SignedTx>> {\n  interval ??= _getPollInterval('microblock', options);\n  const max = await getHeight({ onNode }) + blocks;\n  do {\n    const tx = await onNode.getTransactionByHash(th);\n    if (tx.blockHeight !== -1) return tx;\n    await pause(interval);\n  } while (await getHeight({ onNode }) < max);\n  throw new TxTimedOutError(blocks, th);\n}\n\n/**\n * Wait for the chain to reach a specific height\n * @category chain\n * @param height - Height to wait for\n * @param options - Options\n * @param options.interval - Interval (in ms) at which to poll the chain\n * @param options.onNode - Node to use\n * @returns Current chain height\n */\nexport async function awaitHeight(\n  height: number,\n  { interval, onNode, ...options }:\n  { interval?: number; onNode: Node } & Parameters<typeof _getPollInterval>[1],\n): Promise<number> {\n  interval ??= _getPollInterval('block', options);\n  let currentHeight;\n  do {\n    if (currentHeight != null) await pause(interval);\n    currentHeight = (await onNode.getCurrentKeyBlockHeight()).height;\n  } while (currentHeight < height);\n  return currentHeight;\n}\n\n/**\n * Wait for transaction confirmation\n * @category chain\n * @param txHash - Transaction hash\n * @param options - Options\n * @param options.confirm - Number of micro blocks to wait for transaction confirmation\n * @param options.onNode - Node to use\n * @returns Current Height\n */\nexport async function waitForTxConfirm(\n  txHash: Encoded.TxHash,\n  { confirm = 3, onNode, ...options }:\n  { confirm?: number; onNode: Node } & Parameters<typeof awaitHeight>[1],\n): Promise<number> {\n  const { blockHeight } = await onNode.getTransactionByHash(txHash);\n  const height = await awaitHeight(blockHeight + confirm, { onNode, ...options });\n  const { blockHeight: newBlockHeight } = await onNode.getTransactionByHash(txHash);\n  switch (newBlockHeight) {\n    case -1:\n      throw new TxNotInChainError(txHash);\n    case blockHeight:\n      return height;\n    default:\n      return waitForTxConfirm(txHash, { onNode, confirm, ...options });\n  }\n}\n\n/**\n * Signs and submits transaction for mining\n * @category chain\n * @param txUnsigned - Transaction to sign and submit\n * @param options - Options\n * @param options.onNode - Node to use\n * @param options.onAccount - Account to use\n * @param options.verify - Verify transaction before broadcast, throw error if not\n * @param options.waitMined - Ensure that transaction get into block\n * @param options.confirm - Number of micro blocks that should be mined after tx get included\n * @returns Transaction details\n */\nexport async function sendTransaction(\n  txUnsigned: Encoded.Transaction,\n  {\n    onNode, onAccount, verify = true, waitMined = true, confirm, innerTx, ...options\n  }:\n  SendTransactionOptions,\n): Promise<SendTransactionReturnType> {\n  const tx = await onAccount.signTransaction(txUnsigned, {\n    ...options,\n    onNode,\n    innerTx,\n    networkId: await onNode.getNetworkId(),\n  });\n\n  if (innerTx === true) return { hash: buildTxHash(tx), rawTx: tx };\n\n  if (verify) {\n    const validation = await verifyTransaction(tx, onNode);\n    if (validation.length > 0) {\n      const message = `Transaction verification errors: ${\n        validation.map((v: { message: string }) => v.message).join(', ')}`;\n      throw new InvalidTxError(message, validation, tx);\n    }\n  }\n\n  try {\n    let __queue;\n    try {\n      __queue = onAccount != null ? `tx-${onAccount.address}` : null;\n    } catch (error) {\n      __queue = null;\n    }\n    const { txHash } = await onNode.postTransaction(\n      { tx },\n      __queue != null ? { requestOptions: { customHeaders: { __queue } } } : {},\n    );\n\n    if (waitMined) {\n      const pollResult = await poll(txHash, { onNode, ...options });\n      const txData = {\n        ...pollResult,\n        hash: pollResult.hash as Encoded.TxHash,\n        rawTx: tx,\n      };\n      // wait for transaction confirmation\n      if (confirm != null && +confirm > 0) {\n        const c = typeof confirm === 'boolean' ? undefined : confirm;\n        return {\n          ...txData,\n          confirmationHeight: await waitForTxConfirm(txHash, { onNode, confirm: c, ...options }),\n        };\n      }\n      return txData;\n    }\n    return { hash: txHash, rawTx: tx };\n  } catch (error) {\n    ensureError(error);\n    throw Object.assign(error, {\n      rawTx: tx,\n      verifyTx: async () => verifyTransaction(tx, onNode),\n    });\n  }\n}\n\ntype SendTransactionOptionsType = {\n  onNode: Node;\n  onAccount: AccountBase;\n  verify?: boolean;\n  waitMined?: boolean;\n  confirm?: boolean | number;\n} & Parameters<typeof poll>[1] & Omit<Parameters<typeof waitForTxConfirm>[1], 'confirm'>\n& Parameters<AccountBase['signTransaction']>[1];\nexport interface SendTransactionOptions extends SendTransactionOptionsType {}\ninterface SendTransactionReturnType extends Partial<TransformNodeType<SignedTx>> {\n  hash: Encoded.TxHash;\n  rawTx: Encoded.Transaction;\n  confirmationHeight?: number;\n}\n\n/**\n * Get account by account public key\n * @category chain\n * @param address - Account address (public key)\n * @param options - Options\n * @param options.height - Get account on specific block by block height\n * @param options.hash - Get account on specific block by micro block hash or key block hash\n * @param options.onNode - Node to use\n */\nexport async function getAccount(\n  address: Encoded.AccountAddress | Encoded.ContractAddress,\n  { height, hash, onNode }:\n  { height?: number; hash?: Encoded.KeyBlockHash | Encoded.MicroBlockHash; onNode: Node },\n): Promise<TransformNodeType<AccountNode>> {\n  if (height != null) return onNode.getAccountByPubkeyAndHeight(address, height);\n  if (hash != null) return onNode.getAccountByPubkeyAndHash(address, hash);\n  return onNode.getAccountByPubkey(address);\n}\n\n/**\n * Request the balance of specified account\n * @category chain\n * @param address - The public account address to obtain the balance for\n * @param options - Options\n * @param options.format\n * @param options.height - The chain height at which to obtain the balance for\n * (default: top of chain)\n * @param options.hash - The block hash on which to obtain the balance for (default: top of chain)\n */\nexport async function getBalance(\n  address: Encoded.AccountAddress | Encoded.ContractAddress | Encoded.OracleAddress,\n  { format = AE_AMOUNT_FORMATS.AETTOS, ...options }:\n  { format?: AE_AMOUNT_FORMATS } & Parameters<typeof getAccount>[1],\n): Promise<string> {\n  const addr = address.startsWith('ok_')\n    ? encode(decode(address), Encoding.AccountAddress)\n    : address as Encoded.AccountAddress | Encoded.ContractAddress;\n\n  const { balance } = await getAccount(addr, options).catch((error) => {\n    if (!isAccountNotFoundError(error)) throw error;\n    return { balance: 0n };\n  });\n\n  return formatAmount(balance, { targetDenomination: format });\n}\n\n/**\n * Obtain current generation\n * @category chain\n * @param options - Options\n * @param options.onNode - Node to use\n * @returns Current Generation\n */\nexport async function getCurrentGeneration(\n  { onNode }: { onNode: Node },\n): Promise<TransformNodeType<Generation>> {\n  return onNode.getCurrentGeneration();\n}\n\n/**\n * Get generation by hash or height\n * @category chain\n * @param hashOrHeight - Generation hash or height\n * @param options - Options\n * @param options.onNode - Node to use\n * @returns Generation\n */\nexport async function getGeneration(\n  hashOrHeight: Encoded.KeyBlockHash | number,\n  { onNode }: { onNode: Node },\n): Promise<TransformNodeType<Generation>> {\n  if (typeof hashOrHeight === 'number') return onNode.getGenerationByHeight(hashOrHeight);\n  return onNode.getGenerationByHash(hashOrHeight);\n}\n\n/**\n * Get micro block transactions\n * @category chain\n * @param hash - Micro block hash\n * @param options - Options\n * @param options.onNode - Node to use\n * @returns Transactions\n */\nexport async function getMicroBlockTransactions(\n  hash: Encoded.MicroBlockHash,\n  { onNode }: { onNode: Node },\n): Promise<TransformNodeType<SignedTx[]>> {\n  return (await onNode.getMicroBlockTransactionsByHash(hash)).transactions;\n}\n\n/**\n * Get key block\n * @category chain\n * @param hashOrHeight - Key block hash or height\n * @param options - Options\n * @param options.onNode - Node to use\n * @returns Key Block\n */\nexport async function getKeyBlock(\n  hashOrHeight: Encoded.KeyBlockHash | number,\n  { onNode }: { onNode: Node },\n): Promise<TransformNodeType<KeyBlock>> {\n  if (typeof hashOrHeight === 'number') return onNode.getKeyBlockByHeight(hashOrHeight);\n  return onNode.getKeyBlockByHash(hashOrHeight);\n}\n\n/**\n * Get micro block header\n * @category chain\n * @param hash - Micro block hash\n * @param options - Options\n * @param options.onNode - Node to use\n * @returns Micro block header\n */\nexport async function getMicroBlockHeader(\n  hash: Encoded.MicroBlockHash,\n  { onNode }: { onNode: Node },\n): Promise<TransformNodeType<MicroBlockHeader>> {\n  return onNode.getMicroBlockHeaderByHash(hash);\n}\n\ninterface TxDryRunArguments {\n  tx: Encoded.Transaction;\n  accountAddress: Encoded.AccountAddress;\n  top?: number | Encoded.KeyBlockHash | Encoded.MicroBlockHash;\n  txEvents?: any;\n  resolve: Function;\n  reject: Function;\n}\nconst txDryRunRequests: Map<string, TxDryRunArguments[] & { timeout?: NodeJS.Timeout }> = new Map();\n\nasync function txDryRunHandler(key: string, onNode: Node): Promise<void> {\n  const rs = txDryRunRequests.get(key);\n  txDryRunRequests.delete(key);\n  if (rs == null) throw new InternalError('Can\\'t get dry-run request');\n\n  let dryRunRes;\n  try {\n    const top = typeof rs[0].top === 'number'\n      ? (await getKeyBlock(rs[0].top, { onNode })).hash : rs[0].top;\n    dryRunRes = await onNode.protectedDryRunTxs({\n      top,\n      txEvents: rs[0].txEvents,\n      txs: rs.map((req) => ({ tx: req.tx })),\n      accounts: Array.from(new Set(rs.map((req) => req.accountAddress)))\n        .map((pubKey) => ({ pubKey, amount: DRY_RUN_ACCOUNT.amount })),\n    });\n  } catch (error) {\n    rs.forEach(({ reject }) => reject(error));\n    return;\n  }\n\n  const { results, txEvents } = dryRunRes;\n  results.forEach(({ result, reason, ...resultPayload }, idx) => {\n    const {\n      resolve, reject, tx, accountAddress,\n    } = rs[idx];\n    if (result === 'ok') resolve({ ...resultPayload, txEvents });\n    else reject(Object.assign(new DryRunError(reason as string), { tx, accountAddress }));\n  });\n}\n\n/**\n * Transaction dry-run\n * @category chain\n * @param tx - transaction to execute\n * @param accountAddress - address that will be used to execute transaction\n * @param options - Options\n * @param options.top - hash of block on which to make dry-run\n * @param options.txEvents - collect and return on-chain tx events that would result from the call\n * @param options.combine - Enables combining of similar requests to a single dry-run call\n * @param options.onNode - Node to use\n */\nexport async function txDryRun(\n  tx: Encoded.Transaction,\n  accountAddress: Encoded.AccountAddress,\n  {\n    top, txEvents, combine, onNode,\n  }:\n  { top?: TxDryRunArguments['top']; txEvents?: boolean; combine?: boolean; onNode: Node },\n): Promise<{\n    txEvents?: TransformNodeType<DryRunResults['txEvents']>;\n  } & TransformNodeType<DryRunResult>> {\n  const key = combine === true ? [top, txEvents].join() : 'immediate';\n  const requests = txDryRunRequests.get(key) ?? [];\n  txDryRunRequests.set(key, requests);\n  return new Promise((resolve, reject) => {\n    requests.push({\n      tx, accountAddress, top, txEvents, resolve, reject,\n    });\n    if (combine !== true) {\n      void txDryRunHandler(key, onNode);\n      return;\n    }\n    requests.timeout ??= setTimeout(() => { void txDryRunHandler(key, onNode); });\n  });\n}\n\n/**\n * Get contract byte code\n * @category contract\n * @param contractId - Contract address\n * @param options - Options\n * @param options.onNode - Node to use\n */\nexport async function getContractByteCode(\n  contractId: Encoded.ContractAddress,\n  { onNode }: { onNode: Node },\n): Promise<TransformNodeType<ByteCode>> {\n  return onNode.getContractCode(contractId);\n}\n\n/**\n * Get contract entry\n * @category contract\n * @param contractId - Contract address\n * @param options - Options\n * @param options.onNode - Node to use\n */\nexport async function getContract(\n  contractId: Encoded.ContractAddress,\n  { onNode }: { onNode: Node },\n): Promise<TransformNodeType<ContractObject>> {\n  return onNode.getContract(contractId);\n}\n\n/**\n * Get name entry\n * @category AENS\n * @param name - AENS name\n * @param options - Options\n * @param options.onNode - Node to use\n */\nexport async function getName(\n  name: AensName,\n  { onNode }: { onNode: Node },\n): Promise<TransformNodeType<NameEntry>> {\n  return onNode.getNameEntryByName(name);\n}\n\n/**\n * Resolve AENS name and return name hash\n * @category AENS\n * @param nameOrId - AENS name or address\n * @param key - in AENS pointers record\n * @param options - Options\n * @param options.verify - To ensure that name exist and have a corresponding pointer\n * // TODO: avoid that to don't trust to current api gateway\n * @param options.resolveByNode - Enables pointer resolving using node\n * @param options.onNode - Node to use\n * @returns Address or AENS name hash\n */\nexport async function resolveName <\n  Type extends Encoding.AccountAddress | Encoding.ContractAddress,\n>(\n  nameOrId: AensName | Encoded.Generic<Type>,\n  key: string,\n  { verify = true, resolveByNode = false, onNode }:\n  { verify?: boolean; resolveByNode?: boolean; onNode: Node },\n): Promise<Encoded.Generic<Type | Encoding.Name>> {\n  if (isNameValid(nameOrId)) {\n    if (verify || resolveByNode) {\n      const name = await onNode.getNameEntryByName(nameOrId);\n      const pointer = name.pointers.find((p) => p.key === key);\n      if (pointer == null) throw new AensPointerContextError(nameOrId, key);\n      if (resolveByNode) return pointer.id as Encoded.Generic<Type>;\n    }\n    return produceNameId(nameOrId);\n  }\n  try {\n    decode(nameOrId);\n    return nameOrId;\n  } catch (error) {\n    throw new InvalidAensNameError(`Invalid name or address: ${nameOrId}`);\n  }\n}\n","import nacl from 'tweetnacl';\nimport { v4 as uuid } from '@aeternity/uuid';\nimport { hash, argon2id } from '@aeternity/argon2';\nimport { getAddressFromPriv } from './crypto';\nimport { InvalidPasswordError } from './errors';\n\nconst DERIVED_KEY_FUNCTIONS = {\n  async argon2id(\n    pass: string | Uint8Array,\n    salt: string | Uint8Array,\n    params: Partial<Keystore['crypto']['kdf_params']>,\n  ): Promise<Uint8Array> {\n    const { memlimit_kib: memoryCost, opslimit: timeCost } = params;\n\n    return hash(pass, {\n      hashLength: 32,\n      salt,\n      timeCost,\n      memoryCost,\n      type: argon2id,\n    });\n  },\n};\n\nconst CRYPTO_FUNCTIONS = {\n  'xsalsa20-poly1305': {\n    encrypt: nacl.secretbox,\n    decrypt(...args: Parameters<typeof nacl.secretbox.open>): Uint8Array {\n      const res = nacl.secretbox.open(...args);\n      if (res == null) throw new InvalidPasswordError();\n      return res;\n    },\n  },\n};\n\nexport interface Keystore {\n  name: string;\n  version: 1;\n  public_key: string;\n  id: string;\n  crypto: {\n    secret_type: 'ed25519';\n    symmetric_alg: keyof typeof CRYPTO_FUNCTIONS;\n    ciphertext: string;\n    cipher_params: {\n      nonce: string;\n    };\n    kdf: keyof typeof DERIVED_KEY_FUNCTIONS;\n    kdf_params: {\n      memlimit_kib: number;\n      opslimit: number;\n      parallelism: number;\n      salt: string;\n    };\n  };\n}\n\nconst CRYPTO_DEFAULTS = {\n  secret_type: 'ed25519',\n  symmetric_alg: 'xsalsa20-poly1305',\n  kdf: 'argon2id',\n  kdf_params: {\n    memlimit_kib: 65536,\n    opslimit: 3,\n    parallelism: 1,\n  },\n} as const;\n\n/**\n * Symmetric private key encryption using secret (derived) key.\n * @category keystore\n * @param plaintext - Data to be encrypted.\n * @param key - Secret key.\n * @param nonce - Randomly generated nonce.\n * @param algo - Encryption algorithm.\n * @returns Encrypted data.\n */\nfunction encrypt(\n  plaintext: Uint8Array,\n  key: Uint8Array,\n  nonce: Uint8Array,\n  algo: keyof typeof CRYPTO_FUNCTIONS = CRYPTO_DEFAULTS.symmetric_alg,\n): Uint8Array {\n  return CRYPTO_FUNCTIONS[algo].encrypt(plaintext, nonce, key);\n}\n\n/**\n * Symmetric private key decryption using secret (derived) key.\n * @category keystore\n * @param ciphertext - Data to be decrypted.\n * @param key - Secret key.\n * @param nonce - Nonce from key-object.\n * @param algo - Encryption algorithm.\n * @returns Decrypted data.\n */\nfunction decrypt(\n  ciphertext: Uint8Array,\n  key: Uint8Array,\n  nonce: Uint8Array,\n  algo: keyof typeof CRYPTO_FUNCTIONS = CRYPTO_DEFAULTS.symmetric_alg,\n): Uint8Array {\n  return CRYPTO_FUNCTIONS[algo].decrypt(ciphertext, nonce, key);\n}\n\n/**\n * Derive secret key from password with key derivation function.\n * @category keystore\n * @param password - User-supplied password.\n * @param nonce - Randomly generated nonce.\n * @param kdf - Key derivation function.\n * @param kdfParams - KDF parameters.\n * @returns Secret key derived from password.\n */\nasync function deriveKey(\n  password: string | Uint8Array,\n  nonce: string | Uint8Array,\n  kdf: Keystore['crypto']['kdf'],\n  kdfParams: Omit<Keystore['crypto']['kdf_params'], 'salt'>,\n): Promise<Uint8Array> {\n  return DERIVED_KEY_FUNCTIONS[kdf](password, nonce, kdfParams);\n}\n\n/**\n * Recover plaintext private key from secret-storage key object.\n * @category keystore\n * @param password - Keystore object password.\n * @param keystore - Keystore object.\n * @returns Plaintext private key.\n */\nexport async function recover(\n  password: string | Uint8Array,\n  { crypto }: Keystore,\n): Promise<string> {\n  const salt = Buffer.from(crypto.kdf_params.salt, 'hex');\n  return Buffer.from(decrypt(\n    Buffer.from(crypto.ciphertext, 'hex'),\n    await deriveKey(password, salt, crypto.kdf, crypto.kdf_params),\n    Buffer.from(crypto.cipher_params.nonce, 'hex'),\n    crypto.symmetric_alg,\n  )).toString('hex');\n}\n\n/**\n * Export private key to keystore secret-storage format.\n * @category keystore\n * @param name - Key name.\n * @param password - User-supplied password.\n * @param privateKey - Private key as hex-string or a Buffer.\n * @param nonce - Randomly generated 24byte nonce.\n * @param salt - Randomly generated 16byte salt.\n * @param options - Encryption parameters.\n * @param options.kdf - Key derivation function.\n * @param options.kdf_params - KDF parameters.\n */\nexport async function dump(\n  name: string,\n  password: string | Uint8Array,\n  privateKey: string | Uint8Array,\n  nonce: Uint8Array = nacl.randomBytes(24),\n  salt: Uint8Array = nacl.randomBytes(16),\n  options?: Partial<Keystore['crypto']>,\n): Promise<Keystore> {\n  const opt = { ...CRYPTO_DEFAULTS, ...options };\n  const derivedKey = await deriveKey(password, salt, opt.kdf, opt.kdf_params);\n  const payload = typeof privateKey === 'string' ? Buffer.from(privateKey, 'hex') : privateKey;\n  return {\n    name,\n    version: 1,\n    public_key: getAddressFromPriv(payload),\n    id: uuid(),\n    crypto: {\n      secret_type: opt.secret_type,\n      symmetric_alg: opt.symmetric_alg,\n      ciphertext: Buffer.from(\n        encrypt(payload, derivedKey, nonce, opt.symmetric_alg),\n      ).toString('hex'),\n      cipher_params: { nonce: Buffer.from(nonce).toString('hex') },\n      kdf: opt.kdf,\n      kdf_params: {\n        ...opt.kdf_params,\n        salt: Buffer.from(salt).toString('hex'),\n      },\n    },\n  };\n}\n","import nacl from 'tweetnacl';\nimport { full as hmac } from 'tweetnacl-auth';\nimport { fromString } from 'bip32-path';\nimport aesjs from 'aes-js';\nimport { sha256hash, encode, Encoding } from './encoder';\nimport { CryptographyError } from './errors';\nimport { concatBuffers } from './other';\n\nconst Ecb = aesjs.ModeOfOperation.ecb;\n\n// TODO: use mnemonic encryption instead of AES\n/**\n * Encrypt given data using `password`\n * @param password - Password to encrypt with\n * @param binaryData - Data to encrypt\n * @returns Encrypted data\n */\nfunction encryptKey(password: string, binaryData: Uint8Array): Uint8Array {\n  const hashedPasswordBytes = sha256hash(password);\n  const aesEcb = new Ecb(hashedPasswordBytes);\n  return aesEcb.encrypt(binaryData);\n}\n\n/**\n * Decrypt given data using `password`\n * @param password - Password to decrypt with\n * @param encrypted - Data to decrypt\n * @returns Decrypted data\n */\nfunction decryptKey(password: string, encrypted: Uint8Array): Uint8Array {\n  const encryptedBytes = Buffer.from(encrypted);\n  const hashedPasswordBytes = sha256hash(password);\n  const aesEcb = new Ecb(hashedPasswordBytes);\n  return aesEcb.decrypt(encryptedBytes);\n}\n\n/**\n * @category exception\n */\nexport class DerivationError extends CryptographyError {\n  constructor(message: string) {\n    super(message);\n    this.name = 'DerivationError';\n  }\n}\n\nconst ED25519_CURVE = Buffer.from('ed25519 seed');\nconst HARDENED_OFFSET = 0x80000000;\n\ninterface KeyTreeNode {\n  secretKey: Uint8Array;\n  chainCode: Uint8Array;\n}\n\ninterface HDWallet {\n  secretKey: string;\n  chainCode: string;\n}\n\ninterface Account {\n  secretKey: string;\n  publicKey: string;\n}\n\ntype Dec<N extends number> = [-1, 0, 1, 2, 3, 4][N];\ntype Bip32PathT<MaxLen extends number, H extends 'H' | 'h' | '\\''> = MaxLen extends -1\n  ? `${number}${H}`\n  : Bip32PathT<Dec<MaxLen>, H> | `${Bip32PathT<Dec<MaxLen>, H>}/${number}${H}`;\ntype Bip32Path<MaxLen extends number> =\n  '' | Bip32PathT<MaxLen, 'H'> | Bip32PathT<MaxLen, 'h'> | Bip32PathT<MaxLen, '\\''>;\n\n/**\n * @category hd-wallet\n */\nexport function deriveChild({ secretKey, chainCode }: KeyTreeNode, index: number): KeyTreeNode {\n  if (index < HARDENED_OFFSET) {\n    throw new DerivationError(`Segment ${index} is not hardened`);\n  }\n  const indexBuffer = Buffer.allocUnsafe(4);\n  indexBuffer.writeUInt32BE(index, 0);\n\n  const data = concatBuffers([Buffer.alloc(1, 0), secretKey, indexBuffer]);\n\n  const I = hmac(data, chainCode);\n  const IL = I.slice(0, 32);\n  const IR = I.slice(32);\n  return {\n    secretKey: IL,\n    chainCode: IR,\n  };\n}\n\n/**\n * @category hd-wallet\n */\nexport function derivePathFromKey(path: Bip32Path<5>, key: KeyTreeNode): KeyTreeNode {\n  const segments = path === '' ? [] : fromString(path).toPathArray();\n  segments.forEach((segment, i) => {\n    if (segment < HARDENED_OFFSET) {\n      throw new DerivationError(`Segment #${i + 1} is not hardened`);\n    }\n  });\n\n  return segments.reduce((parentKey, segment) => deriveChild(parentKey, segment), key);\n}\n\n/**\n * @category hd-wallet\n */\nexport function getMasterKeyFromSeed(seed: Uint8Array): KeyTreeNode {\n  const I = hmac(seed, ED25519_CURVE);\n  const IL = I.slice(0, 32);\n  const IR = I.slice(32);\n  return {\n    secretKey: IL,\n    chainCode: IR,\n  };\n}\n\n/**\n * @category hd-wallet\n */\nexport function derivePathFromSeed(path: 'm' | `m/${Bip32Path<5>}`, seed: Uint8Array): KeyTreeNode {\n  if (!['m', 'm/'].includes(path.slice(0, 2))) {\n    throw new DerivationError('Root element is required');\n  }\n  const masterKey = getMasterKeyFromSeed(seed);\n  return derivePathFromKey(path.slice(2) as Bip32Path<5>, masterKey);\n}\n\nfunction formatAccount(keys: nacl.SignKeyPair): Account {\n  const { secretKey, publicKey } = keys;\n  return {\n    secretKey: Buffer.from(secretKey).toString('hex'),\n    publicKey: encode(publicKey, Encoding.AccountAddress),\n  };\n}\n\n/**\n * @category hd-wallet\n */\nexport function getKeyPair(secretKey: Uint8Array): nacl.SignKeyPair {\n  return nacl.sign.keyPair.fromSeed(secretKey);\n}\n\n/**\n * @category hd-wallet\n */\nexport function generateSaveHDWalletFromSeed(seed: Uint8Array, password: string): HDWallet {\n  const walletKey = derivePathFromSeed('m/44h/457h', seed);\n  return {\n    secretKey: Buffer.from(encryptKey(password, walletKey.secretKey)).toString('hex'),\n    chainCode: Buffer.from(encryptKey(password, walletKey.chainCode)).toString('hex'),\n  };\n}\n\n/**\n * @category hd-wallet\n */\nexport function getSaveHDWalletAccounts(\n  saveHDWallet: HDWallet,\n  password: string,\n  accountCount: number,\n): Account[] {\n  const walletKey = {\n    secretKey: decryptKey(password, Buffer.from(saveHDWallet.secretKey, 'hex')),\n    chainCode: decryptKey(password, Buffer.from(saveHDWallet.chainCode, 'hex')),\n  };\n  return (new Array(accountCount)).fill(undefined)\n    .map((_, idx) => formatAccount(getKeyPair(derivePathFromKey(`${idx}h/0h/0h`, walletKey).secretKey)));\n}\n\n/**\n * @category hd-wallet\n */\nexport const getHdWalletAccountFromSeed = (\n  seed: Uint8Array,\n  accountIdx: number,\n): Account & { idx: number } => {\n  const walletKey = derivePathFromSeed('m/44h/457h', seed);\n  const derived = derivePathFromKey(`${accountIdx}h/0h/0h`, walletKey);\n  const keyPair = getKeyPair(derived.secretKey);\n  return {\n    ...formatAccount(keyPair),\n    idx: accountIdx,\n  };\n};\n","/**\n * Aens methods - routines to interact with the æternity naming system\n *\n * The high-level description of the naming system is\n * https://github.com/aeternity/protocol/blob/master/AENS.md in the protocol\n * repository.\n */\n\nimport BigNumber from 'bignumber.js';\nimport { genSalt } from './utils/crypto';\nimport { commitmentHash, isAuctionName } from './tx/builder/helpers';\nimport {\n  CLIENT_TTL, NAME_TTL, Tag, AensName,\n} from './tx/builder/constants';\nimport { ArgumentError } from './utils/errors';\nimport { Encoded } from './utils/encoder';\nimport { sendTransaction, SendTransactionOptions, getName } from './chain';\nimport { buildTxAsync, BuildTxOptions } from './tx/builder';\nimport { TransformNodeType } from './Node';\nimport { NameEntry, NamePointer } from './apis/node';\nimport AccountBase from './account/Base';\nimport { AddressEncodings } from './tx/builder/field-types/address';\n\ninterface KeyPointers {\n  [key: string]: Encoded.Generic<AddressEncodings>;\n}\n\n/**\n * Revoke a name\n * @category AENS\n * @param name - Name hash\n * @param options - Options\n * @param options.onAccount - Make operation on specific account from sdk (you pass\n * publickKey) or using provided KeyPair(Can be keypair object or MemoryAccount)\n * @param options.fee - fee\n * @param options.ttl - ttl\n * @param options.nonce - nonce\n * @returns Transaction result\n * @example\n * ```js\n * const name = 'test.chain'\n * const nameObject = await sdkInstance.aensQuery(name)\n *\n * await sdkInstance.aensRevoke(name, { fee, ttl , nonce })\n * // or\n * await nameObject.revoke({ fee, ttl, nonce })\n * ```\n */\nexport async function aensRevoke(\n  name: AensName,\n  options: AensRevokeOptions,\n): ReturnType<typeof sendTransaction> {\n  const nameRevokeTx = await buildTxAsync({\n    ...options,\n    tag: Tag.NameRevokeTx,\n    nameId: name,\n    accountId: options.onAccount.address,\n  });\n  return sendTransaction(nameRevokeTx, options);\n}\n\ninterface AensRevokeOptions extends\n  BuildTxOptions<Tag.NameRevokeTx, 'nameId' | 'accountId' | 'onNode'>,\n  SendTransactionOptions {}\n\n/**\n * Update a name\n * @category AENS\n * @param name - AENS name\n * @param pointers - Map of pointer keys to corresponding addresses\n * @param options - Options\n * @param options.extendPointers - Get the pointers from the node and merge with provided\n * ones. Pointers with the same type will be overwritten\n * @param options.onAccount - Make operation on specific account from sdk (you\n * pass publickKey) or using provided KeyPair(Can be keypair object or MemoryAccount)\n * @param options.fee - fee\n * @param options.ttl - ttl\n * @param options.nonce - nonce\n * @param options.nameTtl - Name ttl represented in number of\n * blocks (Max value is 50000 blocks)\n * @param options.clientTtl=84600 a suggestion as to how long any\n * clients should cache this information\n * @throws Invalid pointer array error\n * @example\n * ```js\n * const name = 'test.chain'\n * const pointersArray = ['ak_asd23dasdas...,' 'ct_asdf34fasdasd...']\n * const nameObject = await sdkInstance.aensQuery(name)\n *\n * await sdkInstance.aensUpdate(name, pointersArray, { nameTtl, ttl, fee, nonce, clientTtl })\n * // or\n * await nameObject.update(pointers, { nameTtl, ttl, fee, nonce, clientTtl })\n * ```\n */\nexport async function aensUpdate(\n  name: AensName,\n  pointers: KeyPointers,\n  { extendPointers, ...options }: AensUpdateOptions,\n): ReturnType<typeof sendTransaction> {\n  const allPointers = {\n    ...extendPointers === true && Object.fromEntries(\n      (await getName(name, options)).pointers.map(({ key, id }) => [key, id]),\n    ),\n    ...pointers,\n  };\n\n  const nameUpdateTx = await buildTxAsync({\n    clientTtl: CLIENT_TTL,\n    nameTtl: NAME_TTL,\n    ...options,\n    tag: Tag.NameUpdateTx,\n    nameId: name,\n    accountId: options.onAccount.address,\n    pointers: Object.entries(allPointers)\n      .map(([key, id]: [string, Encoded.Generic<AddressEncodings>]) => ({ key, id })),\n  });\n\n  return sendTransaction(nameUpdateTx, options);\n}\n\ninterface AensUpdateOptions extends\n  BuildTxOptions<Tag.NameUpdateTx, 'nameId' | 'accountId' | 'pointers' | 'clientTtl' | 'nameTtl' | 'onNode'>,\n  SendTransactionOptions {\n  extendPointers?: boolean;\n  clientTtl?: number;\n  nameTtl?: number;\n}\n\n/**\n * Transfer a domain to another account\n * @category AENS\n * @param name - AENS name\n * @param account - Recipient account publick key\n * @param options - Options\n * @param options.onAccount - Make operation on specific account from sdk (you pass\n * publickKey) or using provided KeyPair(Can be keypair object or MemoryAccount)\n * @param options.fee - fee\n * @param options.ttl - ttl\n * @param options.nonce - nonce\n * @returns Transaction result\n * @example\n * ```js\n * const name = 'test.chain'\n * const recipientPub = 'ak_asd23dasdas...'\n * const nameObject = await sdkInstance.aensQuery(name)\n *\n * await sdkInstance.aensTransfer(name, recipientPub, { ttl, fee, nonce })\n * // or\n * await nameObject.transfer(recipientPub, { ttl, fee, nonce })\n * ```\n */\nexport async function aensTransfer(\n  name: AensName,\n  account: Encoded.AccountAddress,\n  options: AensTransferOptions,\n): ReturnType<typeof sendTransaction> {\n  const nameTransferTx = await buildTxAsync({\n    ...options,\n    tag: Tag.NameTransferTx,\n    nameId: name,\n    accountId: options.onAccount.address,\n    recipientId: account,\n  });\n\n  return sendTransaction(nameTransferTx, options);\n}\n\ninterface AensTransferOptions extends\n  BuildTxOptions<Tag.NameTransferTx, 'nameId' | 'accountId' | 'recipientId' | 'onNode'>,\n  SendTransactionOptions {}\n\n/**\n * Query the AENS name info from the node\n * and return the object with info and predefined functions for manipulating name\n * @category AENS\n * @param name - AENS name\n * @param opt - Options\n * @returns\n * @example\n * ```js\n * const nameObject = sdkInstance.aensQuery('test.chain')\n * console.log(nameObject)\n * {\n *  id, // name hash\n *  pointers, // array of pointers\n *  update, // Update name function\n *  extendTtl, // Extend Ttl name function\n *  transfer, // Transfer name function\n *  revoke // Revoke name function\n * }\n * ```\n */\nexport async function aensQuery(\n  name: AensName,\n  opt: Parameters<typeof getName>[1] & Parameters<typeof aensUpdate>[2]\n  & Parameters<typeof aensTransfer>[2],\n): Promise<Readonly<\n  TransformNodeType<NameEntry> & {\n    id: Encoded.Name;\n    owner: Encoded.AccountAddress;\n    pointers: KeyPointers | NamePointer[];\n    ttl: number;\n    update: (\n      pointers: KeyPointers,\n      options?: Omit<Parameters<typeof aensQuery>[1], 'onNode' | 'onCompiler' | 'onAccount'> & {\n        onAccount?: AccountBase;\n      }\n    ) => ReturnType<typeof aensUpdate> & ReturnType<typeof aensQuery>;\n    transfer: (\n      account: Encoded.AccountAddress,\n      options?: Parameters<typeof aensQuery>[1]\n    ) => ReturnType<typeof aensUpdate> & ReturnType<typeof aensQuery>;\n    revoke: (options?: Omit<Parameters<typeof aensRevoke>[1], 'onNode' | 'onCompiler' | 'onAccount'> & {\n      onAccount?: AccountBase;\n    }\n    ) => ReturnType<typeof aensRevoke>;\n    extendTtl: (\n      nameTtl: number,\n      options?: Omit<Parameters<typeof aensQuery>[1], 'onNode' | 'onCompiler' | 'onAccount'>\n    ) => ReturnType<typeof aensUpdate> & ReturnType<typeof aensQuery>;\n  }\n  >> {\n  const nameEntry = await getName(name, opt);\n  return Object.freeze({\n    ...nameEntry,\n    id: nameEntry.id as Encoded.Name,\n    owner: nameEntry.owner as Encoded.AccountAddress,\n    async update(pointers, options) {\n      return {\n        ...await aensUpdate(name, pointers, { ...opt, ...options }),\n        ...await aensQuery(name, { ...opt, ...options }),\n      };\n    },\n    async transfer(account, options) {\n      return {\n        ...await aensTransfer(name, account, { ...opt, ...options }),\n        ...await aensQuery(name, { ...opt, ...options }),\n      };\n    },\n    async revoke(options) {\n      return aensRevoke(name, { ...opt, ...options });\n    },\n    async extendTtl(nameTtl = NAME_TTL, options = {}) {\n      if (nameTtl > NAME_TTL || nameTtl <= 0) {\n        throw new ArgumentError('nameTtl', `a number between 1 and ${NAME_TTL} blocks`, nameTtl);\n      }\n\n      return {\n        ...await aensUpdate(name, {}, {\n          ...opt, ...options, nameTtl, extendPointers: true,\n        }),\n        ...await aensQuery(name, { ...opt, ...options }),\n      };\n    },\n  });\n}\n\n/**\n * Claim a previously preclaimed registration. This can only be done after the\n * preclaim step\n * @category AENS\n * @param name - AENS name\n * @param salt - Salt from pre-claim, or 0 if it's a bid\n * @param options - options\n * @param options.onAccount - Make operation on specific account from sdk (you pass\n * publickKey) or using provided KeyPair(Can be keypair object or MemoryAccount)\n * @param options.fee - fee\n * @param options.ttl - ttl\n * @param options.nonce - nonce\n * @param options.nameFee - Name Fee (By default calculated by sdk)\n * @returns the result of the claim\n * @example\n * ```js\n * const name = 'test.chain'\n * const salt = preclaimResult.salt // salt from pre-claim transaction\n *\n * await sdkInstance.aensClaim(name, salt, { ttl, fee, nonce, nameFee })\n * ```\n */\nexport async function aensClaim(\n  name: AensName,\n  salt: number,\n  options: AensClaimOptions,\n): Promise<AensClaimReturnType> {\n  const claimTx = await buildTxAsync({\n    ...options,\n    tag: Tag.NameClaimTx,\n    accountId: options.onAccount.address,\n    nameSalt: salt,\n    name,\n  });\n\n  const result = await sendTransaction(claimTx, options);\n  if (!isAuctionName(name)) {\n    const nameInter = result.blockHeight != null && result.blockHeight > 0\n      ? await aensQuery(name, options)\n      : {};\n    return Object.assign(result, nameInter);\n  }\n  return result;\n}\n\ntype AensClaimOptionsType = BuildTxOptions<Tag.NameClaimTx, 'accountId' | 'nameSalt' | 'name'>\n& SendTransactionOptions & Parameters<typeof aensQuery>[1];\ninterface AensClaimOptions extends AensClaimOptionsType {}\ninterface AensClaimReturnType extends\n  Awaited<ReturnType<typeof sendTransaction>>,\n  Partial<Awaited<ReturnType<typeof aensQuery>>> {}\n\n/**\n * Preclaim a name. Sends a hash of the name and a random salt to the node\n * @category AENS\n * @param name - AENS name\n * @param options - Options\n * @param options.onAccount - Make operation on specific account from sdk (you pass\n * publickKey) or using provided KeyPair(Can be keypair object or MemoryAccount)\n * @param options.fee - fee\n * @param options.ttl - ttl\n * @param options.nonce - nonce\n * @example\n * ```js\n * const name = 'test.chain'\n * const salt = preclaimResult.salt // salt from pre-claim transaction\n *\n * await sdkInstance.aensPreclaim(name, { ttl, fee, nonce })\n * {\n *   ...transactionResult,\n *   claim, // Claim function (options={}) => claimTransactionResult\n *   salt,\n *   commitmentId\n * }\n * ```\n */\nexport async function aensPreclaim(name: AensName, options: AensPreclaimOptions): Promise<Readonly<\nAwaited<ReturnType<typeof sendTransaction>> & {\n  salt: number;\n  commitmentId: string;\n  claim: (opts?: Parameters<typeof aensClaim>[2]) => ReturnType<typeof aensClaim>;\n}\n>> {\n  const salt = genSalt();\n  const commitmentId = commitmentHash(name, salt);\n\n  const preclaimTx = await buildTxAsync({\n    ...options,\n    tag: Tag.NamePreclaimTx,\n    accountId: options.onAccount.address,\n    commitmentId,\n  });\n\n  return Object.freeze({\n    ...await sendTransaction(preclaimTx, options),\n    salt,\n    commitmentId,\n    async claim(opts?: Parameters<typeof aensClaim>[2]) {\n      const { version, ...otherOptions } = options;\n      return aensClaim(name, salt, { ...otherOptions, ...opts });\n    },\n  });\n}\n\ninterface AensPreclaimOptions extends\n  BuildTxOptions<Tag.NamePreclaimTx, 'accountId' | 'commitmentId' | 'onNode'>,\n  SendTransactionOptions,\n  Omit<AensClaimOptions, 'version'> {}\n\n/**\n * Bid to name auction\n * @category AENS\n * @param name - Domain name\n * @param nameFee - Name fee (bid fee)\n * @param options - Options\n * @param options.onAccount - Make operation on specific account from sdk (you pass\n * publickKey) or using provided KeyPair(Can be keypair object or MemoryAccount)\n * @param options.fee - fee\n * @param options.ttl - ttl\n * @param options.nonce - nonce\n * @returns Transaction result\n * @example\n * ```js\n * const name = 'test.chain'\n * const bidFee = computeBidFee(name, { startFee, increment: 0.42 })\n *\n * await sdkInstance.aensBid(name, 213109412839123, { ttl, fee, nonce })\n * ```\n */\nexport async function aensBid(\n  name: AensName,\n  nameFee: number | string | BigNumber,\n  options: Omit<Parameters<typeof aensClaim>[2], 'nameFee'>,\n): ReturnType<typeof aensClaim> {\n  return aensClaim(name, 0, { ...options, nameFee });\n}\n","/**\n * Contract module - routines to interact with the æternity contract\n *\n * High level documentation of the contracts are available at\n * https://github.com/aeternity/protocol/tree/master/contracts and\n */\n\nimport { Encoder as Calldata } from '@aeternity/aepp-calldata';\nimport { DRY_RUN_ACCOUNT } from '../tx/builder/schema';\nimport { Tag, AensName } from '../tx/builder/constants';\nimport {\n  buildContractIdByContractTx, unpackTx, buildTxAsync, BuildTxOptions, buildTxHash,\n} from '../tx/builder';\nimport { decode, Encoded } from '../utils/encoder';\nimport {\n  MissingContractDefError,\n  MissingContractAddressError,\n  InactiveContractError,\n  BytecodeMismatchError,\n  DuplicateContractError,\n  MissingFunctionNameError,\n  InvalidMethodInvocationError,\n  NotPayableFunctionError,\n  TypeError,\n  NodeInvocationError,\n  IllegalArgumentError,\n  NoSuchContractFunctionError,\n  MissingEventDefinitionError,\n  AmbiguousEventDefinitionError,\n  UnexpectedTsError,\n  InternalError,\n  NoWalletConnectedError,\n  ContractError,\n} from '../utils/errors';\nimport { hash as calcHash } from '../utils/crypto';\nimport {\n  ContractCallObject as NodeContractCallObject, Event as NodeEvent,\n} from '../apis/node';\nimport CompilerBase, { Aci } from './compiler/Base';\nimport Node, { TransformNodeType } from '../Node';\nimport {\n  getAccount, getContract, getContractByteCode, resolveName, txDryRun, sendTransaction,\n  SendTransactionOptions,\n} from '../chain';\nimport AccountBase from '../account/Base';\nimport { TxUnpacked } from '../tx/builder/schema.generated';\nimport { isAccountNotFoundError } from '../utils/other';\n\ntype ContractAci = NonNullable<Aci[0]['contract']>;\ntype FunctionAci = ContractAci['functions'][0];\n\ninterface Event extends NodeEvent {\n  address: Encoded.ContractAddress;\n  data: Encoded.ContractBytearray;\n}\n\nexport interface ContractCallObject extends TransformNodeType<NodeContractCallObject> {\n  returnValue: Encoded.ContractBytearray;\n  log: Event[];\n}\n\ninterface DecodedEvent {\n  name: string;\n  args: unknown[];\n  contract: {\n    name: string;\n    address: Encoded.ContractAddress;\n  };\n}\n\ntype TxData = Awaited<ReturnType<typeof sendTransaction>>;\n\ninterface SendAndProcessReturnType {\n  result?: ContractCallObject;\n  hash: TxData['hash'];\n  tx: TxUnpacked & { tag: Tag.SignedTx | Tag.ContractCallTx | Tag.ContractCreateTx };\n  txData: TxData;\n  rawTx: Encoded.Transaction;\n}\n\nexport interface ContractMethodsBase { [key: string]: (...args: any[]) => any }\n\ntype MethodsToContractApi<M extends ContractMethodsBase> = {\n  [Name in keyof M]:\n  M[Name] extends (...args: infer Args) => any\n    ? (...args: [\n      ...Args,\n      ...[] | [Name extends 'init'\n        ? Parameters<Contract<M>['$deploy']>[1] : Parameters<Contract<M>['$call']>[2]],\n    ]) => ReturnType<Contract<M>['$call']>\n    : never\n};\n\ntype ContractWithMethods<M extends ContractMethodsBase> = Contract<M> & MethodsToContractApi<M>;\n\ntype MethodNames<M extends ContractMethodsBase> = keyof M & string | 'init';\n\ntype MethodParameters<M extends ContractMethodsBase, Fn extends MethodNames<M>> =\n  Fn extends 'init'\n    ? M extends { init: any } ? Parameters<M['init']> : []\n    : Parameters<M[Fn]>;\n\ninterface GetContractNameByEventOptions {\n  contractAddressToName?: { [key: Encoded.ContractAddress]: string };\n}\n\ninterface GetCallResultByHashReturnType<M extends ContractMethodsBase, Fn extends MethodNames<M>> {\n  decodedResult: ReturnType<M[Fn]>;\n  decodedEvents?: ReturnType<Contract<M>['$decodeEvents']>;\n}\n\n/**\n * Generate contract ACI object with predefined js methods for contract usage - can be used for\n * creating a reference to already deployed contracts\n * @category contract\n * @param options - Options object\n * @returns JS Contract API\n * @example\n * ```js\n * const contractIns = await aeSdk.initializeContract({ sourceCode })\n * await contractIns.$deploy([321]) or await contractIns.init(321)\n * const callResult = await contractIns.$call('setState', [123])\n * const staticCallResult = await contractIns.$call('setState', [123], { callStatic: true })\n * ```\n * Also you can call contract like: `await contractIns.setState(123, options)`\n * Then sdk decide to make on-chain or static call (dry-run API) transaction based on function is\n * stateful or not\n */\nclass Contract<M extends ContractMethodsBase> {\n  /**\n   * Compile contract\n   * @returns bytecode\n   */\n  async $compile(): Promise<Encoded.ContractBytearray> {\n    if (this.$options.bytecode != null) return this.$options.bytecode;\n    if (this.$options.onCompiler == null) throw new IllegalArgumentError('Can\\'t compile without compiler');\n    if (this.$options.sourceCode != null) {\n      const { bytecode } = await this.$options.onCompiler\n        .compileBySourceCode(this.$options.sourceCode, this.$options.fileSystem);\n      this.$options.bytecode = bytecode;\n    }\n    if (this.$options.sourceCodePath != null) {\n      const { bytecode } = await this.$options.onCompiler.compile(this.$options.sourceCodePath);\n      this.$options.bytecode = bytecode;\n    }\n    if (this.$options.bytecode == null) {\n      throw new IllegalArgumentError('Can\\'t compile without sourceCode and sourceCodePath');\n    }\n    return this.$options.bytecode;\n  }\n\n  #getCallResult<Fn extends MethodNames<M>>(\n    { returnType, returnValue, log }: ContractCallObject,\n    fnName: Fn,\n    transaction: Encoded.Transaction | undefined,\n    options: Parameters<Contract<M>['$decodeEvents']>[1],\n  ): GetCallResultByHashReturnType<M, Fn> {\n    let message: string;\n    switch (returnType) {\n      case 'ok': {\n        const fnAci = this.#getFunctionAci(fnName);\n        return {\n          decodedResult: this._calldata.decode(this._name, fnAci.name, returnValue),\n          decodedEvents: this.$decodeEvents(log, options),\n        };\n      }\n      case 'revert':\n        message = this._calldata.decodeFateString(returnValue);\n        break;\n      case 'error':\n        message = decode(returnValue).toString();\n        break;\n      default:\n        throw new InternalError(`Unknown return type: ${returnType}`);\n    }\n    throw new NodeInvocationError(message, transaction);\n  }\n\n  async #sendAndProcess<Fn extends MethodNames<M>>(\n    tx: Encoded.Transaction,\n    fnName: Fn,\n    options: SendTransactionOptions & Parameters<Contract<M>['$getCallResultByTxHash']>[2],\n  ): Promise<SendAndProcessReturnType & Partial<GetCallResultByHashReturnType<M, Fn>>> {\n    const txData = await sendTransaction(tx, { ...this.$options, ...options });\n    return {\n      hash: txData.hash,\n      tx: unpackTx<Tag.ContractCallTx | Tag.ContractCreateTx>(txData.rawTx),\n      txData,\n      rawTx: txData.rawTx,\n      ...txData.blockHeight != null && (\n        await this.$getCallResultByTxHash(txData.hash, fnName, options)\n      ),\n    };\n  }\n\n  async $getCallResultByTxHash<Fn extends MethodNames<M>>(\n    hash: Encoded.TxHash,\n    fnName: Fn,\n    options?: Parameters<Contract<M>['$decodeEvents']>[1],\n  ): Promise<GetCallResultByHashReturnType<M, Fn> & { result: ContractCallObject }> {\n    const { callInfo } = await this.$options.onNode.getTransactionInfoByHash(hash);\n    if (callInfo == null) {\n      throw new ContractError(`callInfo is not available for transaction ${hash}`);\n    }\n    const callInfoTyped = callInfo as ContractCallObject;\n    return {\n      ...this.#getCallResult(callInfoTyped, fnName, undefined, options),\n      result: callInfoTyped,\n    };\n  }\n\n  async _estimateGas<Fn extends MethodNames<M>>(\n    name: Fn,\n    params: MethodParameters<M, Fn>,\n    options: Omit<Parameters<Contract<M>['$call']>[2], 'callStatic'> = {},\n  ): Promise<number> {\n    const { result } = await this.$call(name, params, { ...options, callStatic: true });\n    if (result == null) throw new UnexpectedTsError();\n    const { gasUsed } = result;\n    // taken from https://github.com/aeternity/aepp-sdk-js/issues/1286#issuecomment-977814771\n    return Math.floor(gasUsed * 1.25);\n  }\n\n  /**\n   * Deploy contract\n   * @param params - Contract init function arguments array\n   * @param options - Options\n   * @returns deploy info\n   */\n  async $deploy(\n    params: MethodParameters<M, 'init'>,\n    options?: Parameters<Contract<M>['$call']>[2]\n    & Partial<BuildTxOptions<Tag.ContractCreateTx, 'ownerId' | 'code' | 'callData'>>,\n  ): Promise<Omit<SendAndProcessReturnType, 'hash'> & {\n      transaction?: Encoded.TxHash;\n      owner?: Encoded.AccountAddress;\n      address?: Encoded.ContractAddress;\n      decodedEvents?: ReturnType<Contract<M>['$decodeEvents']>;\n    }> {\n    const { callStatic, ...opt } = { ...this.$options, ...options };\n    if (this.$options.bytecode == null) await this.$compile();\n    if (callStatic === true) return this.$call('init', params, { ...opt, callStatic });\n    if (this.$options.address != null) throw new DuplicateContractError();\n\n    if (opt.onAccount == null) throw new IllegalArgumentError('Can\\'t deploy without account');\n    const ownerId = opt.onAccount.address;\n    if (this.$options.bytecode == null) throw new IllegalArgumentError('Can\\'t deploy without bytecode');\n    const tx = await buildTxAsync({\n      ...opt,\n      tag: Tag.ContractCreateTx,\n      gasLimit: opt.gasLimit ?? await this._estimateGas('init', params, opt),\n      callData: this._calldata.encode(this._name, 'init', params),\n      code: this.$options.bytecode,\n      ownerId,\n    });\n    const { hash, ...other } = await this.#sendAndProcess(\n      tx,\n      'init',\n      { ...opt, onAccount: opt.onAccount },\n    );\n    this.$options.address = buildContractIdByContractTx(tx);\n    return {\n      ...other,\n      ...other.result?.log != null && {\n        decodedEvents: this.$decodeEvents(other.result.log, opt),\n      },\n      owner: ownerId,\n      transaction: hash,\n      address: this.$options.address,\n    };\n  }\n\n  /**\n   * Get function schema from contract ACI object\n   * @param name - Function name\n   * @returns function ACI\n   */\n  #getFunctionAci(name: string): FunctionAci {\n    const fn = this.#aciContract.functions.find(\n      (f: { name: string }) => f.name === name,\n    );\n    if (fn != null) {\n      return fn;\n    }\n    if (name === 'init') {\n      return {\n        arguments: [], name: 'init', payable: false, returns: 'unit', stateful: true,\n      };\n    }\n    throw new NoSuchContractFunctionError(`Function ${name} doesn't exist in contract`);\n  }\n\n  /**\n   * Call contract function\n   * @param fn - Function name\n   * @param params - Array of function arguments\n   * @param options - Array of function arguments\n   * @returns CallResult\n   */\n  async $call<Fn extends MethodNames<M>>(\n    fn: Fn,\n    params: MethodParameters<M, Fn>,\n    options: Partial<BuildTxOptions<Tag.ContractCallTx, 'callerId' | 'contractId' | 'callData'>>\n    & Parameters<Contract<M>['$decodeEvents']>[1]\n    & Omit<SendTransactionOptions, 'onAccount' | 'onNode'>\n    & Omit<Parameters<typeof txDryRun>[2], 'onNode'>\n    & { onAccount?: AccountBase; onNode?: Node; callStatic?: boolean } = {},\n  ): Promise<SendAndProcessReturnType & Partial<GetCallResultByHashReturnType<M, Fn>>> {\n    const { callStatic, top, ...opt } = { ...this.$options, ...options };\n    const fnAci = this.#getFunctionAci(fn);\n    const contractId = this.$options.address;\n    const { onNode } = opt;\n\n    if (fn == null) throw new MissingFunctionNameError();\n    if (fn === 'init' && callStatic !== true) throw new InvalidMethodInvocationError('\"init\" can be called only via dryRun');\n    if (fn !== 'init' && opt.amount != null && Number(opt.amount) > 0 && !fnAci.payable) {\n      throw new NotPayableFunctionError(opt.amount, fn);\n    }\n\n    let callerId;\n    try {\n      if (opt.onAccount == null) throw new InternalError('Use fallback account');\n      callerId = opt.onAccount.address;\n    } catch (error) {\n      const useFallbackAccount = callStatic === true && (\n        (error instanceof TypeError && error.message === 'Account should be an address (ak-prefixed string), or instance of AccountBase, got undefined instead')\n        || (error instanceof NoWalletConnectedError)\n        || (error instanceof InternalError && error.message === 'Use fallback account')\n      );\n      if (!useFallbackAccount) throw error;\n      callerId = DRY_RUN_ACCOUNT.pub;\n    }\n    const callData = this._calldata.encode(this._name, fn, params);\n\n    if (callStatic === true) {\n      if (opt.nonce == null) {\n        const topOption = top != null && { [typeof top === 'number' ? 'height' : 'hash']: top };\n        const account = await getAccount(callerId, { ...topOption, onNode }).catch((error) => {\n          if (!isAccountNotFoundError(error)) throw error;\n          return { kind: 'basic', nonce: 0 };\n        });\n        opt.nonce = account.kind === 'generalized' ? 0 : account.nonce + 1;\n      }\n\n      const txOpt = { ...opt, onNode, callData };\n      let tx;\n      if (fn === 'init') {\n        if (this.$options.bytecode == null) throw new IllegalArgumentError('Can\\'t dry-run \"init\" without bytecode');\n        tx = await buildTxAsync({\n          ...txOpt, tag: Tag.ContractCreateTx, code: this.$options.bytecode, ownerId: callerId,\n        });\n      } else {\n        if (contractId == null) throw new MissingContractAddressError('Can\\'t dry-run contract without address');\n        tx = await buildTxAsync({\n          ...txOpt, tag: Tag.ContractCallTx, callerId, contractId,\n        });\n      }\n\n      const { callObj, ...dryRunOther } = await txDryRun(tx, callerId, { ...opt, top });\n      if (callObj == null) {\n        throw new InternalError(`callObj is not available for transaction ${tx}`);\n      }\n      const callInfoTyped = callObj as ContractCallObject;\n      return {\n        ...dryRunOther,\n        ...this.#getCallResult(callInfoTyped, fn, tx, opt),\n        tx: unpackTx(tx),\n        result: callInfoTyped,\n        rawTx: tx,\n        hash: buildTxHash(tx),\n        txData: undefined as any,\n      };\n    }\n\n    if (top != null) throw new IllegalArgumentError('Can\\'t handle `top` option in on-chain contract call');\n    if (contractId == null) throw new MissingContractAddressError('Can\\'t call contract without address');\n    const tx = await buildTxAsync({\n      ...opt,\n      tag: Tag.ContractCallTx,\n      gasLimit: opt.gasLimit ?? await this._estimateGas(fn, params, opt),\n      callerId,\n      contractId,\n      callData,\n    });\n    if (opt.onAccount == null) throw new IllegalArgumentError('Can\\'t call contract on chain without account');\n    return this.#sendAndProcess(tx, fn, { ...opt, onAccount: opt.onAccount });\n  }\n\n  /**\n   * @param ctAddress - Contract address that emitted event\n   * @param nameHash - Hash of emitted event name\n   * @param options - Options\n   * @returns Contract name\n   * @throws {@link MissingEventDefinitionError}\n   * @throws {@link AmbiguousEventDefinitionError}\n   */\n  #getContractNameByEvent(\n    ctAddress: Encoded.ContractAddress,\n    nameHash: BigInt,\n    { contractAddressToName }: GetContractNameByEventOptions,\n  ): string {\n    const addressToName = { ...this.$options.contractAddressToName, ...contractAddressToName };\n    if (addressToName[ctAddress] != null) return addressToName[ctAddress];\n\n    // TODO: consider using a third-party library\n    const isEqual = (a: any, b: any): boolean => JSON.stringify(a) === JSON.stringify(b);\n\n    const contracts = this._aci\n      .map(({ contract }) => contract)\n      .filter((contract) => contract?.event) as ContractAci[];\n    const matchedEvents = contracts\n      .map((contract) => [contract.name, contract.event.variant])\n      .map(([name, events]) => events.map((event: {}) => (\n        [name, Object.keys(event)[0], Object.values(event)[0]]\n      )))\n      .flat()\n      .filter(([, eventName]) => BigInt(`0x${calcHash(eventName).toString('hex')}`) === nameHash)\n      .filter(([, , type], idx, arr) => !arr.slice(0, idx).some((el) => isEqual(el[2], type)));\n    switch (matchedEvents.length) {\n      case 0: throw new MissingEventDefinitionError(nameHash.toString(), ctAddress);\n      case 1: return matchedEvents[0][0];\n      default: throw new AmbiguousEventDefinitionError(ctAddress, matchedEvents);\n    }\n  }\n\n  /**\n   * Decode Events\n   * @param events - Array of encoded events (callRes.result.log)\n   * @param options - Options\n   * @returns DecodedEvents\n   */\n  $decodeEvents(\n    events: Event[],\n    { omitUnknown, ...opt }: { omitUnknown?: boolean } & GetContractNameByEventOptions = {},\n  ): DecodedEvent[] {\n    return events\n      .map((event) => {\n        const topics = event.topics.map((t: string | number) => BigInt(t));\n        let contractName;\n        try {\n          contractName = this.#getContractNameByEvent(event.address, topics[0], opt);\n        } catch (error) {\n          if ((omitUnknown ?? false) && error instanceof MissingEventDefinitionError) return null;\n          throw error;\n        }\n        const decoded = this._calldata.decodeEvent(contractName, event.data, topics);\n        const [name, args] = Object.entries(decoded)[0];\n        return {\n          name,\n          args,\n          contract: {\n            name: contractName,\n            address: event.address,\n          },\n        };\n      }).filter((e: DecodedEvent | null): e is DecodedEvent => e != null);\n  }\n\n  static async initialize<M extends ContractMethodsBase>(\n    {\n      onCompiler,\n      onNode,\n      bytecode,\n      aci,\n      address,\n      sourceCodePath,\n      sourceCode,\n      fileSystem,\n      validateBytecode,\n      ...otherOptions\n    }: Omit<ConstructorParameters<typeof Contract>[0], 'aci' | 'address'> & {\n      validateBytecode?: boolean;\n      aci?: Aci;\n      address?: Encoded.ContractAddress | AensName;\n    },\n  ): Promise<ContractWithMethods<M>> {\n    if (aci == null && onCompiler != null) {\n      let res;\n      if (sourceCodePath != null) res = await onCompiler.compile(sourceCodePath);\n      if (sourceCode != null) res = await onCompiler.compileBySourceCode(sourceCode, fileSystem);\n      if (res != null) {\n        aci = res.aci;\n        bytecode ??= res.bytecode;\n      }\n    }\n    if (aci == null) throw new MissingContractDefError();\n\n    if (address != null) {\n      address = await resolveName(\n        address,\n        'contract_pubkey',\n        { resolveByNode: true, onNode },\n      ) as Encoded.ContractAddress;\n    }\n\n    if (address == null && sourceCode == null && sourceCodePath == null && bytecode == null) {\n      throw new MissingContractAddressError('Can\\'t create instance by ACI without address');\n    }\n\n    if (address != null) {\n      const contract = await getContract(address, { onNode });\n      if (contract.active == null) throw new InactiveContractError(address);\n    }\n\n    if (validateBytecode === true) {\n      if (address == null) throw new MissingContractAddressError('Can\\'t validate bytecode without contract address');\n      const onChanBytecode = (await getContractByteCode(address, { onNode })).bytecode;\n      let isValid = false;\n      if (bytecode != null) isValid = bytecode === onChanBytecode;\n      else if (sourceCode != null) {\n        if (onCompiler == null) throw new IllegalArgumentError('Can\\'t validate bytecode without compiler');\n        isValid = await onCompiler.validateBySourceCode(onChanBytecode, sourceCode, fileSystem);\n      } else if (sourceCodePath != null) {\n        if (onCompiler == null) throw new IllegalArgumentError('Can\\'t validate bytecode without compiler');\n        isValid = await onCompiler.validate(onChanBytecode, sourceCodePath);\n      }\n      if (!isValid) {\n        throw new BytecodeMismatchError((sourceCode ?? sourceCodePath) != null ? 'source code' : 'bytecode');\n      }\n    }\n\n    return new ContractWithMethods<M>({\n      onCompiler,\n      onNode,\n      sourceCode,\n      sourceCodePath,\n      bytecode,\n      aci,\n      address,\n      fileSystem,\n      ...otherOptions,\n    });\n  }\n\n  _aci: Aci;\n\n  #aciContract: ContractAci;\n\n  _name: string;\n\n  _calldata: Calldata;\n\n  $options: Omit<ConstructorParameters<typeof Contract>[0], 'aci'>;\n\n  constructor({ aci, ...otherOptions }: {\n    onCompiler?: CompilerBase;\n    onNode: Node;\n    bytecode?: Encoded.ContractBytearray;\n    aci: Aci;\n    address?: Encoded.ContractAddress;\n    sourceCodePath?: Parameters<CompilerBase['compile']>[0];\n    sourceCode?: Parameters<CompilerBase['compileBySourceCode']>[0];\n    fileSystem?: Parameters<CompilerBase['compileBySourceCode']>[1];\n  } & Parameters<Contract<M>['$deploy']>[1]) {\n    this._aci = aci;\n    const aciLast = aci[aci.length - 1];\n    if (aciLast.contract == null) {\n      throw new IllegalArgumentError(`The last 'aci' item should have 'contract' key, got ${Object.keys(aciLast)} keys instead`);\n    }\n    this.#aciContract = aciLast.contract;\n    this._name = this.#aciContract.name;\n    this._calldata = new Calldata(aci);\n    this.$options = otherOptions;\n\n    /**\n     * Generate proto function based on contract function using Contract ACI schema\n     * All function can be called like:\n     * ```js\n     * await contract.testFunction()\n     * ```\n     * then sdk will decide to use dry-run or send tx\n     * on-chain base on if function stateful or not.\n     * Also, you can manually do that:\n     * ```js\n     * await contract.testFunction({ callStatic: true }) // use call-static (dry-run)\n     * await contract.testFunction({ callStatic: false }) // send tx on-chain\n     * ```\n     */\n    Object.assign(\n      this,\n      Object.fromEntries(this.#aciContract.functions\n        .map(({ name, arguments: aciArgs, stateful }: FunctionAci) => {\n          const callStatic = name !== 'init' && !stateful;\n          return [\n            name,\n            async (...args: any) => {\n              const options = args.length === aciArgs.length + 1 ? args.pop() : {};\n              if (typeof options !== 'object') throw new TypeError(`Options should be an object: ${options}`);\n              if (name === 'init') return this.$deploy(args, { callStatic, ...options });\n              return this.$call(name, args, { callStatic, ...options });\n            },\n          ];\n        })),\n    );\n  }\n}\n\ninterface ContractWithMethodsClass {\n  new <M extends ContractMethodsBase>(\n    options: ConstructorParameters<typeof Contract>[0],\n  ): ContractWithMethods<M>;\n  initialize: typeof Contract['initialize'];\n}\n\n// eslint-disable-next-line @typescript-eslint/no-redeclare\nconst ContractWithMethods: ContractWithMethodsClass = Contract as any;\n\nexport default ContractWithMethods;\n","/**\n * Oracle methods - routines to interact with the æternity oracle system\n *\n * The high-level description of the oracle system is\n * https://github.com/aeternity/protocol/blob/master/ORACLE.md in the protocol\n * repository.\n */\n\nimport { mapObject, pause } from './utils/other';\nimport { oracleQueryId } from './tx/builder/helpers';\nimport { unpackTx, buildTxAsync, BuildTxOptions } from './tx/builder';\nimport {\n  ORACLE_TTL,\n  ORACLE_TTL_TYPES,\n  QUERY_TTL,\n  RESPONSE_TTL,\n} from './tx/builder/schema';\nimport { Tag } from './tx/builder/constants';\nimport { RequestTimedOutError } from './utils/errors';\nimport {\n  decode, encode, Encoded, Encoding,\n} from './utils/encoder';\nimport {\n  _getPollInterval, getHeight, sendTransaction, SendTransactionOptions,\n} from './chain';\nimport Node from './Node';\nimport AccountBase from './account/Base';\n\ntype OracleQueries = Awaited<ReturnType<Node['getOracleQueriesByPubkey']>>['oracleQueries'];\n\n/**\n * Poll for oracle queries\n * @category oracle\n * @param oracleId - Oracle public key\n * @param onQuery - OnQuery callback\n * @param options - Options object\n * @param options.interval - Poll interval(default: 5000)\n * @param options.onNode - Node to use\n * @returns Callback to stop polling function\n */\nexport function pollForQueries(\n  oracleId: Encoded.OracleAddress,\n  onQuery: (query: OracleQueries[number]) => void,\n  { interval, onNode, ...options }: { interval?: number; onNode: Node }\n  & Parameters<typeof _getPollInterval>[1],\n): () => void {\n  interval ??= _getPollInterval('microblock', options);\n  const knownQueryIds = new Set();\n  const checkNewQueries = async (): Promise<void> => {\n    const queries = ((await onNode.getOracleQueriesByPubkey(oracleId)).oracleQueries ?? [])\n      .filter(({ id }) => !knownQueryIds.has(id));\n    queries.forEach((query) => {\n      knownQueryIds.add(query.id);\n      onQuery(query);\n    });\n  };\n\n  let stopped = false;\n\n  // eslint-disable-next-line @typescript-eslint/no-floating-promises\n  (async () => {\n    while (!stopped) { // eslint-disable-line no-unmodified-loop-condition\n      // TODO: allow to handle this error somehow\n      await checkNewQueries().catch(console.error);\n      await pause(interval);\n    }\n  })();\n  return () => { stopped = true; };\n}\n\n/**\n * Poll for oracle query response\n * @category oracle\n * @param oracleId - Oracle public key\n * @param queryId - Oracle Query id\n * @param options - Options object\n * @param options.interval - Poll interval\n * @param options.onNode - Node to use\n * @returns OracleQuery object\n */\nexport async function pollForQueryResponse(\n  oracleId: Encoded.OracleAddress,\n  queryId: Encoded.OracleQueryId,\n  { interval, onNode, ...options }:\n  { interval?: number; onNode: Node } & Parameters<typeof _getPollInterval>[1],\n): Promise<string> {\n  interval ??= _getPollInterval('microblock', options);\n  let height;\n  let ttl;\n  let response;\n  do {\n    ({ response, ttl } = await onNode.getOracleQueryByPubkeyAndQueryId(oracleId, queryId));\n    const responseBuffer = decode(response as Encoded.OracleResponse);\n    if (responseBuffer.length > 0) return responseBuffer.toString();\n    await pause(interval);\n    height = await getHeight({ onNode });\n  } while (ttl >= height);\n  throw new RequestTimedOutError(height);\n}\n\n/**\n * Constructor for OracleQuery Object (helper object for using OracleQuery)\n * @category oracle\n * @param oracleId - Oracle public key\n * @param queryId - Oracle Query id\n * @param options - Options\n * @returns OracleQuery object\n */\nexport async function getQueryObject(\n  oracleId: Encoded.OracleAddress,\n  queryId: Encoded.OracleQueryId,\n  options: RespondToQueryOptions & Parameters<typeof pollForQueryResponse>[2],\n): Promise<GetQueryObjectReturnType> {\n  const record = await options.onNode.getOracleQueryByPubkeyAndQueryId(oracleId, queryId);\n  return {\n    ...record,\n    decodedQuery: decode(record.query as Encoded.OracleQueryId).toString(),\n    decodedResponse: decode(record.response as Encoded.OracleResponse).toString(),\n    respond: async (response, opt) => (\n      // eslint-disable-next-line @typescript-eslint/no-use-before-define\n      respondToQuery(queryId, response, { ...options, ...opt })\n    ),\n    pollForResponse: async (opt) => pollForQueryResponse(oracleId, queryId, { ...options, ...opt }),\n  };\n}\n\ninterface GetQueryObjectReturnType extends Awaited<ReturnType<Node['getOracleQueryByPubkeyAndQueryId']>> {\n  decodedQuery: string;\n  decodedResponse: string;\n  respond: (response: string, options?: Parameters<typeof respondToQuery>[2]) =>\n  ReturnType<typeof respondToQuery>;\n  pollForResponse: (options?: Parameters<typeof pollForQueryResponse>[2]) =>\n  ReturnType<typeof pollForQueryResponse>;\n}\n\n/**\n * Post query to oracle\n * @category oracle\n * @param oracleId - Oracle public key\n * @param query - Oracle query object\n * @param options - Options object\n * @param options.queryTtl - queryTtl Oracle query time to leave\n * @param options.responseTtl - queryFee Oracle query response time to leave\n * @param options.queryFee - queryFee Oracle query fee\n * @param options.fee - fee Transaction fee\n * @param options.ttl - Transaction time to leave\n * @returns Query object\n */\nexport async function postQueryToOracle(\n  oracleId: Encoded.OracleAddress,\n  query: string,\n  options: PostQueryToOracleOptions,\n): Promise<\n  Awaited<ReturnType<typeof sendTransaction>> & Awaited<ReturnType<typeof getQueryObject>>\n  > {\n  options.queryFee ??= (await options.onNode.getOracleByPubkey(oracleId)).queryFee.toString();\n  const senderId = options.onAccount.address;\n\n  const oracleQueryTx = await buildTxAsync({\n    queryTtlType: QUERY_TTL.type,\n    queryTtlValue: QUERY_TTL.value,\n    responseTtlType: RESPONSE_TTL.type,\n    responseTtlValue: RESPONSE_TTL.value,\n    ...options,\n    tag: Tag.OracleQueryTx,\n    oracleId,\n    senderId,\n    query,\n  });\n  const { nonce } = unpackTx(oracleQueryTx, Tag.OracleQueryTx);\n  const queryId = oracleQueryId(senderId, nonce, oracleId);\n  return {\n    ...await sendTransaction(oracleQueryTx, options),\n    ...await getQueryObject(oracleId, queryId, options),\n  };\n}\n\ntype PostQueryToOracleOptionsType = Parameters<typeof sendTransaction>[1]\n& Parameters<typeof getQueryObject>[2]\n& BuildTxOptions<Tag.OracleQueryTx, 'oracleId' | 'senderId' | 'query' | 'queryTtlType' | 'queryTtlValue' | 'responseTtlType' | 'responseTtlValue'>\n& {\n  queryTtlType?: ORACLE_TTL_TYPES;\n  queryTtlValue?: number;\n  responseTtlType?: ORACLE_TTL_TYPES;\n  responseTtlValue?: number;\n};\ninterface PostQueryToOracleOptions extends PostQueryToOracleOptionsType {}\n\n/**\n * Extend oracle ttl\n * @category oracle\n * @param options - Options object\n * @param options.fee - fee Transaction fee\n * @param options.ttl - Transaction time to leave\n * @param options.oracleTtlType - Oracle time to leave for extend\n * @param options.oracleTtlValue - Oracle time to leave for extend\n * @returns Oracle object\n */\nexport async function extendOracleTtl(options: ExtendOracleTtlOptions): Promise<\nAwaited<ReturnType<typeof sendTransaction>> & Awaited<ReturnType<typeof getOracleObject>>\n> {\n  const oracleId = encode(decode(options.onAccount.address), Encoding.OracleAddress);\n  const oracleExtendTx = await buildTxAsync({\n    oracleTtlType: ORACLE_TTL.type,\n    oracleTtlValue: ORACLE_TTL.value,\n    ...options,\n    tag: Tag.OracleExtendTx,\n    oracleId,\n  });\n  return {\n    ...await sendTransaction(oracleExtendTx, options),\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    ...await getOracleObject(oracleId, options),\n  };\n}\n\ntype ExtendOracleTtlOptionsType = SendTransactionOptions & Parameters<typeof getOracleObject>[1]\n& BuildTxOptions<Tag.OracleExtendTx, 'oracleTtlType' | 'oracleTtlValue' | 'callerId' | 'oracleId'>\n& { oracleTtlType?: ORACLE_TTL_TYPES; oracleTtlValue?: number };\ninterface ExtendOracleTtlOptions extends ExtendOracleTtlOptionsType {}\n\n/**\n * Extend oracle ttl\n * @category oracle\n * @param queryId - Oracle query id\n * @param response - Oracle query response\n * @param options - Options object\n * @param options.responseTtl - responseTtl Query response time to leave\n * @param options.fee - Transaction fee\n * @param options.ttl - Transaction time to leave\n * @returns Oracle object\n */\nexport async function respondToQuery(\n  queryId: Encoded.OracleQueryId,\n  response: string,\n  options: RespondToQueryOptions,\n): Promise<\n  Awaited<ReturnType<typeof sendTransaction>> & Awaited<ReturnType<typeof getOracleObject>>\n  > {\n  const oracleId = encode(decode(options.onAccount.address), Encoding.OracleAddress);\n  const oracleRespondTx = await buildTxAsync({\n    responseTtlType: RESPONSE_TTL.type,\n    responseTtlValue: RESPONSE_TTL.value,\n    ...options,\n    tag: Tag.OracleResponseTx,\n    oracleId,\n    queryId,\n    response,\n  });\n  return {\n    ...await sendTransaction(oracleRespondTx, options),\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    ...await getOracleObject(oracleId, options),\n  };\n}\n\ntype RespondToQueryOptionsType = SendTransactionOptions & Parameters<typeof getOracleObject>[1]\n& BuildTxOptions<Tag.OracleResponseTx, 'callerId' | 'oracleId' | 'queryId' | 'response' | 'responseTtlType' | 'responseTtlValue'>\n& { responseTtlType?: ORACLE_TTL_TYPES; responseTtlValue?: number };\ninterface RespondToQueryOptions extends RespondToQueryOptionsType {}\n\n/**\n * Constructor for Oracle Object (helper object for using Oracle)\n * @category oracle\n * @param oracleId - Oracle public key\n * @param options - Options\n * @returns Oracle object\n */\nexport async function getOracleObject(\n  oracleId: Encoded.OracleAddress,\n  options: { onNode: Node; onAccount: AccountBase },\n): Promise<GetOracleObjectReturnType> {\n  return {\n    ...await options.onNode.getOracleByPubkey(oracleId),\n    queries: (await options.onNode.getOracleQueriesByPubkey(oracleId)).oracleQueries,\n    ...mapObject<Function, Function>(\n      {\n        pollQueries: pollForQueries,\n        postQuery: postQueryToOracle,\n        respondToQuery,\n        extendOracle: extendOracleTtl,\n        getQuery: getQueryObject,\n      },\n      ([name, handler]) => [\n        name,\n        (...args: any) => {\n          const lastArg = args[args.length - 1];\n          if (lastArg != null && typeof lastArg === 'object' && lastArg.constructor === Object) {\n            Object.assign(lastArg, { ...options, ...lastArg });\n          } else args.push(options);\n          return handler(\n            ...['extendOracle', 'respondToQuery'].includes(name) ? [] : [oracleId],\n            ...args,\n          );\n        },\n      ],\n    ),\n  } as any;\n}\n\ninterface GetOracleObjectReturnType extends Awaited<ReturnType<Node['getOracleByPubkey']>> {\n  id: Encoded.OracleAddress;\n  queries: OracleQueries;\n  // TODO: replace getOracleObject with a class\n  pollQueries: (cb: Parameters<typeof pollForQueries>[1]) => ReturnType<typeof pollForQueries>;\n  postQuery: Function;\n  respondToQuery: Function;\n  extendOracle: Function;\n  getQuery: Function;\n}\n\n/**\n * Register oracle\n * @category oracle\n * @param queryFormat - Format of query\n * @param responseFormat - Format of query response\n * @param options - Options\n * @param options.queryFee - Oracle query Fee\n * @param options - Options object\n * @param options.abiVersion - Always 0 (do not use virtual machine)\n * @param options.fee - Transaction fee\n * @param options.ttl - Transaction time to leave\n * @returns Oracle object\n */\nexport async function registerOracle(\n  queryFormat: string,\n  responseFormat: string,\n  options: RegisterOracleOptions,\n): Promise<\n  Awaited<ReturnType<typeof sendTransaction>> & Awaited<ReturnType<typeof getOracleObject>>\n  > {\n  const accountId = options.onAccount.address;\n  const oracleRegisterTx = await buildTxAsync({\n    oracleTtlValue: ORACLE_TTL.value,\n    oracleTtlType: ORACLE_TTL.type,\n    ...options,\n    tag: Tag.OracleRegisterTx,\n    accountId,\n    queryFormat,\n    responseFormat,\n  });\n  return {\n    ...await sendTransaction(oracleRegisterTx, options),\n    ...await getOracleObject(encode(decode(accountId), Encoding.OracleAddress), options),\n  };\n}\n\ntype RegisterOracleOptionsType = SendTransactionOptions & Parameters<typeof getOracleObject>[1]\n& BuildTxOptions<Tag.OracleRegisterTx, 'accountId' | 'queryFormat' | 'responseFormat' | 'oracleTtlType' | 'oracleTtlValue'>\n& {\n  oracleTtlType?: ORACLE_TTL_TYPES;\n  oracleTtlValue?: number;\n};\ninterface RegisterOracleOptions extends RegisterOracleOptionsType {}\n","import BigNumber from 'bignumber.js';\nimport {\n  sendTransaction, getBalance, resolveName, SendTransactionOptions,\n} from './chain';\nimport { buildTxAsync, BuildTxOptions, unpackTx } from './tx/builder';\nimport { ArgumentError } from './utils/errors';\nimport { Encoded, Encoding } from './utils/encoder';\nimport { Tag, AensName } from './tx/builder/constants';\nimport AccountBase from './account/Base';\n\n/**\n * Send coins to another account\n * @category chain\n * @param amount - Amount to spend\n * @param recipientIdOrName - Address or name of recipient account\n * @param options - Options\n * @returns Transaction\n */\nexport async function spend(\n  amount: number | string,\n  recipientIdOrName: Encoded.AccountAddress | AensName,\n  options: SpendOptions,\n): ReturnType<typeof sendTransaction> {\n  return sendTransaction(\n    await buildTxAsync({\n      ...options,\n      tag: Tag.SpendTx,\n      senderId: options.onAccount.address,\n      recipientId: await resolveName<Encoding.AccountAddress>(\n        recipientIdOrName,\n        'account_pubkey',\n        options,\n      ),\n      amount,\n    }),\n    options,\n  );\n}\n\ntype SpendOptionsType = BuildTxOptions<Tag.SpendTx, 'senderId' | 'recipientId' | 'amount'>\n& Parameters<typeof resolveName>[2] & { onAccount: AccountBase } & SendTransactionOptions;\ninterface SpendOptions extends SpendOptionsType {}\n\n// TODO: Rename to spendFraction\n/**\n * Spend a fraction of coin balance to another account. Useful if needed to drain account balance\n * completely, sending funds to another account (with fraction set to 1).\n * @category chain\n * @param fraction - Fraction of balance to spend (between 0 and 1)\n * @param recipientIdOrName - Address or name of recipient account\n * @param options - Options\n * @example\n * ```js\n * // `fraction` * 100 = % of AE to be transferred (e.g. `0.42` for 42% or `1` for 100%)\n * const { blockHeight } = await aeSdk.transferFunds(\n *   0.42,\n *   'ak_21A27UVVt3hDkBE5J7rhhqnH5YNb4Y1dqo4PnSybrH85pnWo7E',\n * );\n * console.log('Transaction mined at', blockHeight);\n * ```\n */\nexport async function transferFunds(\n  fraction: number | string, // TODO: accept only number\n  recipientIdOrName: AensName | Encoded.AccountAddress,\n  options: TransferFundsOptions,\n): ReturnType<typeof sendTransaction> {\n  if (+fraction < 0 || +fraction > 1) {\n    throw new ArgumentError('fraction', 'a number between 0 and 1', fraction);\n  }\n  const recipientId = await resolveName<Encoding.AccountAddress>(\n    recipientIdOrName,\n    'account_pubkey',\n    options,\n  );\n  const senderId = options.onAccount.address;\n  const balance = new BigNumber(\n    await getBalance.bind(options.onAccount)(senderId, options),\n  );\n  const desiredAmount = balance.times(fraction).integerValue(BigNumber.ROUND_HALF_UP);\n  const { fee } = unpackTx(\n    await buildTxAsync({\n      ...options, tag: Tag.SpendTx, senderId, recipientId, amount: desiredAmount,\n    }),\n    Tag.SpendTx,\n  );\n  // Reducing of the amount may reduce transaction fee, so this is not completely accurate\n  const amount = desiredAmount.plus(fee).gt(balance) ? balance.minus(fee) : desiredAmount;\n  return sendTransaction(\n    await buildTxAsync({\n      ...options, tag: Tag.SpendTx, senderId, recipientId, amount,\n    }),\n    options,\n  );\n}\n\ntype TransferFundsOptionsType = BuildTxOptions<Tag.SpendTx, 'senderId' | 'recipientId' | 'amount'>\n& Parameters<typeof resolveName>[2] & { onAccount: AccountBase } & SendTransactionOptions;\ninterface TransferFundsOptions extends TransferFundsOptionsType {}\n\n/**\n * Submit transaction of another account paying for it (fee and gas)\n * @category chain\n * @param transaction - tx_<base64>-encoded transaction\n * @param options - Options\n * @returns Object Transaction\n */\nexport async function payForTransaction(\n  transaction: Encoded.Transaction,\n  options: PayForTransactionOptions,\n): ReturnType<typeof sendTransaction> {\n  return sendTransaction(\n    await buildTxAsync({\n      ...options, tag: Tag.PayingForTx, payerId: options.onAccount.address, tx: transaction,\n    }),\n    options,\n  );\n}\n\ninterface PayForTransactionOptions extends\n  BuildTxOptions<Tag.PayingForTx, 'payerId' | 'tx' | 'onNode'>, SendTransactionOptions {\n  onAccount: AccountBase;\n}\n","/**\n * Generalized Account module - routines to use generalized account\n */\n\nimport { ConsensusProtocolVersion, Int, Tag } from '../tx/builder/constants';\nimport {\n  buildContractIdByContractTx, buildTx, buildTxAsync, BuildTxOptions, unpackTx,\n} from '../tx/builder';\nimport { hash } from '../utils/crypto';\nimport {\n  decode, encode, Encoded, Encoding,\n} from '../utils/encoder';\nimport { ArgumentError, IllegalArgumentError } from '../utils/errors';\nimport { concatBuffers } from '../utils/other';\nimport AccountBase from '../account/Base';\nimport Contract from './Contract';\nimport Node from '../Node';\nimport { sendTransaction, SendTransactionOptions, getAccount } from '../chain';\nimport CompilerBase from './compiler/Base';\n\n/**\n * Convert current account to GA\n * @category contract\n * @param authFnName - Authorization function name\n * @param sourceCode - Auth contract source code\n * @param args - init arguments\n * @param options - Options\n * @returns General Account Object\n */\nexport async function createGeneralizedAccount(\n  authFnName: string,\n  args: any[],\n  {\n    onAccount, onCompiler, onNode, bytecode, aci, sourceCodePath, sourceCode, fileSystem, ...options\n  }: CreateGeneralizedAccountOptions,\n): Promise<Readonly<{\n    owner: Encoded.AccountAddress;\n    transaction: Encoded.TxHash;\n    rawTx: Encoded.Transaction;\n    gaContractId: Encoded.ContractAddress;\n  }>> {\n  const ownerId = onAccount.address;\n  if ((await getAccount(ownerId, { onNode })).kind === 'generalized') {\n    throw new IllegalArgumentError(`Account ${ownerId} is already GA`);\n  }\n\n  const contract = await Contract.initialize<{ init: (...a: any[]) => void }>({\n    onAccount, onCompiler, onNode, bytecode, aci, sourceCodePath, sourceCode, fileSystem,\n  });\n\n  const tx = await buildTxAsync({\n    ...options,\n    tag: Tag.GaAttachTx,\n    onNode,\n    code: await contract.$compile(),\n    gasLimit: options.gasLimit ?? await contract._estimateGas('init', args, options),\n    ownerId,\n    callData: contract._calldata.encode(contract._name, 'init', args),\n    authFun: hash(authFnName),\n  });\n  const contractId = buildContractIdByContractTx(tx);\n  const { hash: transaction, rawTx } = await sendTransaction(tx, {\n    onNode, onAccount, onCompiler, ...options,\n  });\n\n  return Object.freeze({\n    owner: ownerId,\n    transaction,\n    rawTx,\n    gaContractId: contractId,\n  });\n}\n\ninterface CreateGeneralizedAccountOptions extends\n  BuildTxOptions<Tag.GaAttachTx, 'authFun' | 'callData' | 'code' | 'ownerId' | 'gasLimit'>,\n  SendTransactionOptions,\n  Pick<\n  Parameters<typeof Contract.initialize>[0],\n  'bytecode' | 'aci' | 'sourceCodePath' | 'sourceCode' | 'fileSystem'\n  > {\n  onAccount: AccountBase;\n  onCompiler: CompilerBase;\n  onNode: Node;\n  gasLimit?: number;\n}\n\n/**\n * Build a transaction hash the same as `Auth.tx_hash` by GaMetaTx payload\n * @category contract\n * @param transaction - tx-encoded transaction\n * @param options - Options\n * @param options.fee - GaMetaTx fee, required in Ceres\n * @param options.gasPrice - GaMetaTx gasPrice, required in Ceres\n * @param options.onNode - Node to use\n * @returns Transaction hash\n */\nexport async function buildAuthTxHash(\n  transaction: Encoded.Transaction,\n  { fee, gasPrice, onNode }: { fee?: Int; gasPrice?: Int; onNode: Node },\n): Promise<Buffer> {\n  const { nodeNetworkId, consensusProtocolVersion } = await onNode.getNodeInfo();\n  let payload = hash(concatBuffers([Buffer.from(nodeNetworkId), decode(transaction)]));\n  if (consensusProtocolVersion === ConsensusProtocolVersion.Ceres) {\n    if (fee == null) throw new ArgumentError('fee', 'provided (in Ceres)', fee);\n    if (gasPrice == null) throw new ArgumentError('gasPrice', 'provided (in Ceres)', gasPrice);\n    payload = hash(decode(buildTx({\n      tag: Tag.GaMetaTxAuthData,\n      fee,\n      gasPrice,\n      txHash: encode(payload, Encoding.TxHash),\n    })));\n  }\n  return payload;\n}\n\n/**\n * Build a transaction hash the same as `Auth.tx_hash` by GaMetaTx\n * @category contract\n * @param transaction - tx-encoded signed GaMeta transaction\n * @param options - Options\n * @param options.onNode - Node to use\n * @returns Transaction hash\n */\nexport async function buildAuthTxHashByGaMetaTx(\n  transaction: Encoded.Transaction,\n  { onNode }: { onNode: Node },\n): Promise<Buffer> {\n  const txParams = unpackTx(transaction, Tag.SignedTx);\n  if (txParams.encodedTx.tag !== Tag.GaMetaTx) {\n    throw new ArgumentError('transaction', 'to include GaMetaTx', Tag[txParams.encodedTx.tag]);\n  }\n  return buildAuthTxHash(buildTx(txParams.encodedTx.tx.encodedTx), {\n    fee: txParams.encodedTx.fee,\n    gasPrice: txParams.encodedTx.gasPrice,\n    onNode,\n  });\n}\n","import _Symbol from \"core-js-pure/features/symbol/index.js\";\nimport _Symbol$iterator from \"core-js-pure/features/symbol/iterator.js\";\nexport default function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof _Symbol && \"symbol\" == typeof _Symbol$iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof _Symbol && obj.constructor === _Symbol && obj !== _Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}","import _Object$defineProperty from \"core-js-pure/features/object/define-property.js\";\nimport toPropertyKey from \"./toPropertyKey.js\";\nexport default function _defineProperty(obj, key, value) {\n  key = toPropertyKey(key);\n  if (key in obj) {\n    _Object$defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}","import _typeof from \"./typeof.js\";\nimport toPrimitive from \"./toPrimitive.js\";\nexport default function _toPropertyKey(arg) {\n  var key = toPrimitive(arg, \"string\");\n  return _typeof(key) === \"symbol\" ? key : String(key);\n}","import _typeof from \"./typeof.js\";\nimport _Symbol$toPrimitive from \"core-js-pure/features/symbol/to-primitive.js\";\nexport default function _toPrimitive(input, hint) {\n  if (_typeof(input) !== \"object\" || input === null) return input;\n  var prim = input[_Symbol$toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (_typeof(res) !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}","import * as chainMethods from './chain';\nimport * as aensMethods from './aens';\nimport * as spendMethods from './spend';\nimport * as oracleMethods from './oracle';\nimport Contract, { ContractMethodsBase } from './contract/Contract';\nimport createDelegationSignature from './contract/delegation-signature';\nimport * as contractGaMethods from './contract/ga';\nimport { buildTxAsync } from './tx/builder';\nimport { mapObject, UnionToIntersection } from './utils/other';\nimport Node from './Node';\nimport { TxParamsAsync } from './tx/builder/schema.generated';\nimport AccountBase from './account/Base';\nimport { Encoded } from './utils/encoder';\nimport CompilerBase from './contract/compiler/Base';\n\nexport type OnAccount = Encoded.AccountAddress | AccountBase | undefined;\n\nexport function getValueOrErrorProxy<Value extends object | undefined>(\n  valueCb: () => Value,\n): NonNullable<Value> {\n  return new Proxy(\n    {},\n    Object.fromEntries(([\n      'apply', 'construct', 'defineProperty', 'deleteProperty', 'getOwnPropertyDescriptor',\n      'getPrototypeOf', 'isExtensible', 'ownKeys', 'preventExtensions', 'set', 'setPrototypeOf',\n      'get', 'has',\n    ] as const).map((name) => [name, (t: {}, ...args: unknown[]) => {\n      const target = valueCb() as object; // to get a native exception in case it missed\n      const res = (Reflect[name] as any)(target, ...args);\n      return typeof res === 'function' && name === 'get'\n        ? res.bind(target) // otherwise it fails with attempted to get private field on non-instance\n        : res;\n    }])),\n  ) as NonNullable<Value>;\n}\n\nconst { InvalidTxError: _2, ...chainMethodsOther } = chainMethods;\n\nconst methods = {\n  ...chainMethodsOther,\n  ...aensMethods,\n  ...spendMethods,\n  ...oracleMethods,\n  createDelegationSignature,\n  ...contractGaMethods,\n} as const;\n\ntype Decrement<Number extends number> = [-1, 0, 1, 2, 3, 4, 5][Number];\ntype GetMethodsOptions <Methods extends { [key: string]: Function }> =\n  {\n    [Name in keyof Methods]:\n    Methods[Name] extends (...args: infer Args) => any\n      ? Args[Decrement<Args['length']>] : never\n  };\ntype MethodsOptions = GetMethodsOptions<typeof methods>;\nexport interface AeSdkMethodsOptions\n  extends Partial<UnionToIntersection<MethodsOptions[keyof MethodsOptions]>> {\n}\n\n/**\n * AeSdkMethods is the composition of:\n * - chain methods\n * - tx methods\n * - aens methods\n * - spend methods\n * - oracle methods\n * - contract methods\n * - contract ga methods\n *\n * While these methods can be used separately, this class provides a handy way to store\n * their context (current account, network, and compiler to use).\n */\nclass AeSdkMethods {\n  _options: AeSdkMethodsOptions = {};\n\n  /**\n   * @param options - Options\n   */\n  constructor(options: AeSdkMethodsOptions = {}) {\n    Object.assign(this._options, options);\n  }\n\n  _getOptions(\n    callOptions: AeSdkMethodsOptions = {},\n  ): AeSdkMethodsOptions & { onAccount: AccountBase; onCompiler: CompilerBase; onNode: Node } {\n    return {\n      ...this._options,\n      onAccount: getValueOrErrorProxy(() => this._options.onAccount),\n      onNode: getValueOrErrorProxy(() => this._options.onNode),\n      onCompiler: getValueOrErrorProxy(() => this._options.onCompiler),\n      ...callOptions,\n    };\n  }\n\n  async buildTx(options: TxParamsAsync): Promise<Encoded.Transaction> {\n    return buildTxAsync({ ...this._getOptions(), ...options });\n  }\n\n  async initializeContract<Methods extends ContractMethodsBase>(\n    options?: Omit<Parameters<typeof Contract.initialize>[0], 'onNode'> & { onNode?: Node },\n  ): Promise<Contract<Methods>> {\n    return Contract.initialize<Methods>(this._getOptions(options as AeSdkMethodsOptions));\n  }\n}\n\ntype RequiredKeys<T> = {\n  [K in keyof T]-?: {} extends Pick<T, K> ? never : K\n}[keyof T];\n\ntype OptionalIfNotRequired<T extends [any]> = RequiredKeys<T[0]> extends never ? T | [] : T;\n\ntype ReplaceOnAccount<Options> = Options extends { onAccount: any }\n  ? Omit<Options, 'onAccount'> & { onAccount: OnAccount } : Options;\n\ntype MakeOptional<Options> = OptionalIfNotRequired<[\n  Omit<Options, 'onNode' | 'onCompiler' | 'onAccount'> & Partial<ReplaceOnAccount<Options>>,\n]>;\n\ntype TransformMethods <Methods extends { [key: string]: Function }> =\n  {\n    [Name in keyof Methods]:\n    Methods[Name] extends (...args: [...infer Args, infer Options]) => infer Ret\n      ? (...args: [...Args, ...MakeOptional<Options>]) => Ret\n      : never\n  };\n\ninterface AeSdkMethodsTransformed extends TransformMethods<typeof methods> {}\n\nObject.assign(AeSdkMethods.prototype, mapObject<Function, Function>(\n  methods,\n  ([name, handler]) => [\n    name,\n    function methodWrapper(this: AeSdkMethods, ...args: any[]) {\n      args.length = handler.length;\n      const options = args[args.length - 1];\n      args[args.length - 1] = this._getOptions(options);\n      return handler(...args);\n    },\n  ],\n));\n\ntype AeSdkMethodsTyped = AeSdkMethods & AeSdkMethodsTransformed;\n// eslint-disable-next-line @typescript-eslint/no-redeclare\nconst AeSdkMethodsTyped = AeSdkMethods as new (options?: AeSdkMethodsOptions) => AeSdkMethodsTyped;\nexport default AeSdkMethodsTyped;\n","import { decode, Encoded } from '../utils/encoder';\nimport { ArgumentError } from '../utils/errors';\nimport { AensName } from '../tx/builder/constants';\nimport AccountBase from '../account/Base';\nimport { isNameValid } from '../tx/builder/helpers';\nimport Node from '../Node';\n\nfunction ensureOracleQuery(oq: string): asserts oq is Encoded.OracleQueryId {\n  if (!oq.startsWith('oq_')) throw new ArgumentError('oq', 'oracle query', oq);\n}\n\n/**\n * Helper to generate a signature to delegate\n *  - pre-claim/claim/transfer/revoke of a name to a contract.\n *  - register/extend/respond of an Oracle to a contract.\n * @category contract\n * @param contractAddress - Address of contract to delegate access\n * @param ids - The list of id's to prepend\n * @param options - Options\n * @param options.omitAddress - Prepend delegation signature with an account address\n * @param options.onAccount - Account to use\n * @param options.onNode - Node to use\n * @returns Signature\n * @deprecated use methods `sign*DelegationToContract` of Account instance instead\n * @example\n * ```js\n * const aeSdk = new AeSdk({ ... })\n * const contractAddress = 'ct_asd2ks...'\n * const aensName = 'example.chain'\n * const onAccount = new MemoryAccount(...) // Sign with a specific account\n * // Preclaim signature\n * const preclaimSig = await aeSdk.createDelegationSignature(contractAddress, [], { onAccount })\n * // Claim, transfer and revoke signature\n * const aensDelegationSig = await aeSdk\n *   .createDelegationSignature(contractAddress, [aensName], { onAccount })\n *\n * const oracleQueryId = 'oq_...'\n * const onAccount = new MemoryAccount(...) // Sign with a specific account\n * // Oracle register and extend signature\n * const oracleDelegationSig = await aeSdk\n *   .createDelegationSignature(contractAddress, [], { onAccount })\n * // Oracle respond signature\n * const respondSig = await aeSdk\n *   .createDelegationSignature(contractAddress, [oracleQueryId], { onAccount, omitAddress: true })\n * ```\n */\nexport default async function createDelegationSignature(\n  contractAddress: Encoded.ContractAddress,\n  ids: Array<Encoded.Any | AensName>,\n  { onAccount, omitAddress, ...options }: {\n    omitAddress?: boolean;\n    onAccount: AccountBase;\n    onNode: Node;\n  },\n): Promise<Uint8Array> {\n  if (ids.length > 1) throw new ArgumentError('ids', 'shorter than 2', ids);\n  const networkId = await options.onNode.getNetworkId();\n  if (ids.length === 0) {\n    if (omitAddress === true) {\n      throw new ArgumentError('omitAddress', 'equal false', omitAddress);\n    }\n    return decode(await onAccount.signDelegationToContract(contractAddress, { networkId }));\n  }\n\n  const [payload] = ids;\n  if (isNameValid(payload)) {\n    if (omitAddress === true) {\n      throw new ArgumentError('omitAddress', 'equal false', omitAddress);\n    }\n    return decode(\n      await onAccount.signNameDelegationToContract(contractAddress, payload, { networkId }),\n    );\n  }\n\n  ensureOracleQuery(payload);\n  if (omitAddress !== true) {\n    throw new ArgumentError('omitAddress', 'equal true', omitAddress);\n  }\n  return decode(\n    await onAccount.signOracleQueryDelegationToContract(contractAddress, payload, { networkId }),\n  );\n}\n","import Node from './Node';\nimport AccountBase from './account/Base';\nimport {\n  CompilerError, DuplicateNodeError, NodeNotFoundError, NotImplementedError, TypeError,\n} from './utils/errors';\nimport { Encoded } from './utils/encoder';\nimport CompilerBase from './contract/compiler/Base';\nimport AeSdkMethods, { OnAccount, getValueOrErrorProxy, AeSdkMethodsOptions } from './AeSdkMethods';\nimport { AensName } from './tx/builder/constants';\n\ntype NodeInfo = Awaited<ReturnType<Node['getNodeInfo']>> & { name: string };\n\n/**\n * Basic AeSdk class implements:\n * - node selector,\n * - integrated compiler support,\n * - wrappers of account methods mapped to the current account.\n */\nexport default class AeSdkBase extends AeSdkMethods {\n  pool: Map<string, Node> = new Map();\n\n  selectedNodeName?: string;\n\n  /**\n   * @param options - Options\n   * @param options.nodes - Array of nodes\n   */\n  constructor(\n    { nodes = [], ...options }: AeSdkMethodsOptions & {\n      nodes?: Array<{ name: string; instance: Node }>;\n    } = {},\n  ) {\n    super(options);\n\n    nodes.forEach(({ name, instance }, i) => this.addNode(name, instance, i === 0));\n  }\n\n  // TODO: consider dropping this getter, because:\n  // compiler is not intended to be used separately any more (functionality limited to sdk needs)\n  // and user creates its instance by himself\n  get compilerApi(): CompilerBase {\n    if (this._options.onCompiler == null) {\n      throw new CompilerError('You can\\'t use Compiler API. Compiler is not ready!');\n    }\n    return this._options.onCompiler;\n  }\n\n  get api(): Node {\n    this.ensureNodeConnected();\n    return this.pool.get(this.selectedNodeName) as Node;\n  }\n\n  /**\n   * Add Node\n   * @param name - Node name\n   * @param node - Node instance\n   * @param select - Select this node as current\n   * @example\n   * ```js\n   * // add and select new node with name 'testNode'\n   * aeSdkBase.addNode('testNode', new Node({ url }), true)\n   * ```\n   */\n  addNode(name: string, node: Node, select = false): void {\n    if (this.pool.has(name)) throw new DuplicateNodeError(name);\n\n    this.pool.set(name, node);\n    if (select || this.selectedNodeName == null) {\n      this.selectNode(name);\n    }\n  }\n\n  /**\n   * Select Node\n   * @param name - Node name\n   * @example\n   * nodePool.selectNode('testNode')\n   */\n  selectNode(name: string): void {\n    if (!this.pool.has(name)) throw new NodeNotFoundError(`Node with name ${name} not in pool`);\n    this.selectedNodeName = name;\n  }\n\n  /**\n   * Check if you have selected node\n   * @example\n   * nodePool.isNodeConnected()\n   */\n  isNodeConnected(): this is AeSdkBase & { selectedNodeName: string } {\n    return this.selectedNodeName != null;\n  }\n\n  protected ensureNodeConnected(): asserts this is AeSdkBase & { selectedNodeName: string } {\n    if (!this.isNodeConnected()) {\n      throw new NodeNotFoundError('You can\\'t use Node API. Node is not connected or not defined!');\n    }\n  }\n\n  /**\n   * Get information about node\n   * @example\n   * ```js\n   * nodePool.getNodeInfo() // { name, version, networkId, protocol, ... }\n   * ```\n   */\n  async getNodeInfo(): Promise<NodeInfo> {\n    this.ensureNodeConnected();\n    return {\n      name: this.selectedNodeName,\n      ...await this.api.getNodeInfo(),\n    };\n  }\n\n  /**\n   * Get array of available nodes\n   * @example\n   * nodePool.getNodesInPool()\n   */\n  async getNodesInPool(): Promise<NodeInfo[]> {\n    return Promise.all(\n      Array.from(this.pool.entries()).map(async ([name, node]) => ({\n        name,\n        ...await node.getNodeInfo(),\n      })),\n    );\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  addresses(): Encoded.AccountAddress[] {\n    return [];\n  }\n\n  /**\n   * Resolves an account\n   * @param account - ak-address, instance of AccountBase, or keypair\n   */\n  _resolveAccount(account: OnAccount = this._options.onAccount): AccountBase {\n    if (typeof account === 'string') throw new NotImplementedError('Address in AccountResolver');\n    if (typeof account === 'object') return account;\n    throw new TypeError(\n      'Account should be an address (ak-prefixed string), '\n      + `or instance of AccountBase, got ${String(account)} instead`,\n    );\n  }\n\n  get address(): Encoded.AccountAddress {\n    return this._resolveAccount().address;\n  }\n\n  async sign(\n    data: string | Uint8Array,\n    { onAccount, ...options }: { onAccount?: OnAccount } = {},\n  ): Promise<Uint8Array> {\n    return this._resolveAccount(onAccount).sign(data, options);\n  }\n\n  async signTransaction(\n    tx: Encoded.Transaction,\n    { onAccount, ...options }: { onAccount?: OnAccount } & Parameters<AccountBase['signTransaction']>[1] = {},\n  ): Promise<Encoded.Transaction> {\n    const networkId = this.selectedNodeName !== null ? await this.api.getNetworkId() : undefined;\n    return this._resolveAccount(onAccount).signTransaction(tx, { networkId, ...options });\n  }\n\n  async signMessage(\n    message: string,\n    { onAccount, ...options }: { onAccount?: OnAccount } & Parameters<AccountBase['signMessage']>[1] = {},\n  ): Promise<Uint8Array> {\n    return this._resolveAccount(onAccount).signMessage(message, options);\n  }\n\n  async signTypedData(\n    data: Encoded.ContractBytearray,\n    aci: Parameters<AccountBase['signTypedData']>[1],\n    { onAccount, ...options }: { onAccount?: OnAccount } & Parameters<AccountBase['signTypedData']>[2] = {},\n  ): Promise<Encoded.Signature> {\n    return this._resolveAccount(onAccount).signTypedData(data, aci, options);\n  }\n\n  async signDelegationToContract(\n    contractAddress: Encoded.ContractAddress,\n    { onAccount, ...options }: { onAccount?: OnAccount }\n    & Parameters<AccountBase['signDelegationToContract']>[1] = {},\n  ): Promise<Encoded.Signature> {\n    options.networkId ??= this.selectedNodeName !== null\n      ? await this.api.getNetworkId() : undefined;\n    return this._resolveAccount(onAccount)\n      .signDelegationToContract(contractAddress, options);\n  }\n\n  async signNameDelegationToContract(\n    contractAddress: Encoded.ContractAddress,\n    name: AensName,\n    { onAccount, ...options }: { onAccount?: OnAccount }\n    & Parameters<AccountBase['signNameDelegationToContract']>[2] = {},\n  ): Promise<Encoded.Signature> {\n    options.networkId ??= this.selectedNodeName !== null\n      ? await this.api.getNetworkId() : undefined;\n    return this._resolveAccount(onAccount)\n      .signNameDelegationToContract(contractAddress, name, options);\n  }\n\n  async signOracleQueryDelegationToContract(\n    contractAddress: Encoded.ContractAddress,\n    oracleQueryId: Encoded.OracleQueryId,\n    { onAccount, ...options }: { onAccount?: OnAccount }\n    & Parameters<AccountBase['signOracleQueryDelegationToContract']>[2] = {},\n  ): Promise<Encoded.Signature> {\n    options.networkId ??= this.selectedNodeName !== null\n      ? await this.api.getNetworkId() : undefined;\n    return this._resolveAccount(onAccount)\n      .signOracleQueryDelegationToContract(contractAddress, oracleQueryId, options);\n  }\n\n  override _getOptions(callOptions: AeSdkMethodsOptions = {}): {\n    onNode: Node;\n    onAccount: AccountBase;\n    onCompiler: CompilerBase;\n  } {\n    return {\n      ...this._options,\n      onNode: getValueOrErrorProxy(() => this.api),\n      onCompiler: getValueOrErrorProxy(() => this.compilerApi),\n      ...callOptions,\n      onAccount: getValueOrErrorProxy(() => this._resolveAccount(callOptions.onAccount)),\n    };\n  }\n}\n","import AeSdkBase from './AeSdkBase';\nimport { OnAccount } from './AeSdkMethods';\nimport AccountBase from './account/Base';\nimport { decode, Encoded } from './utils/encoder';\nimport { UnavailableAccountError } from './utils/errors';\n\nexport default class AeSdk extends AeSdkBase {\n  accounts: { [key: Encoded.AccountAddress]: AccountBase } = {};\n\n  selectedAddress?: Encoded.AccountAddress;\n\n  constructor(\n    { accounts, ...options }: { accounts?: AccountBase[] }\n    & ConstructorParameters<typeof AeSdkBase>[0] = {},\n  ) {\n    super(options);\n    accounts?.forEach((account, idx) => this.addAccount(account, { select: idx === 0 }));\n  }\n\n  override _resolveAccount(account: OnAccount = this.selectedAddress): AccountBase {\n    if (typeof account === 'string') {\n      const address = account as Encoded.AccountAddress;\n      decode(address);\n      if (this.accounts[address] == null) throw new UnavailableAccountError(account);\n      account = this.accounts[address];\n    }\n    return super._resolveAccount(account);\n  }\n\n  /**\n   * Get accounts addresses\n   * @example addresses()\n   */\n  override addresses(): Encoded.AccountAddress[] {\n    return Object.keys(this.accounts) as Encoded.AccountAddress[];\n  }\n\n  /**\n   * Add specific account\n   * @param account - Account instance\n   * @param options - Options\n   * @param options.select - Select account\n   * @example addAccount(account)\n   */\n  addAccount(account: AccountBase, { select }: { select?: boolean } = {}): void {\n    const { address } = account;\n    this.accounts[address] = account;\n    if (select === true) this.selectAccount(address);\n  }\n\n  /**\n   * Remove specific account\n   * @param address - Address of account to remove\n   * @example removeAccount(address)\n   */\n  removeAccount(address: Encoded.AccountAddress): void {\n    if (this.accounts[address] == null) throw new UnavailableAccountError(address);\n    delete this.accounts[address]; // eslint-disable-line @typescript-eslint/no-dynamic-delete\n    if (this.selectedAddress === address) delete this.selectedAddress;\n  }\n\n  /**\n   * Select specific account\n   * @param address - Address of account to select\n   * @example selectAccount('ak_xxxxxxxx')\n   */\n  selectAccount(address: Encoded.AccountAddress): void {\n    decode(address);\n    if (this.accounts[address] == null) throw new UnavailableAccountError(address);\n    this.selectedAddress = address;\n  }\n}\n","// eslint-disable-next-line max-classes-per-file\nimport { Encoded } from '../utils/encoder';\nimport { BaseError, InternalError } from '../utils/errors';\n\n/**\n * @category aepp wallet communication\n */\nexport const enum MESSAGE_DIRECTION {\n  to_waellet = 'to_waellet',\n  to_aepp = 'to_aepp',\n}\n\n/**\n * @category aepp wallet communication\n */\nexport const enum WALLET_TYPE {\n  window = 'window',\n  extension = 'extension',\n}\n\n/**\n * @category aepp wallet communication\n */\nexport const enum SUBSCRIPTION_TYPES {\n  subscribe = 'subscribe',\n  unsubscribe = 'unsubscribe',\n}\n\n/**\n * @category aepp wallet communication\n */\nexport const enum METHODS {\n  readyToConnect = 'connection.announcePresence',\n  updateAddress = 'address.update',\n  address = 'address.get',\n  connect = 'connection.open',\n  sign = 'transaction.sign',\n  signMessage = 'message.sign',\n  signTypedData = 'typedData.sign',\n  signDelegationToContract = 'delegationToContract.sign',\n  subscribeAddress = 'address.subscribe',\n  updateNetwork = 'networkId.update',\n  closeConnection = 'connection.close',\n}\n\n/**\n * @category aepp wallet communication\n */\nexport const enum RPC_STATUS {\n  CONNECTED = 'CONNECTED',\n  DISCONNECTED = 'DISCONNECTED',\n  WAITING_FOR_CONNECTION_REQUEST = 'WAITING_FOR_CONNECTION_REQUEST',\n}\n\ninterface RpcErrorAsJson {\n  code: number;\n  message: string;\n  data?: any;\n}\n\nconst rpcErrors: Array<(new (data?: any) => RpcError) & { code: number }> = [];\n\n/**\n * @category exception\n */\nexport abstract class RpcError extends BaseError {\n  static code: number;\n\n  code!: number;\n\n  data?: any;\n\n  toJSON(): RpcErrorAsJson {\n    return {\n      code: this.code,\n      message: this.message,\n      data: this.data,\n    };\n  }\n\n  static deserialize(json: RpcErrorAsJson): RpcError {\n    const RpcErr = rpcErrors.find((cl) => cl.code === json.code);\n    if (RpcErr == null) throw new InternalError(`Can't find RpcError with code: ${json.code}`);\n    return new RpcErr(json.data);\n  }\n}\n\n/**\n * @category exception\n */\nexport class RpcInvalidTransactionError extends RpcError {\n  static override code = 2;\n\n  override code = 2;\n\n  constructor(data?: any) {\n    super('Invalid transaction');\n    this.data = data;\n    this.name = 'RpcInvalidTransactionError';\n  }\n}\nrpcErrors.push(RpcInvalidTransactionError);\n\n/**\n * @category exception\n */\nexport class RpcRejectedByUserError extends RpcError {\n  static override code = 4;\n\n  override code = 4;\n\n  constructor(data?: any) {\n    super('Operation rejected by user');\n    this.data = data;\n    this.name = 'RpcRejectedByUserError';\n  }\n}\nrpcErrors.push(RpcRejectedByUserError);\n\n/**\n * @category exception\n */\nexport class RpcUnsupportedProtocolError extends RpcError {\n  static override code = 5;\n\n  override code = 5;\n\n  constructor() {\n    super('Unsupported Protocol Version');\n    this.name = 'RpcUnsupportedProtocolError';\n  }\n}\nrpcErrors.push(RpcUnsupportedProtocolError);\n\n/**\n * @category exception\n */\nexport class RpcConnectionDenyError extends RpcError {\n  static override code = 9;\n\n  override code = 9;\n\n  constructor(data?: any) {\n    super('Wallet deny your connection request');\n    this.data = data;\n    this.name = 'RpcConnectionDenyError';\n  }\n}\nrpcErrors.push(RpcConnectionDenyError);\n\n/**\n * @category exception\n */\nexport class RpcNotAuthorizeError extends RpcError {\n  static override code = 10;\n\n  override code = 10;\n\n  constructor() {\n    super('You are not connected to the wallet');\n    this.name = 'RpcNotAuthorizeError';\n  }\n}\nrpcErrors.push(RpcNotAuthorizeError);\n\n/**\n * @category exception\n */\nexport class RpcPermissionDenyError extends RpcError {\n  static override code = 11;\n\n  override code = 11;\n\n  constructor(address: Encoded.AccountAddress) {\n    super(`You are not subscribed for account ${address}`);\n    this.data = address;\n    this.name = 'RpcPermissionDenyError';\n  }\n}\nrpcErrors.push(RpcPermissionDenyError);\n\n/**\n * @category exception\n */\nexport class RpcInternalError extends RpcError {\n  static override code = 12;\n\n  override code = 12;\n\n  constructor() {\n    super('The peer failed to execute your request due to unknown error');\n    this.name = 'RpcInternalError';\n  }\n}\nrpcErrors.push(RpcInternalError);\n\n/**\n * @category exception\n */\nexport class RpcMethodNotFoundError extends RpcError {\n  static override code = -32601;\n\n  override code = -32601;\n\n  constructor() {\n    super('Method not found');\n    this.name = 'RpcMethodNotFoundError';\n  }\n}\nrpcErrors.push(RpcMethodNotFoundError);\n","import AccountBase from './Base';\nimport { METHODS } from '../aepp-wallet-communication/schema';\nimport { ArgumentError, NotImplementedError, UnsupportedProtocolError } from '../utils/errors';\nimport { Encoded } from '../utils/encoder';\nimport RpcClient from '../aepp-wallet-communication/rpc/RpcClient';\nimport { AeppApi, WalletApi } from '../aepp-wallet-communication/rpc/types';\nimport { AensName } from '../tx/builder/constants';\n\n/**\n * Account provided by wallet\n * @param params - Params\n * @param params.rpcClient - RpcClient instance\n * @param params.address - RPC account address\n * @returns AccountRpc instance\n */\nexport default class AccountRpc extends AccountBase {\n  _rpcClient: RpcClient<WalletApi, AeppApi>;\n\n  override readonly address: Encoded.AccountAddress;\n\n  constructor(rpcClient: RpcClient<WalletApi, AeppApi>, address: Encoded.AccountAddress) {\n    super();\n    this._rpcClient = rpcClient;\n    this.address = address;\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  async sign(): Promise<Uint8Array> {\n    throw new NotImplementedError('RAW signing using wallet');\n  }\n\n  override async signTransaction(\n    tx: Encoded.Transaction,\n    { innerTx, networkId }: Parameters<AccountBase['signTransaction']>[1] = {},\n  ): Promise<Encoded.Transaction> {\n    if (networkId == null) throw new ArgumentError('networkId', 'provided', networkId);\n    const res = await this._rpcClient.request(METHODS.sign, {\n      onAccount: this.address,\n      tx,\n      returnSigned: true,\n      networkId,\n      innerTx,\n    });\n    if (res.signedTransaction == null) {\n      throw new UnsupportedProtocolError('signedTransaction is missed in wallet response');\n    }\n    return res.signedTransaction;\n  }\n\n  override async signMessage(message: string): Promise<Uint8Array> {\n    const { signature } = await this._rpcClient\n      .request(METHODS.signMessage, { onAccount: this.address, message });\n    return Buffer.from(signature, 'hex');\n  }\n\n  override async signTypedData(\n    data: Encoded.ContractBytearray,\n    aci: Parameters<AccountBase['signTypedData']>[1],\n    {\n      name, version, contractAddress, networkId,\n    }: Parameters<AccountBase['signTypedData']>[2] = {},\n  ): Promise<Encoded.Signature> {\n    const { signature } = await this._rpcClient.request(METHODS.signTypedData, {\n      onAccount: this.address,\n      domain: {\n        name, version, networkId, contractAddress,\n      },\n      aci,\n      data,\n    });\n    return signature;\n  }\n\n  override async signDelegationToContract(\n    contractAddress: Encoded.ContractAddress,\n  ): Promise<Encoded.Signature> {\n    const { signature } = await this._rpcClient.request(METHODS.signDelegationToContract, {\n      onAccount: this.address,\n      contractAddress,\n    });\n    return signature;\n  }\n\n  override async signNameDelegationToContract(\n    contractAddress: Encoded.ContractAddress,\n    name: AensName,\n  ): Promise<Encoded.Signature> {\n    const { signature } = await this._rpcClient.request(METHODS.signDelegationToContract, {\n      onAccount: this.address,\n      contractAddress,\n      name,\n    });\n    return signature;\n  }\n\n  override async signOracleQueryDelegationToContract(\n    contractAddress: Encoded.ContractAddress,\n    oracleQueryId: Encoded.OracleQueryId,\n  ): Promise<Encoded.Signature> {\n    const { signature } = await this._rpcClient.request(METHODS.signDelegationToContract, {\n      onAccount: this.address,\n      contractAddress,\n      oracleQueryId,\n    });\n    return signature;\n  }\n}\n","import { RpcError, RpcInternalError, RpcMethodNotFoundError } from '../schema';\nimport BrowserConnection from '../connection/Browser';\nimport { InvalidRpcMessageError, MissingCallbackError } from '../../utils/errors';\nimport { ensureError } from '../../utils/other';\n\ninterface JsonRpcRequest {\n  jsonrpc: '2.0';\n  id: number;\n  method: string;\n  params?: any;\n}\n\ninterface JsonRpcResponse {\n  jsonrpc: '2.0';\n  id: number;\n  method: string;\n  result?: any;\n  error?: {\n    code: number;\n    message: string;\n    data?: any;\n  };\n}\n\ntype RpcApiHandler = (p?: any) => any | undefined;\ntype RpcApi<Api> = { [k in keyof Api]: RpcApiHandler };\ntype WithOrigin<Api extends RpcApi<Api>> = {\n  [k in keyof Api]: (p: Parameters<Api[k]>[0], origin: string) => ReturnType<Api[k]>\n};\n\n/**\n * Contain functionality for using RPC conection\n * @category aepp wallet communication\n * @param connection - Connection object\n * @param onDisconnect - Disconnect callback\n * @param methods - Object containing handlers for each request by name\n */\nexport default class RpcClient <\n  RemoteApi extends RpcApi<RemoteApi>, LocalApi extends RpcApi<LocalApi>,\n> {\n  connection: BrowserConnection;\n\n  #callbacks = new Map<number, { resolve: (v: any) => void; reject: (e: Error) => void }>();\n\n  #messageId = 0;\n\n  #methods: WithOrigin<LocalApi>;\n\n  constructor(\n    connection: BrowserConnection,\n    onDisconnect: () => void,\n    methods: WithOrigin<LocalApi>,\n  ) {\n    this.connection = connection;\n    this.#methods = methods;\n    connection.connect(this.#handleMessage.bind(this), onDisconnect);\n  }\n\n  async #handleMessage(msg: JsonRpcRequest | JsonRpcResponse, origin: string): Promise<void> {\n    if (msg?.jsonrpc !== '2.0') throw new InvalidRpcMessageError(JSON.stringify(msg));\n    if ('result' in msg || 'error' in msg) {\n      this.#processResponse(msg);\n      return;\n    }\n\n    const request = msg as JsonRpcRequest;\n    let result;\n    let error: Error | undefined;\n    try {\n      if (!(request.method in this.#methods)) throw new RpcMethodNotFoundError();\n      const methodName = request.method as keyof LocalApi;\n      result = await this.#methods[methodName](request.params, origin);\n    } catch (e) {\n      ensureError(e);\n      error = e;\n    }\n    if (request.id != null) {\n      this.#sendResponse(\n        request.id,\n        request.method as keyof LocalApi,\n        result,\n        error == null || error instanceof RpcError ? error : new RpcInternalError(),\n      );\n    }\n    if (error != null && !(error instanceof RpcError)) throw error;\n  }\n\n  #sendRequest(\n    id: number | undefined,\n    method: keyof RemoteApi | keyof LocalApi,\n    params?: any,\n  ): void {\n    this.connection.sendMessage({\n      jsonrpc: '2.0',\n      ...id != null ? { id } : {},\n      method,\n      ...params != null ? { params } : {},\n    });\n  }\n\n  #sendResponse(\n    id: number,\n    method: keyof RemoteApi | keyof LocalApi, // TODO: remove as far it is not required in JSON RPC\n    result?: any,\n    error?: RpcError,\n  ): void {\n    this.connection.sendMessage({\n      jsonrpc: '2.0',\n      id,\n      method,\n      ...error != null ? { error: error.toJSON() } : { result },\n    });\n  }\n\n  /**\n   * Make a request\n   * @param name - Method name\n   * @param params - Method params\n   * @returns Promise which will be resolved after receiving response message\n   */\n  async request<Name extends keyof RemoteApi>(\n    name: Name,\n    params: Parameters<RemoteApi[Name]>[0],\n  ): Promise<ReturnType<RemoteApi[Name]>> {\n    this.#sendRequest(this.#messageId += 1, name, params);\n    return new Promise((resolve, reject) => {\n      this.#callbacks.set(this.#messageId, { resolve, reject });\n    });\n  }\n\n  /**\n   * Make a notification\n   * @param name - Method name\n   * @param params - Method params\n   */\n  notify<Name extends keyof RemoteApi>(name: Name, params: Parameters<RemoteApi[Name]>[0]): void {\n    this.#sendRequest(undefined, name, params);\n  }\n\n  /**\n   * Process response message\n   * @param msg - Message object\n   */\n  #processResponse({ id, error, result }: { id: number; error?: any; result?: any }): void {\n    const callbacks = this.#callbacks.get(id);\n    if (callbacks == null) throw new MissingCallbackError(id);\n    if (error != null) callbacks.reject(RpcError.deserialize(error));\n    else callbacks.resolve(result);\n    this.#callbacks.delete(id);\n  }\n}\n","import AeSdkBase from './AeSdkBase';\nimport { OnAccount } from './AeSdkMethods';\nimport AccountBase from './account/Base';\nimport AccountRpc from './account/Rpc';\nimport { decode, Encoded } from './utils/encoder';\nimport {\n  Accounts, RPC_VERSION, WalletInfo, Network, WalletApi, AeppApi, Node as NodeRpc,\n} from './aepp-wallet-communication/rpc/types';\nimport RpcClient from './aepp-wallet-communication/rpc/RpcClient';\nimport { METHODS, SUBSCRIPTION_TYPES } from './aepp-wallet-communication/schema';\nimport {\n  AlreadyConnectedError,\n  NoWalletConnectedError,\n  UnsubscribedAccountError,\n  UnAuthorizedAccountError,\n  RpcConnectionError,\n} from './utils/errors';\nimport Node from './Node';\nimport BrowserConnection from './aepp-wallet-communication/connection/Browser';\n\n/**\n * RPC handler for AEPP side\n * Contain functionality for wallet interaction and connect it to sdk\n * @category aepp wallet communication\n */\nexport default class AeSdkAepp extends AeSdkBase {\n  name: string;\n\n  onAddressChange: (a: Accounts) => void;\n\n  onDisconnect: (p: any) => void;\n\n  onNetworkChange: (a: Network) => void;\n\n  rpcClient?: RpcClient<WalletApi, AeppApi>;\n\n  _accounts?: Accounts;\n\n  /**\n   * @param options - Options\n   * @param options.name - Aepp name\n   * @param options.onAddressChange - Call-back function for update address event\n   * @param options.onDisconnect - Call-back function for disconnect event\n   * @param options.onNetworkChange - Call-back function for update network event\n   */\n  constructor({\n    name,\n    onAddressChange = () => {},\n    onDisconnect = () => {},\n    onNetworkChange = () => {},\n    ...other\n  }: {\n    name: string;\n    onAddressChange?: (a: Accounts) => void;\n    onDisconnect?: (p: any) => void;\n    onNetworkChange?: (a: Network) => void;\n  } & ConstructorParameters<typeof AeSdkBase>[0]) {\n    super(other);\n    this.onAddressChange = onAddressChange;\n    this.onDisconnect = onDisconnect;\n    this.onNetworkChange = onNetworkChange;\n    this.name = name;\n  }\n\n  override _resolveAccount(account: OnAccount = this.addresses()[0]): AccountBase {\n    if (typeof account === 'string') {\n      const address = account as Encoded.AccountAddress;\n      decode(address);\n      if (!this.addresses().includes(address)) throw new UnAuthorizedAccountError(address);\n      this._ensureConnected();\n      account = new AccountRpc(this.rpcClient, address);\n    }\n    if (account == null) this._ensureAccountAccess();\n    return super._resolveAccount(account);\n  }\n\n  override addresses(): Encoded.AccountAddress[] {\n    if (this._accounts == null) return [];\n    const current = Object.keys(this._accounts.current)[0];\n    return [\n      ...current != null ? [current] : [], ...Object.keys(this._accounts.connected),\n    ] as Encoded.AccountAddress[];\n  }\n\n  /**\n   * Connect to wallet\n   * @param connection - Wallet connection object\n   * @param options - Options\n   * @param options.connectNode - Request wallet to bind node\n   * @param options.name - Node name\n   * @param options.select - Select this node as current\n   */\n  async connectToWallet(\n    connection: BrowserConnection,\n    { connectNode = false, name = 'wallet-node' }: { connectNode?: boolean; name?: string } = {},\n  ): Promise<WalletInfo & { node?: NodeRpc }> {\n    if (this.rpcClient != null) throw new AlreadyConnectedError('You are already connected to wallet');\n    let disconnectParams: any;\n\n    const updateNetwork = (params: Network): void => {\n      if (connectNode) {\n        if (params.node?.url == null) throw new RpcConnectionError('Missing URLs of the Node');\n        this.pool.delete(name);\n        this.addNode(name, new Node(params.node.url), true);\n      }\n      this.onNetworkChange(params);\n    };\n\n    const client = new RpcClient<WalletApi, AeppApi>(\n      connection,\n      () => {\n        delete this.rpcClient;\n        delete this._accounts;\n        this.onDisconnect(disconnectParams);\n      },\n      {\n        [METHODS.updateAddress]: (params) => {\n          this._accounts = params;\n          this.onAddressChange(params);\n        },\n        [METHODS.updateNetwork]: updateNetwork,\n        [METHODS.closeConnection]: (params) => {\n          disconnectParams = params;\n          client.connection.disconnect();\n        },\n        [METHODS.readyToConnect]: () => {},\n      },\n    );\n    const walletInfo = await client\n      .request(METHODS.connect, { name: this.name, version: RPC_VERSION, connectNode });\n    updateNetwork(walletInfo);\n    this.rpcClient = client;\n    return walletInfo;\n  }\n\n  /**\n   * Disconnect from wallet\n   */\n  disconnectWallet(): void {\n    this._ensureConnected();\n    this.rpcClient.notify(METHODS.closeConnection, { reason: 'bye' });\n    this.rpcClient.connection.disconnect();\n  }\n\n  /**\n   * Ask addresses from wallet\n   * @returns Addresses from wallet\n   */\n  async askAddresses(): Promise<Encoded.AccountAddress[]> {\n    this._ensureAccountAccess();\n    return this.rpcClient.request(METHODS.address, undefined);\n  }\n\n  /**\n   * Subscribe for addresses from wallet\n   * @param type - Subscription type\n   * @param value - Should be one of 'current' (the selected account), 'connected' (all)\n   * @returns Accounts from wallet\n   */\n  async subscribeAddress(\n    type: SUBSCRIPTION_TYPES,\n    value: 'current' | 'connected',\n  ): Promise<ReturnType<WalletApi[METHODS.subscribeAddress]>> {\n    this._ensureConnected();\n    const result = await this.rpcClient.request(METHODS.subscribeAddress, { type, value });\n    this._accounts = result.address;\n    return result;\n  }\n\n  _ensureConnected(): asserts this is AeSdkAepp & { rpcClient: NonNullable<AeSdkAepp['rpcClient']> } {\n    if (this.rpcClient != null) return;\n    throw new NoWalletConnectedError('You are not connected to Wallet');\n  }\n\n  _ensureAccountAccess(): asserts this is AeSdkAepp & { rpcClient: NonNullable<AeSdkAepp['rpcClient']> } {\n    this._ensureConnected();\n    if (this.addresses().length !== 0) return;\n    throw new UnsubscribedAccountError();\n  }\n}\n","import { Encoded } from '../../utils/encoder';\nimport { Domain, AciValue } from '../../utils/typed-data';\nimport { METHODS, SUBSCRIPTION_TYPES, WALLET_TYPE } from '../schema';\nimport { TransformNodeType } from '../../Node';\nimport { SignedTx } from '../../apis/node';\nimport { AensName } from '../../tx/builder/constants';\n\nexport interface WalletInfo {\n  id: string;\n  name: string;\n  networkId: string;\n  origin: string; // TODO: origin needs to be provided by transport\n  type: WALLET_TYPE;\n}\n\nexport interface Accounts {\n  connected: { [pub: Encoded.AccountAddress]: {} };\n  current: { [pub: Encoded.AccountAddress]: {} };\n}\n\nexport interface Node {\n  // TODO: name is not used, can be removed\n  name: string;\n  url: string;\n}\n\nexport interface Network {\n  networkId: string;\n  node?: Node;\n}\n\ntype Icons = Array<{ src: string; sizes?: string; type?: string; purpose?: string }>;\n\nexport const RPC_VERSION = 1;\n\nexport interface WalletApi {\n  [METHODS.connect]: (\n    p: { name: string; icons?: Icons; version: typeof RPC_VERSION; connectNode: boolean }\n  ) => Promise<WalletInfo & { node?: Node }>;\n\n  [METHODS.closeConnection]: (p: any) => void;\n\n  [METHODS.subscribeAddress]: (\n    p: { type: SUBSCRIPTION_TYPES; value: 'connected' | 'current' }\n  ) => Promise<{ subscription: Array<'connected' | 'current'>; address: Accounts }>;\n\n  [METHODS.address]: () => Promise<Encoded.AccountAddress[]>;\n\n  [METHODS.sign]: ((\n    p: {\n      tx: Encoded.Transaction;\n      onAccount: Encoded.AccountAddress;\n      returnSigned: boolean;\n      /**\n       * @deprecated Wallet provided networkId will be used (current network)\n       * required to maintain backward compatibility with wallets using SDK v11.0.1 and below\n       * @see {@link https://github.com/aeternity/aepp-sdk-js/commit/153fd89a52c4eab39fcd659b356b36d32129c1ba}\n       */\n      networkId: string;\n      innerTx?: boolean;\n    }\n  ) => Promise<{\n    /**\n     * @deprecated this is not a hash at all, will be removed later at the same time\n     * as dropping ability to broadcast transaction by wallet\n     */\n    transactionHash?: Partial<TransformNodeType<SignedTx>> & {\n      hash: Encoded.TxHash;\n      rawTx: Encoded.Transaction;\n    };\n    signedTransaction?: Encoded.Transaction;\n  }>);\n\n  [METHODS.signMessage]: (\n    p: { message: string; onAccount: Encoded.AccountAddress }\n  ) => Promise<{ signature: string }>;\n\n  [METHODS.signTypedData]: (\n    p: {\n      domain: Domain;\n      aci: AciValue;\n      data: Encoded.ContractBytearray;\n      onAccount: Encoded.AccountAddress;\n    },\n  ) => Promise<{ signature: Encoded.Signature }>;\n\n  [METHODS.signDelegationToContract]: (\n    p: {\n      contractAddress: Encoded.ContractAddress;\n      name?: AensName;\n      oracleQueryId?: Encoded.OracleQueryId;\n      onAccount: Encoded.AccountAddress;\n    },\n  ) => Promise<{ signature: Encoded.Signature }>;\n}\n\nexport interface AeppApi {\n  [METHODS.updateAddress]: (a: Accounts) => void;\n  [METHODS.updateNetwork]: (a: Network) => void;\n  [METHODS.readyToConnect]: (w: WalletInfo) => void;\n  [METHODS.closeConnection]: (p: any) => void;\n}\n","import JsonBig from 'json-bigint';\nimport BigNumber from 'bignumber.js';\nimport { mapObject } from './other';\n\nconst jsonBig = JsonBig({ storeAsString: true });\n\nconst convertValuesToBigNumbers = (value: any): any => {\n  if (typeof value === 'object' && value !== null && value.constructor === Object) {\n    return mapObject(value, ([k, v]) => [k, convertValuesToBigNumbers(v)]);\n  }\n  if (Array.isArray(value)) {\n    return value.map((item) => convertValuesToBigNumbers(item));\n  }\n  if (typeof value === 'string' && new BigNumber(value).toString(10) === value) {\n    const bn = new BigNumber(value);\n    bn.toJSON = () => bn.toString(10);\n    return bn;\n  }\n  return value;\n};\n\nexport default {\n  stringify: (...args: Parameters<typeof JsonBig['stringify']>): string => (\n    jsonBig.stringify(convertValuesToBigNumbers(args[0]), ...args.slice(1))\n  ),\n  parse: jsonBig.parse,\n};\n","import { v4 as uuid } from '@aeternity/uuid';\nimport AeSdk from './AeSdk';\nimport verifyTransaction from './tx/validator';\nimport RpcClient from './aepp-wallet-communication/rpc/RpcClient';\nimport {\n  METHODS, RPC_STATUS, SUBSCRIPTION_TYPES, WALLET_TYPE,\n  RpcInvalidTransactionError,\n  RpcNotAuthorizeError, RpcPermissionDenyError, RpcUnsupportedProtocolError,\n} from './aepp-wallet-communication/schema';\nimport { InternalError, UnknownRpcClientError } from './utils/errors';\nimport AccountBase from './account/Base';\nimport BrowserConnection from './aepp-wallet-communication/connection/Browser';\nimport {\n  Accounts,\n  AeppApi,\n  Network,\n  RPC_VERSION,\n  WalletApi,\n  WalletInfo,\n} from './aepp-wallet-communication/rpc/types';\nimport { Encoded } from './utils/encoder';\nimport jsonBig from './utils/json-big';\n\ntype RpcClientWallet = RpcClient<AeppApi, WalletApi>;\n\ntype OnConnection = (\n  clientId: string, params: Omit<Parameters<WalletApi[METHODS.connect]>[0], 'version'>, origin: string\n) => void;\n\ntype OnSubscription = (\n  clientId: string, params: Parameters<WalletApi[METHODS.subscribeAddress]>[0], origin: string\n) => void;\n\ntype OnDisconnect = (\n  clientId: string, params: Parameters<WalletApi[METHODS.closeConnection]>[0]\n) => void;\n\ntype OnAskAccounts = (\n  clientId: string, params: undefined, origin: string\n) => void;\n\ninterface RpcClientsInfo {\n  id: string;\n  status: RPC_STATUS;\n  connectNode: boolean;\n  addressSubscription: Set<'connected' | 'current'>;\n  rpc: RpcClientWallet;\n}\n\n/**\n * Contain functionality for aepp interaction and managing multiple aepps\n * @category aepp wallet communication\n */\nexport default class AeSdkWallet extends AeSdk {\n  id: string;\n\n  _type: WALLET_TYPE;\n\n  name: string;\n\n  _clients = new Map<string, RpcClientsInfo>();\n\n  onConnection: OnConnection;\n\n  onSubscription: OnSubscription;\n\n  onDisconnect: OnDisconnect;\n\n  onAskAccounts: OnAskAccounts;\n\n  /**\n   * @param options - Options\n   * @param options.name - Wallet name\n   * @param options.id - Wallet id\n   * @param options.type - Wallet type\n   * @param options.onConnection - Call-back function for incoming AEPP connection\n   * @param options.onSubscription - Call-back function for incoming AEPP account subscription\n   * @param options.onAskAccounts - Call-back function for incoming AEPP get address request\n   * @param options.onDisconnect - Call-back function for disconnect event\n   */\n  constructor({\n    name,\n    id,\n    type,\n    onConnection,\n    onSubscription,\n    onDisconnect,\n    onAskAccounts,\n    ...options\n  }: {\n    id: string;\n    type: WALLET_TYPE;\n    name: string;\n    onConnection: OnConnection;\n    onSubscription: OnSubscription;\n    onDisconnect: OnDisconnect;\n    onAskAccounts: OnAskAccounts;\n  } & ConstructorParameters<typeof AeSdk>[0]) {\n    super(options);\n    this.onConnection = onConnection;\n    this.onSubscription = onSubscription;\n    this.onDisconnect = onDisconnect;\n    this.onAskAccounts = onAskAccounts;\n    this.name = name;\n    this.id = id;\n    this._type = type;\n  }\n\n  _getAccountsForClient({ addressSubscription }: RpcClientsInfo): Accounts {\n    const { current, connected } = this.getAccounts();\n    return {\n      current: addressSubscription.has('current') || addressSubscription.has('connected')\n        ? current : {},\n      connected: addressSubscription.has('connected') ? connected : {},\n    };\n  }\n\n  _pushAccountsToApps(): void {\n    if (this._clients == null) return;\n    Array.from(this._clients.keys())\n      .filter((clientId) => this._isRpcClientConnected(clientId))\n      .map((clientId) => this._getClient(clientId))\n      .filter((client) => client.addressSubscription.size !== 0)\n      .forEach((client) => client.rpc\n        .notify(METHODS.updateAddress, this._getAccountsForClient(client)));\n  }\n\n  override selectAccount(address: Encoded.AccountAddress): void {\n    super.selectAccount(address);\n    this._pushAccountsToApps();\n  }\n\n  override addAccount(account: AccountBase, options?: Parameters<AeSdk['addAccount']>[1]): void {\n    super.addAccount(account, options);\n    this._pushAccountsToApps();\n  }\n\n  _getNode(): { node: Network['node'] } {\n    this.ensureNodeConnected();\n    return { node: { url: this.api.$host, name: this.selectedNodeName } };\n  }\n\n  override async selectNode(name: string): Promise<void> {\n    super.selectNode(name);\n    const networkId = await this.api.getNetworkId();\n    Array.from(this._clients.keys())\n      .filter((clientId) => this._isRpcClientConnected(clientId))\n      .map((clientId) => this._getClient(clientId))\n      .forEach((client) => {\n        client.rpc.notify(METHODS.updateNetwork, {\n          networkId,\n          ...client.connectNode && this._getNode(),\n        });\n      });\n  }\n\n  _getClient(clientId: string): RpcClientsInfo {\n    const client = this._clients.get(clientId);\n    if (client == null) throw new UnknownRpcClientError(clientId);\n    return client;\n  }\n\n  _isRpcClientConnected(clientId: string): boolean {\n    return RPC_STATUS.CONNECTED === this._getClient(clientId).status\n      && this._getClient(clientId).rpc.connection.isConnected();\n  }\n\n  _disconnectRpcClient(clientId: string): void {\n    const client = this._getClient(clientId);\n    client.rpc.connection.disconnect();\n    client.status = RPC_STATUS.DISCONNECTED;\n    client.addressSubscription = new Set();\n  }\n\n  /**\n   * Remove specific RpcClient by ID\n   * @param id - Client ID\n   */\n  removeRpcClient(id: string): void {\n    this._disconnectRpcClient(id);\n    this._clients.delete(id);\n  }\n\n  /**\n   * Add new client by AEPP connection\n   * @param clientConnection - AEPP connection object\n   * @returns Client ID\n   */\n  addRpcClient(clientConnection: BrowserConnection): string {\n    // @TODO  detect if aepp has some history based on origin????\n    // if yes use this instance for connection\n    const id = uuid();\n    let disconnectParams: any;\n    const client: RpcClientsInfo = {\n      id,\n      status: RPC_STATUS.WAITING_FOR_CONNECTION_REQUEST,\n      addressSubscription: new Set(),\n      connectNode: false,\n      rpc: new RpcClient<AeppApi, WalletApi>(\n        clientConnection,\n        () => {\n          this._clients.delete(id);\n          this.onDisconnect(id, disconnectParams); // also related info\n        },\n        {\n          [METHODS.closeConnection]: (params) => {\n            disconnectParams = params;\n            this._disconnectRpcClient(id);\n          },\n          // Store client info and prepare two fn for each client `connect` and `denyConnection`\n          // which automatically prepare and send response for that client\n          [METHODS.connect]: async ({\n            name, version, icons, connectNode,\n          }, origin) => {\n            if (version !== RPC_VERSION) throw new RpcUnsupportedProtocolError();\n\n            await this.onConnection(id, { name, icons, connectNode }, origin);\n            client.status = RPC_STATUS.CONNECTED;\n            client.connectNode = connectNode;\n            return {\n              ...await this.getWalletInfo(),\n              ...connectNode && this._getNode(),\n            };\n          },\n          [METHODS.subscribeAddress]: async ({ type, value }, origin) => {\n            if (!this._isRpcClientConnected(id)) throw new RpcNotAuthorizeError();\n\n            switch (type) {\n              case SUBSCRIPTION_TYPES.subscribe:\n                // TODO: remove `type` as it always subscribe\n                await this.onSubscription(id, { type, value }, origin);\n                client.addressSubscription.add(value);\n                break;\n              case SUBSCRIPTION_TYPES.unsubscribe:\n                client.addressSubscription.delete(value);\n                break;\n              default:\n                throw new InternalError(`Unknown subscription type: ${type}`);\n            }\n\n            return {\n              subscription: Array.from(client.addressSubscription),\n              address: this._getAccountsForClient(client),\n            };\n          },\n          [METHODS.address]: async (params, origin) => {\n            if (!this._isRpcClientConnected(id)) throw new RpcNotAuthorizeError();\n            await this.onAskAccounts(id, params, origin);\n            return this.addresses();\n          },\n          [METHODS.sign]: async (\n            {\n              tx, onAccount = this.address, returnSigned, innerTx,\n            },\n            origin,\n          ) => {\n            if (!this._isRpcClientConnected(id)) throw new RpcNotAuthorizeError();\n            if (!this.addresses().includes(onAccount)) {\n              throw new RpcPermissionDenyError(onAccount);\n            }\n\n            const parameters = {\n              onAccount, aeppOrigin: origin, aeppRpcClientId: id, innerTx,\n            };\n            if (returnSigned || innerTx === true) {\n              return { signedTransaction: await this.signTransaction(tx, parameters) };\n            }\n            try {\n              return jsonBig.parse(jsonBig.stringify({\n                transactionHash: await this.sendTransaction(tx, { ...parameters, verify: false }),\n              }));\n            } catch (error) {\n              const validation = await verifyTransaction(tx, this.api);\n              if (validation.length > 0) throw new RpcInvalidTransactionError(validation);\n              throw error;\n            }\n          },\n          [METHODS.signMessage]: async ({ message, onAccount = this.address }, origin) => {\n            if (!this._isRpcClientConnected(id)) throw new RpcNotAuthorizeError();\n            if (!this.addresses().includes(onAccount)) {\n              throw new RpcPermissionDenyError(onAccount);\n            }\n\n            const parameters = { onAccount, aeppOrigin: origin, aeppRpcClientId: id };\n            return {\n              signature: Buffer.from(await this.signMessage(message, parameters)).toString('hex'),\n            };\n          },\n          [METHODS.signTypedData]: async ({\n            domain, aci, data, onAccount = this.address,\n          }, origin) => {\n            if (!this._isRpcClientConnected(id)) throw new RpcNotAuthorizeError();\n            if (!this.addresses().includes(onAccount)) {\n              throw new RpcPermissionDenyError(onAccount);\n            }\n\n            const parameters = {\n              ...domain, onAccount, aeppOrigin: origin, aeppRpcClientId: id,\n            };\n            return {\n              signature: await this.signTypedData(data, aci, parameters),\n            };\n          },\n          [METHODS.signDelegationToContract]: async ({\n            contractAddress, name, oracleQueryId, onAccount = this.address,\n          }, origin) => {\n            if (!this._isRpcClientConnected(id)) throw new RpcNotAuthorizeError();\n            if (!this.addresses().includes(onAccount)) {\n              throw new RpcPermissionDenyError(onAccount);\n            }\n\n            const parameters = { onAccount, aeppOrigin: origin, aeppRpcClientId: id };\n            const signature = await (\n              (name == null ? null : this\n                .signNameDelegationToContract(contractAddress, name, parameters))\n              ?? (oracleQueryId == null ? null : this\n                .signOracleQueryDelegationToContract(contractAddress, oracleQueryId, parameters))\n              ?? this.signDelegationToContract(contractAddress, parameters)\n            );\n            return { signature };\n          },\n        },\n      ),\n    };\n    this._clients.set(id, client);\n    return id;\n  }\n\n  /**\n   * Send shareWalletInfo message to notify AEPP about wallet\n   * @param clientId - ID of RPC client send message to\n   */\n  async shareWalletInfo(clientId: string): Promise<void> {\n    this._getClient(clientId).rpc.notify(METHODS.readyToConnect, await this.getWalletInfo());\n  }\n\n  /**\n   * Get Wallet info object\n   * @returns Object with wallet information\n   */\n  async getWalletInfo(): Promise<WalletInfo> {\n    return {\n      id: this.id,\n      name: this.name,\n      networkId: await this.api.getNetworkId(),\n      origin: window.location.origin,\n      type: this._type,\n    };\n  }\n\n  /**\n   * Get Wallet accounts\n   * @returns Object with accounts information (\\{ connected: Object, current: Object \\})\n   */\n  getAccounts(): Accounts {\n    return {\n      current: this.selectedAddress != null ? { [this.selectedAddress]: {} } : {},\n      connected: this.addresses()\n        .filter((a) => a !== this.selectedAddress)\n        .reduce((acc, a) => ({ ...acc, [a]: {} }), {}),\n    };\n  }\n}\n","import AccountBase from './Base';\nimport {\n  ArgumentError,\n  InternalError,\n  InvalidAuthDataError,\n  NotImplementedError,\n} from '../utils/errors';\nimport { decode, Encoded } from '../utils/encoder';\nimport { getAccount } from '../chain';\nimport Contract from '../contract/Contract';\nimport { buildTxAsync, buildTx } from '../tx/builder';\nimport { Tag } from '../tx/builder/constants';\n\n/**\n * Generalized account class\n */\nexport default class AccountGeneralized extends AccountBase {\n  override readonly address: Encoded.AccountAddress;\n\n  #authFun?: string;\n\n  /**\n   * @param address - Address of generalized account\n   */\n  constructor(address: Encoded.AccountAddress) {\n    super();\n    decode(address);\n    this.address = address;\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  override async sign(): Promise<Uint8Array> {\n    throw new NotImplementedError('Can\\'t sign using generalized account');\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  override async signMessage(): Promise<Uint8Array> {\n    throw new NotImplementedError('Can\\'t sign using generalized account');\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  override async signTypedData(): Promise<Encoded.Signature> {\n    throw new NotImplementedError('Can\\'t sign using generalized account');\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  override async signDelegationToContract(): Promise<Encoded.Signature> {\n    throw new NotImplementedError('signing delegation to contract using generalized account');\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  override async signNameDelegationToContract(): Promise<Encoded.Signature> {\n    throw new NotImplementedError('signing delegation to contract using generalized account');\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  override async signOracleQueryDelegationToContract(): Promise<Encoded.Signature> {\n    throw new NotImplementedError('signing delegation to contract using generalized account');\n  }\n\n  override async signTransaction(\n    tx: Encoded.Transaction,\n    { authData, onCompiler, onNode }: Parameters<AccountBase['signTransaction']>[1],\n  ): Promise<Encoded.Transaction> {\n    if (authData == null || onCompiler == null || onNode == null) {\n      throw new ArgumentError('authData, onCompiler, onNode', 'provided', null);\n    }\n    const {\n      callData, sourceCode, args, fee, gasLimit, gasPrice,\n    } = typeof authData === 'function' ? await authData(tx) : authData;\n\n    const authCallData = callData ?? await (async () => {\n      if (this.#authFun == null) {\n        const account = await getAccount(this.address, { onNode });\n        if (account.kind !== 'generalized') {\n          throw new ArgumentError('account kind', 'generalized', account.kind);\n        }\n        this.#authFun = account.authFun;\n      }\n      if (this.#authFun == null) {\n        throw new InternalError('Account in generalised, but authFun not provided');\n      }\n\n      if (sourceCode == null || args == null) {\n        throw new InvalidAuthDataError('Auth data must contain sourceCode and args or callData.');\n      }\n      const contract = await Contract.initialize({ onCompiler, onNode, sourceCode });\n      return contract._calldata.encode(contract._name, this.#authFun, args);\n    })();\n\n    const gaMetaTx = await buildTxAsync({\n      tag: Tag.GaMetaTx,\n      tx: { tag: Tag.SignedTx, encodedTx: decode(tx), signatures: [] },\n      gaId: this.address,\n      authData: authCallData,\n      fee,\n      gasLimit,\n      gasPrice,\n      onNode,\n    });\n    return buildTx({ tag: Tag.SignedTx, encodedTx: decode(gaMetaTx), signatures: [] });\n  }\n}\n","import type Transport from '@ledgerhq/hw-transport';\nimport AccountBase from './Base';\nimport { ArgumentError, NotImplementedError } from '../utils/errors';\nimport { decode, Encoded } from '../utils/encoder';\nimport { buildTx } from '../tx/builder';\nimport { Tag } from '../tx/builder/constants';\n\nexport const CLA = 0xe0;\nexport const GET_ADDRESS = 0x02;\nexport const SIGN_TRANSACTION = 0x04;\nexport const GET_APP_CONFIGURATION = 0x06;\nexport const SIGN_PERSONAL_MESSAGE = 0x08;\n\n/**\n * Ledger wallet account class\n */\nexport default class AccountLedger extends AccountBase {\n  readonly transport: Transport;\n\n  override readonly address: Encoded.AccountAddress;\n\n  readonly index: number;\n\n  /**\n   * @param transport - Connection to Ledger to use\n   * @param index - Index of account\n   * @param address - Address of account\n   */\n  constructor(transport: Transport, index: number, address: Encoded.AccountAddress) {\n    super();\n    this.transport = transport;\n    this.index = index;\n    this.address = address;\n    const scrambleKey = 'w0w';\n    transport.decorateAppAPIMethods(this, ['signTransaction', 'signMessage'], scrambleKey);\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  override async sign(): Promise<Uint8Array> {\n    throw new NotImplementedError('RAW signing using Ledger HW');\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  override async signTypedData(): Promise<Encoded.Signature> {\n    throw new NotImplementedError('Typed data signing using Ledger HW');\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  override async signDelegationToContract(): Promise<Encoded.Signature> {\n    throw new NotImplementedError('signing delegation to contract using Ledger HW');\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  override async signNameDelegationToContract(): Promise<Encoded.Signature> {\n    throw new NotImplementedError('signing delegation to contract using Ledger HW');\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  override async signOracleQueryDelegationToContract(): Promise<Encoded.Signature> {\n    throw new NotImplementedError('signing delegation to contract using Ledger HW');\n  }\n\n  override async signTransaction(\n    tx: Encoded.Transaction,\n    { innerTx, networkId }: { innerTx?: boolean; networkId?: string } = {},\n  ): Promise<Encoded.Transaction> {\n    if (innerTx != null) throw new NotImplementedError('innerTx option in AccountLedger');\n    if (networkId == null) throw new ArgumentError('networkId', 'provided', networkId);\n\n    const rawTx = decode(tx);\n    let offset = 0;\n    const headerLength = 4 + 1 + 4;\n    const networkIdBuffer = Buffer.from(networkId);\n    const toSend = [];\n    while (offset !== rawTx.length) {\n      const maxChunkSize = offset === 0 ? 150 - headerLength - networkIdBuffer.length : 150;\n      const chunkSize = offset + maxChunkSize > rawTx.length\n        ? rawTx.length - offset : maxChunkSize;\n      const buffer = Buffer.alloc(\n        offset === 0 ? headerLength + networkIdBuffer.length + chunkSize : chunkSize,\n      );\n      if (offset === 0) {\n        let bufferOffset = buffer.writeUInt32BE(this.index, 0);\n        bufferOffset = buffer.writeUInt32BE(rawTx.length, bufferOffset);\n        bufferOffset = buffer.writeUInt8(networkIdBuffer.length, bufferOffset);\n        bufferOffset += networkIdBuffer.copy(\n          buffer,\n          bufferOffset,\n          0,\n          networkIdBuffer.length,\n        );\n        rawTx.copy(buffer, bufferOffset, 0, 150 - bufferOffset);\n      } else {\n        rawTx.copy(buffer, 0, offset, offset + chunkSize);\n      }\n      toSend.push(buffer);\n      offset += chunkSize;\n    }\n    const response = await toSend.reduce(\n      async (previous, data, i) => {\n        await previous;\n        return this.transport.send(\n          CLA,\n          SIGN_TRANSACTION,\n          i === 0 ? 0x00 : 0x80,\n          0x00,\n          data,\n        );\n      },\n      Promise.resolve(Buffer.alloc(0)),\n    );\n    const signatures = [response.subarray(0, 64)];\n\n    return buildTx({ tag: Tag.SignedTx, encodedTx: rawTx, signatures });\n  }\n\n  override async signMessage(messageStr: string): Promise<Uint8Array> {\n    let offset = 0;\n    const message = Buffer.from(messageStr);\n    const toSend = [];\n    while (offset !== message.length) {\n      const maxChunkSize = offset === 0 ? 150 - 4 - 4 : 150;\n      const chunkSize = offset + maxChunkSize > message.length\n        ? message.length - offset : maxChunkSize;\n      const buffer = Buffer.alloc(offset === 0 ? 4 + 4 + chunkSize : chunkSize);\n      if (offset === 0) {\n        buffer.writeUInt32BE(this.index, 0);\n        buffer.writeUInt32BE(message.length, 4);\n        message.copy(buffer, 4 + 4, offset, offset + chunkSize);\n      } else {\n        message.copy(buffer, 0, offset, offset + chunkSize);\n      }\n      toSend.push(buffer);\n      offset += chunkSize;\n    }\n    const response = await toSend.reduce(\n      async (previous, data, i) => {\n        await previous;\n        return this.transport.send(\n          CLA,\n          SIGN_PERSONAL_MESSAGE,\n          i === 0 ? 0x00 : 0x80,\n          0x00,\n          data,\n        );\n      },\n      Promise.resolve(Buffer.alloc(0)),\n    );\n    return response.subarray(0, 64);\n  }\n}\n","import type Transport from '@ledgerhq/hw-transport';\nimport AccountLedger, { CLA, GET_ADDRESS, GET_APP_CONFIGURATION } from './Ledger';\nimport { UnsupportedVersionError } from '../utils/errors';\nimport { Encoded } from '../utils/encoder';\nimport semverSatisfies from '../utils/semver-satisfies';\nimport Node from '../Node';\n\n/**\n * A factory class that generates instances of AccountLedger based on provided transport.\n */\nexport default class AccountLedgerFactory {\n  readonly transport: Transport;\n\n  private readonly versionCheckPromise: Promise<void>;\n\n  /**\n   * @param transport - Connection to Ledger to use\n   */\n  constructor(transport: Transport) {\n    this.transport = transport;\n    this.versionCheckPromise = this.getAppConfiguration().then(({ version }) => {\n      const args = [version, '0.4.4', '0.5.0'] as const;\n      if (!semverSatisfies(...args)) throw new UnsupportedVersionError('app on ledger', ...args);\n    });\n    const scrambleKey = 'w0w';\n    transport.decorateAppAPIMethods(this, ['getAddress', 'getAppConfiguration'], scrambleKey);\n  }\n\n  /**\n   * @returns the version of app installed on Ledger wallet\n   */\n  async getAppConfiguration(): Promise<{ version: string }> {\n    await this.versionCheckPromise;\n    const response = await this.transport.send(CLA, GET_APP_CONFIGURATION, 0x00, 0x00);\n    return {\n      version: [response[1], response[2], response[3]].join('.'),\n    };\n  }\n\n  /**\n   * Get `ak_`-prefixed address for a given account index.\n   * @param accountIndex - Index of account\n   * @param verify - Ask user to confirm address by showing it on the device screen\n   */\n  async getAddress(accountIndex: number, verify = false): Promise<Encoded.AccountAddress> {\n    await this.versionCheckPromise;\n    const buffer = Buffer.alloc(4);\n    buffer.writeUInt32BE(accountIndex, 0);\n    const response = await this.transport.send(\n      CLA,\n      GET_ADDRESS,\n      verify ? 0x01 : 0x00,\n      0x00,\n      buffer,\n    );\n    const addressLength = response[0];\n    return response.subarray(1, 1 + addressLength).toString('ascii') as Encoded.AccountAddress;\n  }\n\n  /**\n   * Get an instance of AccountLedger for a given account index.\n   * @param accountIndex - Index of account\n   */\n  async initialize(accountIndex: number): Promise<AccountLedger> {\n    await this.versionCheckPromise;\n    return new AccountLedger(this.transport, accountIndex, await this.getAddress(accountIndex));\n  }\n\n  /**\n   * Discovers accounts on Ledger that already have been used (has any on-chain transactions).\n   * It returns an empty array if none of accounts been used.\n   * If a used account is preceded by an unused account then it would be ignored.\n   * @param node - Instance of Node to get account information from\n   */\n  async discover(node: Node): Promise<AccountLedger[]> {\n    let index = 0;\n    const result = [];\n    let account;\n    do {\n      if (account != null) result.push(account);\n      account = await this.initialize(index);\n      index += 1;\n    } while (await node.getAccountByPubkey(account.address).then(() => true, () => false));\n    return result;\n  }\n}\n","import { Encoded } from '../../utils/encoder';\n\ninterface FunctionAci {\n  arguments: any[];\n  name: string;\n  payable: boolean;\n  returns: any;\n  stateful: boolean;\n}\n\nexport type Aci = Array<{\n  contract?: {\n    name: string;\n    event?: any;\n    functions: FunctionAci[];\n    kind: string; // known values: 'contract_main'\n    payable: boolean;\n    typedefs: any[];\n  };\n}>;\n\n/**\n * A base class for all compiler implementations\n */\nexport default abstract class CompilerBase {\n  /**\n   * Compile contract by contract's path\n   * Available only in Node.js\n   * @param path - Path to contract source code\n   * @returns ACI and bytecode\n   */\n  abstract compile(path: string): Promise<{\n    bytecode: Encoded.ContractBytearray;\n    aci: Aci;\n  }>;\n\n  /**\n   * Compile contract by contract's source code\n   * @param sourceCode - Contract source code as string\n   * @param fileSystem - A map of contract filename to the corresponding contract source code to\n   * include into the main contract\n   * @example\n   * ```js\n   * {\n   *   'library.aes': 'namespace TestLib =\\n  function sum(x: int, y: int) : int = x + y'\n   * }\n   * ```\n   * @returns ACI and bytecode\n   */\n  abstract compileBySourceCode(\n    sourceCode: string,\n    fileSystem?: Record<string, string>,\n  ): Promise<{\n    bytecode: Encoded.ContractBytearray;\n    aci: Aci;\n  }>;\n\n  /**\n   * Generate contract's ACI by contract's path\n   * Available only in Node.js\n   * @param path - Path to contract source code\n   * @returns ACI\n   */\n  abstract generateAci(path: string): Promise<Aci>;\n\n  /**\n   * Generate contract's ACI by contract's source code\n   * @param sourceCode - Contract source code as string\n   * @param fileSystem - A map of contract filename to the corresponding contract source code to\n   * include into the main contract\n   * @example\n   * ```js\n   * {\n   *   'library.aes': 'namespace TestLib =\\n  function sum(x: int, y: int) : int = x + y'\n   * }\n   * ```\n   * @returns ACI\n   */\n  abstract generateAciBySourceCode(\n    sourceCode: string,\n    fileSystem?: Record<string, string>,\n  ): Promise<Aci>;\n\n  /**\n   * Verify that a contract bytecode is the result of compiling the given source code\n   * Available only in Node.js\n   * @param bytecode - Contract bytecode to verify\n   * @param path - Path to contract source code\n   * @returns ACI and bytecode\n   */\n  abstract validate(bytecode: Encoded.ContractBytearray, path: string): Promise<boolean>;\n\n  /**\n   * Verify that a contract bytecode is the result of compiling the given source code\n   * @param bytecode - Contract bytecode to verify\n   * @param sourceCode - Contract source code as string\n   * @param fileSystem - A map of contract filename to the corresponding contract source code to\n   * include into the main contract\n   * @example\n   * ```js\n   * {\n   *   'library.aes': 'namespace TestLib =\\n  function sum(x: int, y: int) : int = x + y'\n   * }\n   * ```\n   */\n  abstract validateBySourceCode(\n    bytecode: Encoded.ContractBytearray,\n    sourceCode: string,\n    fileSystem?: Record<string, string>,\n  ): Promise<boolean>;\n\n  /**\n   * @returns Compiler version\n   */\n  abstract version(): Promise<string>;\n}\n","import * as coreClient from \"@azure/core-client\";\n\nexport const Contract: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Contract\",\n    modelProperties: {\n      code: {\n        serializedName: \"code\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      options: {\n        serializedName: \"options\",\n        type: {\n          name: \"Composite\",\n          className: \"CompileOpts\"\n        }\n      }\n    }\n  }\n};\n\nexport const CompileOpts: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CompileOpts\",\n    modelProperties: {\n      fileSystem: {\n        serializedName: \"file_system\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"any\" } }\n        }\n      },\n      srcFile: {\n        serializedName: \"src_file\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const CompilerError: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CompilerError\",\n    modelProperties: {\n      type: {\n        serializedName: \"type\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      pos: {\n        serializedName: \"pos\",\n        type: {\n          name: \"Composite\",\n          className: \"ErrorPos\"\n        }\n      },\n      message: {\n        serializedName: \"message\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      context: {\n        serializedName: \"context\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ErrorPos: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ErrorPos\",\n    modelProperties: {\n      file: {\n        serializedName: \"file\",\n        type: {\n          name: \"String\"\n        }\n      },\n      line: {\n        serializedName: \"line\",\n        required: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      col: {\n        serializedName: \"col\",\n        required: true,\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const CompileResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CompileResult\",\n    modelProperties: {\n      bytecode: {\n        serializedName: \"bytecode\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      aci: {\n        serializedName: \"aci\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Dictionary\",\n              value: { type: { name: \"any\" } }\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const SophiaCallResultInput: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SophiaCallResultInput\",\n    modelProperties: {\n      source: {\n        serializedName: \"source\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      options: {\n        serializedName: \"options\",\n        type: {\n          name: \"Composite\",\n          className: \"CompileOpts\"\n        }\n      },\n      function: {\n        serializedName: \"function\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      callResult: {\n        serializedName: \"call-result\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      callValue: {\n        serializedName: \"call-value\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const BytecodeCallResultInput: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"BytecodeCallResultInput\",\n    modelProperties: {\n      bytecode: {\n        serializedName: \"bytecode\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      function: {\n        serializedName: \"function\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      callResult: {\n        serializedName: \"call-result\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      callValue: {\n        serializedName: \"call-value\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const DecodedCallresult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DecodedCallresult\",\n    modelProperties: {\n      function: {\n        serializedName: \"function\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      result: {\n        serializedName: \"result\",\n        required: true,\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"any\" } }\n        }\n      }\n    }\n  }\n};\n\nexport const FunctionCallInput: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"FunctionCallInput\",\n    modelProperties: {\n      source: {\n        serializedName: \"source\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      options: {\n        serializedName: \"options\",\n        type: {\n          name: \"Composite\",\n          className: \"CompileOpts\"\n        }\n      },\n      function: {\n        serializedName: \"function\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      arguments: {\n        serializedName: \"arguments\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const Calldata: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Calldata\",\n    modelProperties: {\n      calldata: {\n        serializedName: \"calldata\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const DecodeCalldataBytecode: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DecodeCalldataBytecode\",\n    modelProperties: {\n      calldata: {\n        serializedName: \"calldata\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      bytecode: {\n        serializedName: \"bytecode\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const DecodedCalldata: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DecodedCalldata\",\n    modelProperties: {\n      function: {\n        serializedName: \"function\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      arguments: {\n        serializedName: \"arguments\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Dictionary\",\n              value: { type: { name: \"any\" } }\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const ErrorModel: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ErrorModel\",\n    modelProperties: {\n      reason: {\n        serializedName: \"reason\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const DecodeCalldataSource: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DecodeCalldataSource\",\n    modelProperties: {\n      source: {\n        serializedName: \"source\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      options: {\n        serializedName: \"options\",\n        type: {\n          name: \"Composite\",\n          className: \"CompileOpts\"\n        }\n      },\n      calldata: {\n        serializedName: \"calldata\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      function: {\n        serializedName: \"function\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ByteCodeInput: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ByteCodeInput\",\n    modelProperties: {\n      bytecode: {\n        serializedName: \"bytecode\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const FateAssembler: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"FateAssembler\",\n    modelProperties: {\n      fateAssembler: {\n        serializedName: \"fate-assembler\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ValidateByteCodeInput: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ValidateByteCodeInput\",\n    modelProperties: {\n      bytecode: {\n        serializedName: \"bytecode\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      source: {\n        serializedName: \"source\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      options: {\n        serializedName: \"options\",\n        type: {\n          name: \"Composite\",\n          className: \"CompileOpts\"\n        }\n      }\n    }\n  }\n};\n\nexport const CompilerVersion: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CompilerVersion\",\n    modelProperties: {\n      version: {\n        serializedName: \"version\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ApiVersion: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ApiVersion\",\n    modelProperties: {\n      apiVersion: {\n        serializedName: \"api-version\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const SophiaBinaryData: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SophiaBinaryData\",\n    modelProperties: {\n      sophiaType: {\n        serializedName: \"sophia-type\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      data: {\n        serializedName: \"data\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const SophiaJsonData: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SophiaJsonData\",\n    modelProperties: {\n      data: {\n        serializedName: \"data\",\n        required: true,\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"any\" } }\n        }\n      }\n    }\n  }\n};\n","import { OperationParameter, OperationURLParameter } from \"@azure/core-client\";\nimport {\n  Contract as ContractMapper,\n  SophiaCallResultInput as SophiaCallResultInputMapper,\n  BytecodeCallResultInput as BytecodeCallResultInputMapper,\n  FunctionCallInput as FunctionCallInputMapper,\n  DecodeCalldataBytecode as DecodeCalldataBytecodeMapper,\n  DecodeCalldataSource as DecodeCalldataSourceMapper,\n  ByteCodeInput as ByteCodeInputMapper,\n  ValidateByteCodeInput as ValidateByteCodeInputMapper\n} from \"../models/mappers\";\n\nexport const contentType: OperationParameter = {\n  parameterPath: [\"options\", \"contentType\"],\n  mapper: {\n    defaultValue: \"application/json\",\n    isConstant: true,\n    serializedName: \"Content-Type\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const body: OperationParameter = {\n  parameterPath: \"body\",\n  mapper: ContractMapper\n};\n\nexport const accept: OperationParameter = {\n  parameterPath: \"accept\",\n  mapper: {\n    defaultValue: \"application/json\",\n    isConstant: true,\n    serializedName: \"Accept\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const $host: OperationURLParameter = {\n  parameterPath: \"$host\",\n  mapper: {\n    serializedName: \"$host\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  },\n  skipEncoding: true\n};\n\nexport const body1: OperationParameter = {\n  parameterPath: \"body\",\n  mapper: SophiaCallResultInputMapper\n};\n\nexport const body2: OperationParameter = {\n  parameterPath: \"body\",\n  mapper: BytecodeCallResultInputMapper\n};\n\nexport const body3: OperationParameter = {\n  parameterPath: \"body\",\n  mapper: FunctionCallInputMapper\n};\n\nexport const body4: OperationParameter = {\n  parameterPath: \"body\",\n  mapper: DecodeCalldataBytecodeMapper\n};\n\nexport const body5: OperationParameter = {\n  parameterPath: \"body\",\n  mapper: DecodeCalldataSourceMapper\n};\n\nexport const body6: OperationParameter = {\n  parameterPath: \"body\",\n  mapper: ByteCodeInputMapper\n};\n\nexport const body7: OperationParameter = {\n  parameterPath: \"body\",\n  mapper: ValidateByteCodeInputMapper\n};\n","import * as coreClient from \"@azure/core-client\";\nimport * as Parameters from \"./models/parameters\";\nimport * as Mappers from \"./models/mappers\";\nimport {\n  CompilerOptionalParams,\n  Contract,\n  GenerateACIOptionalParams,\n  GenerateACIResponse,\n  CompileContractOptionalParams,\n  CompileContractResponse,\n  SophiaCallResultInput,\n  DecodeCallResultOptionalParams,\n  DecodeCallResultResponse,\n  BytecodeCallResultInput,\n  DecodeCallResultBytecodeOptionalParams,\n  DecodeCallResultBytecodeResponse,\n  FunctionCallInput,\n  EncodeCalldataOptionalParams,\n  EncodeCalldataResponse,\n  DecodeCalldataBytecode,\n  DecodeCalldataBytecodeOptionalParams,\n  DecodeCalldataBytecodeResponse,\n  DecodeCalldataSource,\n  DecodeCalldataSourceOptionalParams,\n  DecodeCalldataSourceResponse,\n  ByteCodeInput,\n  GetFateAssemblerCodeOptionalParams,\n  GetFateAssemblerCodeResponse,\n  ValidateByteCodeInput,\n  ValidateByteCodeOptionalParams,\n  GetCompilerVersionOptionalParams,\n  GetCompilerVersionResponse,\n  VersionOptionalParams,\n  VersionResponse,\n  ApiVersionOptionalParams,\n  ApiVersionResponse,\n  ApiOptionalParams,\n  ApiResponse\n} from \"./models\";\n\nexport class Compiler extends coreClient.ServiceClient {\n  $host: string;\n\n  /**\n   * Initializes a new instance of the Compiler class.\n   * @param $host server parameter\n   * @param options The parameter options\n   */\n  constructor($host: string, options?: CompilerOptionalParams) {\n    if ($host === undefined) {\n      throw new Error(\"'$host' cannot be null\");\n    }\n\n    // Initializing default values for options\n    if (!options) {\n      options = {};\n    }\n    const defaults: CompilerOptionalParams = {\n      requestContentType: \"application/json; charset=utf-8\"\n    };\n\n    const packageDetails = `azsdk-js-compiler/1.0.0-beta.1`;\n    const userAgentPrefix =\n      options.userAgentOptions && options.userAgentOptions.userAgentPrefix\n        ? `${options.userAgentOptions.userAgentPrefix} ${packageDetails}`\n        : `${packageDetails}`;\n\n    const optionsWithDefaults = {\n      ...defaults,\n      ...options,\n      userAgentOptions: {\n        userAgentPrefix\n      },\n      endpoint: options.endpoint ?? options.baseUri ?? \"{$host}\"\n    };\n    super(optionsWithDefaults);\n    // Parameter assignments\n    this.$host = $host;\n  }\n\n  /**\n   * Generate an Aeternity Contract Interface (ACI) for contract\n   * @param body contract code\n   * @param options The options parameters.\n   */\n  generateACI(\n    body: Contract,\n    options?: GenerateACIOptionalParams\n  ): Promise<GenerateACIResponse> {\n    return this.sendOperationRequest(\n      { body, options },\n      generateACIOperationSpec\n    );\n  }\n\n  /**\n   * Compile a sophia contract from source and return byte code and ACI\n   * @param body contract code\n   * @param options The options parameters.\n   */\n  compileContract(\n    body: Contract,\n    options?: CompileContractOptionalParams\n  ): Promise<CompileContractResponse> {\n    return this.sendOperationRequest(\n      { body, options },\n      compileContractOperationSpec\n    );\n  }\n\n  /**\n   * Decode the result of contract call\n   * @param body Binary data in Sophia ABI format\n   * @param options The options parameters.\n   */\n  decodeCallResult(\n    body: SophiaCallResultInput,\n    options?: DecodeCallResultOptionalParams\n  ): Promise<DecodeCallResultResponse> {\n    return this.sendOperationRequest(\n      { body, options },\n      decodeCallResultOperationSpec\n    );\n  }\n\n  /**\n   * Decode the result of contract call from Bytecode\n   * @param body Call result + compiled contract\n   * @param options The options parameters.\n   */\n  decodeCallResultBytecode(\n    body: BytecodeCallResultInput,\n    options?: DecodeCallResultBytecodeOptionalParams\n  ): Promise<DecodeCallResultBytecodeResponse> {\n    return this.sendOperationRequest(\n      { body, options },\n      decodeCallResultBytecodeOperationSpec\n    );\n  }\n\n  /**\n   * Encode Sophia function call according to sophia ABI.\n   * @param body Sophia function call - contract code + function name + arguments\n   * @param options The options parameters.\n   */\n  encodeCalldata(\n    body: FunctionCallInput,\n    options?: EncodeCalldataOptionalParams\n  ): Promise<EncodeCalldataResponse> {\n    return this.sendOperationRequest(\n      { body, options },\n      encodeCalldataOperationSpec\n    );\n  }\n\n  /**\n   * Identify function name and arguments in Calldata for a compiled contract\n   * @param body Calldata + compiled contract\n   * @param options The options parameters.\n   */\n  decodeCalldataBytecode(\n    body: DecodeCalldataBytecode,\n    options?: DecodeCalldataBytecodeOptionalParams\n  ): Promise<DecodeCalldataBytecodeResponse> {\n    return this.sendOperationRequest(\n      { body, options },\n      decodeCalldataBytecodeOperationSpec\n    );\n  }\n\n  /**\n   * Identify function name and arguments in Calldata for a (partial) contract\n   * @param body Calldata + contract (stub) code\n   * @param options The options parameters.\n   */\n  decodeCalldataSource(\n    body: DecodeCalldataSource,\n    options?: DecodeCalldataSourceOptionalParams\n  ): Promise<DecodeCalldataSourceResponse> {\n    return this.sendOperationRequest(\n      { body, options },\n      decodeCalldataSourceOperationSpec\n    );\n  }\n\n  /**\n   * Get FATE assembler code from bytecode\n   * @param body contract byte array\n   * @param options The options parameters.\n   */\n  getFateAssemblerCode(\n    body: ByteCodeInput,\n    options?: GetFateAssemblerCodeOptionalParams\n  ): Promise<GetFateAssemblerCodeResponse> {\n    return this.sendOperationRequest(\n      { body, options },\n      getFateAssemblerCodeOperationSpec\n    );\n  }\n\n  /**\n   * Verify that an encoded byte array is the result of compiling a given contract\n   * @param body contract byte array and source code\n   * @param options The options parameters.\n   */\n  validateByteCode(\n    body: ValidateByteCodeInput,\n    options?: ValidateByteCodeOptionalParams\n  ): Promise<void> {\n    return this.sendOperationRequest(\n      { body, options },\n      validateByteCodeOperationSpec\n    );\n  }\n\n  /**\n   * Extract compiler version from bytecode\n   * @param body contract byte array\n   * @param options The options parameters.\n   */\n  getCompilerVersion(\n    body: ByteCodeInput,\n    options?: GetCompilerVersionOptionalParams\n  ): Promise<GetCompilerVersionResponse> {\n    return this.sendOperationRequest(\n      { body, options },\n      getCompilerVersionOperationSpec\n    );\n  }\n\n  /**\n   * Get the version of the underlying Sophia compiler version\n   * @param options The options parameters.\n   */\n  version(options?: VersionOptionalParams): Promise<VersionResponse> {\n    return this.sendOperationRequest({ options }, versionOperationSpec);\n  }\n\n  /**\n   * Get the version of the API\n   * @param options The options parameters.\n   */\n  apiVersion(options?: ApiVersionOptionalParams): Promise<ApiVersionResponse> {\n    return this.sendOperationRequest({ options }, apiVersionOperationSpec);\n  }\n\n  /**\n   * Get the Api description\n   * @param options The options parameters.\n   */\n  api(options?: ApiOptionalParams): Promise<ApiResponse> {\n    return this.sendOperationRequest({ options }, apiOperationSpec);\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst generateACIOperationSpec: coreClient.OperationSpec = {\n  path: \"/aci\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: {\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: { name: \"Dictionary\", value: { type: { name: \"any\" } } }\n          }\n        }\n      }\n    },\n    400: {\n      bodyMapper: {\n        type: {\n          name: \"Sequence\",\n          element: { type: { name: \"Composite\", className: \"CompilerError\" } }\n        }\n      },\n      isError: true\n    }\n  },\n  requestBody: Parameters.body,\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.contentType, Parameters.accept],\n  mediaType: \"json\",\n  serializer\n};\nconst compileContractOperationSpec: coreClient.OperationSpec = {\n  path: \"/compile\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.CompileResult\n    },\n    400: {\n      bodyMapper: {\n        type: {\n          name: \"Sequence\",\n          element: { type: { name: \"Composite\", className: \"CompilerError\" } }\n        }\n      },\n      isError: true\n    }\n  },\n  requestBody: Parameters.body,\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.contentType, Parameters.accept],\n  mediaType: \"json\",\n  serializer\n};\nconst decodeCallResultOperationSpec: coreClient.OperationSpec = {\n  path: \"/decode-call-result\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: { type: { name: \"any\" } }\n    },\n    400: {\n      bodyMapper: {\n        type: {\n          name: \"Sequence\",\n          element: { type: { name: \"Composite\", className: \"CompilerError\" } }\n        }\n      },\n      isError: true\n    }\n  },\n  requestBody: Parameters.body1,\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.contentType, Parameters.accept],\n  mediaType: \"json\",\n  serializer\n};\nconst decodeCallResultBytecodeOperationSpec: coreClient.OperationSpec = {\n  path: \"/decode-call-result/bytecode\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DecodedCallresult\n    },\n    400: {\n      bodyMapper: {\n        type: {\n          name: \"Sequence\",\n          element: { type: { name: \"Composite\", className: \"CompilerError\" } }\n        }\n      },\n      isError: true\n    }\n  },\n  requestBody: Parameters.body2,\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.contentType, Parameters.accept],\n  mediaType: \"json\",\n  serializer\n};\nconst encodeCalldataOperationSpec: coreClient.OperationSpec = {\n  path: \"/encode-calldata\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Calldata\n    },\n    400: {\n      bodyMapper: {\n        type: {\n          name: \"Sequence\",\n          element: { type: { name: \"Composite\", className: \"CompilerError\" } }\n        }\n      },\n      isError: true\n    }\n  },\n  requestBody: Parameters.body3,\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.contentType, Parameters.accept],\n  mediaType: \"json\",\n  serializer\n};\nconst decodeCalldataBytecodeOperationSpec: coreClient.OperationSpec = {\n  path: \"/decode-calldata/bytecode\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DecodedCalldata\n    },\n    400: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true\n    }\n  },\n  requestBody: Parameters.body4,\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.contentType, Parameters.accept],\n  mediaType: \"json\",\n  serializer\n};\nconst decodeCalldataSourceOperationSpec: coreClient.OperationSpec = {\n  path: \"/decode-calldata/source\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DecodedCalldata\n    },\n    400: {\n      bodyMapper: {\n        type: {\n          name: \"Sequence\",\n          element: { type: { name: \"Composite\", className: \"CompilerError\" } }\n        }\n      },\n      isError: true\n    }\n  },\n  requestBody: Parameters.body5,\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.contentType, Parameters.accept],\n  mediaType: \"json\",\n  serializer\n};\nconst getFateAssemblerCodeOperationSpec: coreClient.OperationSpec = {\n  path: \"/fate-assembler\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.FateAssembler\n    },\n    400: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true\n    }\n  },\n  requestBody: Parameters.body6,\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.contentType, Parameters.accept],\n  mediaType: \"json\",\n  serializer\n};\nconst validateByteCodeOperationSpec: coreClient.OperationSpec = {\n  path: \"/validate-byte-code\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {},\n    400: {\n      bodyMapper: {\n        type: {\n          name: \"Sequence\",\n          element: { type: { name: \"Composite\", className: \"CompilerError\" } }\n        }\n      },\n      isError: true\n    }\n  },\n  requestBody: Parameters.body7,\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.contentType, Parameters.accept],\n  mediaType: \"json\",\n  serializer\n};\nconst getCompilerVersionOperationSpec: coreClient.OperationSpec = {\n  path: \"/compiler-version\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.CompilerVersion\n    },\n    400: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true\n    }\n  },\n  requestBody: Parameters.body6,\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.contentType, Parameters.accept],\n  mediaType: \"json\",\n  serializer\n};\nconst versionOperationSpec: coreClient.OperationSpec = {\n  path: \"/version\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.CompilerVersion\n    },\n    500: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true\n    }\n  },\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst apiVersionOperationSpec: coreClient.OperationSpec = {\n  path: \"/api-version\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ApiVersion\n    },\n    500: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true\n    }\n  },\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst apiOperationSpec: coreClient.OperationSpec = {\n  path: \"/api\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: {\n        type: { name: \"Dictionary\", value: { type: { name: \"any\" } } }\n      }\n    },\n    400: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true\n    }\n  },\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","import { RestError } from '@azure/core-rest-pipeline';\nimport {\n  Compiler as CompilerApi,\n  ErrorModel,\n  CompilerError as CompilerErrorApi,\n} from '../../apis/compiler';\nimport { genErrorFormatterPolicy, genVersionCheckPolicy } from '../../utils/autorest';\nimport CompilerBase, { Aci } from './Base';\nimport { Encoded } from '../../utils/encoder';\nimport { CompilerError, NotImplementedError } from '../../utils/errors';\n\ntype GeneralCompilerError = ErrorModel & {\n  info?: object;\n  parameter?: string;\n};\n\n/**\n * Contract Compiler over HTTP\n *\n * This class include api call's related to contract compiler functionality.\n * @category contract\n * @example CompilerHttp('COMPILER_URL')\n */\nexport default class CompilerHttp extends CompilerBase {\n  readonly api: CompilerApi;\n\n  /**\n   * @param compilerUrl - Url for compiler API\n   * @param options - Options\n   * @param options.ignoreVersion - Don't check compiler version\n   */\n  constructor(compilerUrl: string, { ignoreVersion }: { ignoreVersion?: boolean } = {}) {\n    super();\n    this.api = new CompilerApi(compilerUrl, {\n      allowInsecureConnection: true,\n      additionalPolicies: [\n        genErrorFormatterPolicy((body: GeneralCompilerError | CompilerErrorApi[]) => {\n          let message = '';\n          if ('reason' in body) {\n            message += ` ${body.reason\n            }${body.parameter != null ? ` in ${body.parameter}` : ''\n              // TODO: revising after improving documentation https://github.com/aeternity/aesophia_http/issues/78\n            }${body.info != null ? ` (${JSON.stringify(body.info)})` : ''}`;\n          }\n          if (Array.isArray(body)) {\n            message += `\\n${body\n              .map((e) => `${e.type}:${e.pos.line}:${e.pos.col}: ${e.message}${e.context != null ? ` (${e.context})` : ''}`)\n              .join('\\n')}`;\n          }\n          return message;\n        }),\n      ],\n    });\n    if (ignoreVersion !== true) {\n      const versionPromise = this.api.apiVersion()\n        .then(({ apiVersion }) => apiVersion, (error) => error);\n      this.api.pipeline.addPolicy(\n        genVersionCheckPolicy('compiler', '/api-version', versionPromise, '7.3.0', '8.0.0'),\n      );\n    }\n  }\n\n  async compileBySourceCode(\n    sourceCode: string,\n    fileSystem?: Record<string, string>,\n  ): Promise<{ bytecode: Encoded.ContractBytearray; aci: Aci }> {\n    try {\n      const res = await this.api.compileContract({ code: sourceCode, options: { fileSystem } });\n      // TODO: should be fixed when the compiledAci interface gets updated\n      return res as { bytecode: Encoded.ContractBytearray; aci: Aci };\n    } catch (error) {\n      if (error instanceof RestError && error.statusCode === 400) {\n        throw new CompilerError(error.message);\n      }\n      throw error;\n    }\n  }\n\n  // eslint-disable-next-line class-methods-use-this, @typescript-eslint/no-unused-vars\n  async compile(path: string): Promise<{ bytecode: Encoded.ContractBytearray; aci: Aci }> {\n    throw new NotImplementedError('File system access, use CompilerHttpNode instead');\n  }\n\n  async generateAciBySourceCode(\n    sourceCode: string,\n    fileSystem?: Record<string, string>,\n  ): Promise<Aci> {\n    try {\n      return await this.api.generateACI({ code: sourceCode, options: { fileSystem } });\n    } catch (error) {\n      if (error instanceof RestError && error.statusCode === 400) {\n        throw new CompilerError(error.message);\n      }\n      throw error;\n    }\n  }\n\n  // eslint-disable-next-line class-methods-use-this, @typescript-eslint/no-unused-vars\n  async generateAci(path: string): Promise<Aci> {\n    throw new NotImplementedError('File system access, use CompilerHttpNode instead');\n  }\n\n  async validateBySourceCode(\n    bytecode: Encoded.ContractBytearray,\n    sourceCode: string,\n    fileSystem?: Record<string, string>,\n  ): Promise<boolean> {\n    try {\n      await this.api.validateByteCode({ bytecode, source: sourceCode, options: { fileSystem } });\n      return true;\n    } catch {\n      return false;\n    }\n  }\n\n  // eslint-disable-next-line class-methods-use-this, @typescript-eslint/no-unused-vars\n  async validate(bytecode: Encoded.ContractBytearray, path: string): Promise<boolean> {\n    throw new NotImplementedError('File system access, use CompilerHttpNode instead');\n  }\n\n  async version(): Promise<string> {\n    return (await this.api.version()).version;\n  }\n}\n","/**\n * Convert string from snake_case to PascalCase\n * @param s - String to convert\n * @returns Converted string\n */\nexport function snakeToPascal(s: string): string {\n  return s.replace(/_./g, (match) => match[1].toUpperCase());\n}\n\n/**\n * Convert string from PascalCase to snake_case\n * @param s - String to convert\n * @returns Converted string\n */\nexport function pascalToSnake(s: string): string {\n  return s.replace(/[A-Z]/g, (match) => `_${match.toLowerCase()}`);\n}\n","import { w3cwebsocket as W3CWebSocket } from 'websocket';\nimport BigNumber from 'bignumber.js';\nimport type Channel from './Base';\nimport JsonBig from '../utils/json-big';\nimport { pascalToSnake } from '../utils/string';\nimport { Encoded } from '../utils/encoder';\nimport {\n  BaseError,\n  ChannelCallError,\n  ChannelPingTimedOutError,\n  UnexpectedTsError,\n  UnknownChannelStateError,\n  ChannelIncomingMessageError,\n  ChannelError,\n} from '../utils/errors';\nimport { encodeContractAddress } from '../utils/crypto';\nimport { buildTx } from '../tx/builder';\nimport { ensureError } from '../utils/other';\n\nexport interface ChannelEvents {\n  statusChanged: (status: ChannelStatus) => void;\n  stateChanged: (tx: Encoded.Transaction | '') => void;\n  depositLocked: () => void;\n  ownDepositLocked: () => void;\n  withdrawLocked: () => void;\n  ownWithdrawLocked: () => void;\n  peerDisconnected: () => void;\n  channelReestablished: () => void;\n  error: (error: Error) => void;\n  onChainTx: (tx: Encoded.Transaction, details: { info: string; type: string }) => void;\n  message: (message: string | Object) => void;\n  newContract: (contractAddress: Encoded.ContractAddress) => void;\n}\n\nexport interface ChannelAction {\n  guard: (channel: Channel, state?: ChannelFsm) => boolean;\n  action: (channel: Channel, state?: ChannelFsm) => ChannelFsm;\n}\n\ninterface SignOptions {\n  updates?: any[];\n  [k: string]: any;\n}\nexport type SignTxWithTag = (tag: string, tx: Encoded.Transaction, options?: SignOptions) => (\n  Promise<Encoded.Transaction>\n);\n// TODO: SignTx shouldn't return number or null\nexport type SignTx = (tx: Encoded.Transaction, options?: SignOptions) => (\n  Promise<Encoded.Transaction | number | null>\n);\n\nexport interface ChannelOptions {\n  existingFsmId?: Encoded.Bytearray;\n  url: string;\n\n  /**\n   * @see {@link https://github.com/aeternity/protocol/blob/6734de2e4c7cce7e5e626caa8305fb535785131d/node/api/channels_api_usage.md#channel-establishing-parameters}\n   */\n  initiatorId: Encoded.AccountAddress;\n  responderId: Encoded.AccountAddress;\n  lockPeriod: number;\n  pushAmount: number;\n  initiatorAmount: BigNumber;\n  responderAmount: BigNumber;\n  channelReserve?: BigNumber | number;\n  ttl?: number;\n  host: string;\n  port: number;\n  role: 'initiator' | 'responder';\n  minimumDepthStrategy?: 'txfee' | 'plain';\n  minimumDepth?: number;\n  fee?: BigNumber | number;\n  gasPrice?: BigNumber | number;\n\n  signedTx?: string;\n  existingChannelId?: string;\n  offChainTx?: string;\n  reconnectTx?: string;\n  timeoutIdle?: number;\n  timeoutFundingCreate?: number;\n  timeoutFundingSign?: number;\n  timeoutFundingLock?: number;\n  timeoutSign?: number;\n  timeoutAccept?: number;\n  timeoutInitialized?: number;\n  timeoutAwaitingOpen?: number;\n  statePassword?: string;\n  debug: boolean;\n  sign: SignTxWithTag;\n  offchainTx?: string;\n}\n\nexport interface ChannelHandler extends Function {\n  enter?: Function;\n}\n\nexport interface ChannelState {\n  signedTx: Encoded.Transaction;\n  resolve: (r?: any) => void;\n  reject: (e: BaseError) => void;\n  sign: SignTx;\n  handler?: ChannelHandler;\n  onOnChainTx?: (tx: Encoded.Transaction) => void;\n  onOwnWithdrawLocked?: () => void;\n  onWithdrawLocked?: () => void;\n  onOwnDepositLocked?: () => void;\n  onDepositLocked?: () => void;\n  closeTx?: string;\n}\n\nexport interface ChannelFsm {\n  handler: ChannelHandler;\n  state?: ChannelState | {\n    resolve: Function;\n    reject: Function;\n  };\n}\n\nexport interface ChannelMessage {\n  id?: number;\n  method: string;\n  params: any;\n  payload?: any;\n  data?: any;\n  error?: ChannelMessageError;\n}\n\ninterface ChannelMessageError {\n  code: number;\n  message: string;\n  data: [{\n    message: string;\n    code: number;\n  }];\n  request: ChannelMessage;\n}\n\n// Send ping message every 10 seconds\nconst PING_TIMEOUT_MS = 10000;\n// Close connection if pong message is not received within 15 seconds\nconst PONG_TIMEOUT_MS = 15000;\n\nexport function emit<E extends keyof ChannelEvents>(\n  channel: Channel,\n  ...args: [E, ...Parameters<ChannelEvents[E]>]\n): void {\n  const [eventName, ...rest] = args;\n  channel._eventEmitter.emit(eventName, ...rest);\n}\n\nfunction enterState(channel: Channel, nextState: ChannelFsm): void {\n  if (nextState == null) {\n    throw new UnknownChannelStateError();\n  }\n  channel._fsm = nextState;\n  if (nextState?.handler?.enter != null) {\n    nextState.handler.enter(channel);\n  }\n  // eslint-disable-next-line @typescript-eslint/no-use-before-define\n  void dequeueAction(channel);\n}\n\n// TODO: rewrite to enum\nexport type ChannelStatus = 'connecting' | 'connected' | 'accepted' | 'halfSigned' | 'signed'\n| 'open' | 'closing' | 'closed' | 'died' | 'disconnected';\n\nexport function changeStatus(channel: Channel, newStatus: ChannelStatus): void {\n  if (newStatus === channel._status) return;\n  channel._status = newStatus;\n  emit(channel, 'statusChanged', newStatus);\n}\n\nexport function changeState(channel: Channel, newState: Encoded.Transaction | ''): void {\n  channel._state = newState;\n  emit(channel, 'stateChanged', newState);\n}\n\nfunction send(channel: Channel, message: ChannelMessage): void {\n  if (channel._options.debug) console.log('Send message: ', message);\n  channel._websocket.send(JsonBig.stringify({ jsonrpc: '2.0', ...message }));\n}\n\nexport function notify(channel: Channel, method: string, params: object = {}): void {\n  send(channel, { method, params });\n}\n\nasync function dequeueAction(channel: Channel): Promise<void> {\n  if (channel._isActionQueueLocked) return;\n  const queue = channel._actionQueue;\n  if (queue.length === 0) return;\n  const index = queue.findIndex((action) => action.guard(channel, channel._fsm));\n  if (index === -1) return;\n  channel._actionQueue = queue.filter((_, i) => index !== i);\n  channel._isActionQueueLocked = true;\n  const nextState: ChannelFsm = await queue[index].action(channel, channel._fsm);\n  channel._isActionQueueLocked = false;\n  enterState(channel, nextState);\n}\n\nexport async function enqueueAction(\n  channel: Channel,\n  guard: ChannelAction['guard'],\n  action: () => { handler: ChannelHandler; state?: Partial<ChannelState> },\n): Promise<any> {\n  const promise = new Promise((resolve, reject) => {\n    channel._actionQueue.push({\n      guard,\n      action() {\n        const res = action();\n        return { ...res, state: { ...res.state, resolve, reject } };\n      },\n    });\n  });\n  void dequeueAction(channel);\n  return promise;\n}\n\nasync function handleMessage(channel: Channel, message: ChannelMessage): Promise<void> {\n  const { handler, state: st } = channel._fsm;\n  const nextState = await Promise.resolve(handler(channel, message, st));\n  enterState(channel, nextState);\n  // TODO: emit message and handler name (?) to move this code to Contract constructor\n  if (\n    message?.params?.data?.updates?.[0]?.op === 'OffChainNewContract'\n    // if name is channelOpen, the contract was created by other participant\n    && nextState?.handler.name === 'channelOpen'\n  ) {\n    const round = channel.round();\n    if (round == null) throw new UnexpectedTsError('Round is null');\n    const owner = message?.params?.data?.updates?.[0]?.owner;\n    emit(channel, 'newContract', encodeContractAddress(owner, round + 1));\n  }\n}\n\nasync function dequeueMessage(channel: Channel): Promise<void> {\n  if (channel._isMessageQueueLocked) return;\n  channel._isMessageQueueLocked = true;\n  while (channel._messageQueue.length > 0) {\n    const message = channel._messageQueue.shift();\n    if (message == null) throw new UnexpectedTsError();\n    try {\n      await handleMessage(channel, message);\n    } catch (error) {\n      ensureError(error);\n      emit(channel, 'error', new ChannelIncomingMessageError(error, message));\n    }\n  }\n  channel._isMessageQueueLocked = false;\n}\n\nexport function disconnect(channel: Channel): void {\n  channel._websocket.close();\n  clearTimeout(channel._pingTimeoutId);\n}\n\nfunction ping(channel: Channel): void {\n  clearTimeout(channel._pingTimeoutId);\n  channel._pingTimeoutId = setTimeout(() => {\n    notify(channel, 'channels.system', { action: 'ping' });\n    channel._pingTimeoutId = setTimeout(() => {\n      disconnect(channel);\n      emit(channel, 'error', new ChannelPingTimedOutError());\n    }, PONG_TIMEOUT_MS);\n  }, PING_TIMEOUT_MS);\n}\n\nfunction onMessage(channel: Channel, data: string): void {\n  const message = JsonBig.parse(data);\n  if (channel._options.debug) console.log('Receive message: ', message);\n  if (message.id != null) {\n    const callback = channel._rpcCallbacks.get(message.id);\n    if (callback == null) {\n      emit(channel, 'error', new ChannelError(`Can't find callback by id: ${message.id}`));\n      return;\n    }\n    try {\n      callback(message);\n    } finally {\n      channel._rpcCallbacks.delete(message.id);\n    }\n    return;\n  }\n  if (message.method === 'channels.message') {\n    emit(channel, 'message', message.params.data.message);\n    return;\n  }\n  if (message.method === 'channels.system.pong') {\n    if (message.params.channel_id === channel._channelId || channel._channelId == null) {\n      ping(channel);\n    }\n    return;\n  }\n  channel._messageQueue.push(message);\n  void dequeueMessage(channel);\n}\n\nexport async function call(channel: Channel, method: string, params: any): Promise<any> {\n  return new Promise((resolve, reject) => {\n    const id = channel._nextRpcMessageId;\n    channel._nextRpcMessageId += 1;\n    channel._rpcCallbacks.set(id, (\n      message: { result: PromiseLike<any>; error?: ChannelMessageError },\n    ) => {\n      if (message.error != null) {\n        const details = message.error.data[0].message ?? '';\n        reject(new ChannelCallError(message.error.message + details));\n      } else resolve(message.result);\n    });\n    send(channel, { method, id, params });\n  });\n}\n\nexport async function initialize(\n  channel: Channel,\n  connectionHandler: Function,\n  openHandler: Function,\n  { url, ...channelOptions }: ChannelOptions,\n): Promise<void> {\n  channel._options = { url, ...channelOptions };\n  channel._fsm = { handler: connectionHandler };\n\n  const wsUrl = new URL(url);\n  Object.entries(channelOptions)\n    .filter(([key]) => !['sign', 'debug'].includes(key))\n    .forEach(([key, value]) => wsUrl.searchParams.set(pascalToSnake(key), value.toString()));\n  wsUrl.searchParams.set('protocol', 'json-rpc');\n  changeStatus(channel, 'connecting');\n  channel._websocket = new W3CWebSocket(wsUrl.toString());\n  await new Promise<void>((resolve, reject) => {\n    Object.assign(channel._websocket, {\n      onerror: reject,\n      onopen: async () => {\n        resolve();\n        changeStatus(channel, 'connected');\n        if (channelOptions.reconnectTx != null) {\n          enterState(channel, { handler: openHandler });\n          const { signedTx } = await channel.state();\n          if (signedTx == null) {\n            throw new ChannelError('`signedTx` missed in state while reconnection');\n          }\n          changeState(channel, buildTx(signedTx));\n        }\n        ping(channel);\n      },\n      onclose: () => {\n        changeStatus(channel, 'disconnected');\n        clearTimeout(channel._pingTimeoutId);\n      },\n      onmessage: ({ data }: { data: string }) => onMessage(channel, data),\n    });\n  });\n}\n","/* eslint-disable consistent-return */\n/* eslint-disable default-case */\n/* eslint-disable @typescript-eslint/no-use-before-define */\nimport {\n  ChannelState,\n  changeStatus,\n  changeState,\n  notify,\n  emit,\n  disconnect,\n  ChannelMessage,\n  ChannelFsm,\n  SignTx,\n  ChannelStatus,\n  ChannelEvents,\n} from './internal';\nimport { unpackTx, buildTx } from '../tx/builder';\nimport { decode, Encoded } from '../utils/encoder';\nimport {\n  IllegalArgumentError,\n  InsufficientBalanceError,\n  ChannelConnectionError,\n  UnexpectedChannelMessageError,\n  ChannelError,\n} from '../utils/errors';\nimport type Channel from './Base';\nimport { Tag } from '../tx/builder/constants';\nimport { snakeToPascal } from '../utils/string';\n\nexport async function appendSignature(\n  tx: Encoded.Transaction,\n  signFn: SignTx,\n): Promise<Encoded.Transaction | number | null> {\n  const { signatures, encodedTx } = unpackTx(tx, Tag.SignedTx);\n  const payloadTx = buildTx(encodedTx);\n  const result = await signFn(payloadTx);\n  if (typeof result === 'string') {\n    const { signatures: signatures2 } = unpackTx(result, Tag.SignedTx);\n    return buildTx({\n      tag: Tag.SignedTx,\n      signatures: signatures.concat(signatures2),\n      encodedTx: decode(payloadTx),\n    });\n  }\n  return result;\n}\n\nexport async function signAndNotify(\n  channel: Channel,\n  method: string,\n  data: {\n    tx?: Encoded.Transaction;\n    signed_tx?: Encoded.Transaction;\n  },\n  signFn: SignTx,\n): Promise<boolean> {\n  let signedTx;\n  if (data.tx != null) signedTx = await signFn(data.tx);\n  else if (data.signed_tx != null) signedTx = await appendSignature(data.signed_tx, signFn);\n  else throw new ChannelError('Can\\'t find transaction in message');\n  const isError = typeof signedTx !== 'string';\n  const key = data.tx != null ? 'tx' : 'signed_tx';\n  notify(channel, method, isError ? { error: signedTx ?? 1 } : { [key]: signedTx });\n  return isError;\n}\n\nexport function handleUnexpectedMessage(\n  _channel: Channel,\n  message: ChannelMessage,\n  state: ChannelState,\n): ChannelFsm {\n  state?.reject?.(Object.assign(\n    new UnexpectedChannelMessageError(`Unexpected message received:\\n\\n${JSON.stringify(message)}`),\n    { wsMessage: message },\n  ));\n  return { handler: channelOpen };\n}\n\nexport function awaitingCompletion(\n  channel: Channel,\n  message: ChannelMessage,\n  state: ChannelState,\n  onSuccess?: typeof handleUnexpectedMessage,\n): ChannelFsm {\n  if (onSuccess != null && message.method === 'channels.update') {\n    return onSuccess(channel, message, state);\n  }\n  if (message.method === 'channels.conflict') {\n    state.resolve({\n      accepted: false,\n      errorCode: message.params.data.error_code,\n      errorMessage: message.params.data.error_msg,\n    });\n    return { handler: channelOpen };\n  }\n  if (message.method === 'channels.info') {\n    if (message.params.data.event === 'aborted_update') {\n      state.resolve({ accepted: false });\n      return { handler: channelOpen };\n    }\n  }\n  if (message.error != null) {\n    const codes = message.error.data.map((d) => d.code);\n    if (codes.includes(1001)) {\n      state.reject(new InsufficientBalanceError('Insufficient balance'));\n    } else if (codes.includes(1002)) {\n      state.reject(new IllegalArgumentError('Amount cannot be negative'));\n    } else {\n      state.reject(new ChannelConnectionError(message.error.message));\n    }\n    return { handler: channelOpen };\n  }\n  return handleUnexpectedMessage(channel, message, state);\n}\n\nexport function awaitingConnection(\n  channel: Channel,\n  message: ChannelMessage,\n): ChannelFsm | undefined {\n  if (message.method === 'channels.info') {\n    const channelInfoStatus: string = message.params.data.event;\n\n    let nextStatus: ChannelStatus | null = null;\n    if (channelInfoStatus === 'channel_accept') nextStatus = 'accepted';\n    if (channelInfoStatus === 'funding_created') nextStatus = 'halfSigned';\n    if (nextStatus != null) {\n      changeStatus(channel, nextStatus);\n      return { handler: awaitingChannelCreateTx };\n    }\n\n    if (message.params.data.event === 'channel_reestablished') {\n      return { handler: awaitingOpenConfirmation };\n    }\n    if (message.params.data.event === 'fsm_up') {\n      channel._fsmId = message.params.data.fsm_id;\n      return { handler: awaitingConnection };\n    }\n    return { handler: awaitingConnection };\n  }\n  if (message.method === 'channels.error') {\n    emit(channel, 'error', new ChannelConnectionError(message?.payload?.message));\n    return { handler: channelClosed };\n  }\n}\n\nexport async function awaitingReconnection(\n  channel: Channel,\n  message: ChannelMessage,\n  state: ChannelState,\n): Promise<ChannelFsm> {\n  if (message.method === 'channels.info') {\n    if (message.params.data.event === 'fsm_up') {\n      channel._fsmId = message.params.data.fsm_id;\n      const { signedTx } = await channel.state();\n      changeState(channel, signedTx == null ? '' : buildTx(signedTx));\n      return { handler: channelOpen };\n    }\n  }\n  return handleUnexpectedMessage(channel, message, state);\n}\n\nexport async function awaitingChannelCreateTx(\n  channel: Channel,\n  message: ChannelMessage,\n): Promise<ChannelFsm | undefined> {\n  const tag = channel._options.role === 'initiator' ? 'initiator_sign' : 'responder_sign';\n  if (message.method === `channels.sign.${tag}`) {\n    await signAndNotify(\n      channel,\n      `channels.${tag}`,\n      message.params.data,\n      async (tx) => channel._options.sign(tag, tx),\n    );\n    return { handler: awaitingOnChainTx };\n  }\n}\n\nexport function awaitingOnChainTx(\n  channel: Channel,\n  message: ChannelMessage,\n): ChannelFsm | undefined {\n  function awaitingBlockInclusion(_: Channel, message2: ChannelMessage): ChannelFsm | undefined {\n    if (message2.method === 'channels.info') {\n      switch (message2.params.data.event) {\n        case 'funding_created':\n        case 'own_funding_locked':\n          return { handler: awaitingBlockInclusion };\n        case 'funding_locked':\n          return { handler: awaitingOpenConfirmation };\n      }\n    }\n    if (message2.method === 'channels.on_chain_tx') {\n      emit(channel, 'onChainTx', message2.params.data.tx, {\n        info: message2.params.data.info,\n        type: message2.params.data.type,\n      });\n      return { handler: awaitingBlockInclusion };\n    }\n  }\n\n  if (message.method === 'channels.on_chain_tx') {\n    const { info } = message.params.data;\n    const { role } = channel._options;\n    if ((info === 'funding_signed' && role === 'initiator')\n      || (info === 'funding_created' && role === 'responder')) {\n      return { handler: awaitingBlockInclusion };\n    }\n  }\n  if (\n    message.method === 'channels.info'\n    && message.params.data.event === 'funding_signed'\n    && channel._options.role === 'initiator'\n  ) {\n    channel._channelId = message.params.channel_id;\n    changeStatus(channel, 'signed');\n    return { handler: awaitingOnChainTx };\n  }\n}\n\nfunction awaitingOpenConfirmation(\n  channel: Channel,\n  message: ChannelMessage,\n): ChannelFsm | undefined {\n  if (message.method === 'channels.info' && message.params.data.event === 'open') {\n    channel._channelId = message.params.channel_id;\n    return {\n      handler(_: Channel, message2: ChannelMessage): ChannelFsm | undefined {\n        if (message2.method === 'channels.update') {\n          changeState(channel, message2.params.data.state);\n          return { handler: channelOpen };\n        }\n      },\n    };\n  }\n}\n\nexport async function channelOpen(\n  channel: Channel,\n  message: ChannelMessage,\n  state: ChannelState,\n): Promise<ChannelFsm | undefined> {\n  switch (message.method) {\n    case 'channels.info':\n      switch (message.params.data.event) {\n        case 'update':\n        case 'withdraw_created':\n        case 'deposit_created':\n          return { handler: awaitingTxSignRequest };\n        case 'own_withdraw_locked':\n        case 'withdraw_locked':\n        case 'own_deposit_locked':\n        case 'deposit_locked':\n        case 'peer_disconnected':\n        case 'channel_reestablished':\n        case 'open':\n          // TODO: Better handling of peer_disconnected event.\n          //\n          //       We should enter intermediate state where offchain transactions\n          //       are blocked until channel is reestablished.\n          emit(channel, snakeToPascal(message.params.data.event) as keyof ChannelEvents);\n          return { handler: channelOpen };\n        case 'fsm_up':\n          channel._fsmId = message.params.data.fsm_id;\n          return { handler: channelOpen };\n        case 'timeout':\n        case 'close_mutual':\n          return { handler: channelOpen };\n        case 'closing':\n          changeStatus(channel, 'closing');\n          return { handler: channelOpen };\n        case 'closed_confirmed':\n          changeStatus(channel, 'closed');\n          return { handler: channelClosed };\n        case 'died':\n          changeStatus(channel, 'died');\n          return { handler: channelClosed };\n        case 'shutdown':\n          return { handler: channelOpen };\n      }\n      break;\n    case 'channels.on_chain_tx':\n      emit(channel, 'onChainTx', message.params.data.tx, {\n        info: message.params.data.info,\n        type: message.params.data.type,\n      });\n      return { handler: channelOpen };\n    case 'channels.leave':\n      // TODO: emit event\n      return { handler: channelOpen };\n    case 'channels.update':\n      changeState(channel, message.params.data.state);\n      return { handler: channelOpen };\n    case 'channels.sign.shutdown_sign_ack':\n      return awaitingTxSignRequest(channel, message, state);\n  }\n}\nchannelOpen.enter = (channel: Channel) => {\n  changeStatus(channel, 'open');\n};\n\nasync function awaitingTxSignRequest(\n  channel: Channel,\n  message: ChannelMessage,\n  state: ChannelState,\n): Promise<ChannelFsm> {\n  const [, tag] = message.method.match(/^channels\\.sign\\.([^.]+)$/) ?? [];\n  if (tag == null) return handleUnexpectedMessage(channel, message, state);\n  const isError = await signAndNotify(\n    channel,\n    `channels.${tag}`,\n    message.params.data,\n    async (tx) => channel._options.sign(tag, tx, { updates: message.params.data.updates }),\n  );\n\n  function awaitingUpdateConflict(_: Channel, message2: ChannelMessage): ChannelFsm {\n    if (message2.error != null) {\n      return { handler: awaitingUpdateConflict, state };\n    }\n    if (message2.method === 'channels.conflict') {\n      return { handler: channelOpen };\n    }\n    return handleUnexpectedMessage(channel, message2, state);\n  }\n  return isError ? { handler: awaitingUpdateConflict, state } : { handler: channelOpen };\n}\n\nexport async function awaitingShutdownTx(\n  channel: Channel,\n  message: ChannelMessage,\n  state: ChannelState,\n): Promise<ChannelFsm> {\n  if (message.method !== 'channels.sign.shutdown_sign') {\n    return handleUnexpectedMessage(channel, message, state);\n  }\n  await signAndNotify(\n    channel,\n    'channels.shutdown_sign',\n    message.params.data,\n    async (tx) => state.sign(tx),\n  );\n  return {\n    handler(_: Channel, message2: ChannelMessage): ChannelFsm {\n      if (message2.method !== 'channels.on_chain_tx') {\n        return handleUnexpectedMessage(channel, message2, state);\n      }\n      // state.resolve(message.params.data.tx)\n      return { handler: channelClosed, state };\n    },\n    state,\n  };\n}\n\nexport function awaitingLeave(\n  channel: Channel,\n  message: ChannelMessage,\n  state: ChannelState,\n): ChannelFsm {\n  if (message.method === 'channels.leave') {\n    state.resolve({ channelId: message.params.channel_id, signedTx: message.params.data.state });\n    disconnect(channel);\n    return { handler: channelClosed };\n  }\n  if (message.method === 'channels.error') {\n    state.reject(new ChannelConnectionError(message.data.message));\n    return { handler: channelOpen };\n  }\n  return handleUnexpectedMessage(channel, message, state);\n}\n\nexport function channelClosed(\n  _channel: Channel,\n  message: ChannelMessage,\n  state: ChannelState,\n): ChannelFsm {\n  if (state == null) return { handler: channelClosed };\n  if (message.params.data.event === 'closing') return { handler: channelClosed, state };\n  if (message.params.data.info === 'channel_closed') {\n    state.closeTx = message.params.data.tx;\n    return { handler: channelClosed, state };\n  }\n  if (message.params.data.event === 'closed_confirmed') {\n    state.resolve(state.closeTx);\n    return { handler: channelClosed };\n  }\n  return { handler: channelClosed, state };\n}\n","import EventEmitter from 'events';\nimport { w3cwebsocket as W3CWebSocket } from 'websocket';\nimport { snakeToPascal } from '../utils/string';\nimport { buildTx, unpackTx } from '../tx/builder';\nimport { Tag } from '../tx/builder/constants';\nimport * as handlers from './handlers';\nimport {\n  initialize,\n  enqueueAction,\n  notify,\n  call,\n  disconnect as channelDisconnect,\n  SignTx,\n  ChannelOptions,\n  ChannelState,\n  ChannelHandler,\n  ChannelAction,\n  ChannelStatus,\n  ChannelFsm,\n  ChannelMessage,\n  ChannelEvents,\n} from './internal';\nimport { ChannelError } from '../utils/errors';\nimport { Encoded } from '../utils/encoder';\nimport { TxUnpacked } from '../tx/builder/schema.generated';\n\nfunction snakeToPascalObjKeys<Type>(obj: object): Type {\n  return Object.entries(obj).reduce((result, [key, val]) => ({\n    ...result,\n    [snakeToPascal(key)]: val,\n  }), {}) as Type;\n}\n\n/**\n * Channel\n * @example\n * ```js\n * await Channel.initialize({\n *   url: 'ws://localhost:3001',\n *   role: 'initiator'\n *   initiatorId: 'ak_Y1NRjHuoc3CGMYMvCmdHSBpJsMDR6Ra2t5zjhRcbtMeXXLpLH',\n *   responderId: 'ak_V6an1xhec1xVaAhLuak7QoEbi6t7w5hEtYWp9bMKaJ19i6A9E',\n *   initiatorAmount: 1e18,\n *   responderAmount: 1e18,\n *   pushAmount: 0,\n *   channelReserve: 0,\n *   ttl: 1000,\n *   host: 'localhost',\n *   port: 3002,\n *   lockPeriod: 10,\n *   async sign (tag, tx) => await account.signTransaction(tx)\n * })\n * ```\n */\nexport default class Channel {\n  _eventEmitter = new EventEmitter();\n\n  _pingTimeoutId!: NodeJS.Timeout;\n\n  _nextRpcMessageId = 0;\n\n  _rpcCallbacks = new Map<number, (message: object) => void>();\n\n  _fsmId?: Encoded.Bytearray;\n\n  _messageQueue: ChannelMessage[] = [];\n\n  _isMessageQueueLocked = false;\n\n  _actionQueue: ChannelAction[] = [];\n\n  _isActionQueueLocked = false;\n\n  _status: ChannelStatus = 'disconnected';\n\n  _fsm!: ChannelFsm;\n\n  _websocket!: W3CWebSocket;\n\n  _state: Encoded.Transaction | '' = '';\n\n  _options!: ChannelOptions;\n\n  _channelId?: Encoded.Channel;\n\n  /**\n   * @param options - Channel params\n   * @param options.url - Channel url (for example: \"ws://localhost:3001\")\n   * @param options.role - Participant role (\"initiator\" or \"responder\")\n   * @param options.initiatorId - Initiator's public key\n   * @param options.responderId - Responder's public key\n   * @param options.pushAmount - Initial deposit in favour of the responder by the initiator\n   * @param options.initiatorAmount - Amount of coins the initiator has committed to\n   * the channel\n   * @param options.responderAmount - Amount of coins the responder has committed to\n   * the channel\n   * @param options.channelReserve - The minimum amount both peers need to maintain\n   * @param options.ttl - Minimum block height to include the channel_create_tx\n   * @param options.host - Host of the responder's node\n   * @param options.port - The port of the responders node\n   * @param options.lockPeriod - Amount of blocks for disputing a solo close\n   * @param options.minimumDepthStrategy - How to calculate minimum depth (default: txfee)\n   * @param options.minimumDepth - The minimum amount of blocks to be mined\n   * @param options.fee - The fee to be used for the channel open transaction\n   * @param options.gasPrice - Used for the fee computation of the channel open transaction\n   * @param options.existingChannelId - Existing channel id (required if reestablishing a\n   * channel)\n   * @param options.offchainTx - Offchain transaction (required if reestablishing\n   * a channel)\n   * @param options.timeoutIdle - The time waiting for a new event to be initiated\n   * (default: 600000)\n   * @param options.timeoutFundingCreate - The time waiting for the initiator to produce\n   * the create channel transaction after the noise session had been established (default: 120000)\n   * @param options.timeoutFundingSign - The time frame the other client has to sign an\n   * off-chain update after our client had initiated and signed it. This applies only for double\n   * signed on-chain intended updates: channel create transaction, deposit, withdrawal and etc.\n   * (default: 120000)\n   * @param options.timeoutFundingLock - The time frame the other client has to confirm an\n   * on-chain transaction reaching maturity (passing minimum depth) after the local node has\n   * detected this. This applies only for double signed on-chain intended updates: channel create\n   * transaction, deposit, withdrawal and etc. (default: 360000)\n   * @param options.timeoutSign - The time frame the client has to return a signed\n   * off-chain update or to decline it. This applies for all off-chain updates (default: 500000)\n   * @param options.timeoutAccept - The time frame the other client has to react to an\n   * event. This applies for all off-chain updates that are not meant to land on-chain, as well as\n   * some special cases: opening a noise connection, mutual closing acknowledgement and\n   * reestablishing an existing channel (default: 120000)\n   * @param options.timeoutInitialized - the time frame the responder has to accept an\n   * incoming noise session. Applicable only for initiator (default: timeout_accept's value)\n   * @param options.timeoutAwaitingOpen - The time frame the initiator has to start an\n   * outgoing noise session to the responder's node. Applicable only for responder (default:\n   * timeout_idle's value)\n   * @param options.debug=false - Log websocket communication\n   * @param options.sign - Function which verifies and signs transactions\n   */\n  static async initialize(options: ChannelOptions): Promise<Channel> {\n    return Channel._initialize(new Channel(), options);\n  }\n\n  static async _initialize<T extends Channel>(channel: T, options: ChannelOptions): Promise<T> {\n    await initialize(\n      channel,\n      options.existingFsmId != null ? handlers.awaitingReconnection : handlers.awaitingConnection,\n      handlers.channelOpen,\n      options,\n    );\n    return channel;\n  }\n\n  /**\n   * Register event listener function\n   *\n   * Possible events:\n   *\n   *   - \"error\"\n   *   - \"stateChanged\"\n   *   - \"statusChanged\"\n   *   - \"message\"\n   *   - \"peerDisconnected\"\n   *   - \"onChainTx\"\n   *   - \"ownWithdrawLocked\"\n   *   - \"withdrawLocked\"\n   *   - \"ownDepositLocked\"\n   *   - \"depositLocked\"\n   *   - \"channelReestablished\"\n   *   - \"newContract\"\n   *\n   *\n   * @param eventName - Event name\n   * @param callback - Callback function\n   */\n  on<E extends keyof ChannelEvents>(eventName: E, callback: ChannelEvents[E]): void {\n    this._eventEmitter.on(eventName, callback);\n  }\n\n  /**\n   * Remove event listener function\n   * @param eventName - Event name\n   * @param callback - Callback function\n   */\n  off<E extends keyof ChannelEvents>(eventName: E, callback: ChannelEvents[E]): void {\n    this._eventEmitter.removeListener(eventName, callback);\n  }\n\n  /**\n   * Close the connection\n   */\n  disconnect(): void {\n    return channelDisconnect(this);\n  }\n\n  /**\n   * Get current status\n   */\n  status(): ChannelStatus {\n    return this._status;\n  }\n\n  /**\n   * Get current state\n   */\n  async state(): Promise<{\n    calls: TxUnpacked & { tag: Tag.CallsMtree };\n    halfSignedTx?: TxUnpacked & { tag: Tag.SignedTx };\n    signedTx?: TxUnpacked & { tag: Tag.SignedTx };\n    trees: TxUnpacked & { tag: Tag.StateTrees };\n  }> {\n    const res = snakeToPascalObjKeys<{\n      calls: Encoded.CallStateTree;\n      halfSignedTx: Encoded.Transaction | '';\n      signedTx: Encoded.Transaction | '';\n      trees: Encoded.StateTrees;\n    }>(await call(this, 'channels.get.offchain_state', {}));\n    return {\n      calls: unpackTx(res.calls, Tag.CallsMtree),\n      ...res.halfSignedTx !== '' && { halfSignedTx: unpackTx(res.halfSignedTx, Tag.SignedTx) },\n      ...res.signedTx !== '' && { signedTx: unpackTx(res.signedTx, Tag.SignedTx) },\n      trees: unpackTx(res.trees, Tag.StateTrees),\n    };\n  }\n\n  /**\n   * Get current round\n   *\n   * If round cannot be determined (for example when channel has not been opened)\n   * it will return `null`.\n   */\n  round(): number | null {\n    if (this._state === '') {\n      return null;\n    }\n    const params = unpackTx(this._state, Tag.SignedTx).encodedTx;\n    switch (params.tag) {\n      case Tag.ChannelCreateTx:\n        return 1;\n      case Tag.ChannelOffChainTx:\n      case Tag.ChannelWithdrawTx:\n      case Tag.ChannelDepositTx:\n        return params.round;\n      default:\n        return null;\n    }\n  }\n\n  /**\n   * Get channel id\n   *\n   */\n  id(): Encoded.Channel {\n    if (this._channelId == null) throw new ChannelError('Channel is not initialized');\n    return this._channelId;\n  }\n\n  /**\n   * Get channel's fsm id\n   *\n   */\n  fsmId(): Encoded.Bytearray {\n    if (this._fsmId == null) throw new ChannelError('Channel is not initialized');\n    return this._fsmId;\n  }\n\n  protected async enqueueAction(\n    action: () => { handler: ChannelHandler; state?: Partial<ChannelState> },\n  ): Promise<any> {\n    return enqueueAction(\n      this,\n      (channel, state) => state?.handler === handlers.channelOpen,\n      action,\n    );\n  }\n\n  /**\n   * Leave channel\n   *\n   * It is possible to leave a channel and then later reestablish the channel\n   * off-chain state and continue operation. When a leave method is called,\n   * the channel fsm passes it on to the peer fsm, reports the current mutually\n   * signed state and then terminates.\n   *\n   * The channel can be reestablished by instantiating another Channel instance\n   * with two extra params: existingChannelId and offchainTx (returned from leave\n   * method as channelId and signedTx respectively).\n   *\n   * @example\n   * ```js\n   * channel.leave().then(({ channelId, signedTx }) => {\n   *   console.log(channelId)\n   *   console.log(signedTx)\n   * })\n   * ```\n   */\n  async leave(): Promise<{ channelId: Encoded.Bytearray; signedTx: Encoded.Transaction }> {\n    return this.enqueueAction(() => {\n      notify(this, 'channels.leave');\n      return { handler: handlers.awaitingLeave };\n    });\n  }\n\n  /**\n   * Trigger mutual close\n   *\n   * At any moment after the channel is opened, a closing procedure can be triggered.\n   * This can be done by either of the parties. The process is similar to the off-chain updates.\n   *\n   * @param sign - Function which verifies and signs mutual close transaction\n   * @example\n   * ```js\n   * channel.shutdown(\n   *   async (tx) => await account.signTransaction(tx)\n   * ).then(tx => console.log('on_chain_tx', tx))\n   * ```\n   */\n  async shutdown(sign: SignTx): Promise<Encoded.Transaction> {\n    return this.enqueueAction(() => {\n      notify(this, 'channels.shutdown');\n      return {\n        handler: handlers.awaitingShutdownTx,\n        state: { sign },\n      };\n    });\n  }\n\n  static async reconnect(options: ChannelOptions, txParams: any): Promise<Channel> {\n    const { sign } = options;\n\n    return Channel.initialize({\n      ...options,\n      reconnectTx: await sign(\n        'reconnect',\n        buildTx({ ...txParams, tag: Tag.ChannelClientReconnectTx }),\n      ),\n    });\n  }\n}\n","import BigNumber from 'bignumber.js';\nimport {\n  notify, call, SignTx, ChannelState, ChannelMessage, ChannelFsm, changeState,\n} from './internal';\nimport { Encoded } from '../utils/encoder';\nimport { pause } from '../utils/other';\nimport Channel from './Base';\nimport { ChannelConnectionError } from '../utils/errors';\nimport {\n  awaitingCompletion, channelOpen, handleUnexpectedMessage, signAndNotify,\n} from './handlers';\nimport { unpackTx } from '../tx/builder';\nimport { Tag } from '../tx/builder/constants';\nimport { TxUnpacked } from '../tx/builder/schema.generated';\n\nexport default class ChannelSpend extends Channel {\n  /**\n   * Trigger a transfer update\n   *\n   * The transfer update is moving coins from one channel account to another.\n   * The update is a change to be applied on top of the latest state.\n   *\n   * Sender and receiver are the channel parties. Both the initiator and responder\n   * can take those roles. Any public key outside the channel is considered invalid.\n   *\n   * @param from - Sender's public address\n   * @param to - Receiver's public address\n   * @param amount - Transaction amount\n   * @param sign - Function which verifies and signs offchain transaction\n   * @param metadata - Metadata\n\n   * @example\n   * ```js\n   * channel.update(\n   *   'ak_Y1NRjHuoc3CGMYMvCmdHSBpJsMDR6Ra2t5zjhRcbtMeXXLpLH',\n   *   'ak_V6an1xhec1xVaAhLuak7QoEbi6t7w5hEtYWp9bMKaJ19i6A9E',\n   *   10,\n   *   async (tx) => await account.signTransaction(tx)\n   * ).then(({ accepted, signedTx }) =>\n   *   if (accepted) {\n   *     console.log('Update has been accepted')\n   *   }\n   * )\n   * ```\n   */\n  async update(\n    from: Encoded.AccountAddress,\n    to: Encoded.AccountAddress,\n    amount: number | BigNumber,\n    sign: SignTx,\n    metadata: string[] = [],\n  ): Promise<{\n      accepted: boolean;\n      signedTx?: Encoded.Transaction;\n      errorCode?: number;\n      errorMessage?: string;\n    }> {\n    return this.enqueueAction(() => {\n      notify(this, 'channels.update.new', {\n        from, to, amount, meta: metadata,\n      });\n\n      const awaitingOffChainTx = async (\n        _: Channel,\n        message: ChannelMessage,\n        state: ChannelState,\n      ): Promise<ChannelFsm> => {\n        if (message.method === 'channels.sign.update') {\n          const isError = await signAndNotify(\n            this,\n            'channels.update',\n            message.params.data,\n            async (tx) => sign(tx, { updates: message.params.data.updates }),\n          );\n          if (isError) return { handler: awaitingOffChainTx, state };\n          return {\n            handler: (_2: Channel, message2: ChannelMessage): ChannelFsm => (\n              awaitingCompletion(this, message2, state, () => {\n                changeState(this, message2.params.data.state);\n                state.resolve({ accepted: true, signedTx: message2.params.data.state });\n                return { handler: channelOpen };\n              })\n            ),\n            state,\n          };\n        }\n        if (message.method === 'channels.error') {\n          state.reject(new ChannelConnectionError(message.data.message));\n          return { handler: channelOpen };\n        }\n        return awaitingCompletion(this, message, state);\n      };\n\n      return { handler: awaitingOffChainTx };\n    });\n  }\n\n  /**\n   * Get proof of inclusion\n   *\n   * If a certain address of an account or a contract is not found\n   * in the state tree - the response is an error.\n   *\n   * @param addresses - Addresses\n   * @param addresses.accounts - List of account addresses to include in poi\n   * @param addresses.contracts - List of contract addresses to include in poi\n   * @example\n   * ```js\n   * channel.poi({\n   *   accounts: [\n   *     'ak_Y1NRjHuoc3CGMYMvCmdHSBpJsMDR6Ra2t5zjhRcbtMeXXLpLH',\n   *     'ak_V6an1xhec1xVaAhLuak7QoEbi6t7w5hEtYWp9bMKaJ19i6A9E'\n   *   ],\n   *   contracts: ['ct_2dCUAWYZdrWfACz3a2faJeKVTVrfDYxCQHCqAt5zM15f3u2UfA']\n   * }).then(poi => console.log(poi))\n   * ```\n   */\n  async poi(\n    { accounts, contracts }: {\n      accounts: Encoded.AccountAddress[];\n      contracts?: Encoded.ContractAddress[];\n    },\n  ): Promise<TxUnpacked & { tag: Tag.TreesPoi }> {\n    return unpackTx(\n      (await call(this, 'channels.get.poi', { accounts, contracts })).poi,\n      Tag.TreesPoi,\n    );\n  }\n\n  /**\n   * Get balances\n   *\n   * The accounts param contains a list of addresses to fetch balances of.\n   * Those can be either account balances or a contract ones, encoded as an account addresses.\n   *\n   * If a certain account address had not being found in the state tree - it is simply\n   * skipped in the response.\n   *\n   * @param accounts - List of addresses to fetch balances from\n   * @example\n   * ```js\n   * channel.balances([\n   *   'ak_Y1NRjHuoc3CGMYMvCmdHSBpJsMDR6Ra2t5zjhRcbtMeXXLpLH',\n   *   'ak_V6an1xhec1xVaAhLuak7QoEbi6t7w5hEtYWp9bMKaJ19i6A9E'\n   *   'ct_2dCUAWYZdrWfACz3a2faJeKVTVrfDYxCQHCqAt5zM15f3u2UfA'\n   * ]).then(balances =>\n   *   console.log(balances['ak_Y1NRjHuoc3CGMYMvCmdHSBpJsMDR6Ra2t5zjhRcbtMeXXLpLH'])\n   * )\n   * ```\n   */\n  async balances(\n    accounts: Encoded.AccountAddress[],\n  ): Promise<{ [key: Encoded.AccountAddress]: string }> {\n    return Object.fromEntries(\n      (await call(this, 'channels.get.balances', { accounts }))\n        .map((item: {\n          account: Encoded.AccountAddress;\n          balance: string;\n        }) => [item.account, item.balance]),\n    );\n  }\n\n  private async awaitingActionTx(\n    action: 'deposit' | 'withdraw',\n    message: ChannelMessage,\n    state: ChannelState,\n  ): Promise<ChannelFsm> {\n    if (message.method !== `channels.sign.${action}_tx`) {\n      return handleUnexpectedMessage(this, message, state);\n    }\n\n    const awaitingActionCompletion = (_: Channel, message2: ChannelMessage): ChannelFsm => {\n      if (message2.method === 'channels.on_chain_tx') {\n        state.onOnChainTx?.(message2.params.data.tx);\n        return { handler: awaitingActionCompletion, state };\n      }\n      if (\n        message2.method === 'channels.info'\n        && [`own_${action}_locked`, `${action}_locked`].includes(message2.params.data.event)\n      ) {\n        const Action = action === 'deposit' ? 'Deposit' : 'Withdraw';\n        const isOwn: boolean = message2.params.data.event.startsWith('own_');\n        state[`on${isOwn ? 'Own' : ''}${Action}Locked`]?.();\n        return { handler: awaitingActionCompletion, state };\n      }\n      return awaitingCompletion(this, message2, state, () => {\n        changeState(this, message2.params.data.state);\n        state.resolve({ accepted: true, signedTx: message2.params.data.state });\n        return { handler: channelOpen };\n      });\n    };\n\n    const { sign } = state;\n    await signAndNotify(\n      this,\n      `channels.${action}_tx`,\n      message.params.data,\n      async (tx) => sign(tx, { updates: message.params.data.updates }),\n    );\n    return { handler: awaitingActionCompletion, state };\n  }\n\n  /**\n   * Withdraw coins from the channel\n   *\n   * After the channel had been opened any of the participants can initiate a withdrawal.\n   * The process closely resembles the update. The most notable difference is that the\n   * transaction has been co-signed: it is channel_withdraw_tx and after the procedure\n   * is finished - it is being posted on-chain.\n   *\n   * Any of the participants can initiate a withdrawal. The only requirements are:\n   *\n   *   - Channel is already opened\n   *   - No off-chain update/deposit/withdrawal is currently being performed\n   *   - Channel is not being closed or in a solo closing state\n   *   - The withdrawal amount must be equal to or greater than zero, and cannot exceed\n   *     the available balance on the channel (minus the channel_reserve)\n   *\n   * After the other party had signed the withdraw transaction, the transaction is posted\n   * on-chain and onOnChainTx callback is called with on-chain transaction as first argument.\n   * After computing transaction hash it can be tracked on the chain: entering the mempool,\n   * block inclusion and a number of confirmations.\n   *\n   * After the minimum_depth block confirmations onOwnWithdrawLocked callback is called\n   * (without any arguments).\n   *\n   * When the other party had confirmed that the block height needed is reached\n   * onWithdrawLocked callback is called (without any arguments).\n   *\n   * @param amount - Amount of coins to withdraw\n   * @param sign - Function which verifies and signs withdraw transaction\n   * @param callbacks - Callbacks\n   * @param callbacks.onOnChainTx - Called when withdraw transaction has been posted\n   * on chain\n   * @param callbacks.onOwnWithdrawLocked\n   * @param callbacks.onWithdrawLocked\n   * @example\n   * ```js\n   * channel.withdraw(\n   *   100,\n   *   async (tx) => await account.signTransaction(tx),\n   *   { onOnChainTx: (tx) => console.log('on_chain_tx', tx) }\n   * ).then(({ accepted, signedTx }) => {\n   *   if (accepted) {\n   *     console.log('Withdrawal has been accepted')\n   *   } else {\n   *     console.log('Withdrawal has been rejected')\n   *   }\n   * })\n   * ```\n   */\n  async withdraw(\n    amount: number | BigNumber,\n    sign: SignTx,\n    { onOnChainTx, onOwnWithdrawLocked, onWithdrawLocked }:\n    Pick<ChannelState, 'onOnChainTx' | 'onOwnWithdrawLocked' | 'onWithdrawLocked'> = {},\n  ): Promise<{ accepted: boolean; signedTx: Encoded.Transaction }> {\n    return this.enqueueAction(() => {\n      notify(this, 'channels.withdraw', { amount });\n      return {\n        handler: async (\n          _: Channel,\n          message: ChannelMessage,\n          state: ChannelState,\n        ): Promise<ChannelFsm> => (\n          this.awaitingActionTx('withdraw', message, state)\n        ),\n        state: {\n          sign,\n          onOnChainTx,\n          onOwnWithdrawLocked,\n          onWithdrawLocked,\n        },\n      };\n    });\n  }\n\n  /**\n   * Deposit coins into the channel\n   *\n   * After the channel had been opened any of the participants can initiate a deposit.\n   * The process closely resembles the update. The most notable difference is that the\n   * transaction has been co-signed: it is channel_deposit_tx and after the procedure\n   * is finished - it is being posted on-chain.\n   *\n   * Any of the participants can initiate a deposit. The only requirements are:\n   *\n   *   - Channel is already opened\n   *   - No off-chain update/deposit/withdrawal is currently being performed\n   *   - Channel is not being closed or in a solo closing state\n   *   - The deposit amount must be equal to or greater than zero, and cannot exceed\n   *     the available balance on the channel (minus the channel_reserve)\n   *\n   * After the other party had signed the deposit transaction, the transaction is posted\n   * on-chain and onOnChainTx callback is called with on-chain transaction as first argument.\n   * After computing transaction hash it can be tracked on the chain: entering the mempool,\n   * block inclusion and a number of confirmations.\n   *\n   * After the minimum_depth block confirmations onOwnDepositLocked callback is called\n   * (without any arguments).\n   *\n   * When the other party had confirmed that the block height needed is reached\n   * onDepositLocked callback is called (without any arguments).\n   *\n   * @param amount - Amount of coins to deposit\n   * @param sign - Function which verifies and signs deposit transaction\n   * @param callbacks - Callbacks\n   * @param callbacks.onOnChainTx - Called when deposit transaction has been posted\n   * on chain\n   * @param callbacks.onOwnDepositLocked\n   * @param callbacks.onDepositLocked\n   * @example\n   * ```js\n   * channel.deposit(\n   *   100,\n   *   async (tx) => await account.signTransaction(tx),\n   *   { onOnChainTx: (tx) => console.log('on_chain_tx', tx) }\n   * ).then(({ accepted, state }) => {\n   *   if (accepted) {\n   *     console.log('Deposit has been accepted')\n   *     console.log('The new state is:', state)\n   *   } else {\n   *     console.log('Deposit has been rejected')\n   *   }\n   * })\n   * ```\n   */\n  async deposit(\n    amount: number | BigNumber,\n    sign: SignTx,\n    { onOnChainTx, onOwnDepositLocked, onDepositLocked }:\n    Pick<ChannelState, 'onOnChainTx' | 'onOwnDepositLocked' | 'onDepositLocked'> = {},\n  ): Promise<{ accepted: boolean; state: ChannelState }> {\n    return this.enqueueAction(() => {\n      notify(this, 'channels.deposit', { amount });\n      return {\n        handler: async (\n          _: Channel,\n          message: ChannelMessage,\n          state: ChannelState,\n        ): Promise<ChannelFsm> => (\n          this.awaitingActionTx('deposit', message, state)\n        ),\n        state: {\n          sign,\n          onOnChainTx,\n          onOwnDepositLocked,\n          onDepositLocked,\n        },\n      };\n    });\n  }\n\n  /**\n   * Send generic message\n   *\n   * If message is an object it will be serialized into JSON string\n   * before sending.\n   *\n   * If there is ongoing update that has not yet been finished the message\n   * will be sent after that update is finalized.\n   *\n   * @param message - Message\n   * @param recipient - Address of the recipient\n   * @example\n   * ```js\n   * channel.sendMessage(\n   *   'hello world',\n   *   'ak_Y1NRjHuoc3CGMYMvCmdHSBpJsMDR6Ra2t5zjhRcbtMeXXLpLH'\n   * )\n   * ```\n   */\n  async sendMessage(\n    message: string | object,\n    recipient: Encoded.AccountAddress,\n  ): Promise<void> {\n    const info = typeof message === 'object' ? JSON.stringify(message) : message;\n    if (this.status() === 'connecting') {\n      await new Promise<void>((resolve) => {\n        const onStatusChanged = (status: string): void => {\n          if (status === 'connecting') return;\n          resolve();\n          this.off('statusChanged', onStatusChanged);\n        };\n        this.on('statusChanged', onStatusChanged);\n      });\n      // For some reason we can't immediately send a message when connection is\n      // established. Thus we wait 500ms which seems to work.\n      await pause(500);\n    }\n    notify(this, 'channels.message', { info, to: recipient });\n  }\n}\n","import BigNumber from 'bignumber.js';\nimport { snakeToPascal } from '../utils/string';\nimport {\n  MIN_GAS_PRICE, Tag, AbiVersion, VmVersion,\n} from '../tx/builder/constants';\nimport {\n  signAndNotify,\n  awaitingCompletion,\n  channelClosed,\n  channelOpen,\n  handleUnexpectedMessage,\n} from './handlers';\nimport {\n  notify, call, SignTx, ChannelState, ChannelOptions, ChannelMessage, ChannelFsm, changeState, emit,\n} from './internal';\nimport { Encoded } from '../utils/encoder';\nimport { ContractCallReturnType } from '../apis/node';\nimport { ContractCallObject } from '../contract/Contract';\nimport Channel from './Base';\nimport ChannelSpend from './Spend';\nimport { ChannelError, UnexpectedChannelMessageError } from '../utils/errors';\nimport { unpackTx } from '../tx/builder';\nimport { encodeContractAddress } from '../utils/crypto';\n\nfunction snakeToPascalObjKeys<Type>(obj: object): Type {\n  return Object.entries(obj).reduce((result, [key, val]) => ({\n    ...result,\n    [snakeToPascal(key)]: val,\n  }), {}) as Type;\n}\n\ninterface CallContractOptions {\n  amount?: number | BigNumber;\n  callData?: Encoded.ContractBytearray;\n  abiVersion?: AbiVersion;\n  contract?: Encoded.ContractAddress;\n  returnValue?: any;\n  gasUsed?: number | BigNumber;\n  gasPrice?: number | BigNumber;\n  height?: number;\n  callerNonce?: number;\n  log?: any;\n  returnType?: ContractCallReturnType;\n}\n\ninterface Contract {\n  abiVersion: AbiVersion;\n  active: boolean;\n  deposit: number | BigNumber;\n  id: string;\n  ownerId: string;\n  referrerIds: string[];\n  vmVersion: VmVersion;\n}\n\nexport default class ChannelContract extends ChannelSpend {\n  static override async initialize(options: ChannelOptions): Promise<ChannelContract> {\n    return Channel._initialize(new ChannelContract(), options);\n  }\n\n  /**\n   * Trigger create contract update\n   *\n   * The create contract update is creating a contract inside the channel's internal state tree.\n   * The update is a change to be applied on top of the latest state.\n   *\n   * That would create a contract with the poster being the owner of it. Poster commits initially\n   * a deposit amount of coins to the new contract.\n   *\n   * @param options - Options\n   * @param options.code - Api encoded compiled AEVM byte code\n   * @param options.callData - Api encoded compiled AEVM call data for the code\n   * @param options.deposit - Initial amount the owner of the contract commits to it\n   * @param options.vmVersion - Version of the Virtual Machine\n   * @param options.abiVersion - Version of the Application Binary Interface\n   * @param sign - Function which verifies and signs create contract transaction\n   * @example\n   * ```js\n   * channel.createContract({\n   *   code: 'cb_HKtpipK4aCgYb17wZ...',\n   *   callData: 'cb_1111111111111111...',\n   *   deposit: 10,\n   *   vmVersion: 3,\n   *   abiVersion: 1\n   * }).then(({ accepted, signedTx, address }) => {\n   *   if (accepted) {\n   *     console.log('New contract has been created')\n   *     console.log('Contract address:', address)\n   *   } else {\n   *     console.log('New contract has been rejected')\n   *   }\n   * })\n   * ```\n   */\n  async createContract(\n    {\n      code, callData, deposit, vmVersion, abiVersion,\n    }: {\n      code: Encoded.ContractBytearray;\n      callData: Encoded.ContractBytearray;\n      deposit: number | BigNumber;\n      vmVersion: VmVersion;\n      abiVersion: AbiVersion;\n    },\n    sign: SignTx,\n  ): Promise<{\n      accepted: boolean; signedTx: Encoded.Transaction; address: Encoded.ContractAddress;\n    }> {\n    return this.enqueueAction(() => {\n      notify(this, 'channels.update.new_contract', {\n        code,\n        call_data: callData,\n        deposit,\n        vm_version: vmVersion,\n        abi_version: abiVersion,\n      });\n      return {\n        handler: async (\n          _: Channel,\n          message: ChannelMessage,\n          state: ChannelState,\n        ): Promise<ChannelFsm> => {\n          if (message.method !== 'channels.sign.update') {\n            return handleUnexpectedMessage(this, message, state);\n          }\n          await signAndNotify(\n            this,\n            'channels.update',\n            message.params.data,\n            async (tx) => state.sign(tx),\n          );\n          return {\n            handler: (\n              _2: Channel,\n              message2: ChannelMessage,\n              state2: ChannelState,\n            ): ChannelFsm => (\n              awaitingCompletion(this, message2, state2, () => {\n                const params = unpackTx(message2.params.data.state, Tag.SignedTx).encodedTx;\n                if (params.tag !== Tag.ChannelOffChainTx) {\n                  throw new ChannelError(`Tag should be ${Tag[Tag.ChannelOffChainTx]}, got ${Tag[params.tag]} instead`);\n                }\n                const addressKey = this._options.role === 'initiator'\n                  ? 'initiatorId' : 'responderId';\n                const owner = this._options[addressKey];\n                changeState(this, message2.params.data.state);\n                const address = encodeContractAddress(owner, params.round);\n                emit(this, 'newContract', address);\n                state2.resolve({ accepted: true, address, signedTx: message2.params.data.state });\n                return { handler: channelOpen };\n              })\n            ),\n            state,\n          };\n        },\n        state: { sign },\n      };\n    });\n  }\n\n  /**\n   * Trigger call a contract update\n   *\n   * The call contract update is calling a preexisting contract inside the channel's\n   * internal state tree. The update is a change to be applied on top of the latest state.\n   *\n   * That would call a contract with the poster being the caller of it. Poster commits\n   * an amount of coins to the contract.\n   *\n   * The call would also create a call object inside the channel state tree. It contains\n   * the result of the contract call.\n   *\n   * It is worth mentioning that the gas is not consumed, because this is an off-chain\n   * contract call. It would be consumed if it were an on-chain one. This could happen\n   * if a call with a similar computation amount is to be forced on-chain.\n   *\n   * @param options - Options\n   * @param options.amount - Amount the caller of the contract commits to it\n   * @param options.callData - ABI encoded compiled AEVM call data for the code\n   * @param options.contract - Address of the contract to call\n   * @param options.abiVersion - Version of the ABI\n   * @param sign - Function which verifies and signs contract call transaction\n   * @example\n   * ```js\n   * channel.callContract({\n   *   contract: 'ct_9sRA9AVE4BYTAkh5RNfJYmwQe1NZ4MErasQLXZkFWG43TPBqa',\n   *   callData: 'cb_1111111111111111...',\n   *   amount: 0,\n   *   abiVersion: 1\n   * }).then(({ accepted, signedTx }) => {\n   *   if (accepted) {\n   *     console.log('Contract called succesfully')\n   *   } else {\n   *     console.log('Contract call has been rejected')\n   *   }\n   * })\n   * ```\n   */\n  async callContract(\n    {\n      amount, callData, contract, abiVersion,\n    }: CallContractOptions,\n    sign: SignTx,\n  ): Promise<{ accepted: boolean; signedTx: Encoded.Transaction }> {\n    return this.enqueueAction(() => {\n      notify(this, 'channels.update.call_contract', {\n        amount,\n        call_data: callData,\n        contract_id: contract,\n        abi_version: abiVersion,\n      });\n      return {\n        handler: async (\n          _: Channel,\n          message: ChannelMessage,\n          state: ChannelState,\n        ): Promise<ChannelFsm> => {\n          if (message.method !== 'channels.sign.update') {\n            return handleUnexpectedMessage(this, message, state);\n          }\n          await signAndNotify(\n            this,\n            'channels.update',\n            message.params.data,\n            async (tx) => state.sign(tx, { updates: message.params.data.updates }),\n          );\n          return {\n            handler: (\n              _2: Channel,\n              message2: ChannelMessage,\n              state2: ChannelState,\n            ): ChannelFsm => (\n              awaitingCompletion(this, message2, state2, () => {\n                changeState(this, message2.params.data.state);\n                state2.resolve({ accepted: true, signedTx: message2.params.data.state });\n                return { handler: channelOpen };\n              })\n            ),\n            state,\n          };\n        },\n        state: { sign },\n      };\n    });\n  }\n\n  /**\n   * Trigger a force progress contract call\n   * This call is going on-chain\n   * @param options - Options\n   * @param options.amount - Amount the caller of the contract commits to it\n   * @param options.callData - ABI encoded compiled AEVM call data for the code\n   * @param options.contract - Address of the contract to call\n   * @param options.abiVersion - Version of the ABI\n   * @param options.gasPrice=1000000000]\n   * @param options.gasLimit=1000000]\n   * @param sign - Function which verifies and signs contract force progress transaction\n   * @param callbacks - Callbacks\n   * @example\n   * ```js\n   * channel.forceProgress({\n   *   contract: 'ct_9sRA9AVE4BYTAkh5RNfJYmwQe1NZ4MErasQLXZkFWG43TPBqa',\n   *   callData: 'cb_1111111111111111...',\n   *   amount: 0,\n   *   abiVersion: 1,\n   *   gasPrice: 1000005554\n   * }).then(({ accepted, signedTx }) => {\n   *   if (accepted) {\n   *     console.log('Contract force progress call successful')\n   *   } else {\n   *     console.log('Contract force progress call has been rejected')\n   *   }\n   * })\n   * ```\n   */\n  async forceProgress(\n    {\n      amount, callData, contract, abiVersion, gasLimit = 1000000, gasPrice = MIN_GAS_PRICE,\n    }: {\n      amount: number;\n      callData: Encoded.ContractBytearray;\n      contract: Encoded.ContractAddress;\n      abiVersion: AbiVersion;\n      gasLimit?: number;\n      gasPrice?: number;\n    },\n    sign: SignTx,\n    { onOnChainTx }: Pick<ChannelState, 'onOnChainTx'> = {},\n  ): Promise<{\n      accepted: boolean;\n      signedTx: Encoded.Transaction;\n      tx: Encoded.Transaction | Uint8Array;\n    }> {\n    return this.enqueueAction(() => {\n      notify(this, 'channels.force_progress', {\n        amount,\n        call_data: callData,\n        contract_id: contract,\n        abi_version: abiVersion,\n        gas_price: gasPrice,\n        gas: gasLimit,\n      });\n      return {\n        handler: async (\n          _: Channel,\n          message: ChannelMessage,\n          state: ChannelState,\n        ): Promise<ChannelFsm> => {\n          if (message.method !== 'channels.sign.force_progress_tx') {\n            return handleUnexpectedMessage(this, message, state);\n          }\n          await signAndNotify(\n            this,\n            'channels.force_progress_sign',\n            message.params.data,\n            async (tx) => state.sign(tx, { updates: message.params.data.updates }),\n          );\n          return {\n            handler: (\n              _2: Channel,\n              message2: ChannelMessage,\n              state2: ChannelState,\n            ): ChannelFsm => {\n              if (message2.method === 'channels.on_chain_tx') {\n                state2.onOnChainTx?.(message2.params.data.tx);\n                emit(this, 'onChainTx', message2.params.data.tx, {\n                  info: message2.params.data.info,\n                  type: message2.params.data.type,\n                });\n                state2.resolve({ accepted: true, tx: message2.params.data.tx });\n                // TODO: shouldn't be unexpected message in this case\n              }\n              return handleUnexpectedMessage(this, message2, state2);\n            },\n            state,\n          };\n        },\n        state: { sign, onOnChainTx },\n      };\n    });\n  }\n\n  /**\n   * Call contract using dry-run\n   *\n   * In order to get the result of a potential contract call, one might need to\n   * dry-run a contract call. It takes the exact same arguments as a call would\n   * and returns the call object.\n   *\n   * The call is executed in the channel's state, but it does not impact the state\n   * whatsoever. It uses as an environment the latest channel's state and the current\n   * top of the blockchain as seen by the node.\n   *\n   * @param options - Options\n   * @param options.amount - Amount the caller of the contract commits to it\n   * @param options.callData - ABI encoded compiled AEVM call data for the code\n   * @param options.contract - Address of the contract to call\n   * @param options.abiVersion - Version of the ABI\n   * @example\n   * ```js\n   * channel.callContractStatic({\n   *   contract: 'ct_9sRA9AVE4BYTAkh5RNfJYmwQe1NZ4MErasQLXZkFWG43TPBqa',\n   *   callData: 'cb_1111111111111111...',\n   *   amount: 0,\n   *   abiVersion: 1\n   * }).then(({ returnValue, gasUsed }) => {\n   *   console.log('Returned value:', returnValue)\n   *   console.log('Gas used:', gasUsed)\n   * })\n   * ```\n   */\n  async callContractStatic(\n    {\n      amount, callData, contract, abiVersion,\n    }: {\n      amount: number;\n      callData: Encoded.ContractBytearray;\n      contract: Encoded.ContractAddress;\n      abiVersion: AbiVersion;\n    },\n  ): Promise<CallContractOptions> {\n    return snakeToPascalObjKeys(await call(this, 'channels.dry_run.call_contract', {\n      amount,\n      call_data: callData,\n      contract_id: contract,\n      abi_version: abiVersion,\n    }));\n  }\n\n  /**\n   * Get contract call result\n   *\n   * The combination of a caller, contract and a round of execution determines the\n   * contract call. Providing an incorrect set of those results in an error response.\n   *\n   * @param options - Options\n   * @param options.caller - Address of contract caller\n   * @param options.contract - Address of the contract\n   * @param options.round - Round when contract was called\n   * @example\n   * ```js\n   * channel.getContractCall({\n   *   caller: 'ak_Y1NRjHuoc3CGMYMvCmdHSBpJsMDR6Ra2t5zjhRcbtMeXXLpLH',\n   *   contract: 'ct_9sRA9AVE4BYTAkh5RNfJYmwQe1NZ4MErasQLXZkFWG43TPBqa',\n   *   round: 3\n   * }).then(({ returnType, returnValue }) => {\n   *   if (returnType === 'ok') console.log(returnValue)\n   * })\n   * ```\n   */\n  async getContractCall(\n    { caller, contract, round }: {\n      caller: Encoded.AccountAddress;\n      contract: Encoded.ContractAddress;\n      round: number;\n    },\n  ): Promise<ContractCallObject> {\n    return snakeToPascalObjKeys(\n      await call(this, 'channels.get.contract_call', {\n        caller_id: caller,\n        contract_id: contract,\n        round,\n      }),\n    );\n  }\n\n  /**\n   * Get the latest contract state\n   *\n   * @param contract - Address of the contract\n   * @example\n   * ```js\n   * channel.getContractState(\n   *   'ct_9sRA9AVE4BYTAkh5RNfJYmwQe1NZ4MErasQLXZkFWG43TPBqa'\n   * ).then(({ contract }) => {\n   *   console.log('deposit:', contract.deposit)\n   * })\n   * ```\n   */\n  async getContractState(\n    contract: Encoded.ContractAddress,\n  ): Promise<{ contract: Contract; contractState: object }> {\n    const result = await call(this, 'channels.get.contract', { pubkey: contract });\n    return snakeToPascalObjKeys({\n      ...result,\n      contract: snakeToPascalObjKeys(result.contract),\n    });\n  }\n\n  /**\n   * Clean up all locally stored contract calls\n   *\n   * Contract calls are kept locally in order for the participant to be able to look them up.\n   * They consume memory and in order for the participant to free it - one can prune all messages.\n   * This cleans up all locally stored contract calls and those will no longer be available for\n   * fetching and inspection.\n   */\n  async cleanContractCalls(): Promise<void> {\n    return this.enqueueAction(() => {\n      notify(this, 'channels.clean_contract_calls');\n      return {\n        handler(_: Channel, message: ChannelMessage, state: ChannelState): ChannelFsm {\n          if (message.method === 'channels.calls_pruned.reply') {\n            state.resolve();\n            return { handler: channelOpen };\n          }\n          state.reject(new UnexpectedChannelMessageError('Unexpected message received'));\n          return { handler: channelClosed };\n        },\n      };\n    });\n  }\n}\n","/* eslint-disable max-classes-per-file */\nimport WebSocket from 'isomorphic-ws';\nimport { BaseError, UnexpectedTsError, InternalError } from './utils/errors';\nimport { Encoded } from './utils/encoder';\n\ninterface Message {\n  payload: Object;\n  source: Source.Middleware | Source.Node;\n  subscription: 'KeyBlocks' | 'MicroBlocks' | 'Transactions' | 'Object';\n  target?: string;\n}\n\nenum Source {\n  Middleware = 'mdw',\n  Node = 'node',\n  All = 'all',\n}\n\nexport class MiddlewareSubscriberError extends BaseError {\n  constructor(message: string) {\n    super(message);\n    this.name = 'MiddlewareSubscriberError';\n  }\n}\n\nexport class MiddlewareSubscriberDisconnected extends MiddlewareSubscriberError {\n  constructor(readonly closeEvent: WebSocket.CloseEvent) {\n    super('Connection closed');\n    this.name = 'MiddlewareSubscriberDisconnected';\n  }\n}\n\nexport default class MiddlewareSubscriber {\n  #subscriptions: Array<\n  readonly [target: string, s: Source, cb: (p?: Object, e?: Error) => void]\n  > = [];\n\n  #requestQueue: Array<[isSubscribe: boolean, target: string]> = [];\n\n  #webSocket?: WebSocket;\n\n  get webSocket(): WebSocket | undefined {\n    return this.#webSocket;\n  }\n\n  get #targets(): Set<string> {\n    return new Set(this.#subscriptions.map(([target]) => target));\n  }\n\n  #sendMessage(message: any): void {\n    if (this.#webSocket == null) throw new UnexpectedTsError();\n    this.#webSocket.send(JSON.stringify(message));\n  }\n\n  #sendSubscribe(isSubscribe: boolean, target: string): void {\n    if (this.#webSocket == null) return;\n    const payload = ['KeyBlocks', 'MicroBlocks', 'Transactions'].includes(target)\n      ? target : 'Object';\n    this.#sendMessage({\n      op: isSubscribe ? 'Subscribe' : 'Unsubscribe',\n      payload,\n      ...payload === 'Object' && { target },\n    });\n    this.#requestQueue.push([isSubscribe, target]);\n  }\n\n  #emit(condition: (target: string, source: Source) => boolean, p?: Object, e?: Error): void {\n    this.#subscriptions\n      .filter(([target, source]) => condition(target, source))\n      .forEach(([, , cb]) => cb(p, e));\n  }\n\n  constructor(readonly url: string) {\n  }\n\n  #disconnect(onlyReset = false): void {\n    if (this.#webSocket == null) return;\n    if (!onlyReset) this.#webSocket.close();\n    Object.assign(this.#webSocket, {\n      onopen: undefined,\n      onerror: undefined,\n      onmessage: undefined,\n    });\n    this.#webSocket = undefined;\n  }\n\n  async reconnect(): Promise<void> {\n    this.#disconnect();\n    this.#webSocket = await new Promise((resolve) => {\n      const webSocket = new WebSocket(this.url);\n      Object.assign(webSocket, {\n        onopen: () => resolve(webSocket),\n        onerror: (errorEvent: WebSocket.ErrorEvent) => {\n          this.#emit(() => true, undefined, errorEvent.error);\n        },\n        onmessage: (event: WebSocket.MessageEvent) => {\n          if (typeof event.data !== 'string') {\n            throw new InternalError(`Unknown incoming message type: ${typeof event.data}`);\n          }\n          this.#messageHandler(JSON.parse(event.data));\n        },\n        onclose: (event: WebSocket.CloseEvent) => {\n          this.#emit(() => true, undefined, new MiddlewareSubscriberDisconnected(event));\n          this.#disconnect(true);\n        },\n      });\n    });\n    await Promise.all([...this.#targets].map((target) => this.#sendSubscribe(true, target)));\n  }\n\n  #messageHandler(message: string | string[] | Message): void {\n    if (typeof message === 'string' || Array.isArray(message)) {\n      const request = this.#requestQueue.shift();\n      if (request == null) throw new InternalError('Request queue is empty');\n      const [isSubscribe, target] = request;\n      let error;\n      if (typeof message === 'string') error = new MiddlewareSubscriberError(message);\n      if (message.includes(target) !== isSubscribe) {\n        error = new InternalError(`Expected ${target} to be${isSubscribe ? '' : ' not'} included into ${message}`);\n      }\n      if (error != null) this.#emit((t) => target === t, undefined, error);\n      return;\n    }\n    this.#emit(\n      (target, source) => (target === message.subscription || target === message.target)\n        && (source === message.source || source === Source.All),\n      message.payload,\n    );\n  }\n\n  #subscribe(target: string, source: Source, cb: (p?: Object, e?: Error) => void): () => void {\n    const subscription = [target, source, cb] as const;\n    if (this.#targets.size === 0) this.reconnect();\n    if (!this.#targets.has(target)) this.#sendSubscribe(true, target);\n    this.#subscriptions.push(subscription);\n    return () => {\n      this.#subscriptions = this.#subscriptions.filter((item) => item !== subscription);\n      if (!this.#targets.has(target)) this.#sendSubscribe(false, target);\n      if (this.#targets.size === 0) this.#disconnect();\n    };\n  }\n\n  // TODO: replace p?: any with a proper type definition\n\n  subscribeKeyBlocks(cb: (p?: any, e?: Error) => void): () => void {\n    return this.#subscribe('KeyBlocks', Source.Middleware, cb);\n  }\n\n  subscribeKeyBlocksNode(cb: (p?: any, e?: Error) => void): () => void {\n    return this.#subscribe('KeyBlocks', Source.Node, cb);\n  }\n\n  subscribeKeyBlocksAll(cb: (p?: any, e?: Error) => void): () => void {\n    return this.#subscribe('KeyBlocks', Source.All, cb);\n  }\n\n  subscribeMicroBlocks(cb: (p?: any, e?: Error) => void): () => void {\n    return this.#subscribe('MicroBlocks', Source.Middleware, cb);\n  }\n\n  subscribeMicroBlocksNode(cb: (p?: any, e?: Error) => void): () => void {\n    return this.#subscribe('MicroBlocks', Source.Node, cb);\n  }\n\n  subscribeMicroBlocksAll(cb: (p?: any, e?: Error) => void): () => void {\n    return this.#subscribe('MicroBlocks', Source.All, cb);\n  }\n\n  subscribeTransactions(cb: (p?: any, e?: Error) => void): () => void {\n    return this.#subscribe('Transactions', Source.Middleware, cb);\n  }\n\n  subscribeTransactionsNode(cb: (p?: any, e?: Error) => void): () => void {\n    return this.#subscribe('Transactions', Source.Node, cb);\n  }\n\n  subscribeTransactionsAll(cb: (p?: any, e?: Error) => void): () => void {\n    return this.#subscribe('Transactions', Source.All, cb);\n  }\n\n  subscribeObject(\n    target: Encoded.KeyBlockHash | Encoded.Channel | Encoded.ContractAddress\n    | Encoded.OracleAddress | Encoded.OracleQueryId | Encoded.AccountAddress\n    | Encoded.Name | `${string}.chain`,\n    cb: (p?: any, e?: Error) => void,\n  ): () => void {\n    return this.#subscribe(target, Source.Middleware, cb);\n  }\n\n  subscribeObjectNode(\n    target: Encoded.KeyBlockHash | Encoded.Channel | Encoded.ContractAddress\n    | Encoded.OracleAddress | Encoded.OracleQueryId | Encoded.AccountAddress\n    | Encoded.Name | `${string}.chain`,\n    cb: (p?: any, e?: Error) => void,\n  ): () => void {\n    return this.#subscribe(target, Source.Node, cb);\n  }\n\n  subscribeObjectAll(\n    target: Encoded.KeyBlockHash | Encoded.Channel | Encoded.ContractAddress\n    | Encoded.OracleAddress | Encoded.OracleQueryId | Encoded.AccountAddress\n    | Encoded.Name | `${string}.chain`,\n    cb: (p?: any, e?: Error) => void,\n  ): () => void {\n    return this.#subscribe(target, Source.All, cb);\n  }\n}\n","import {\n  OperationParameter,\n  OperationURLParameter,\n  OperationQueryParameter\n} from \"@azure/core-client\";\n\nexport const accept: OperationParameter = {\n  parameterPath: \"accept\",\n  mapper: {\n    defaultValue: \"application/json\",\n    isConstant: true,\n    serializedName: \"Accept\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const $host: OperationURLParameter = {\n  parameterPath: \"$host\",\n  mapper: {\n    serializedName: \"$host\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  },\n  skipEncoding: true\n};\n\nexport const id: OperationURLParameter = {\n  parameterPath: \"id\",\n  mapper: {\n    serializedName: \"id\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const ownedOnly: OperationQueryParameter = {\n  parameterPath: [\"options\", \"ownedOnly\"],\n  mapper: {\n    serializedName: \"owned_only\",\n    type: {\n      name: \"Boolean\"\n    }\n  }\n};\n\nexport const type: OperationQueryParameter = {\n  parameterPath: [\"options\", \"type\"],\n  mapper: {\n    serializedName: \"type\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const limit: OperationQueryParameter = {\n  parameterPath: \"limit\",\n  mapper: {\n    defaultValue: 10,\n    constraints: {\n      InclusiveMaximum: 100,\n      InclusiveMinimum: 1\n    },\n    serializedName: \"limit\",\n    type: {\n      name: \"Number\"\n    }\n  }\n};\n\nexport const scope: OperationQueryParameter = {\n  parameterPath: \"scope\",\n  mapper: {\n    constraints: {\n      Pattern: new RegExp(\"(txi|gen):\\\\d+(-\\\\d+)?\")\n    },\n    serializedName: \"scope\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const direction: OperationQueryParameter = {\n  parameterPath: \"direction\",\n  mapper: {\n    serializedName: \"direction\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const by: OperationQueryParameter = {\n  parameterPath: [\"options\", \"by\"],\n  mapper: {\n    serializedName: \"by\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const prefix: OperationQueryParameter = {\n  parameterPath: [\"options\", \"prefix\"],\n  mapper: {\n    serializedName: \"prefix\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const accountId: OperationURLParameter = {\n  parameterPath: \"accountId\",\n  mapper: {\n    serializedName: \"accountId\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const contractId: OperationURLParameter = {\n  parameterPath: \"contractId\",\n  mapper: {\n    serializedName: \"contractId\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const tokenId: OperationURLParameter = {\n  parameterPath: \"tokenId\",\n  mapper: {\n    serializedName: \"tokenId\",\n    required: true,\n    type: {\n      name: \"Number\"\n    }\n  }\n};\n\nexport const templateId: OperationURLParameter = {\n  parameterPath: \"templateId\",\n  mapper: {\n    serializedName: \"templateId\",\n    required: true,\n    type: {\n      name: \"Number\"\n    }\n  }\n};\n\nexport const accountId1: OperationURLParameter = {\n  parameterPath: \"accountId\",\n  mapper: {\n    serializedName: \"account_id\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const sender: OperationURLParameter = {\n  parameterPath: \"sender\",\n  mapper: {\n    serializedName: \"sender\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const recipient: OperationURLParameter = {\n  parameterPath: \"recipient\",\n  mapper: {\n    serializedName: \"recipient\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const hash: OperationQueryParameter = {\n  parameterPath: \"hash\",\n  mapper: {\n    serializedName: \"hash\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const hashOrKbi: OperationURLParameter = {\n  parameterPath: \"hashOrKbi\",\n  mapper: {\n    serializedName: \"hash_or_kbi\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const kbi: OperationURLParameter = {\n  parameterPath: \"kbi\",\n  mapper: {\n    serializedName: \"kbi\",\n    required: true,\n    type: {\n      name: \"Number\"\n    }\n  }\n};\n\nexport const mbi: OperationURLParameter = {\n  parameterPath: \"mbi\",\n  mapper: {\n    serializedName: \"mbi\",\n    required: true,\n    type: {\n      name: \"Number\"\n    }\n  }\n};\n\nexport const state: OperationQueryParameter = {\n  parameterPath: [\"options\", \"state\"],\n  mapper: {\n    serializedName: \"state\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const contractId1: OperationQueryParameter = {\n  parameterPath: [\"options\", \"contractId\"],\n  mapper: {\n    serializedName: \"contract_id\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const event: OperationQueryParameter = {\n  parameterPath: [\"options\", \"event\"],\n  mapper: {\n    serializedName: \"event\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const functionPrefix: OperationQueryParameter = {\n  parameterPath: [\"options\", \"functionPrefix\"],\n  mapper: {\n    serializedName: \"function_prefix\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const data: OperationQueryParameter = {\n  parameterPath: [\"options\", \"data\"],\n  mapper: {\n    serializedName: \"data\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const aexnArgs: OperationQueryParameter = {\n  parameterPath: [\"options\", \"aexnArgs\"],\n  mapper: {\n    serializedName: \"aexn-args\",\n    type: {\n      name: \"Boolean\"\n    }\n  }\n};\n\nexport const hash1: OperationURLParameter = {\n  parameterPath: \"hash\",\n  mapper: {\n    serializedName: \"hash\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const ownedBy: OperationQueryParameter = {\n  parameterPath: [\"options\", \"ownedBy\"],\n  mapper: {\n    serializedName: \"owned_by\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const state1: OperationQueryParameter = {\n  parameterPath: [\"options\", \"state\"],\n  mapper: {\n    serializedName: \"state\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const type1: OperationQueryParameter = {\n  parameterPath: [\"options\", \"type\"],\n  mapper: {\n    serializedName: \"type\",\n    type: {\n      name: \"Sequence\",\n      element: {\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  },\n  collectionFormat: \"Multi\"\n};\n\nexport const typeGroup: OperationQueryParameter = {\n  parameterPath: [\"options\", \"typeGroup\"],\n  mapper: {\n    serializedName: \"type_group\",\n    type: {\n      name: \"Sequence\",\n      element: {\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  },\n  collectionFormat: \"Multi\"\n};\n\nexport const account: OperationQueryParameter = {\n  parameterPath: [\"options\", \"account\"],\n  mapper: {\n    serializedName: \"account\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const contract: OperationQueryParameter = {\n  parameterPath: [\"options\", \"contract\"],\n  mapper: {\n    serializedName: \"contract\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const channel: OperationQueryParameter = {\n  parameterPath: [\"options\", \"channel\"],\n  mapper: {\n    serializedName: \"channel\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const oracle: OperationQueryParameter = {\n  parameterPath: [\"options\", \"oracle\"],\n  mapper: {\n    serializedName: \"oracle\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const senderId: OperationQueryParameter = {\n  parameterPath: [\"options\", \"senderId\"],\n  mapper: {\n    serializedName: \"sender_id\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const recipientId: OperationQueryParameter = {\n  parameterPath: [\"options\", \"recipientId\"],\n  mapper: {\n    serializedName: \"recipient_id\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const entrypoint: OperationQueryParameter = {\n  parameterPath: [\"options\", \"entrypoint\"],\n  mapper: {\n    serializedName: \"entrypoint\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const txType: OperationQueryParameter = {\n  parameterPath: [\"options\", \"txType\"],\n  mapper: {\n    serializedName: \"tx_type\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const id1: OperationQueryParameter = {\n  parameterPath: [\"options\", \"id\"],\n  mapper: {\n    serializedName: \"id\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const hashOrIndex: OperationURLParameter = {\n  parameterPath: \"hashOrIndex\",\n  mapper: {\n    serializedName: \"hash_or_index\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n","import * as coreClient from \"@azure/core-client\";\n\nexport const Paths1I5J7OcV2AccountsIdActivitiesGetResponses200ContentApplicationJsonSchemaAllof0: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className:\n      \"Paths1I5J7OcV2AccountsIdActivitiesGetResponses200ContentApplicationJsonSchemaAllof0\",\n    modelProperties: {\n      data: {\n        serializedName: \"data\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Activity\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const Activity: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Activity\",\n    modelProperties: {\n      blockHash: {\n        serializedName: \"block_hash\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      height: {\n        serializedName: \"height\",\n        required: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      payload: {\n        serializedName: \"payload\",\n        required: true,\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"any\" } }\n        }\n      },\n      type: {\n        serializedName: \"type\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const PaginatedResponse: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"PaginatedResponse\",\n    modelProperties: {\n      next: {\n        serializedName: \"next\",\n        required: true,\n        nullable: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      prev: {\n        serializedName: \"prev\",\n        required: true,\n        nullable: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ErrorResponse: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ErrorResponse\",\n    modelProperties: {\n      error: {\n        serializedName: \"error\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const Paths17FlgdkV2Aex141GetResponses200ContentApplicationJsonSchemaAllof0: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className:\n      \"Paths17FlgdkV2Aex141GetResponses200ContentApplicationJsonSchemaAllof0\",\n    modelProperties: {\n      data: {\n        serializedName: \"data\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Aex141Response\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const Aex141Response: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Aex141Response\",\n    modelProperties: {\n      baseUrl: {\n        serializedName: \"base_url\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      contractId: {\n        serializedName: \"contract_id\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      contractTxi: {\n        serializedName: \"contract_txi\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      extensions: {\n        serializedName: \"extensions\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      limits: {\n        serializedName: \"limits\",\n        required: true,\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"any\" } }\n        }\n      }\n    }\n  }\n};\n\nexport const PathsAxw0PwV2Aex141OwnedNftsAccountidGetResponses200ContentApplicationJsonSchemaAllof0: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className:\n      \"PathsAxw0PwV2Aex141OwnedNftsAccountidGetResponses200ContentApplicationJsonSchemaAllof0\",\n    modelProperties: {\n      data: {\n        serializedName: \"data\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Aex141OwnedTokenResponse\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const Aex141OwnedTokenResponse: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Aex141OwnedTokenResponse\",\n    modelProperties: {\n      accountId: {\n        serializedName: \"account_id\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      contractId: {\n        serializedName: \"contract_id\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      tokenId: {\n        serializedName: \"token_id\",\n        required: true,\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const PathsN3Ru7DV2Aex141ContractidOwnersGetResponses200ContentApplicationJsonSchemaAllof0: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className:\n      \"PathsN3Ru7DV2Aex141ContractidOwnersGetResponses200ContentApplicationJsonSchemaAllof0\",\n    modelProperties: {\n      data: {\n        serializedName: \"data\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Aex141OwnedTokenResponse\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const PathsRa6Pv6V2Aex141ContractidTemplatesGetResponses200ContentApplicationJsonSchemaAllof0: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className:\n      \"PathsRa6Pv6V2Aex141ContractidTemplatesGetResponses200ContentApplicationJsonSchemaAllof0\",\n    modelProperties: {\n      data: {\n        serializedName: \"data\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Aex141TemplatesResponse\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const Aex141TemplatesResponse: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Aex141TemplatesResponse\",\n    modelProperties: {\n      contractId: {\n        serializedName: \"contract_id\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      edition: {\n        serializedName: \"edition\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"any\" } }\n        }\n      },\n      logIdx: {\n        serializedName: \"log_idx\",\n        required: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      templateId: {\n        serializedName: \"template_id\",\n        required: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      txHash: {\n        serializedName: \"tx_hash\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const Paths19B9O7TV2Aex141ContractidTemplatesTemplateidTokensGetResponses200ContentApplicationJsonSchemaAllof0: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className:\n      \"Paths19B9O7TV2Aex141ContractidTemplatesTemplateidTokensGetResponses200ContentApplicationJsonSchemaAllof0\",\n    modelProperties: {\n      data: {\n        serializedName: \"data\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Aex141TemplateTokensResponse\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const Aex141TemplateTokensResponse: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Aex141TemplateTokensResponse\",\n    modelProperties: {\n      logIdx: {\n        serializedName: \"log_idx\",\n        required: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      ownerId: {\n        serializedName: \"owner_id\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      tokenId: {\n        serializedName: \"token_id\",\n        required: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      txHash: {\n        serializedName: \"tx_hash\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const Paths1Fe570RV2Aex9GetResponses200ContentApplicationJsonSchemaAllof0: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className:\n      \"Paths1Fe570RV2Aex9GetResponses200ContentApplicationJsonSchemaAllof0\",\n    modelProperties: {\n      data: {\n        serializedName: \"data\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Aex9Response\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const Aex9Response: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Aex9Response\",\n    modelProperties: {\n      contractId: {\n        serializedName: \"contract_id\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      contractTxi: {\n        serializedName: \"contract_txi\",\n        required: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      decimals: {\n        serializedName: \"decimals\",\n        required: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      eventSupply: {\n        serializedName: \"event_supply\",\n        required: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      extensions: {\n        serializedName: \"extensions\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      holders: {\n        serializedName: \"holders\",\n        required: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      initialSupply: {\n        serializedName: \"initial_supply\",\n        required: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      name: {\n        serializedName: \"name\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      symbol: {\n        serializedName: \"symbol\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const PathsO9MbpkV2Aex9AccountBalancesAccountIdGetResponses200ContentApplicationJsonSchemaAllof1: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className:\n      \"PathsO9MbpkV2Aex9AccountBalancesAccountIdGetResponses200ContentApplicationJsonSchemaAllof1\",\n    modelProperties: {\n      data: {\n        serializedName: \"data\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Aex9BalanceResponse\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const Aex9BalanceResponse: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Aex9BalanceResponse\",\n    modelProperties: {\n      amount: {\n        serializedName: \"amount\",\n        required: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      blockHash: {\n        serializedName: \"block_hash\",\n        required: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      contractId: {\n        serializedName: \"contract_id\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      decimals: {\n        serializedName: \"decimals\",\n        required: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      height: {\n        serializedName: \"height\",\n        required: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      tokenName: {\n        serializedName: \"token_name\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      tokenSymbol: {\n        serializedName: \"token_symbol\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      txHash: {\n        serializedName: \"tx_hash\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      txIndex: {\n        serializedName: \"tx_index\",\n        required: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      txType: {\n        serializedName: \"tx_type\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const PathsY2JwfkV2Aex9TransfersFromToSenderRecipientGetResponses200ContentApplicationJsonSchemaAllof0: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className:\n      \"PathsY2JwfkV2Aex9TransfersFromToSenderRecipientGetResponses200ContentApplicationJsonSchemaAllof0\",\n    modelProperties: {\n      data: {\n        serializedName: \"data\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Aex9TransferResponse\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const Aex9TransferResponse: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Aex9TransferResponse\",\n    modelProperties: {\n      amount: {\n        serializedName: \"amount\",\n        required: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      blockHeight: {\n        serializedName: \"block_height\",\n        required: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      callTxi: {\n        serializedName: \"call_txi\",\n        required: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      contractId: {\n        serializedName: \"contract_id\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      logIdx: {\n        serializedName: \"log_idx\",\n        required: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      microTime: {\n        serializedName: \"micro_time\",\n        required: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      recipient: {\n        serializedName: \"recipient\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      sender: {\n        serializedName: \"sender\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const Paths5U7W2V2Aex9TransfersFromIdGetResponses200ContentApplicationJsonSchemaAllof0: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className:\n      \"Paths5U7W2V2Aex9TransfersFromIdGetResponses200ContentApplicationJsonSchemaAllof0\",\n    modelProperties: {\n      data: {\n        serializedName: \"data\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Aex9TransferResponse\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const Paths12TleqhV2Aex9TransfersToIdGetResponses200ContentApplicationJsonSchemaAllof0: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className:\n      \"Paths12TleqhV2Aex9TransfersToIdGetResponses200ContentApplicationJsonSchemaAllof0\",\n    modelProperties: {\n      data: {\n        serializedName: \"data\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Aex9TransferResponse\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const Paths1C2B0UpV2Aex9ContractidBalancesGetResponses200ContentApplicationJsonSchemaAllof0: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className:\n      \"Paths1C2B0UpV2Aex9ContractidBalancesGetResponses200ContentApplicationJsonSchemaAllof0\",\n    modelProperties: {\n      data: {\n        serializedName: \"data\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Aex9ContractBalanceResponse\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const Aex9ContractBalanceResponse: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Aex9ContractBalanceResponse\",\n    modelProperties: {\n      accountId: {\n        serializedName: \"account_id\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      amount: {\n        serializedName: \"amount\",\n        required: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      blockHash: {\n        serializedName: \"block_hash\",\n        required: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      contractId: {\n        serializedName: \"contract_id\",\n        required: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      height: {\n        serializedName: \"height\",\n        required: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      lastLogIdx: {\n        serializedName: \"last_log_idx\",\n        required: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      lastTxHash: {\n        serializedName: \"last_tx_hash\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const PathsBelvp6V2Aex9ContractidBalancesAccountidGetResponses200ContentApplicationJsonSchemaAllof0: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className:\n      \"PathsBelvp6V2Aex9ContractidBalancesAccountidGetResponses200ContentApplicationJsonSchemaAllof0\",\n    modelProperties: {\n      account: {\n        serializedName: \"account\",\n        type: {\n          name: \"String\"\n        }\n      },\n      amount: {\n        serializedName: \"amount\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      contract: {\n        serializedName: \"contract\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const Paths11X7LpcV2Aex9ContractidBalancesAccountidHistoryGetResponses200ContentApplicationJsonSchemaAllof0: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className:\n      \"Paths11X7LpcV2Aex9ContractidBalancesAccountidHistoryGetResponses200ContentApplicationJsonSchemaAllof0\",\n    modelProperties: {\n      account: {\n        serializedName: \"account\",\n        type: {\n          name: \"String\"\n        }\n      },\n      amount: {\n        serializedName: \"amount\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      contract: {\n        serializedName: \"contract\",\n        type: {\n          name: \"String\"\n        }\n      },\n      height: {\n        serializedName: \"height\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const Paths5LeqfqV2BlocksGetResponses200ContentApplicationJsonSchemaAllof0: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className:\n      \"Paths5LeqfqV2BlocksGetResponses200ContentApplicationJsonSchemaAllof0\",\n    modelProperties: {\n      data: {\n        serializedName: \"data\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Block\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const Block: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Block\",\n    modelProperties: {\n      beneficiary: {\n        serializedName: \"beneficiary\",\n        type: {\n          name: \"String\"\n        }\n      },\n      hash: {\n        serializedName: \"hash\",\n        type: {\n          name: \"String\"\n        }\n      },\n      height: {\n        serializedName: \"height\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      info: {\n        serializedName: \"info\",\n        type: {\n          name: \"String\"\n        }\n      },\n      miner: {\n        serializedName: \"miner\",\n        type: {\n          name: \"String\"\n        }\n      },\n      nonce: {\n        serializedName: \"nonce\",\n        type: {\n          name: \"String\"\n        }\n      },\n      pow: {\n        serializedName: \"pow\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Number\"\n            }\n          }\n        }\n      },\n      prevHash: {\n        serializedName: \"prev_hash\",\n        type: {\n          name: \"String\"\n        }\n      },\n      prevKeyHash: {\n        serializedName: \"prev_key_hash\",\n        type: {\n          name: \"String\"\n        }\n      },\n      stateHash: {\n        serializedName: \"state_hash\",\n        type: {\n          name: \"String\"\n        }\n      },\n      target: {\n        serializedName: \"target\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      time: {\n        serializedName: \"time\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      version: {\n        serializedName: \"version\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const NotFoundResponse: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"NotFoundResponse\",\n    modelProperties: {\n      error: {\n        serializedName: \"error\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const PathsC25EgV2ChannelsGetResponses200ContentApplicationJsonSchemaAllof0: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className:\n      \"PathsC25EgV2ChannelsGetResponses200ContentApplicationJsonSchemaAllof0\",\n    modelProperties: {\n      data: {\n        serializedName: \"data\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Channel\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const Channel: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Channel\",\n    modelProperties: {\n      amount: {\n        serializedName: \"amount\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      channel: {\n        serializedName: \"channel\",\n        type: {\n          name: \"String\"\n        }\n      },\n      channelReserve: {\n        serializedName: \"channel_reserve\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      delegateIds: {\n        serializedName: \"delegate_ids\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"any\" } }\n        }\n      },\n      initiator: {\n        serializedName: \"initiator\",\n        type: {\n          name: \"String\"\n        }\n      },\n      initiatorAmount: {\n        serializedName: \"initiator_amount\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      lastUpdatedHeight: {\n        serializedName: \"last_updated_height\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastUpdatedTxType: {\n        serializedName: \"last_updated_tx_type\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lockPeriod: {\n        serializedName: \"lock_period\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      lockedUntil: {\n        serializedName: \"locked_until\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      responder: {\n        serializedName: \"responder\",\n        type: {\n          name: \"String\"\n        }\n      },\n      responderAmount: {\n        serializedName: \"responder_amount\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      round: {\n        serializedName: \"round\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      soloRound: {\n        serializedName: \"solo_round\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      stateHash: {\n        serializedName: \"state_hash\",\n        type: {\n          name: \"String\"\n        }\n      },\n      updatesCount: {\n        serializedName: \"updates_count\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const Paths1Csrt0IV2ContractsCallsGetResponses200ContentApplicationJsonSchemaAllof0: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className:\n      \"Paths1Csrt0IV2ContractsCallsGetResponses200ContentApplicationJsonSchemaAllof0\",\n    modelProperties: {\n      data: {\n        serializedName: \"data\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ContractCall\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const ContractCall: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ContractCall\",\n    modelProperties: {\n      blockHash: {\n        serializedName: \"block_hash\",\n        type: {\n          name: \"String\"\n        }\n      },\n      callTxHash: {\n        serializedName: \"call_tx_hash\",\n        type: {\n          name: \"String\"\n        }\n      },\n      callTxi: {\n        serializedName: \"call_txi\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      contractId: {\n        serializedName: \"contract_id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      contractTxi: {\n        serializedName: \"contract_txi\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      function: {\n        serializedName: \"function\",\n        type: {\n          name: \"String\"\n        }\n      },\n      height: {\n        serializedName: \"height\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      internalTx: {\n        serializedName: \"internal_tx\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"any\" } }\n        }\n      },\n      localIdx: {\n        serializedName: \"local_idx\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      microIndex: {\n        serializedName: \"micro_index\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const Paths9Ya94MV2ContractsLogsGetResponses200ContentApplicationJsonSchemaAllof0: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className:\n      \"Paths9Ya94MV2ContractsLogsGetResponses200ContentApplicationJsonSchemaAllof0\",\n    modelProperties: {\n      data: {\n        serializedName: \"data\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ContractLog\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const ContractLog: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ContractLog\",\n    modelProperties: {\n      args: {\n        serializedName: \"args\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Number\"\n            }\n          }\n        }\n      },\n      blockHash: {\n        serializedName: \"block_hash\",\n        type: {\n          name: \"String\"\n        }\n      },\n      callTxHash: {\n        serializedName: \"call_tx_hash\",\n        type: {\n          name: \"String\"\n        }\n      },\n      callTxi: {\n        serializedName: \"call_txi\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      contractId: {\n        serializedName: \"contract_id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      contractTxi: {\n        serializedName: \"contract_txi\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      data: {\n        serializedName: \"data\",\n        type: {\n          name: \"String\"\n        }\n      },\n      eventHash: {\n        serializedName: \"event_hash\",\n        type: {\n          name: \"String\"\n        }\n      },\n      extCallerContractId: {\n        serializedName: \"ext_caller_contract_id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      extCallerContractTxi: {\n        serializedName: \"ext_caller_contract_txi\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      height: {\n        serializedName: \"height\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      logIdx: {\n        serializedName: \"log_idx\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      microIndex: {\n        serializedName: \"micro_index\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      parentContractId: {\n        serializedName: \"parent_contract_id\",\n        nullable: true,\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const PathsRzn6HzV2DeltastatsGetResponses200ContentApplicationJsonSchemaAllof0: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className:\n      \"PathsRzn6HzV2DeltastatsGetResponses200ContentApplicationJsonSchemaAllof0\",\n    modelProperties: {\n      data: {\n        serializedName: \"data\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"DeltaStat\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const DeltaStat: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DeltaStat\",\n    modelProperties: {\n      auctionsStarted: {\n        serializedName: \"auctions_started\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      blockReward: {\n        serializedName: \"block_reward\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      contractsCreated: {\n        serializedName: \"contracts_created\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      devReward: {\n        serializedName: \"dev_reward\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      height: {\n        serializedName: \"height\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      namesActivated: {\n        serializedName: \"names_activated\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      namesExpired: {\n        serializedName: \"names_expired\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      namesRevoked: {\n        serializedName: \"names_revoked\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      oraclesExpired: {\n        serializedName: \"oracles_expired\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      oraclesRegistered: {\n        serializedName: \"oracles_registered\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const Paths10TrrshV2KeyBlocksGetResponses200ContentApplicationJsonSchemaAllof0: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className:\n      \"Paths10TrrshV2KeyBlocksGetResponses200ContentApplicationJsonSchemaAllof0\",\n    modelProperties: {\n      data: {\n        serializedName: \"data\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"KeyBlock\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const KeyBlock: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"KeyBlock\",\n    modelProperties: {\n      beneficiary: {\n        serializedName: \"beneficiary\",\n        type: {\n          name: \"String\"\n        }\n      },\n      hash: {\n        serializedName: \"hash\",\n        type: {\n          name: \"String\"\n        }\n      },\n      height: {\n        serializedName: \"height\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      info: {\n        serializedName: \"info\",\n        type: {\n          name: \"String\"\n        }\n      },\n      miner: {\n        serializedName: \"miner\",\n        type: {\n          name: \"String\"\n        }\n      },\n      nonce: {\n        serializedName: \"nonce\",\n        type: {\n          name: \"String\"\n        }\n      },\n      pow: {\n        serializedName: \"pow\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Number\"\n            }\n          }\n        }\n      },\n      prevHash: {\n        serializedName: \"prev_hash\",\n        type: {\n          name: \"String\"\n        }\n      },\n      prevKeyHash: {\n        serializedName: \"prev_key_hash\",\n        type: {\n          name: \"String\"\n        }\n      },\n      stateHash: {\n        serializedName: \"state_hash\",\n        type: {\n          name: \"String\"\n        }\n      },\n      target: {\n        serializedName: \"target\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      time: {\n        serializedName: \"time\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      version: {\n        serializedName: \"version\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const Paths7Hfka2V2KeyBlocksHashOrKbiMicroBlocksGetResponses200ContentApplicationJsonSchemaAllof0: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className:\n      \"Paths7Hfka2V2KeyBlocksHashOrKbiMicroBlocksGetResponses200ContentApplicationJsonSchemaAllof0\",\n    modelProperties: {\n      data: {\n        serializedName: \"data\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"MicroBlock\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const MicroBlock: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"MicroBlock\",\n    modelProperties: {\n      hash: {\n        serializedName: \"hash\",\n        type: {\n          name: \"String\"\n        }\n      },\n      height: {\n        serializedName: \"height\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      microBlockIndex: {\n        serializedName: \"micro_block_index\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      pofHash: {\n        serializedName: \"pof_hash\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Number\"\n            }\n          }\n        }\n      },\n      prevHash: {\n        serializedName: \"prev_hash\",\n        type: {\n          name: \"String\"\n        }\n      },\n      prevKeyHash: {\n        serializedName: \"prev_key_hash\",\n        type: {\n          name: \"String\"\n        }\n      },\n      stateHash: {\n        serializedName: \"state_hash\",\n        type: {\n          name: \"String\"\n        }\n      },\n      time: {\n        serializedName: \"time\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      transactionsCount: {\n        serializedName: \"transactions_count\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      version: {\n        serializedName: \"version\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const Paths1RxrrvbV2MicroBlocksHashTxsGetResponses200ContentApplicationJsonSchemaAllof0: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className:\n      \"Paths1RxrrvbV2MicroBlocksHashTxsGetResponses200ContentApplicationJsonSchemaAllof0\",\n    modelProperties: {\n      data: {\n        serializedName: \"data\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Tx\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const Tx: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Tx\",\n    modelProperties: {\n      blockHash: {\n        serializedName: \"block_hash\",\n        type: {\n          name: \"String\"\n        }\n      },\n      blockHeight: {\n        serializedName: \"block_height\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      hash: {\n        serializedName: \"hash\",\n        type: {\n          name: \"String\"\n        }\n      },\n      microIndex: {\n        serializedName: \"micro_index\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      microTime: {\n        serializedName: \"micro_time\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      signatures: {\n        serializedName: \"signatures\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      tx: {\n        serializedName: \"tx\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"any\" } }\n        }\n      },\n      txIndex: {\n        serializedName: \"tx_index\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const Paths16Srg6EV2NamesGetResponses200ContentApplicationJsonSchemaAllof0: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className:\n      \"Paths16Srg6EV2NamesGetResponses200ContentApplicationJsonSchemaAllof0\",\n    modelProperties: {\n      data: {\n        serializedName: \"data\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Name\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const Name: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Name\",\n    modelProperties: {\n      active: {\n        serializedName: \"active\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      hash: {\n        serializedName: \"hash\",\n        type: {\n          name: \"String\"\n        }\n      },\n      info: {\n        serializedName: \"info\",\n        type: {\n          name: \"Composite\",\n          className: \"NameInfo\"\n        }\n      },\n      previous: {\n        serializedName: \"previous\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Name\"\n            }\n          }\n        }\n      },\n      status: {\n        serializedName: \"status\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const NameInfo: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"NameInfo\",\n    modelProperties: {\n      activeFrom: {\n        serializedName: \"active_from\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      claims: {\n        serializedName: \"claims\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Number\"\n            }\n          }\n        }\n      },\n      expireHeight: {\n        serializedName: \"expire_height\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      ownership: {\n        serializedName: \"ownership\",\n        type: {\n          name: \"Composite\",\n          className: \"NameInfoOwnership\"\n        }\n      },\n      pointers: {\n        serializedName: \"pointers\",\n        type: {\n          name: \"Composite\",\n          className: \"NameInfoPointers\"\n        }\n      },\n      transfers: {\n        serializedName: \"transfers\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Number\"\n            }\n          }\n        }\n      },\n      updates: {\n        serializedName: \"updates\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const NameInfoOwnership: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"NameInfoOwnership\",\n    modelProperties: {\n      current: {\n        serializedName: \"current\",\n        type: {\n          name: \"String\"\n        }\n      },\n      original: {\n        serializedName: \"original\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const NameInfoPointers: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"NameInfoPointers\",\n    modelProperties: {\n      accountPubkey: {\n        serializedName: \"account_pubkey\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const Auction: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Auction\",\n    modelProperties: {\n      active: {\n        serializedName: \"active\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      info: {\n        serializedName: \"info\",\n        type: {\n          name: \"Composite\",\n          className: \"AuctionInfo\"\n        }\n      }\n    }\n  }\n};\n\nexport const AuctionInfo: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"AuctionInfo\",\n    modelProperties: {\n      auctionEnd: {\n        serializedName: \"auction_end\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      bids: {\n        serializedName: \"bids\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Number\"\n            }\n          }\n        }\n      },\n      lastBid: {\n        serializedName: \"last_bid\",\n        type: {\n          name: \"Composite\",\n          className: \"AuctionInfoLastBid\"\n        }\n      },\n      name: {\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      previous: {\n        serializedName: \"previous\",\n        type: {\n          name: \"Composite\",\n          className: \"Auction\"\n        }\n      },\n      status: {\n        serializedName: \"status\",\n        type: {\n          name: \"String\"\n        }\n      },\n      txIndex: {\n        serializedName: \"tx_index\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const AuctionInfoLastBid: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"AuctionInfoLastBid\",\n    modelProperties: {\n      blockHash: {\n        serializedName: \"block_hash\",\n        type: {\n          name: \"String\"\n        }\n      },\n      blockHeight: {\n        serializedName: \"block_height\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      hash: {\n        serializedName: \"hash\",\n        type: {\n          name: \"String\"\n        }\n      },\n      microIndex: {\n        serializedName: \"micro_index\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      microTime: {\n        serializedName: \"micro_time\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      signatures: {\n        serializedName: \"signatures\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      tx: {\n        serializedName: \"tx\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"any\" } }\n        }\n      }\n    }\n  }\n};\n\nexport const Paths1I6PwfdV2NamesSearchGetResponses200ContentApplicationJsonSchemaAllof0: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className:\n      \"Paths1I6PwfdV2NamesSearchGetResponses200ContentApplicationJsonSchemaAllof0\",\n    modelProperties: {\n      data: {\n        serializedName: \"data\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Get200ApplicationJsonAllOfPropertiesItemsItem\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const Paths7P6Qc1V2NamesSearchGetResponses200ContentApplicationJsonSchemaAllof0PropertiesDataItemsAllof1: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className:\n      \"Paths7P6Qc1V2NamesSearchGetResponses200ContentApplicationJsonSchemaAllof0PropertiesDataItemsAllof1\",\n    modelProperties: {\n      status: {\n        serializedName: \"status\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const NameClaim: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"NameClaim\",\n    modelProperties: {\n      blockHash: {\n        serializedName: \"block_hash\",\n        type: {\n          name: \"String\"\n        }\n      },\n      height: {\n        serializedName: \"height\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      tx: {\n        serializedName: \"tx\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"any\" } }\n        }\n      }\n    }\n  }\n};\n\nexport const PathsDjelzuV2NamesIdPointeesGetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className:\n      \"PathsDjelzuV2NamesIdPointeesGetResponses200ContentApplicationJsonSchema\",\n    modelProperties: {\n      active: {\n        serializedName: \"active\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"any\" } }\n        }\n      },\n      inactive: {\n        serializedName: \"inactive\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"any\" } }\n        }\n      }\n    }\n  }\n};\n\nexport const NameTransfer: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"NameTransfer\",\n    modelProperties: {\n      blockHash: {\n        serializedName: \"block_hash\",\n        type: {\n          name: \"String\"\n        }\n      },\n      height: {\n        serializedName: \"height\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      tx: {\n        serializedName: \"tx\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"any\" } }\n        }\n      }\n    }\n  }\n};\n\nexport const NameUpdate: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"NameUpdate\",\n    modelProperties: {\n      blockHash: {\n        serializedName: \"block_hash\",\n        type: {\n          name: \"String\"\n        }\n      },\n      height: {\n        serializedName: \"height\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      tx: {\n        serializedName: \"tx\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"any\" } }\n        }\n      }\n    }\n  }\n};\n\nexport const Oracle: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Oracle\",\n    modelProperties: {\n      active: {\n        serializedName: \"active\",\n        required: true,\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      activeFrom: {\n        serializedName: \"active_from\",\n        required: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      expireHeight: {\n        serializedName: \"expire_height\",\n        required: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      extends: {\n        serializedName: \"extends\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"OracleExtendsItem\"\n            }\n          }\n        }\n      },\n      oracle: {\n        serializedName: \"oracle\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      queryFee: {\n        serializedName: \"query_fee\",\n        required: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      register: {\n        serializedName: \"register\",\n        required: true,\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const OracleExtendsItem: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"OracleExtendsItem\",\n    modelProperties: {\n      query: {\n        serializedName: \"query\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      response: {\n        serializedName: \"response\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const PathsMherz6V2OraclesGetResponses200ContentApplicationJsonSchemaAllof0: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className:\n      \"PathsMherz6V2OraclesGetResponses200ContentApplicationJsonSchemaAllof0\",\n    modelProperties: {\n      data: {\n        serializedName: \"data\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Oracle\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const Status: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Status\",\n    modelProperties: {\n      mdwAsyncTasks: {\n        serializedName: \"mdw_async_tasks\",\n        type: {\n          name: \"Composite\",\n          className: \"StatusMdwAsyncTasks\"\n        }\n      },\n      mdwGensPerMinute: {\n        serializedName: \"mdw_gens_per_minute\",\n        required: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      mdwHeight: {\n        serializedName: \"mdw_height\",\n        required: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      mdwLastMigration: {\n        serializedName: \"mdw_last_migration\",\n        required: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      mdwRevision: {\n        serializedName: \"mdw_revision\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      mdwSynced: {\n        serializedName: \"mdw_synced\",\n        required: true,\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      mdwSyncing: {\n        serializedName: \"mdw_syncing\",\n        required: true,\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      mdwTxIndex: {\n        serializedName: \"mdw_tx_index\",\n        required: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      mdwVersion: {\n        serializedName: \"mdw_version\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      nodeHeight: {\n        serializedName: \"node_height\",\n        required: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      nodeProgress: {\n        serializedName: \"node_progress\",\n        required: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      nodeRevision: {\n        serializedName: \"node_revision\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      nodeSyncing: {\n        serializedName: \"node_syncing\",\n        required: true,\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      nodeVersion: {\n        serializedName: \"node_version\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const StatusMdwAsyncTasks: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"StatusMdwAsyncTasks\",\n    modelProperties: {\n      longTasks: {\n        serializedName: \"long_tasks\",\n        required: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      producerBuffer: {\n        serializedName: \"producer_buffer\",\n        required: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      totalPending: {\n        serializedName: \"total_pending\",\n        required: true,\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const PathsDpxn99V2TotalstatsGetResponses200ContentApplicationJsonSchemaAllof0: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className:\n      \"PathsDpxn99V2TotalstatsGetResponses200ContentApplicationJsonSchemaAllof0\",\n    modelProperties: {\n      data: {\n        serializedName: \"data\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"TotalStat\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const TotalStat: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"TotalStat\",\n    modelProperties: {\n      auctionsStarted: {\n        serializedName: \"auctions_started\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      blockReward: {\n        serializedName: \"block_reward\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      contractsCreated: {\n        serializedName: \"contracts_created\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      devReward: {\n        serializedName: \"dev_reward\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      height: {\n        serializedName: \"height\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      namesActivated: {\n        serializedName: \"names_activated\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      namesExpired: {\n        serializedName: \"names_expired\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      namesRevoked: {\n        serializedName: \"names_revoked\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      oraclesExpired: {\n        serializedName: \"oracles_expired\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      oraclesRegistered: {\n        serializedName: \"oracles_registered\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const Paths17Cjtx5V2TransfersGetResponses200ContentApplicationJsonSchemaAllof0: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className:\n      \"Paths17Cjtx5V2TransfersGetResponses200ContentApplicationJsonSchemaAllof0\",\n    modelProperties: {\n      data: {\n        serializedName: \"data\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Transfer\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const Transfer: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Transfer\",\n    modelProperties: {\n      accountId: {\n        serializedName: \"account_id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      amount: {\n        serializedName: \"amount\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      height: {\n        serializedName: \"height\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      kind: {\n        serializedName: \"kind\",\n        type: {\n          name: \"String\"\n        }\n      },\n      refTxi: {\n        serializedName: \"ref_txi\",\n        nullable: true,\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const Paths1R74KpvV2TxsGetResponses200ContentApplicationJsonSchemaAllof0: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className:\n      \"Paths1R74KpvV2TxsGetResponses200ContentApplicationJsonSchemaAllof0\",\n    modelProperties: {\n      data: {\n        serializedName: \"data\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Tx\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const Paths16Tt677V2TxsCountIdGetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className:\n      \"Paths16Tt677V2TxsCountIdGetResponses200ContentApplicationJsonSchema\",\n    modelProperties: {\n      channelCloseMutualTx: {\n        serializedName: \"channel_close_mutual_tx\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"any\" } }\n        }\n      },\n      channelCloseSoloTx: {\n        serializedName: \"channel_close_solo_tx\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"any\" } }\n        }\n      },\n      channelCreateTx: {\n        serializedName: \"channel_create_tx\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"any\" } }\n        }\n      },\n      channelDepositTx: {\n        serializedName: \"channel_deposit_tx\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"any\" } }\n        }\n      },\n      channelForceProgressTx: {\n        serializedName: \"channel_force_progress_tx\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      channelOffchainTx: {\n        serializedName: \"channel_offchain_tx\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"any\" } }\n        }\n      },\n      channelSettleTx: {\n        serializedName: \"channel_settle_tx\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"any\" } }\n        }\n      },\n      channelSlashTx: {\n        serializedName: \"channel_slash_tx\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"any\" } }\n        }\n      },\n      channelSnapshotSoloTx: {\n        serializedName: \"channel_snapshot_solo_tx\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"any\" } }\n        }\n      },\n      channelWithdrawTx: {\n        serializedName: \"channel_withdraw_tx\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"any\" } }\n        }\n      },\n      contractCallTx: {\n        serializedName: \"contract_call_tx\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"any\" } }\n        }\n      },\n      contractCreateTx: {\n        serializedName: \"contract_create_tx\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"any\" } }\n        }\n      },\n      gaAttachTx: {\n        serializedName: \"ga_attach_tx\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"any\" } }\n        }\n      },\n      gaMetaTx: {\n        serializedName: \"ga_meta_tx\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"any\" } }\n        }\n      },\n      nameClaimTx: {\n        serializedName: \"name_claim_tx\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"any\" } }\n        }\n      },\n      namePreclaimTx: {\n        serializedName: \"name_preclaim_tx\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"any\" } }\n        }\n      },\n      nameRevokeTx: {\n        serializedName: \"name_revoke_tx\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"any\" } }\n        }\n      },\n      nameTransferTx: {\n        serializedName: \"name_transfer_tx\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      nameUpdateTx: {\n        serializedName: \"name_update_tx\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"any\" } }\n        }\n      },\n      oracleExtendTx: {\n        serializedName: \"oracle_extend_tx\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"any\" } }\n        }\n      },\n      oracleQueryTx: {\n        serializedName: \"oracle_query_tx\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"any\" } }\n        }\n      },\n      oracleRegisterTx: {\n        serializedName: \"oracle_register_tx\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"any\" } }\n        }\n      },\n      oracleResponseTx: {\n        serializedName: \"oracle_response_tx\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"any\" } }\n        }\n      },\n      payingForTx: {\n        serializedName: \"paying_for_tx\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"any\" } }\n        }\n      },\n      spendTx: {\n        serializedName: \"spend_tx\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"any\" } }\n        }\n      }\n    }\n  }\n};\n\nexport const Aex141TransferEvent: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Aex141TransferEvent\",\n    modelProperties: {\n      blockHeight: {\n        serializedName: \"block_height\",\n        type: {\n          name: \"String\"\n        }\n      },\n      contractId: {\n        serializedName: \"contract_id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      logIdx: {\n        serializedName: \"log_idx\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      microIndex: {\n        serializedName: \"micro_index\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      microTime: {\n        serializedName: \"micro_time\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      recipientId: {\n        serializedName: \"recipient_id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      senderId: {\n        serializedName: \"sender_id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      tokenId: {\n        serializedName: \"token_id\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      txHash: {\n        serializedName: \"tx_hash\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const Aex9TransferEvent: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Aex9TransferEvent\",\n    modelProperties: {\n      amount: {\n        serializedName: \"amount\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      blockHeight: {\n        serializedName: \"block_height\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      contractId: {\n        serializedName: \"contract_id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      logIdx: {\n        serializedName: \"log_idx\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      microIndex: {\n        serializedName: \"micro_index\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      microTime: {\n        serializedName: \"micro_time\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      recipientId: {\n        serializedName: \"recipient_id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      senderId: {\n        serializedName: \"sender_id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      txHash: {\n        serializedName: \"tx_hash\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const InternalContractCallEvent: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"InternalContractCallEvent\",\n    modelProperties: {\n      blockHash: {\n        serializedName: \"block_hash\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      callTxHash: {\n        serializedName: \"call_tx_hash\",\n        type: {\n          name: \"String\"\n        }\n      },\n      contractId: {\n        serializedName: \"contract_id\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      contractTxHash: {\n        serializedName: \"contract_tx_hash\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      function: {\n        serializedName: \"function\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      height: {\n        serializedName: \"height\",\n        required: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      internalTx: {\n        serializedName: \"internal_tx\",\n        required: true,\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"any\" } }\n        }\n      },\n      microIndex: {\n        serializedName: \"micro_index\",\n        required: true,\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const InternalTransferEvent: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"InternalTransferEvent\",\n    modelProperties: {\n      amount: {\n        serializedName: \"amount\",\n        required: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      kind: {\n        serializedName: \"kind\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      refTxHash: {\n        serializedName: \"ref_tx_hash\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const NameClaimEvent: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"NameClaimEvent\",\n    modelProperties: {\n      tx: {\n        serializedName: \"tx\",\n        required: true,\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"any\" } }\n        }\n      },\n      txHash: {\n        serializedName: \"tx_hash\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const PathsKlr2M2V2AccountsIdActivitiesGetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className:\n      \"PathsKlr2M2V2AccountsIdActivitiesGetResponses200ContentApplicationJsonSchema\",\n    modelProperties: {\n      ...Paths1I5J7OcV2AccountsIdActivitiesGetResponses200ContentApplicationJsonSchemaAllof0\n        .type.modelProperties,\n      ...PaginatedResponse.type.modelProperties\n    }\n  }\n};\n\nexport const PathsFlc7UjV2Aex141GetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"PathsFlc7UjV2Aex141GetResponses200ContentApplicationJsonSchema\",\n    modelProperties: {\n      ...Paths17FlgdkV2Aex141GetResponses200ContentApplicationJsonSchemaAllof0\n        .type.modelProperties,\n      ...PaginatedResponse.type.modelProperties\n    }\n  }\n};\n\nexport const PathsSs61ZgV2Aex141OwnedNftsAccountidGetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className:\n      \"PathsSs61ZgV2Aex141OwnedNftsAccountidGetResponses200ContentApplicationJsonSchema\",\n    modelProperties: {\n      ...PathsAxw0PwV2Aex141OwnedNftsAccountidGetResponses200ContentApplicationJsonSchemaAllof0\n        .type.modelProperties,\n      ...PaginatedResponse.type.modelProperties\n    }\n  }\n};\n\nexport const Paths1Ilysy5V2Aex141ContractidOwnersGetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className:\n      \"Paths1Ilysy5V2Aex141ContractidOwnersGetResponses200ContentApplicationJsonSchema\",\n    modelProperties: {\n      ...PathsN3Ru7DV2Aex141ContractidOwnersGetResponses200ContentApplicationJsonSchemaAllof0\n        .type.modelProperties,\n      ...PaginatedResponse.type.modelProperties\n    }\n  }\n};\n\nexport const Paths17O9Fn6V2Aex141ContractidTemplatesGetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className:\n      \"Paths17O9Fn6V2Aex141ContractidTemplatesGetResponses200ContentApplicationJsonSchema\",\n    modelProperties: {\n      ...PathsRa6Pv6V2Aex141ContractidTemplatesGetResponses200ContentApplicationJsonSchemaAllof0\n        .type.modelProperties,\n      ...PaginatedResponse.type.modelProperties\n    }\n  }\n};\n\nexport const PathsNuoourV2Aex141ContractidTemplatesTemplateidTokensGetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className:\n      \"PathsNuoourV2Aex141ContractidTemplatesTemplateidTokensGetResponses200ContentApplicationJsonSchema\",\n    modelProperties: {\n      ...Paths19B9O7TV2Aex141ContractidTemplatesTemplateidTokensGetResponses200ContentApplicationJsonSchemaAllof0\n        .type.modelProperties,\n      ...PaginatedResponse.type.modelProperties\n    }\n  }\n};\n\nexport const Paths1Wbogg8V2Aex9GetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Paths1Wbogg8V2Aex9GetResponses200ContentApplicationJsonSchema\",\n    modelProperties: {\n      ...Paths1Fe570RV2Aex9GetResponses200ContentApplicationJsonSchemaAllof0\n        .type.modelProperties,\n      ...PaginatedResponse.type.modelProperties\n    }\n  }\n};\n\nexport const Paths1BsirxgV2Aex9AccountBalancesAccountIdGetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className:\n      \"Paths1BsirxgV2Aex9AccountBalancesAccountIdGetResponses200ContentApplicationJsonSchema\",\n    modelProperties: {\n      ...PaginatedResponse.type.modelProperties,\n      ...PathsO9MbpkV2Aex9AccountBalancesAccountIdGetResponses200ContentApplicationJsonSchemaAllof1\n        .type.modelProperties\n    }\n  }\n};\n\nexport const Paths1V0FiznV2Aex9TransfersFromToSenderRecipientGetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className:\n      \"Paths1V0FiznV2Aex9TransfersFromToSenderRecipientGetResponses200ContentApplicationJsonSchema\",\n    modelProperties: {\n      ...PathsY2JwfkV2Aex9TransfersFromToSenderRecipientGetResponses200ContentApplicationJsonSchemaAllof0\n        .type.modelProperties,\n      ...PaginatedResponse.type.modelProperties\n    }\n  }\n};\n\nexport const Paths1X48QgjV2Aex9TransfersFromIdGetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className:\n      \"Paths1X48QgjV2Aex9TransfersFromIdGetResponses200ContentApplicationJsonSchema\",\n    modelProperties: {\n      ...Paths5U7W2V2Aex9TransfersFromIdGetResponses200ContentApplicationJsonSchemaAllof0\n        .type.modelProperties,\n      ...PaginatedResponse.type.modelProperties\n    }\n  }\n};\n\nexport const Paths1DkkopqV2Aex9TransfersToIdGetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className:\n      \"Paths1DkkopqV2Aex9TransfersToIdGetResponses200ContentApplicationJsonSchema\",\n    modelProperties: {\n      ...Paths12TleqhV2Aex9TransfersToIdGetResponses200ContentApplicationJsonSchemaAllof0\n        .type.modelProperties,\n      ...PaginatedResponse.type.modelProperties\n    }\n  }\n};\n\nexport const PathsNi359V2Aex9ContractidBalancesGetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className:\n      \"PathsNi359V2Aex9ContractidBalancesGetResponses200ContentApplicationJsonSchema\",\n    modelProperties: {\n      ...Paths1C2B0UpV2Aex9ContractidBalancesGetResponses200ContentApplicationJsonSchemaAllof0\n        .type.modelProperties,\n      ...PaginatedResponse.type.modelProperties\n    }\n  }\n};\n\nexport const Paths15Ih6XV2BlocksGetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Paths15Ih6XV2BlocksGetResponses200ContentApplicationJsonSchema\",\n    modelProperties: {\n      ...Paths5LeqfqV2BlocksGetResponses200ContentApplicationJsonSchemaAllof0\n        .type.modelProperties,\n      ...PaginatedResponse.type.modelProperties\n    }\n  }\n};\n\nexport const Paths1Txl2A9V2ChannelsGetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className:\n      \"Paths1Txl2A9V2ChannelsGetResponses200ContentApplicationJsonSchema\",\n    modelProperties: {\n      ...PathsC25EgV2ChannelsGetResponses200ContentApplicationJsonSchemaAllof0\n        .type.modelProperties,\n      ...PaginatedResponse.type.modelProperties\n    }\n  }\n};\n\nexport const Paths187U0XzV2ContractsCallsGetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className:\n      \"Paths187U0XzV2ContractsCallsGetResponses200ContentApplicationJsonSchema\",\n    modelProperties: {\n      ...Paths1Csrt0IV2ContractsCallsGetResponses200ContentApplicationJsonSchemaAllof0\n        .type.modelProperties,\n      ...PaginatedResponse.type.modelProperties\n    }\n  }\n};\n\nexport const PathsB246H1V2ContractsLogsGetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className:\n      \"PathsB246H1V2ContractsLogsGetResponses200ContentApplicationJsonSchema\",\n    modelProperties: {\n      ...Paths9Ya94MV2ContractsLogsGetResponses200ContentApplicationJsonSchemaAllof0\n        .type.modelProperties,\n      ...PaginatedResponse.type.modelProperties\n    }\n  }\n};\n\nexport const Paths7Pbec0V2DeltastatsGetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className:\n      \"Paths7Pbec0V2DeltastatsGetResponses200ContentApplicationJsonSchema\",\n    modelProperties: {\n      ...PathsRzn6HzV2DeltastatsGetResponses200ContentApplicationJsonSchemaAllof0\n        .type.modelProperties,\n      ...PaginatedResponse.type.modelProperties\n    }\n  }\n};\n\nexport const Paths1Ulxr59V2KeyBlocksGetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className:\n      \"Paths1Ulxr59V2KeyBlocksGetResponses200ContentApplicationJsonSchema\",\n    modelProperties: {\n      ...Paths10TrrshV2KeyBlocksGetResponses200ContentApplicationJsonSchemaAllof0\n        .type.modelProperties,\n      ...PaginatedResponse.type.modelProperties\n    }\n  }\n};\n\nexport const PathsO99PhzV2KeyBlocksHashOrKbiMicroBlocksGetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className:\n      \"PathsO99PhzV2KeyBlocksHashOrKbiMicroBlocksGetResponses200ContentApplicationJsonSchema\",\n    modelProperties: {\n      ...Paths7Hfka2V2KeyBlocksHashOrKbiMicroBlocksGetResponses200ContentApplicationJsonSchemaAllof0\n        .type.modelProperties,\n      ...PaginatedResponse.type.modelProperties\n    }\n  }\n};\n\nexport const PathsGuqvhdV2MicroBlocksHashTxsGetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className:\n      \"PathsGuqvhdV2MicroBlocksHashTxsGetResponses200ContentApplicationJsonSchema\",\n    modelProperties: {\n      ...Paths1RxrrvbV2MicroBlocksHashTxsGetResponses200ContentApplicationJsonSchemaAllof0\n        .type.modelProperties,\n      ...PaginatedResponse.type.modelProperties\n    }\n  }\n};\n\nexport const PathsK9TkttV2NamesGetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"PathsK9TkttV2NamesGetResponses200ContentApplicationJsonSchema\",\n    modelProperties: {\n      ...Paths16Srg6EV2NamesGetResponses200ContentApplicationJsonSchemaAllof0\n        .type.modelProperties,\n      ...PaginatedResponse.type.modelProperties\n    }\n  }\n};\n\nexport const Paths3Msq0DV2NamesSearchGetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className:\n      \"Paths3Msq0DV2NamesSearchGetResponses200ContentApplicationJsonSchema\",\n    modelProperties: {\n      ...Paths1I6PwfdV2NamesSearchGetResponses200ContentApplicationJsonSchemaAllof0\n        .type.modelProperties,\n      ...PaginatedResponse.type.modelProperties\n    }\n  }\n};\n\nexport const PathsB0YvynV2OraclesGetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className:\n      \"PathsB0YvynV2OraclesGetResponses200ContentApplicationJsonSchema\",\n    modelProperties: {\n      ...PathsMherz6V2OraclesGetResponses200ContentApplicationJsonSchemaAllof0\n        .type.modelProperties,\n      ...PaginatedResponse.type.modelProperties\n    }\n  }\n};\n\nexport const Paths15PsutbV2TotalstatsGetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className:\n      \"Paths15PsutbV2TotalstatsGetResponses200ContentApplicationJsonSchema\",\n    modelProperties: {\n      ...PathsDpxn99V2TotalstatsGetResponses200ContentApplicationJsonSchemaAllof0\n        .type.modelProperties,\n      ...PaginatedResponse.type.modelProperties\n    }\n  }\n};\n\nexport const PathsIgs9Z1V2TransfersGetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className:\n      \"PathsIgs9Z1V2TransfersGetResponses200ContentApplicationJsonSchema\",\n    modelProperties: {\n      ...Paths17Cjtx5V2TransfersGetResponses200ContentApplicationJsonSchemaAllof0\n        .type.modelProperties,\n      ...PaginatedResponse.type.modelProperties\n    }\n  }\n};\n\nexport const PathsFclv4TV2TxsGetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"PathsFclv4TV2TxsGetResponses200ContentApplicationJsonSchema\",\n    modelProperties: {\n      ...Paths1R74KpvV2TxsGetResponses200ContentApplicationJsonSchemaAllof0.type\n        .modelProperties,\n      ...PaginatedResponse.type.modelProperties\n    }\n  }\n};\n\nexport const Paths1R02SlwV2Aex9ContractidBalancesAccountidGetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className:\n      \"Paths1R02SlwV2Aex9ContractidBalancesAccountidGetResponses200ContentApplicationJsonSchema\",\n    modelProperties: {\n      ...PathsBelvp6V2Aex9ContractidBalancesAccountidGetResponses200ContentApplicationJsonSchemaAllof0\n        .type.modelProperties\n    }\n  }\n};\n\nexport const Paths1T9RwnyV2Aex9ContractidBalancesAccountidHistoryGetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className:\n      \"Paths1T9RwnyV2Aex9ContractidBalancesAccountidHistoryGetResponses200ContentApplicationJsonSchema\",\n    modelProperties: {\n      ...Paths11X7LpcV2Aex9ContractidBalancesAccountidHistoryGetResponses200ContentApplicationJsonSchemaAllof0\n        .type.modelProperties\n    }\n  }\n};\n\nexport const Get200ApplicationJsonAllOfPropertiesItemsItem: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Get200ApplicationJsonAllOfPropertiesItemsItem\",\n    modelProperties: {\n      ...Name.type.modelProperties,\n      ...Paths7P6Qc1V2NamesSearchGetResponses200ContentApplicationJsonSchemaAllof0PropertiesDataItemsAllof1\n        .type.modelProperties\n    }\n  }\n};\n","import * as coreClient from \"@azure/core-client\";\nimport * as Parameters from \"./models/parameters\";\nimport * as Mappers from \"./models/mappers\";\nimport {\n  Enum1,\n  MiddlewareOptionalParams,\n  GetAccountActivitiesOptionalParams,\n  GetAccountActivitiesResponse,\n  GetSortedAex141ContractsOptionalParams,\n  GetSortedAex141ContractsResponse,\n  GetAex141OwnedTokensOptionalParams,\n  GetAex141OwnedTokensResponse,\n  GetAex141TokenOwnerOptionalParams,\n  GetAex141TokenOwnerResponse,\n  GetAex141ContractOwnersOptionalParams,\n  GetAex141ContractOwnersResponse,\n  GetAex141ContractTemplatesOptionalParams,\n  GetAex141ContractTemplatesResponse,\n  GetAex141TemplateTokensOptionalParams,\n  GetAex141TemplateTokensResponse,\n  GetAex141ByContractOptionalParams,\n  GetAex141ByContractResponse,\n  GetSortedAex9TokensOptionalParams,\n  GetSortedAex9TokensResponse,\n  GetAex9AccountBalancesOptionalParams,\n  GetAex9AccountBalancesResponse,\n  GetAex9TokensCountOptionalParams,\n  GetAex9TokensCountResponse,\n  GetAex9PairTransfersOptionalParams,\n  GetAex9PairTransfersResponse,\n  GetAex9SenderTransfersOptionalParams,\n  GetAex9SenderTransfersResponse,\n  GetAex9RecipientTransfersOptionalParams,\n  GetAex9RecipientTransfersResponse,\n  GetAex9ContractBalancesOptionalParams,\n  GetAex9ContractBalancesResponse,\n  GetAex9ContractAccountBalanceOptionalParams,\n  GetAex9ContractAccountBalanceResponse,\n  GetAex9ContractAccountBalanceHistoryOptionalParams,\n  GetAex9ContractAccountBalanceHistoryResponse,\n  GetAex9LogsCountOptionalParams,\n  GetAex9LogsCountResponse,\n  GetAex9ByContractOptionalParams,\n  GetAex9ByContractResponse,\n  GetBlocksOptionalParams,\n  GetBlocksResponse,\n  GetBlockOptionalParams,\n  GetBlockResponse,\n  GetBlockByMbiOptionalParams,\n  GetBlockByMbiResponse,\n  GetChannelsOptionalParams,\n  GetChannelsResponse,\n  GetChannelOptionalParams,\n  GetChannelResponse,\n  GetContractsCallsOptionalParams,\n  GetContractsCallsResponse,\n  GetContractsLogsOptionalParams,\n  GetContractsLogsResponse,\n  GetDeltastatsOptionalParams,\n  GetDeltastatsResponse,\n  GetKeyBlocksOptionalParams,\n  GetKeyBlocksResponse,\n  GetKeyBlockOptionalParams,\n  GetKeyBlockResponse,\n  GetKeyBlockMicroBlocksOptionalParams,\n  GetKeyBlockMicroBlocksResponse,\n  GetMicroBlockOptionalParams,\n  GetMicroBlockResponse,\n  GetMicroBlockTransactionsOptionalParams,\n  GetMicroBlockTransactionsResponse,\n  GetNamesOptionalParams,\n  GetNamesResponse,\n  GetNamesAuctionsOptionalParams,\n  GetNamesAuctionsResponse,\n  SearchNamesOptionalParams,\n  SearchNamesResponse,\n  GetNameOptionalParams,\n  GetNameResponse,\n  GetNameAuctionOptionalParams,\n  GetNameAuctionResponse,\n  GetNameClaimsOptionalParams,\n  GetNameClaimsResponse,\n  GetNamePointeesOptionalParams,\n  GetNamePointeesResponse,\n  GetNamePointersOptionalParams,\n  GetNamePointersResponse,\n  GetNameTransfersOptionalParams,\n  GetNameTransfersResponse,\n  GetNameUpdatesOptionalParams,\n  GetNameUpdatesResponse,\n  GetOracleOptionalParams,\n  GetOracleResponse,\n  GetOraclesOptionalParams,\n  GetOraclesResponse,\n  GetStatusOptionalParams,\n  GetStatusResponse,\n  GetTotalstatsOptionalParams,\n  GetTotalstatsResponse,\n  GetTransfersOptionalParams,\n  GetTransfersResponse,\n  GetTxsOptionalParams,\n  GetTxsResponse,\n  GetTxCountOptionalParams,\n  GetTxCountResponse,\n  GetTxCountByIdOptionalParams,\n  GetTxCountByIdResponse,\n  GetTxOptionalParams,\n  GetTxResponse\n} from \"./models\";\n\nexport class Middleware extends coreClient.ServiceClient {\n  $host: string;\n  limit?: number;\n  scope?: string;\n  direction?: Enum1;\n\n  /**\n   * Initializes a new instance of the Middleware class.\n   * @param $host server parameter\n   * @param options The parameter options\n   */\n  constructor($host: string, options?: MiddlewareOptionalParams) {\n    if ($host === undefined) {\n      throw new Error(\"'$host' cannot be null\");\n    }\n\n    // Initializing default values for options\n    if (!options) {\n      options = {};\n    }\n    const defaults: MiddlewareOptionalParams = {\n      requestContentType: \"application/json; charset=utf-8\"\n    };\n\n    const packageDetails = `azsdk-js-middleware/1.0.0-beta.1`;\n    const userAgentPrefix =\n      options.userAgentOptions && options.userAgentOptions.userAgentPrefix\n        ? `${options.userAgentOptions.userAgentPrefix} ${packageDetails}`\n        : `${packageDetails}`;\n\n    const optionsWithDefaults = {\n      ...defaults,\n      ...options,\n      userAgentOptions: {\n        userAgentPrefix\n      },\n      endpoint: options.endpoint ?? options.baseUri ?? \"{$host}\"\n    };\n    super(optionsWithDefaults);\n    // Parameter assignments\n    this.$host = $host;\n  }\n\n  /**\n   * Get an account activities.\n   * @param id The account address\n   * @param options The options parameters.\n   */\n  getAccountActivities(\n    id: string,\n    options?: GetAccountActivitiesOptionalParams\n  ): Promise<GetAccountActivitiesResponse> {\n    return this.sendOperationRequest(\n      { id, options },\n      getAccountActivitiesOperationSpec\n    );\n  }\n\n  /**\n   * Get AEX141 contracts sorted by name or symbol.\n   * @param options The options parameters.\n   */\n  getSortedAex141Contracts(\n    options?: GetSortedAex141ContractsOptionalParams\n  ): Promise<GetSortedAex141ContractsResponse> {\n    return this.sendOperationRequest(\n      { options },\n      getSortedAex141ContractsOperationSpec\n    );\n  }\n\n  /**\n   * Get tokens owned by an account.\n   * @param accountId The account id\n   * @param options The options parameters.\n   */\n  getAex141OwnedTokens(\n    accountId: string,\n    options?: GetAex141OwnedTokensOptionalParams\n  ): Promise<GetAex141OwnedTokensResponse> {\n    return this.sendOperationRequest(\n      { accountId, options },\n      getAex141OwnedTokensOperationSpec\n    );\n  }\n\n  /**\n   * Get owner of a NFT (AEX-141 token).\n   * @param contractId The contract id\n   * @param tokenId The nft token id\n   * @param options The options parameters.\n   */\n  getAex141TokenOwner(\n    contractId: string,\n    tokenId: number,\n    options?: GetAex141TokenOwnerOptionalParams\n  ): Promise<GetAex141TokenOwnerResponse> {\n    return this.sendOperationRequest(\n      { contractId, tokenId, options },\n      getAex141TokenOwnerOperationSpec\n    );\n  }\n\n  /**\n   * Get owners of tokens of a AEX-141 contract.\n   * @param contractId The contract id\n   * @param options The options parameters.\n   */\n  getAex141ContractOwners(\n    contractId: string,\n    options?: GetAex141ContractOwnersOptionalParams\n  ): Promise<GetAex141ContractOwnersResponse> {\n    return this.sendOperationRequest(\n      { contractId, options },\n      getAex141ContractOwnersOperationSpec\n    );\n  }\n\n  /**\n   * Get templates AEX-141 contract tokens.\n   * @param contractId The contract id\n   * @param options The options parameters.\n   */\n  getAex141ContractTemplates(\n    contractId: string,\n    options?: GetAex141ContractTemplatesOptionalParams\n  ): Promise<GetAex141ContractTemplatesResponse> {\n    return this.sendOperationRequest(\n      { contractId, options },\n      getAex141ContractTemplatesOperationSpec\n    );\n  }\n\n  /**\n   * Get AEX-141 template tokens.\n   * @param contractId Contract id\n   * @param templateId Template id\n   * @param options The options parameters.\n   */\n  getAex141TemplateTokens(\n    contractId: string,\n    templateId: number,\n    options?: GetAex141TemplateTokensOptionalParams\n  ): Promise<GetAex141TemplateTokensResponse> {\n    return this.sendOperationRequest(\n      { contractId, templateId, options },\n      getAex141TemplateTokensOperationSpec\n    );\n  }\n\n  /**\n   * Get AEX141 contract meta-info, extensions, limits and stats.\n   * @param id The contract id\n   * @param options The options parameters.\n   */\n  getAex141ByContract(\n    id: string,\n    options?: GetAex141ByContractOptionalParams\n  ): Promise<GetAex141ByContractResponse> {\n    return this.sendOperationRequest(\n      { id, options },\n      getAex141ByContractOperationSpec\n    );\n  }\n\n  /**\n   * Get AEX9 tokens sorted by name or symbol.\n   * @param options The options parameters.\n   */\n  getSortedAex9Tokens(\n    options?: GetSortedAex9TokensOptionalParams\n  ): Promise<GetSortedAex9TokensResponse> {\n    return this.sendOperationRequest(\n      { options },\n      getSortedAex9TokensOperationSpec\n    );\n  }\n\n  /**\n   * Get all AEX9 balances for an account on the last block.\n   * @param accountId Account id\n   * @param options The options parameters.\n   */\n  getAex9AccountBalances(\n    accountId: string,\n    options?: GetAex9AccountBalancesOptionalParams\n  ): Promise<GetAex9AccountBalancesResponse> {\n    return this.sendOperationRequest(\n      { accountId, options },\n      getAex9AccountBalancesOperationSpec\n    );\n  }\n\n  /**\n   * Get AEX9 tokens count.\n   * @param options The options parameters.\n   */\n  getAex9TokensCount(\n    options?: GetAex9TokensCountOptionalParams\n  ): Promise<GetAex9TokensCountResponse> {\n    return this.sendOperationRequest(\n      { options },\n      getAex9TokensCountOperationSpec\n    );\n  }\n\n  /**\n   * Get AEX9 transfers filtered by sender and recipient.\n   * @param sender Sender account id\n   * @param recipient Recipient account id\n   * @param options The options parameters.\n   */\n  getAex9PairTransfers(\n    sender: string,\n    recipient: string,\n    options?: GetAex9PairTransfersOptionalParams\n  ): Promise<GetAex9PairTransfersResponse> {\n    return this.sendOperationRequest(\n      { sender, recipient, options },\n      getAex9PairTransfersOperationSpec\n    );\n  }\n\n  /**\n   * Get AEX9 transfers filtered by sender.\n   * @param id Sender account id\n   * @param options The options parameters.\n   */\n  getAex9SenderTransfers(\n    id: string,\n    options?: GetAex9SenderTransfersOptionalParams\n  ): Promise<GetAex9SenderTransfersResponse> {\n    return this.sendOperationRequest(\n      { id, options },\n      getAex9SenderTransfersOperationSpec\n    );\n  }\n\n  /**\n   * Get AEX9 transfers filtered by recipient.\n   * @param id Recipient account id\n   * @param options The options parameters.\n   */\n  getAex9RecipientTransfers(\n    id: string,\n    options?: GetAex9RecipientTransfersOptionalParams\n  ): Promise<GetAex9RecipientTransfersResponse> {\n    return this.sendOperationRequest(\n      { id, options },\n      getAex9RecipientTransfersOperationSpec\n    );\n  }\n\n  /**\n   * Get AEX9 balances on a contract.\n   * @param contractId Contract id\n   * @param options The options parameters.\n   */\n  getAex9ContractBalances(\n    contractId: string,\n    options?: GetAex9ContractBalancesOptionalParams\n  ): Promise<GetAex9ContractBalancesResponse> {\n    return this.sendOperationRequest(\n      { contractId, options },\n      getAex9ContractBalancesOperationSpec\n    );\n  }\n\n  /**\n   * Get AEX9 balance for an account on a contract.\n   * @param contractId Contract id\n   * @param accountId Account id\n   * @param hash Block hash\n   * @param options The options parameters.\n   */\n  getAex9ContractAccountBalance(\n    contractId: string,\n    accountId: string,\n    hash: string,\n    options?: GetAex9ContractAccountBalanceOptionalParams\n  ): Promise<GetAex9ContractAccountBalanceResponse> {\n    return this.sendOperationRequest(\n      { contractId, accountId, hash, options },\n      getAex9ContractAccountBalanceOperationSpec\n    );\n  }\n\n  /**\n   * Get AEX9 account balance on a contract throughout all heights when changed.\n   * @param contractId Contract id\n   * @param accountId Account id\n   * @param options The options parameters.\n   */\n  getAex9ContractAccountBalanceHistory(\n    contractId: string,\n    accountId: string,\n    options?: GetAex9ContractAccountBalanceHistoryOptionalParams\n  ): Promise<GetAex9ContractAccountBalanceHistoryResponse> {\n    return this.sendOperationRequest(\n      { contractId, accountId, options },\n      getAex9ContractAccountBalanceHistoryOperationSpec\n    );\n  }\n\n  /**\n   * Get AEX9 token events count.\n   * @param contractId Contract id\n   * @param options The options parameters.\n   */\n  getAex9LogsCount(\n    contractId: string,\n    options?: GetAex9LogsCountOptionalParams\n  ): Promise<GetAex9LogsCountResponse> {\n    return this.sendOperationRequest(\n      { contractId, options },\n      getAex9LogsCountOperationSpec\n    );\n  }\n\n  /**\n   * Get AEX9 creation and meta_info information by contract id.\n   * @param id The contract id\n   * @param options The options parameters.\n   */\n  getAex9ByContract(\n    id: string,\n    options?: GetAex9ByContractOptionalParams\n  ): Promise<GetAex9ByContractResponse> {\n    return this.sendOperationRequest(\n      { id, options },\n      getAex9ByContractOperationSpec\n    );\n  }\n\n  /**\n   * Get multiple blocks.\n   * @param options The options parameters.\n   */\n  getBlocks(options?: GetBlocksOptionalParams): Promise<GetBlocksResponse> {\n    return this.sendOperationRequest({ options }, getBlocksOperationSpec);\n  }\n\n  /**\n   * Get a single block.\n   * @param hashOrKbi The block encoded hash or key block index\n   * @param options The options parameters.\n   */\n  getBlock(\n    hashOrKbi: string,\n    options?: GetBlockOptionalParams\n  ): Promise<GetBlockResponse> {\n    return this.sendOperationRequest(\n      { hashOrKbi, options },\n      getBlockOperationSpec\n    );\n  }\n\n  /**\n   * Get a single block.\n   * @param kbi The block key block index\n   * @param mbi The block micro block index, starting from 0\n   * @param options The options parameters.\n   */\n  getBlockByMbi(\n    kbi: number,\n    mbi: number,\n    options?: GetBlockByMbiOptionalParams\n  ): Promise<GetBlockByMbiResponse> {\n    return this.sendOperationRequest(\n      { kbi, mbi, options },\n      getBlockByMbiOperationSpec\n    );\n  }\n\n  /**\n   * Get multiple channels.\n   * @param options The options parameters.\n   */\n  getChannels(\n    options?: GetChannelsOptionalParams\n  ): Promise<GetChannelsResponse> {\n    return this.sendOperationRequest({ options }, getChannelsOperationSpec);\n  }\n\n  /**\n   * Get a single channel.\n   * @param id The channel\n   * @param options The options parameters.\n   */\n  getChannel(\n    id: string,\n    options?: GetChannelOptionalParams\n  ): Promise<GetChannelResponse> {\n    return this.sendOperationRequest({ id, options }, getChannelOperationSpec);\n  }\n\n  /**\n   * Get contract calls.\n   * @param options The options parameters.\n   */\n  getContractsCalls(\n    options?: GetContractsCallsOptionalParams\n  ): Promise<GetContractsCallsResponse> {\n    return this.sendOperationRequest(\n      { options },\n      getContractsCallsOperationSpec\n    );\n  }\n\n  /**\n   * Get contract logs.\n   * @param options The options parameters.\n   */\n  getContractsLogs(\n    options?: GetContractsLogsOptionalParams\n  ): Promise<GetContractsLogsResponse> {\n    return this.sendOperationRequest(\n      { options },\n      getContractsLogsOperationSpec\n    );\n  }\n\n  /**\n   * Get delta stats.\n   * @param options The options parameters.\n   */\n  getDeltastats(\n    options?: GetDeltastatsOptionalParams\n  ): Promise<GetDeltastatsResponse> {\n    return this.sendOperationRequest({ options }, getDeltastatsOperationSpec);\n  }\n\n  /**\n   * Get multiple key blocks.\n   * @param options The options parameters.\n   */\n  getKeyBlocks(\n    options?: GetKeyBlocksOptionalParams\n  ): Promise<GetKeyBlocksResponse> {\n    return this.sendOperationRequest({ options }, getKeyBlocksOperationSpec);\n  }\n\n  /**\n   * Get a single key block.\n   * @param hashOrKbi The key block encoded hash or key block index\n   * @param options The options parameters.\n   */\n  getKeyBlock(\n    hashOrKbi: string,\n    options?: GetKeyBlockOptionalParams\n  ): Promise<GetKeyBlockResponse> {\n    return this.sendOperationRequest(\n      { hashOrKbi, options },\n      getKeyBlockOperationSpec\n    );\n  }\n\n  /**\n   * Get the key block micro blocks.\n   * @param hashOrKbi The key block encoded hash or key block index\n   * @param options The options parameters.\n   */\n  getKeyBlockMicroBlocks(\n    hashOrKbi: string,\n    options?: GetKeyBlockMicroBlocksOptionalParams\n  ): Promise<GetKeyBlockMicroBlocksResponse> {\n    return this.sendOperationRequest(\n      { hashOrKbi, options },\n      getKeyBlockMicroBlocksOperationSpec\n    );\n  }\n\n  /**\n   * Get a micro block\n   * @param hash The micro block encoded hash\n   * @param options The options parameters.\n   */\n  getMicroBlock(\n    hash: string,\n    options?: GetMicroBlockOptionalParams\n  ): Promise<GetMicroBlockResponse> {\n    return this.sendOperationRequest(\n      { hash, options },\n      getMicroBlockOperationSpec\n    );\n  }\n\n  /**\n   * Get a micro block transactions\n   * @param hash The micro block encoded hash\n   * @param options The options parameters.\n   */\n  getMicroBlockTransactions(\n    hash: string,\n    options?: GetMicroBlockTransactionsOptionalParams\n  ): Promise<GetMicroBlockTransactionsResponse> {\n    return this.sendOperationRequest(\n      { hash, options },\n      getMicroBlockTransactionsOperationSpec\n    );\n  }\n\n  /**\n   * Get multiple names.\n   * @param options The options parameters.\n   */\n  getNames(options?: GetNamesOptionalParams): Promise<GetNamesResponse> {\n    return this.sendOperationRequest({ options }, getNamesOperationSpec);\n  }\n\n  /**\n   * Get multiple names.\n   * @param options The options parameters.\n   */\n  getNamesAuctions(\n    options?: GetNamesAuctionsOptionalParams\n  ): Promise<GetNamesAuctionsResponse> {\n    return this.sendOperationRequest(\n      { options },\n      getNamesAuctionsOperationSpec\n    );\n  }\n\n  /**\n   * Get multiple names.\n   * @param options The options parameters.\n   */\n  searchNames(\n    options?: SearchNamesOptionalParams\n  ): Promise<SearchNamesResponse> {\n    return this.sendOperationRequest({ options }, searchNamesOperationSpec);\n  }\n\n  /**\n   * Get a single name.\n   * @param id The name\n   * @param options The options parameters.\n   */\n  getName(\n    id: string,\n    options?: GetNameOptionalParams\n  ): Promise<GetNameResponse> {\n    return this.sendOperationRequest({ id, options }, getNameOperationSpec);\n  }\n\n  /**\n   * Get name auction\n   * @param id The name\n   * @param options The options parameters.\n   */\n  getNameAuction(\n    id: string,\n    options?: GetNameAuctionOptionalParams\n  ): Promise<GetNameAuctionResponse> {\n    return this.sendOperationRequest(\n      { id, options },\n      getNameAuctionOperationSpec\n    );\n  }\n\n  /**\n   * Get name claims\n   * @param id The name or name hash\n   * @param options The options parameters.\n   */\n  getNameClaims(\n    id: string,\n    options?: GetNameClaimsOptionalParams\n  ): Promise<GetNameClaimsResponse> {\n    return this.sendOperationRequest(\n      { id, options },\n      getNameClaimsOperationSpec\n    );\n  }\n\n  /**\n   * Get name pointees\n   * @param id The name\n   * @param options The options parameters.\n   */\n  getNamePointees(\n    id: string,\n    options?: GetNamePointeesOptionalParams\n  ): Promise<GetNamePointeesResponse> {\n    return this.sendOperationRequest(\n      { id, options },\n      getNamePointeesOperationSpec\n    );\n  }\n\n  /**\n   * Get name pointers\n   * @param id The name\n   * @param options The options parameters.\n   */\n  getNamePointers(\n    id: string,\n    options?: GetNamePointersOptionalParams\n  ): Promise<GetNamePointersResponse> {\n    return this.sendOperationRequest(\n      { id, options },\n      getNamePointersOperationSpec\n    );\n  }\n\n  /**\n   * Get name transfers\n   * @param id The name or name hash\n   * @param options The options parameters.\n   */\n  getNameTransfers(\n    id: string,\n    options?: GetNameTransfersOptionalParams\n  ): Promise<GetNameTransfersResponse> {\n    return this.sendOperationRequest(\n      { id, options },\n      getNameTransfersOperationSpec\n    );\n  }\n\n  /**\n   * Get name updates\n   * @param id The name or name hash\n   * @param options The options parameters.\n   */\n  getNameUpdates(\n    id: string,\n    options?: GetNameUpdatesOptionalParams\n  ): Promise<GetNameUpdatesResponse> {\n    return this.sendOperationRequest(\n      { id, options },\n      getNameUpdatesOperationSpec\n    );\n  }\n\n  /**\n   * Get a single oracle.\n   * @param id The oracle\n   * @param options The options parameters.\n   */\n  getOracle(\n    id: string,\n    options?: GetOracleOptionalParams\n  ): Promise<GetOracleResponse> {\n    return this.sendOperationRequest({ id, options }, getOracleOperationSpec);\n  }\n\n  /**\n   * Get multiple oracles.\n   * @param options The options parameters.\n   */\n  getOracles(options?: GetOraclesOptionalParams): Promise<GetOraclesResponse> {\n    return this.sendOperationRequest({ options }, getOraclesOperationSpec);\n  }\n\n  /**\n   * Gets the current syncing status of both middleware and the node\n   * @param options The options parameters.\n   */\n  getStatus(options?: GetStatusOptionalParams): Promise<GetStatusResponse> {\n    return this.sendOperationRequest({ options }, getStatusOperationSpec);\n  }\n\n  /**\n   * Get total accumulated stats.\n   * @param options The options parameters.\n   */\n  getTotalstats(\n    options?: GetTotalstatsOptionalParams\n  ): Promise<GetTotalstatsResponse> {\n    return this.sendOperationRequest({ options }, getTotalstatsOperationSpec);\n  }\n\n  /**\n   * Get multiple transfers.\n   * @param options The options parameters.\n   */\n  getTransfers(\n    options?: GetTransfersOptionalParams\n  ): Promise<GetTransfersResponse> {\n    return this.sendOperationRequest({ options }, getTransfersOperationSpec);\n  }\n\n  /**\n   * Get multiple transactions.\n   * @param options The options parameters.\n   */\n  getTxs(options?: GetTxsOptionalParams): Promise<GetTxsResponse> {\n    return this.sendOperationRequest({ options }, getTxsOperationSpec);\n  }\n\n  /**\n   * Get count of transactions at the latest height.\n   * @param options The options parameters.\n   */\n  getTxCount(options?: GetTxCountOptionalParams): Promise<GetTxCountResponse> {\n    return this.sendOperationRequest({ options }, getTxCountOperationSpec);\n  }\n\n  /**\n   * Get transactions count and its type for given aeternity ID.\n   * @param id The ID of the address/name/oracle/etc\n   * @param options The options parameters.\n   */\n  getTxCountById(\n    id: string,\n    options?: GetTxCountByIdOptionalParams\n  ): Promise<GetTxCountByIdResponse> {\n    return this.sendOperationRequest(\n      { id, options },\n      getTxCountByIdOperationSpec\n    );\n  }\n\n  /**\n   * Get a single transaction.\n   * @param hashOrIndex The transaction encoded hash or index (txi)\n   * @param options The options parameters.\n   */\n  getTx(\n    hashOrIndex: string,\n    options?: GetTxOptionalParams\n  ): Promise<GetTxResponse> {\n    return this.sendOperationRequest(\n      { hashOrIndex, options },\n      getTxOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst getAccountActivitiesOperationSpec: coreClient.OperationSpec = {\n  path: \"/v2/accounts/{id}/activities\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.PathsKlr2M2V2AccountsIdActivitiesGetResponses200ContentApplicationJsonSchema\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true\n    }\n  },\n  queryParameters: [\n    Parameters.ownedOnly,\n    Parameters.type,\n    Parameters.limit,\n    Parameters.scope,\n    Parameters.direction\n  ],\n  urlParameters: [Parameters.$host, Parameters.id],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getSortedAex141ContractsOperationSpec: coreClient.OperationSpec = {\n  path: \"/v2/aex141\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.PathsFlc7UjV2Aex141GetResponses200ContentApplicationJsonSchema\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true\n    }\n  },\n  queryParameters: [\n    Parameters.limit,\n    Parameters.direction,\n    Parameters.by,\n    Parameters.prefix\n  ],\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getAex141OwnedTokensOperationSpec: coreClient.OperationSpec = {\n  path: \"/v2/aex141/owned-nfts/{accountId}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.PathsSs61ZgV2Aex141OwnedNftsAccountidGetResponses200ContentApplicationJsonSchema\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true\n    }\n  },\n  queryParameters: [Parameters.limit, Parameters.direction],\n  urlParameters: [Parameters.$host, Parameters.accountId],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getAex141TokenOwnerOperationSpec: coreClient.OperationSpec = {\n  path: \"/v2/aex141/{contractId}/owner/{tokenId}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: { type: { name: \"String\" } }\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true\n    }\n  },\n  urlParameters: [Parameters.$host, Parameters.contractId, Parameters.tokenId],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getAex141ContractOwnersOperationSpec: coreClient.OperationSpec = {\n  path: \"/v2/aex141/{contractId}/owners\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.Paths1Ilysy5V2Aex141ContractidOwnersGetResponses200ContentApplicationJsonSchema\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true\n    }\n  },\n  queryParameters: [Parameters.limit, Parameters.direction],\n  urlParameters: [Parameters.$host, Parameters.contractId],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getAex141ContractTemplatesOperationSpec: coreClient.OperationSpec = {\n  path: \"/v2/aex141/{contractId}/templates\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.Paths17O9Fn6V2Aex141ContractidTemplatesGetResponses200ContentApplicationJsonSchema\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true\n    }\n  },\n  queryParameters: [Parameters.limit, Parameters.direction],\n  urlParameters: [Parameters.$host, Parameters.contractId],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getAex141TemplateTokensOperationSpec: coreClient.OperationSpec = {\n  path: \"/v2/aex141/{contractId}/templates/{templateId}/tokens\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.PathsNuoourV2Aex141ContractidTemplatesTemplateidTokensGetResponses200ContentApplicationJsonSchema\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true\n    }\n  },\n  queryParameters: [Parameters.limit, Parameters.direction],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.contractId,\n    Parameters.templateId\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getAex141ByContractOperationSpec: coreClient.OperationSpec = {\n  path: \"/v2/aex141/{id}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Aex141Response\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true\n    }\n  },\n  urlParameters: [Parameters.$host, Parameters.id],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getSortedAex9TokensOperationSpec: coreClient.OperationSpec = {\n  path: \"/v2/aex9\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.Paths1Wbogg8V2Aex9GetResponses200ContentApplicationJsonSchema\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true\n    }\n  },\n  queryParameters: [\n    Parameters.limit,\n    Parameters.direction,\n    Parameters.by,\n    Parameters.prefix\n  ],\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getAex9AccountBalancesOperationSpec: coreClient.OperationSpec = {\n  path: \"/v2/aex9/account-balances/{account_id}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.Paths1BsirxgV2Aex9AccountBalancesAccountIdGetResponses200ContentApplicationJsonSchema\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true\n    }\n  },\n  urlParameters: [Parameters.$host, Parameters.accountId1],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getAex9TokensCountOperationSpec: coreClient.OperationSpec = {\n  path: \"/v2/aex9/count\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: { type: { name: \"Number\" } }\n    }\n  },\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getAex9PairTransfersOperationSpec: coreClient.OperationSpec = {\n  path: \"/v2/aex9/transfers/from-to/{sender}/{recipient}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.Paths1V0FiznV2Aex9TransfersFromToSenderRecipientGetResponses200ContentApplicationJsonSchema\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true\n    }\n  },\n  queryParameters: [Parameters.limit, Parameters.direction],\n  urlParameters: [Parameters.$host, Parameters.sender, Parameters.recipient],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getAex9SenderTransfersOperationSpec: coreClient.OperationSpec = {\n  path: \"/v2/aex9/transfers/from/{id}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.Paths1X48QgjV2Aex9TransfersFromIdGetResponses200ContentApplicationJsonSchema\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true\n    }\n  },\n  queryParameters: [Parameters.limit, Parameters.direction],\n  urlParameters: [Parameters.$host, Parameters.id],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getAex9RecipientTransfersOperationSpec: coreClient.OperationSpec = {\n  path: \"/v2/aex9/transfers/to/{id}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.Paths1DkkopqV2Aex9TransfersToIdGetResponses200ContentApplicationJsonSchema\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true\n    }\n  },\n  queryParameters: [Parameters.limit, Parameters.direction],\n  urlParameters: [Parameters.$host, Parameters.id],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getAex9ContractBalancesOperationSpec: coreClient.OperationSpec = {\n  path: \"/v2/aex9/{contractId}/balances\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.PathsNi359V2Aex9ContractidBalancesGetResponses200ContentApplicationJsonSchema\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true\n    }\n  },\n  queryParameters: [Parameters.limit, Parameters.direction, Parameters.by],\n  urlParameters: [Parameters.$host, Parameters.contractId],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getAex9ContractAccountBalanceOperationSpec: coreClient.OperationSpec = {\n  path: \"/v2/aex9/{contractId}/balances/{accountId}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.Paths1R02SlwV2Aex9ContractidBalancesAccountidGetResponses200ContentApplicationJsonSchema\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true\n    }\n  },\n  queryParameters: [Parameters.hash],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.accountId,\n    Parameters.contractId\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getAex9ContractAccountBalanceHistoryOperationSpec: coreClient.OperationSpec = {\n  path: \"/v2/aex9/{contractId}/balances/{accountId}/history\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.Paths1T9RwnyV2Aex9ContractidBalancesAccountidHistoryGetResponses200ContentApplicationJsonSchema\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true\n    }\n  },\n  queryParameters: [Parameters.limit, Parameters.scope, Parameters.direction],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.accountId,\n    Parameters.contractId\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getAex9LogsCountOperationSpec: coreClient.OperationSpec = {\n  path: \"/v2/aex9/{contractId}/logs-count\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: { type: { name: \"Number\" } }\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true\n    }\n  },\n  urlParameters: [Parameters.$host, Parameters.contractId],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getAex9ByContractOperationSpec: coreClient.OperationSpec = {\n  path: \"/v2/aex9/{id}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Aex9Response\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true\n    }\n  },\n  urlParameters: [Parameters.$host, Parameters.id],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getBlocksOperationSpec: coreClient.OperationSpec = {\n  path: \"/v2/blocks\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.Paths15Ih6XV2BlocksGetResponses200ContentApplicationJsonSchema\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true\n    }\n  },\n  queryParameters: [Parameters.limit, Parameters.scope, Parameters.direction],\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getBlockOperationSpec: coreClient.OperationSpec = {\n  path: \"/v2/blocks/{hash_or_kbi}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Block\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true\n    },\n    404: {\n      bodyMapper: Mappers.NotFoundResponse,\n      isError: true\n    }\n  },\n  urlParameters: [Parameters.$host, Parameters.hashOrKbi],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getBlockByMbiOperationSpec: coreClient.OperationSpec = {\n  path: \"/v2/blocks/{kbi}/{mbi}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Block\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true\n    },\n    404: {\n      bodyMapper: Mappers.NotFoundResponse,\n      isError: true\n    }\n  },\n  urlParameters: [Parameters.$host, Parameters.kbi, Parameters.mbi],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getChannelsOperationSpec: coreClient.OperationSpec = {\n  path: \"/v2/channels\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.Paths1Txl2A9V2ChannelsGetResponses200ContentApplicationJsonSchema\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true\n    }\n  },\n  queryParameters: [\n    Parameters.limit,\n    Parameters.scope,\n    Parameters.direction,\n    Parameters.state\n  ],\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getChannelOperationSpec: coreClient.OperationSpec = {\n  path: \"/v2/channels/{id}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Channel\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true\n    },\n    404: {\n      bodyMapper: Mappers.NotFoundResponse,\n      isError: true\n    }\n  },\n  urlParameters: [Parameters.$host, Parameters.id],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getContractsCallsOperationSpec: coreClient.OperationSpec = {\n  path: \"/v2/contracts/calls\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.Paths187U0XzV2ContractsCallsGetResponses200ContentApplicationJsonSchema\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true\n    }\n  },\n  queryParameters: [Parameters.limit, Parameters.scope, Parameters.direction],\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getContractsLogsOperationSpec: coreClient.OperationSpec = {\n  path: \"/v2/contracts/logs\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.PathsB246H1V2ContractsLogsGetResponses200ContentApplicationJsonSchema\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true\n    }\n  },\n  queryParameters: [\n    Parameters.limit,\n    Parameters.scope,\n    Parameters.direction,\n    Parameters.contractId1,\n    Parameters.event,\n    Parameters.functionPrefix,\n    Parameters.data,\n    Parameters.aexnArgs\n  ],\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getDeltastatsOperationSpec: coreClient.OperationSpec = {\n  path: \"/v2/deltastats\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.Paths7Pbec0V2DeltastatsGetResponses200ContentApplicationJsonSchema\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true\n    }\n  },\n  queryParameters: [Parameters.limit, Parameters.scope, Parameters.direction],\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getKeyBlocksOperationSpec: coreClient.OperationSpec = {\n  path: \"/v2/key-blocks\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.Paths1Ulxr59V2KeyBlocksGetResponses200ContentApplicationJsonSchema\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true\n    }\n  },\n  queryParameters: [Parameters.limit, Parameters.scope, Parameters.direction],\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getKeyBlockOperationSpec: coreClient.OperationSpec = {\n  path: \"/v2/key-blocks/{hash_or_kbi}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.KeyBlock\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true\n    },\n    404: {\n      bodyMapper: Mappers.NotFoundResponse,\n      isError: true\n    }\n  },\n  urlParameters: [Parameters.$host, Parameters.hashOrKbi],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getKeyBlockMicroBlocksOperationSpec: coreClient.OperationSpec = {\n  path: \"/v2/key-blocks/{hash_or_kbi}/micro-blocks\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.PathsO99PhzV2KeyBlocksHashOrKbiMicroBlocksGetResponses200ContentApplicationJsonSchema\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true\n    }\n  },\n  queryParameters: [Parameters.limit, Parameters.scope, Parameters.direction],\n  urlParameters: [Parameters.$host, Parameters.hashOrKbi],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getMicroBlockOperationSpec: coreClient.OperationSpec = {\n  path: \"/v2/micro-blocks/{hash}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.MicroBlock\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true\n    },\n    404: {\n      bodyMapper: Mappers.NotFoundResponse,\n      isError: true\n    }\n  },\n  urlParameters: [Parameters.$host, Parameters.hash1],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getMicroBlockTransactionsOperationSpec: coreClient.OperationSpec = {\n  path: \"/v2/micro-blocks/{hash}/txs\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.PathsGuqvhdV2MicroBlocksHashTxsGetResponses200ContentApplicationJsonSchema\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true\n    }\n  },\n  urlParameters: [Parameters.$host, Parameters.hash1],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getNamesOperationSpec: coreClient.OperationSpec = {\n  path: \"/v2/names\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.PathsK9TkttV2NamesGetResponses200ContentApplicationJsonSchema\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true\n    }\n  },\n  queryParameters: [\n    Parameters.limit,\n    Parameters.direction,\n    Parameters.by,\n    Parameters.ownedBy,\n    Parameters.state1\n  ],\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getNamesAuctionsOperationSpec: coreClient.OperationSpec = {\n  path: \"/v2/names/auctions\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Auction\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true\n    }\n  },\n  queryParameters: [Parameters.limit, Parameters.scope, Parameters.direction],\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst searchNamesOperationSpec: coreClient.OperationSpec = {\n  path: \"/v2/names/search\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.Paths3Msq0DV2NamesSearchGetResponses200ContentApplicationJsonSchema\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true\n    }\n  },\n  queryParameters: [Parameters.limit, Parameters.scope, Parameters.direction],\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getNameOperationSpec: coreClient.OperationSpec = {\n  path: \"/v2/names/{id}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Name\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true\n    },\n    404: {\n      bodyMapper: Mappers.NotFoundResponse,\n      isError: true\n    }\n  },\n  urlParameters: [Parameters.$host, Parameters.id],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getNameAuctionOperationSpec: coreClient.OperationSpec = {\n  path: \"/v2/names/{id}/auction\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Auction\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true\n    },\n    404: {\n      bodyMapper: Mappers.NotFoundResponse,\n      isError: true\n    }\n  },\n  queryParameters: [Parameters.limit, Parameters.scope, Parameters.direction],\n  urlParameters: [Parameters.$host, Parameters.id],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getNameClaimsOperationSpec: coreClient.OperationSpec = {\n  path: \"/v2/names/{id}/claims\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.NameClaim\n    },\n    404: {\n      bodyMapper: Mappers.NotFoundResponse,\n      isError: true\n    }\n  },\n  queryParameters: [Parameters.limit, Parameters.scope, Parameters.direction],\n  urlParameters: [Parameters.$host, Parameters.id],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getNamePointeesOperationSpec: coreClient.OperationSpec = {\n  path: \"/v2/names/{id}/pointees\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.PathsDjelzuV2NamesIdPointeesGetResponses200ContentApplicationJsonSchema\n    },\n    404: {\n      bodyMapper: Mappers.NotFoundResponse,\n      isError: true\n    }\n  },\n  urlParameters: [Parameters.$host, Parameters.id],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getNamePointersOperationSpec: coreClient.OperationSpec = {\n  path: \"/v2/names/{id}/pointers\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: {\n        type: { name: \"Dictionary\", value: { type: { name: \"any\" } } }\n      }\n    },\n    404: {\n      bodyMapper: Mappers.NotFoundResponse,\n      isError: true\n    }\n  },\n  urlParameters: [Parameters.$host, Parameters.id],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getNameTransfersOperationSpec: coreClient.OperationSpec = {\n  path: \"/v2/names/{id}/transfers\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.NameTransfer\n    },\n    404: {\n      bodyMapper: Mappers.NotFoundResponse,\n      isError: true\n    }\n  },\n  queryParameters: [Parameters.limit, Parameters.scope, Parameters.direction],\n  urlParameters: [Parameters.$host, Parameters.id],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getNameUpdatesOperationSpec: coreClient.OperationSpec = {\n  path: \"/v2/names/{id}/updates\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.NameUpdate\n    },\n    404: {\n      bodyMapper: Mappers.NotFoundResponse,\n      isError: true\n    }\n  },\n  queryParameters: [Parameters.limit, Parameters.scope, Parameters.direction],\n  urlParameters: [Parameters.$host, Parameters.id],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getOracleOperationSpec: coreClient.OperationSpec = {\n  path: \"/v2/oracle/{id}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Oracle\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true\n    },\n    404: {\n      bodyMapper: Mappers.NotFoundResponse,\n      isError: true\n    }\n  },\n  urlParameters: [Parameters.$host, Parameters.id],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getOraclesOperationSpec: coreClient.OperationSpec = {\n  path: \"/v2/oracles\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.PathsB0YvynV2OraclesGetResponses200ContentApplicationJsonSchema\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true\n    }\n  },\n  queryParameters: [Parameters.limit, Parameters.scope, Parameters.direction],\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getStatusOperationSpec: coreClient.OperationSpec = {\n  path: \"/v2/status\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Status\n    }\n  },\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getTotalstatsOperationSpec: coreClient.OperationSpec = {\n  path: \"/v2/totalstats\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.Paths15PsutbV2TotalstatsGetResponses200ContentApplicationJsonSchema\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true\n    }\n  },\n  queryParameters: [Parameters.limit, Parameters.scope, Parameters.direction],\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getTransfersOperationSpec: coreClient.OperationSpec = {\n  path: \"/v2/transfers\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.PathsIgs9Z1V2TransfersGetResponses200ContentApplicationJsonSchema\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true\n    }\n  },\n  queryParameters: [Parameters.limit, Parameters.scope, Parameters.direction],\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getTxsOperationSpec: coreClient.OperationSpec = {\n  path: \"/v2/txs\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.PathsFclv4TV2TxsGetResponses200ContentApplicationJsonSchema\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true\n    }\n  },\n  queryParameters: [\n    Parameters.limit,\n    Parameters.scope,\n    Parameters.direction,\n    Parameters.type1,\n    Parameters.typeGroup,\n    Parameters.account,\n    Parameters.contract,\n    Parameters.channel,\n    Parameters.oracle,\n    Parameters.senderId,\n    Parameters.recipientId,\n    Parameters.entrypoint\n  ],\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getTxCountOperationSpec: coreClient.OperationSpec = {\n  path: \"/v2/txs/count\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: { type: { name: \"Number\" } }\n    }\n  },\n  queryParameters: [Parameters.scope, Parameters.txType, Parameters.id1],\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getTxCountByIdOperationSpec: coreClient.OperationSpec = {\n  path: \"/v2/txs/count/{id}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.Paths16Tt677V2TxsCountIdGetResponses200ContentApplicationJsonSchema\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true\n    }\n  },\n  urlParameters: [Parameters.$host, Parameters.id],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getTxOperationSpec: coreClient.OperationSpec = {\n  path: \"/v2/txs/{hash_or_index}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Tx\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true\n    },\n    404: {\n      bodyMapper: Mappers.NotFoundResponse,\n      isError: true\n    }\n  },\n  urlParameters: [Parameters.$host, Parameters.hashOrIndex],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","// eslint-disable-next-line max-classes-per-file\nimport BigNumber from 'bignumber.js';\nimport { OperationArguments, OperationSpec } from '@azure/core-client';\nimport {\n  genRequestQueuesPolicy, genCombineGetRequestsPolicy, genErrorFormatterPolicy,\n  genVersionCheckPolicy, genRetryOnFailurePolicy,\n} from './utils/autorest';\nimport { Middleware as MiddlewareApi, MiddlewareOptionalParams, ErrorResponse } from './apis/middleware';\nimport { mapObject } from './utils/other';\nimport { Encoded } from './utils/encoder';\nimport { ConsensusProtocolVersion } from './tx/builder/constants';\n\nconst bigIntPropertyNames = [] as const;\n\nconst numberPropertyNames = [] as const;\n\nclass MiddlewareTransformed extends MiddlewareApi {\n  override async sendOperationRequest(\n    operationArguments: OperationArguments,\n    operationSpec: OperationSpec,\n  ): Promise<any> {\n    const args = mapObject(\n      operationArguments,\n      ([key, value]) => [key, this.#encodeArg(value)],\n    ) as OperationArguments;\n    return this.#decodeRes(await super.sendOperationRequest(args, operationSpec));\n  }\n\n  #mapData(data: any, transform: {\n    bigInt: (v: any) => any;\n    number: (v: any) => any;\n  }): unknown {\n    if (Array.isArray(data)) return data.map((d) => this.#mapData(d, transform));\n    if (data != null && typeof data === 'object') {\n      return mapObject(data, ([key, value]) => {\n        if (value == null) return [key, value];\n        if (bigIntPropertyNames.some((k) => k === key)) return [key, transform.bigInt(value)];\n        if (numberPropertyNames.some((k) => k === key)) return [key, transform.number(value)];\n        return [key, this.#mapData(value, transform)];\n      });\n    }\n    return data;\n  }\n\n  #encodeArg(data: any): any {\n    return this.#mapData(data, {\n      bigInt: (value) => {\n        if (value instanceof BigNumber) return value.toFixed();\n        return value.toString();\n      },\n      number: (value) => value.toString(),\n    });\n  }\n\n  #decodeRes(data: any): any {\n    return this.#mapData(data, {\n      bigInt: (value) => BigInt(value),\n      number: (value) => +value,\n    });\n  }\n}\n\ntype BigIntPropertyNames = typeof bigIntPropertyNames[number];\ntype NumberPropertyNames = typeof numberPropertyNames[number];\ntype PreserveOptional<NewType, OrigType> =\n  OrigType extends undefined ? NewType | undefined : NewType;\nexport type TransformMiddlewareType<Type> =\n  Type extends (...args: infer Args) => infer Ret\n    ? (...args: TransformMiddlewareType<Args>) => TransformMiddlewareType<Ret>\n    : Type extends [infer Item, ...infer Rest]\n      ? [TransformMiddlewareType<Item>, ...TransformMiddlewareType<Rest>]\n      : Type extends Array<infer Item>\n        ? Array<TransformMiddlewareType<Item>>\n        : Type extends Promise<infer T>\n          ? Promise<TransformMiddlewareType<T>>\n          : Type extends { [P in any]: any }\n            ? {\n              [Property in keyof Type]:\n              Property extends BigIntPropertyNames\n                ? PreserveOptional<bigint, Type[Property]>\n                : Property extends NumberPropertyNames\n                  ? PreserveOptional<number, Type[Property]>\n                  : Property extends 'txHash'\n                    ? PreserveOptional<Encoded.TxHash, Type[Property]>\n                    : Property extends 'bytecode'\n                      ? PreserveOptional<Encoded.ContractBytearray, Type[Property]>\n                      : TransformMiddlewareType<Type[Property]>\n            }\n            : Type;\ntype MiddlewareTransformedApi = new (...args: ConstructorParameters<typeof MiddlewareApi>) => {\n  [Name in keyof InstanceType<typeof MiddlewareApi>]:\n  Name extends 'pipeline' | 'sendRequest' | 'sendOperationRequest'\n    ? MiddlewareApi[Name] : TransformMiddlewareType<MiddlewareApi[Name]>\n};\n\nexport interface MiddlewareInfo {\n  url: string;\n  nodeNetworkId: string;\n  version: string;\n  consensusProtocolVersion: ConsensusProtocolVersion;\n}\n\nexport default class Middleware\n  extends (MiddlewareTransformed as unknown as MiddlewareTransformedApi) {\n  /**\n   * @param url - Url for middleware API\n   * @param options - Options\n   * @param options.ignoreVersion - Don't ensure that the middleware is supported\n   * @param options.retryCount - Amount of extra requests to do in case of failure\n   * @param options.retryOverallDelay - Time in ms to wait between all retries\n   */\n  constructor(\n    url: string,\n    {\n      ignoreVersion = false, retryCount = 3, retryOverallDelay = 800, ...options\n    }: MiddlewareOptionalParams & {\n      ignoreVersion?: boolean;\n      retryCount?: number;\n      retryOverallDelay?: number;\n    } = {},\n  ) {\n    // eslint-disable-next-line constructor-super\n    super(url, {\n      allowInsecureConnection: true,\n      additionalPolicies: [\n        genRequestQueuesPolicy(),\n        genCombineGetRequestsPolicy(),\n        genRetryOnFailurePolicy(retryCount, retryOverallDelay),\n        genErrorFormatterPolicy((body: ErrorResponse) => ` ${body.error}`),\n      ],\n      ...options,\n    });\n    if (!ignoreVersion) {\n      const statusPromise = this.getStatus();\n      const versionPromise = statusPromise.then(({ mdwVersion }) => mdwVersion, (error) => error);\n      this.pipeline.addPolicy(\n        genVersionCheckPolicy('middleware', '/v2/status', versionPromise, '1.47.0', '2.0.0'),\n      );\n    }\n  }\n}\n","import BrowserConnection from './connection/Browser';\n\n/**\n * Browser connection proxy\n * Provide functionality to easily forward messages from one connection to another and back\n * @category aepp wallet communication\n * @param con1 - first connection\n * @param con2 - second connection\n * @returns a function to stop proxying\n */\nexport default (con1: BrowserConnection, con2: BrowserConnection): () => void => {\n  con1.connect((msg: any) => con2.sendMessage(msg), () => con2.disconnect());\n  con2.connect((msg: any) => con1.sendMessage(msg), () => con1.disconnect());\n\n  return () => {\n    con1.disconnect();\n    con2.disconnect();\n  };\n};\n","import { AlreadyConnectedError, NoWalletConnectedError } from '../../utils/errors';\n\n/**\n * Browser connection base interface\n * @category aepp wallet communication\n */\nexport default abstract class BrowserConnection {\n  debug: boolean;\n\n  protected constructor({ debug = false }: { debug?: boolean }) {\n    this.debug = debug;\n  }\n\n  /**\n   * Connect\n   * @param onMessage - Message handler\n   * @param onDisconnect - trigger when runtime connection in closed\n   */\n  connect(\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    onMessage: (message: any, origin: string, source: any) => void,\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    onDisconnect: () => void,\n  ): void {\n    if (this.isConnected()) throw new AlreadyConnectedError('You already connected');\n  }\n\n  /**\n   * Disconnect\n   */\n  disconnect(): void {\n    if (!this.isConnected()) throw new NoWalletConnectedError('You dont have connection. Please connect before');\n  }\n\n  /**\n   * Receive message\n   */\n  protected receiveMessage(message: any): void {\n    if (this.debug) console.log('Receive message:', message);\n  }\n\n  /**\n   * Send message\n   */\n  sendMessage(message: any): void {\n    if (this.debug) console.log('Send message:', message);\n  }\n\n  /**\n   * Check if connected\n   * @returns Is connected\n   */\n  abstract isConnected(): boolean;\n}\n","import BrowserConnection from './Browser';\nimport { MESSAGE_DIRECTION } from '../schema';\nimport { InternalError, RpcConnectionError } from '../../utils/errors';\n\nexport type ImplPostMessage = Pick<Window, 'addEventListener' | 'removeEventListener' | 'postMessage'>;\n\n/**\n * Browser window Post Message connector module\n * @category aepp wallet communication\n */\nexport default class BrowserWindowMessageConnection extends BrowserConnection {\n  origin?: string;\n\n  sendDirection?: MESSAGE_DIRECTION;\n\n  receiveDirection: MESSAGE_DIRECTION;\n\n  listener?: (this: Window, ev: MessageEvent<any>) => void;\n\n  #onDisconnect?: () => void;\n\n  #target?: ImplPostMessage;\n\n  #self: ImplPostMessage;\n\n  /**\n   * @param options - Options\n   * @param options.target Target window for message\n   * @param options.self Host window for message\n   * @param options.origin Origin of receiver\n   * @param options.sendDirection Wrapping messages into additional struct\n   * `({ type: 'to_aepp' || 'to_waellet', data })`\n   * Used for handling messages between content script and page\n   * @param options.receiveDirection Unwrapping messages from additional struct\n   */\n  constructor({\n    target,\n    self = window,\n    origin,\n    sendDirection,\n    receiveDirection = MESSAGE_DIRECTION.to_aepp,\n    ...options\n  }: {\n    target?: ImplPostMessage;\n    self?: ImplPostMessage;\n    origin?: string;\n    sendDirection?: MESSAGE_DIRECTION;\n    receiveDirection?: MESSAGE_DIRECTION;\n    debug?: boolean;\n  } = {}) {\n    super(options);\n    this.#target = target;\n    this.#self = self;\n    this.origin = origin;\n    this.sendDirection = sendDirection;\n    this.receiveDirection = receiveDirection;\n  }\n\n  isConnected(): boolean {\n    return this.listener != null;\n  }\n\n  override connect(\n    onMessage: (message: any, origin: string, source: MessageEventSource | null) => void,\n    onDisconnect: () => void,\n  ): void {\n    super.connect(onMessage, onDisconnect);\n    this.listener = (message: MessageEvent<any>) => {\n      // TODO: strict validate origin and source instead of checking message structure\n      if (\n        typeof message.data !== 'object'\n        || (message.data.jsonrpc ?? message.data.data?.jsonrpc) !== '2.0'\n      ) return;\n      if (this.origin != null && this.origin !== message.origin) return;\n      if (this.#target != null && this.#target !== message.source) return;\n      this.receiveMessage(message);\n      let { data } = message;\n      if (data.type != null) {\n        if (message.data.type !== this.receiveDirection) return;\n        data = data.data;\n      }\n      onMessage(data, message.origin, message.source);\n    };\n    this.#self.addEventListener('message', this.listener);\n    this.#onDisconnect = onDisconnect;\n  }\n\n  override disconnect(): void {\n    super.disconnect();\n    if (this.listener == null || this.#onDisconnect == null) {\n      throw new InternalError('Expected to not happen, required for TS');\n    }\n    this.#self.removeEventListener('message', this.listener);\n    delete this.listener;\n    this.#onDisconnect();\n    this.#onDisconnect = undefined;\n  }\n\n  override sendMessage(msg: any): void {\n    if (this.#target == null) throw new RpcConnectionError('Can\\'t send messages without target');\n    const message = this.sendDirection != null ? { type: this.sendDirection, data: msg } : msg;\n    super.sendMessage(message);\n    this.#target.postMessage(message, this.origin ?? '*');\n  }\n}\n","import BrowserConnection from './connection/Browser';\nimport BrowserWindowMessageConnection from './connection/BrowserWindowMessage';\nimport { MESSAGE_DIRECTION, METHODS } from './schema';\nimport { WalletInfo } from './rpc/types';\nimport { UnsupportedPlatformError } from '../utils/errors';\n\ninterface Wallet {\n  info: WalletInfo;\n  getConnection: () => BrowserWindowMessageConnection;\n}\ninterface Wallets { [key: string]: Wallet }\n\n/**\n * A function to detect available wallets\n * @category aepp wallet communication\n * @param connection - connection to use to detect wallets\n * @param onDetected - call-back function which trigger on new wallet\n * @returns a function to stop scanning\n */\nexport default (\n  connection: BrowserConnection,\n  onDetected: ({ wallets, newWallet }: { wallets: Wallets; newWallet: Wallet }) => void,\n): () => void => {\n  if (window == null) throw new UnsupportedPlatformError('Window object not found, you can run wallet detector only in browser');\n  const wallets: Wallets = {};\n\n  connection.connect((\n    { method, params }: { method: string; params: WalletInfo },\n    origin: string,\n    source: Window,\n  ) => {\n    if (method !== METHODS.readyToConnect || wallets[params.id] != null) return;\n\n    const wallet = {\n      info: params,\n      getConnection() {\n        return new BrowserWindowMessageConnection({\n          target: source,\n          ...params.type === 'extension' ? {\n            sendDirection: MESSAGE_DIRECTION.to_waellet,\n            receiveDirection: MESSAGE_DIRECTION.to_aepp,\n            ...window.origin !== 'null' && { origin: window.origin },\n          } : {\n            origin: params.origin,\n          },\n        });\n      },\n    };\n    wallets[wallet.info.id] = wallet;\n    onDetected({ wallets, newWallet: wallet });\n  }, () => {});\n\n  return () => connection.disconnect();\n};\n","import { Runtime } from 'webextension-polyfill';\nimport BrowserConnection from './Browser';\nimport { UnexpectedTsError } from '../../utils/errors';\n\n/**\n * BrowserRuntimeConnection\n * Handle browser runtime communication\n * @category aepp wallet communication\n */\nexport default class BrowserRuntimeConnection extends BrowserConnection {\n  port: Runtime.Port;\n\n  #listeners?: [(message: any, port: Runtime.Port) => void, () => void];\n\n  constructor({ port, ...options }: { port: Runtime.Port; debug: boolean }) {\n    super(options);\n    this.port = port;\n  }\n\n  override disconnect(): void {\n    super.disconnect();\n    this.port.disconnect();\n    if (this.#listeners == null) throw new UnexpectedTsError();\n    this.port.onMessage.removeListener(this.#listeners[0]);\n    this.port.onDisconnect.removeListener(this.#listeners[1]);\n    this.#listeners = undefined;\n  }\n\n  override connect(\n    onMessage: (message: any, origin: string, source: Runtime.Port) => void,\n    onDisconnect: () => void,\n  ): void {\n    super.connect(onMessage, onDisconnect);\n    this.#listeners = [\n      (message, port) => {\n        this.receiveMessage(message);\n        // TODO: make `origin` optional because sender url is not available on aepp side\n        onMessage(message, port.sender?.url ?? '', port);\n      },\n      onDisconnect,\n    ];\n    this.port.onMessage.addListener(this.#listeners[0]);\n    this.port.onDisconnect.addListener(this.#listeners[1]);\n  }\n\n  override sendMessage(message: any): void {\n    super.sendMessage(message);\n    this.port.postMessage(message);\n  }\n\n  isConnected(): boolean {\n    return this.#listeners != null;\n  }\n}\n","import { TypeResolver, ContractByteArrayEncoder } from '@aeternity/aepp-calldata';\nimport { AciValue } from './utils/typed-data';\nimport { Encoded } from './utils/encoder';\nimport { RpcError } from './aepp-wallet-communication/schema';\n\n/**\n * @category exception\n * @deprecated this exception is not thrown anymore\n */\nexport class RpcBroadcastError extends RpcError {\n  static override code = 3;\n\n  override code = 3;\n\n  constructor(data?: any) {\n    super('Broadcast failed');\n    this.data = data;\n    this.name = 'RpcBroadcastError';\n  }\n}\n\n/**\n * @deprecated use isAuctionName instead\n */\nexport const NAME_BID_MAX_LENGTH = 12; // # this is the max length for a domain to be part of a bid\n\n/**\n * @deprecated use ContractByteArrayEncoder:encodeWithType from \\@aeternity/aepp-calldata\n */\nexport function encodeFateValue(value: unknown, aci: AciValue): Encoded.ContractBytearray {\n  const valueType = new TypeResolver().resolveType(aci, {});\n  return new ContractByteArrayEncoder().encodeWithType(value, valueType);\n}\n\n/**\n * @deprecated use ContractByteArrayEncoder:decodeWithType from \\@aeternity/aepp-calldata\n */\nexport function decodeFateValue(value: Encoded.ContractBytearray, aci: AciValue): any {\n  const valueType = new TypeResolver().resolveType(aci, {});\n  return new ContractByteArrayEncoder().decodeWithType(value, valueType);\n}\n"],"names":["root","factory","exports","module","require","define","amd","self","__WEBPACK_EXTERNAL_MODULE__5039__","__WEBPACK_EXTERNAL_MODULE__9408__","__WEBPACK_EXTERNAL_MODULE__3485__","__WEBPACK_EXTERNAL_MODULE__3783__","__WEBPACK_EXTERNAL_MODULE__5192__","__WEBPACK_EXTERNAL_MODULE__79__","__WEBPACK_EXTERNAL_MODULE__7480__","__WEBPACK_EXTERNAL_MODULE__4711__","__WEBPACK_EXTERNAL_MODULE__7946__","__WEBPACK_EXTERNAL_MODULE__6667__","__WEBPACK_EXTERNAL_MODULE__3983__","__WEBPACK_EXTERNAL_MODULE__7417__","__WEBPACK_EXTERNAL_MODULE__9882__","__WEBPACK_EXTERNAL_MODULE__1986__","__WEBPACK_EXTERNAL_MODULE__8236__","__WEBPACK_EXTERNAL_MODULE__2716__","__WEBPACK_EXTERNAL_MODULE__3735__","__WEBPACK_EXTERNAL_MODULE__8079__","__WEBPACK_EXTERNAL_MODULE__3153__","util","ADD64AA","v","a","b","o0","o1","ADD64AC","b0","b1","B2B_GET32","arr","i","B2B_G","c","d","ix","iy","x0","m","x1","y0","y1","xor0","xor1","BLAKE2B_IV32","Uint32Array","SIGMA82","Uint8Array","map","x","blake2bCompress","ctx","last","h","t","parameterBlock","blake2bInit","outlen","key","salt","personal","Error","length","fill","set","blake2bUpdate","input","blake2bFinal","out","blake2b","normalizeInput","blake2bHex","output","toHex","uint32ToHex","val","toString","substring","ret","TextEncoder","encode","bytes","Array","prototype","call","n","join","debugPrint","label","size","msg","toUpperCase","console","log","testSpeed","hashFn","N","M","startMs","Date","getTime","genMs","hashHex","hashMs","ms","Math","round","parent","Object","defineProperty","it","desc","sham","path","Symbol","WrappedWellKnownSymbolModule","f","isCallable","tryToString","$TypeError","TypeError","argument","$String","String","isObject","toIndexedObject","toAbsoluteIndex","lengthOfArrayLike","createMethod","IS_INCLUDES","$this","el","fromIndex","value","O","index","includes","indexOf","bind","uncurryThis","IndexedObject","toObject","arraySpeciesCreate","push","TYPE","IS_MAP","IS_FILTER","IS_SOME","IS_EVERY","IS_FIND_INDEX","IS_FILTER_REJECT","NO_HOLES","callbackfn","that","specificCreate","result","boundFunction","create","target","undefined","forEach","filter","some","every","find","findIndex","filterReject","fails","wellKnownSymbol","V8_VERSION","SPECIES","METHOD_NAME","array","constructor","foo","Boolean","createProperty","$Array","max","start","end","k","fin","slice","isArray","isConstructor","originalArray","C","arraySpeciesConstructor","stringSlice","TO_STRING_TAG_SUPPORT","classofRaw","TO_STRING_TAG","$Object","CORRECT_ARGUMENTS","arguments","tag","error","tryGet","callee","F","getPrototypeOf","done","DESCRIPTORS","definePropertyModule","createPropertyDescriptor","object","bitmap","enumerable","configurable","writable","toPropertyKey","propertyKey","name","descriptor","createNonEnumerableProperty","options","global","get","documentAll","document","all","IS_HTMLDDA","EXISTS","createElement","CSSRuleList","CSSStyleDeclaration","CSSValueList","ClientRectList","DOMRectList","DOMStringList","DOMTokenList","DataTransferItemList","FileList","HTMLAllCollection","HTMLCollection","HTMLFormElement","HTMLSelectElement","MediaList","MimeTypeArray","NamedNodeMap","NodeList","PaintRequestList","Plugin","PluginArray","SVGLengthList","SVGNumberList","SVGPathSegList","SVGPointList","SVGStringList","SVGTransformList","SourceBufferList","StyleSheetList","TextTrackCueList","TextTrackList","TouchList","navigator","userAgent","match","version","process","Deno","versions","v8","split","apply","getOwnPropertyDescriptor","isForced","hasOwn","wrapConstructor","NativeConstructor","Wrapper","this","source","FORCED","USE_NATIVE","VIRTUAL_PROTOTYPE","sourceProperty","targetProperty","nativeProperty","resultProperty","TARGET","GLOBAL","STATIC","stat","PROTO","proto","nativeSource","targetPrototype","forced","dontCallGetSet","wrap","real","exec","NATIVE_BIND","FunctionPrototype","Function","Reflect","aCallable","fn","test","hasOwnProperty","getDescriptor","PROPER","CONFIGURABLE","method","uncurryThisWithBind","aFunction","variable","namespace","classof","replacer","rawLength","keys","element","keysLength","j","isNullOrUndefined","V","P","func","check","globalThis","window","g","getBuiltIn","propertyIsEnumerable","store","functionToString","inspectSource","has","NATIVE_WEAK_MAP","shared","sharedKey","hiddenKeys","OBJECT_ALREADY_INITIALIZED","WeakMap","state","metadata","facade","STATE","enforce","getterFor","type","$documentAll","noop","empty","construct","constructorRegExp","INCORRECT_TO_STRING","isConstructorModern","isConstructorLegacy","called","replacement","feature","detection","data","normalize","POLYFILL","NATIVE","string","replace","toLowerCase","isPrototypeOf","USE_SYMBOL_AS_UID","$Symbol","IteratorPrototype","setToStringTag","Iterators","returnThis","IteratorConstructor","NAME","next","ENUMERABLE_NEXT","$","IS_PURE","FunctionName","createIteratorConstructor","setPrototypeOf","defineBuiltIn","IteratorsCore","PROPER_FUNCTION_NAME","CONFIGURABLE_FUNCTION_NAME","BUGGY_SAFARI_ITERATORS","ITERATOR","KEYS","VALUES","ENTRIES","Iterable","DEFAULT","IS_SET","CurrentIteratorPrototype","methods","KEY","getIterationMethod","KIND","defaultIterator","IterablePrototype","INCORRECT_VALUES_NAME","nativeIterator","anyNativeIterator","entries","values","PrototypeOfArrayIteratorPrototype","arrayIterator","toLength","obj","ceil","floor","trunc","activeXDocument","anObject","definePropertiesModule","enumBugKeys","html","documentCreateElement","PROTOTYPE","SCRIPT","IE_PROTO","EmptyConstructor","scriptTag","content","LT","NullProtoObjectViaActiveX","write","close","temp","parentWindow","NullProtoObject","ActiveXObject","iframeDocument","iframe","JS","domain","style","display","appendChild","src","contentWindow","open","Properties","V8_PROTOTYPE_DEFINE_BUG","objectKeys","defineProperties","props","IE8_DOM_DEFINE","$defineProperty","$getOwnPropertyDescriptor","ENUMERABLE","WRITABLE","Attributes","current","propertyIsEnumerableModule","$getOwnPropertyNames","arraySlice","windowNames","getOwnPropertyNames","getWindowNames","internalObjectKeys","concat","getOwnPropertySymbols","CORRECT_PROTOTYPE_GETTER","ObjectPrototype","names","$propertyIsEnumerable","NASHORN_BUG","uncurryThisAccessor","aPossiblePrototype","setter","CORRECT_SETTER","__proto__","pref","valueOf","TAG","SET_METHOD","uid","defineGlobalProperty","SHARED","mode","copyright","license","toIntegerOrInfinity","requireObjectCoercible","charAt","charCodeAt","CONVERT_TO_STRING","pos","first","second","S","position","codeAt","symbol","SymbolPrototype","TO_PRIMITIVE","hint","arity","keyFor","thisSymbolValue","isRegisteredSymbol","isSymbol","$isWellKnownSymbol","isWellKnownSymbol","WellKnownSymbolsStore","symbolKeys","symbolKeysLength","symbolKey","NATIVE_SYMBOL","min","integer","number","getMethod","ordinaryToPrimitive","exoticToPrim","toPrimitive","id","postfix","random","iterator","wrappedWellKnownSymbolModule","createWellKnownSymbol","withoutSetter","doesNotExceedSafeInteger","arrayMethodHasSpeciesSupport","IS_CONCAT_SPREADABLE","IS_CONCAT_SPREADABLE_SUPPORT","isConcatSpreadable","spreadable","arg","len","E","A","addToUnscopables","InternalStateModule","defineIterator","createIterResultObject","ARRAY_ITERATOR","setInternalState","getInternalState","iterated","kind","Arguments","getReplacerFunction","$stringify","numberToString","tester","low","hi","WRONG_SYMBOLS_CONVERSION","ILL_FORMED_UNICODE","stringifyWithSymbolsFix","args","$replacer","fixIllFormed","offset","prev","stringify","space","JSON","getOwnPropertySymbolsModule","$getOwnPropertySymbols","STRING_ITERATOR","point","defineWellKnownSymbol","$toString","nativeObjectCreate","getOwnPropertyNamesModule","getOwnPropertyNamesExternal","getOwnPropertyDescriptorModule","defineBuiltInAccessor","defineSymbolToPrimitive","$forEach","HIDDEN","SYMBOL","QObject","nativeGetOwnPropertyDescriptor","nativeDefineProperty","nativeGetOwnPropertyNames","nativePropertyIsEnumerable","AllSymbols","ObjectPrototypeSymbols","USE_SETTER","findChild","setSymbolDescriptor","ObjectPrototypeDescriptor","description","$defineProperties","properties","IS_OBJECT_PROTOTYPE","unsafe","useSetter","useSimple","NATIVE_SYMBOL_REGISTRY","StringToSymbolRegistry","SymbolToStringRegistry","sym","METADATA","isRegistered","isWellKnown","DOMIterables","COLLECTION_NAME","Collection","CollectionPrototype","ctor","superCtor","super_","TempCtor","buffer","Buffer","copyProps","dst","SafeBuffer","encodingOrOffset","from","alloc","allocUnsafe","allocUnsafeSlow","encoding","buf","SlowBuffer","Hash","blockSize","finalSize","_block","_finalSize","_blockSize","_len","update","enc","block","accum","assigned","remainder","_update","digest","rem","bits","writeUInt32BE","lowBits","highBits","hash","_hash","inherits","K","W","Sha256","init","_w","ch","y","z","maj","sigma0","sigma1","gamma0","_a","_b","_c","_d","_e","_f","_g","_h","e","readInt32BE","T1","T2","H","writeInt32BE","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","getter","__esModule","definition","o","prop","r","toStringTag","bigNumber","integerValue","BigNumber","BaseError","message","super","AccountError","AensError","AeppError","ChannelError","CompilerError","ContractError","CryptographyError","NodeError","TransactionError","WalletError","ArgumentError","argumentName","requirement","argumentValue","IllegalArgumentError","ArgumentCountMismatchError","functionName","requiredCount","providedCount","InsufficientBalanceError","MissingParamError","NoSerializerFoundError","RequestTimedOutError","height","TxTimedOutError","blocks","th","UnsupportedPlatformError","UnsupportedProtocolError","NotImplementedError","UnsupportedVersionError","dependency","geVersion","ltVersion","InternalError","UnexpectedTsError","UnavailableAccountError","address","AensPointerContextError","nameOrId","prefix","InsufficientNameFeeError","nameFee","minNameFee","InvalidAensNameError","InvalidRpcMessageError","MissingCallbackError","UnAuthorizedAccountError","onAccount","UnknownRpcClientError","UnsubscribedAccountError","ChannelCallError","ChannelConnectionError","ChannelPingTimedOutError","UnexpectedChannelMessageError","ChannelIncomingMessageError","handlerError","incomingMessage","UnknownChannelStateError","InvalidAuthDataError","BytecodeMismatchError","DuplicateContractError","InactiveContractError","contractAddress","InvalidMethodInvocationError","MissingContractAddressError","MissingContractDefError","MissingFunctionNameError","NodeInvocationError","transaction","NoSuchContractFunctionError","NotPayableFunctionError","amount","MissingEventDefinitionError","eventNameHash","eventAddress","AmbiguousEventDefinitionError","matchedEvents","_ref","InvalidChecksumError","InvalidPasswordError","MerkleTreeHashMismatchError","MissingNodeInTreeError","UnknownNodeLengthError","nodeLength","UnknownPathNibbleError","nibble","DuplicateNodeError","NodeNotFoundError","DecodeError","PayloadLengthError","DryRunError","IllegalBidFeeError","InvalidSignatureError","PrefixNotFoundError","SchemaNotFoundError","TagNotFoundError","TxNotInChainError","txHash","AlreadyConnectedError","NoWalletConnectedError","RpcConnectionError","AE_AMOUNT_FORMATS","DENOMINATION_MAGNITUDE","AE","MILI_AE","MICRO_AE","NANO_AE","PICO_AE","FEMTO_AE","AETTOS","formatAmount","denomination","targetDenomination","isNaN","Number","isInteger","shiftedBy","toFixed","toAe","toAettos","prefixes","magnitude","getNearestPrefix","exponent","reduce","p","abs","getLowerBoundPrefix","_prefixes$find","prefixedAmount","rawValue","_value$e","exp","precision","pause","async","Promise","resolve","setTimeout","duration","mapObject","fromEntries","concatBuffers","list","totalLength","isKeyOfObject","isItemOfArray","item","isAccountNotFoundError","RestError","statusCode","ensureError","Encoding","sha256hash","base64Types","ContractBytearray","ContractStoreKey","ContractStoreValue","Transaction","OracleQuery","OracleResponse","State","Poi","StateTrees","CallStateTree","Bytearray","base58Types","KeyBlockHash","MicroBlockHash","BlockPofHash","BlockTxHash","BlockStateHash","Channel","ContractAddress","TxHash","OracleAddress","OracleQueryId","AccountAddress","Signature","Commitment","PeerPubkey","Name","byteSizeForType","ensureValidLength","reqLen","getChecksum","payload","addChecksum","getPayload","equals","base64","decode","base58","bs58Encode","bs58Decode","parseType","maybeType","base64Type","base58Type","encodedPayload","extra","encoder","getAddressFromPriv","secret","secretBuffer","nacl","keyPair","fromSecretKey","publicKey","isAddressValid","actualPrefix","genSalt","BigUint64Array","BigInt","MAX_SAFE_INTEGER","encodeUnsigned","binary","encodeContractAddress","owner","nonce","generateKeyPairFromSecret","generateKeyPair","raw","publicBuffer","secretKey","sign","privateKey","detached","verify","signature","messagePrefix","messagePrefixLength","varuintEncode","messageToHash","signMessage","verifyMessage","isValidKeypair","MAX_AUTH_FUN_GAS","NAME_TTL","NAME_MAX_TTL","NAME_MAX_CLIENT_TTL","CLIENT_TTL","MIN_GAS_PRICE","NAME_FEE_MULTIPLIER","NAME_FEE_BID_INCREMENT","NAME_BID_TIMEOUT_BLOCKS","NAME_MAX_LENGTH_FEE","NAME_BID_RANGES","times","ConsensusProtocolVersion","VmVersion","AbiVersion","Tag","ProtocolToVmAbi","Iris","vmVersion","Fate2","abiVersion","Fate","Sophia","NoAbi","Ceres","Fate3","getProtocolDetails","protocolVersion","_protocol$vmVersion$","protocol","serialize","params","_value","consensusProtocolVersion","prepare","onNode","getNodeInfo","deserialize","vm","abi","genEntryField","txParams","buildTx","ArrayBuffer","isView","startsWith","_ref2","unpackTx","tx","genArrayField","itemHandler","items","buffers","genMapField","Mtree","MtreeValue","_ref3","_ref4","_ref5","recursiveType","toBytes","big","hexString","buildContractId","ownerId","oracleQueryId","senderId","oracleId","nonceBE","_int32","AENS_SUFFIX","nameToPunycode","maybeName","suffix","other","punycode","u","URL","username","password","port","search","pathname","host","produceNameId","commitmentHash","padStart","readInt","ensureName","isNameValid","encodingToPointerKey","getDefaultPointerKey","identifier","getMinimumNameFee","nameLength","computeBidFee","startFee","increment","plus","computeAuctionEndBlock","claimHeight","isAuctionName","uInt","genShortUIntConstField","constValue","optional","shortUInt","constValueOptional","idTagToEncoding","genAddressField","encodings","_key","hashId","idTag","readUIntBE","subarray","genEncodedField","encodedData","serializeAettos","getOracleRelativeTtl","ttlKeys","OracleRegisterTx","OracleExtendTx","OracleQueryTx","OracleResponseTx","buildFee","builtTx","txObject","innerTxSize","GaMetaTx","PayingForTx","encodedTx","txType","_feeFactors","factor","ChannelForceProgressTx","ChannelOffChainTx","ChannelOffChainUpdateCallContract","ChannelOffChainUpdateCreateContract","ChannelOffChainUpdateDeposit","ChannelOffChainUpdateWithdraw","ChannelOffChainUpdateTransfer","ContractCreateTx","ContractCallTx","GaAttachTx","TX_FEE_BASE_GAS","TX_FEE_OTHER_GAS","txSize","relativeTtl","minus","coinAmount","rebuildTx","_computingMinFee","_pickBiggerFee","minFee","previousFee","fee","eq","calculateMinFee","gt","absoluteTtl","getCurrentKeyBlock","genNonceField","senderKey","strategy","getAccountNextNonce","catch","nextNonce","addressAny","pointers","pointer","field","txFields","parameters","addressName","_computingGasLimit","gasMax","gasLimitMax","dividedBy","calculateGasLimitMax","gasLimit","_getProtocolDetails","genEnumerationField","enm","_classExtractFieldDescriptor","receiver","privateMap","action","_classPrivateFieldSet","_classPrivateFieldGet","NodeType","_rootHash","_isComplete","_nodes","_encoding","_tag","_unpackTx","_getRaw","WeakSet","_entriesRaw","MPTree","isComplete","unpTx","_classPrivateMethodInitSpec","_classPrivateFieldInitSpec","node","_classStaticPrivateMethodGet","_nodeHash","_parseNode","Branch","Extension","Leaf","isEqual","tree","mptHash","_classPrivateMethodGet","_getRaw2","_entriesRaw2","rlpEncode","searchFrom","rec","idx","_ref6","_ref7","genMPTreeField","genWrappedField","ORACLE_TTL_TYPES","ORACLE_TTL","delta","QUERY_TTL","RESPONSE_TTL","DRY_RUN_ACCOUNT","pub","CallReturnType","entryAny","entry","entrySignedTx","SignedTx","entryMtreeValueArray","entryTreesPoi","TreesPoi","mapContracts","Contract","mapAccounts","Account","mapCalls","ContractCall","mapChannels","mapNames","mapOracles","Oracle","txSchema","shortUIntConst","balance","flags","gaContract","gaAuthFun","encoded","signatures","SpendTx","recipientId","ttl","accountId","nameTtl","status","clientTtl","NamePreclaimTx","commitmentId","NameClaimTx","nameSalt","NameUpdateTx","nameId","NameTransferTx","NameRevokeTx","ctVersion","code","active","boolean","referers","deposit","gasPrice","callData","callerId","contractId","callerNonce","gasUsed","returnValue","returnType","enumeration","queryFormat","responseFormat","queryFee","oracleTtlValue","oracleTtlType","query","queryTtlType","queryTtlValue","responseTtlType","responseTtlValue","queryId","response","ChannelCreateTx","initiator","initiatorAmount","responder","responderAmount","channelReserve","lockPeriod","initiatorDelegateIds","responderDelegateIds","stateHash","ChannelCloseMutualTx","channelId","fromId","initiatorAmountFinal","responderAmountFinal","ChannelCloseSoloTx","poi","ChannelSlashTx","ChannelDepositTx","ChannelWithdrawTx","toId","ChannelSettleTx","offChainTrees","channelAmount","soloRound","lockedUntil","initiatorAuth","responderAuth","ChannelSnapshotSoloTx","to","caller","contract","callStack","ChannelClientReconnectTx","role","pubkey","accounts","mptree","calls","channels","contracts","ns","oracles","wrapped","ContractsMtree","CallsMtree","ChannelsMtree","NameserviceMtree","OraclesMtree","AccountsMtree","authFun","gaId","authData","payerId","GaMetaTxAuthData","getSchema","_version","schemas","s","schema","overrideParams","buildTxAsync","rlpDecode","acc","buildTxHash","rawTx","buildContractIdByContractTx","contractTx","semverSatisfies","getComponents","versionComponents","geComponents","ltComponents","base","componentsToNumber","components","reverse","vNumber","geNumber","ltNumber","genRequestQueuesPolicy","requestQueues","Map","policy","sendRequest","request","_requestQueues$get","headers","delete","getResponse","req","then","genCombineGetRequestsPolicy","pendingGetRequests","_pendingGetRequests$g","url","body","genAggressiveCacheGetResponsesPolicy","getRequests","_getRequests$get","genErrorFormatterPolicy","getMessage","bodyAsText","parse","genVersionCheckPolicy","ignorePath","versionPromise","genRetryOnFailurePolicy","retryCount","retryOverallDelay","statusesToNotRetry","intervals","_","intervalSum","intervalsInMs","attempt","_e$response$status","Header","className","modelProperties","serializedName","required","prevHash","prevKeyHash","miner","beneficiary","pow","constraints","MinItems","MaxItems","time","info","pofHash","txsHash","ErrorModel","reason","KeyBlock","HashResponse","HeightResponse","MicroBlockHeader","SignedTxs","transactions","blockHeight","blockHash","Tx","uberParent","polymorphicDiscriminator","clientName","initiatorId","responderId","delegateIds","offchainTrees","oracleTtl","queryTtl","responseTtl","gas","Pattern","RegExp","allowedValues","Delegates","OffChainUpdate","op","RelativeTTL","defaultValue","isConstant","Ttl","NamePointer","CountResponse","count","Generation","keyBlock","microBlocks","payable","NextNonceResponse","DryRunInput","top","txs","txEvents","DryRunAccount","pubKey","DryRunInputItem","callReq","DryRunCallReq","calldata","context","DryRunCallContext","stateful","DryRunResults","results","DryRunResult","callObj","ContractCallObject","Event","topics","TxInfoObject","callInfo","gaInfo","txInfo","GAObject","innerObject","EncodedTx","PostTxResponse","ContractObject","referrerIds","ByteCode","bytecode","PoI","RegisteredOracle","OracleQueries","oracleQueries","senderNonce","NameEntry","PeerPubKey","Status","genesisKeyBlockHash","solutions","difficulty","syncing","syncProgress","InclusiveMaximum","InclusiveMinimum","listening","protocols","nodeVersion","nodeRevision","peerCount","peerConnections","pendingTransactionsCount","networkId","peerPubkey","topKeyBlockHash","topBlockHeight","Protocol","effectiveAtHeight","PeerConnections","inbound","outbound","OracleRespondTx","CommitmentId","NameHash","ChannelSetDelegatesTx","PubKey","PeerDetails","firstSeen","lastSeen","genesisHash","topHash","topDifficulty","nodeVendor","nodeOs","Peers","peers","blocked","PeerCount","connected","available","PeerCountConnected","PeerCountAvailable","verified","unverified","UnsignedTx","TokenSupply","contractOracles","locked","pendingRewards","total","GAAttachTx","GAMetaTx","CheckTxInPoolResponse","OffChainTransfer","OffChainWithdrawal","OffChainDeposit","OffChainNewContract","OffChainCallContract","CreateContractUnsignedTx","discriminators","accept","parameterPath","mapper","$host","skipEncoding","intAsString","contentType","DryRunInputMapper","body1","EncodedTxMapper","Node","coreClient","_options$endpoint","packageDetails","userAgentPrefix","userAgentOptions","requestContentType","endpoint","baseUri","getTopHeader","sendOperationRequest","getTopHeaderOperationSpec","getCurrentKeyBlockOperationSpec","getCurrentKeyBlockHash","getCurrentKeyBlockHashOperationSpec","getCurrentKeyBlockHeight","getCurrentKeyBlockHeightOperationSpec","getPendingKeyBlock","getPendingKeyBlockOperationSpec","getKeyBlockByHash","getKeyBlockByHashOperationSpec","getKeyBlockByHeight","getKeyBlockByHeightOperationSpec","getMicroBlockHeaderByHash","getMicroBlockHeaderByHashOperationSpec","getMicroBlockTransactionsByHash","getMicroBlockTransactionsByHashOperationSpec","getMicroBlockTransactionByHashAndIndex","getMicroBlockTransactionByHashAndIndexOperationSpec","getMicroBlockTransactionsCountByHash","getMicroBlockTransactionsCountByHashOperationSpec","getCurrentGeneration","getCurrentGenerationOperationSpec","getGenerationByHash","getGenerationByHashOperationSpec","getGenerationByHeight","getGenerationByHeightOperationSpec","getAccountByPubkey","getAccountByPubkeyOperationSpec","getAccountByPubkeyAndHeight","getAccountByPubkeyAndHeightOperationSpec","getAccountByPubkeyAndHash","getAccountByPubkeyAndHashOperationSpec","getPendingAccountTransactionsByPubkey","getPendingAccountTransactionsByPubkeyOperationSpec","getAccountNextNonceOperationSpec","protectedDryRunTxs","protectedDryRunTxsOperationSpec","getTransactionByHash","getTransactionByHashOperationSpec","getTransactionInfoByHash","getTransactionInfoByHashOperationSpec","postTransaction","postTransactionOperationSpec","getContract","getContractOperationSpec","getContractCode","getContractCodeOperationSpec","getContractPoI","getContractPoIOperationSpec","getOracleByPubkey","getOracleByPubkeyOperationSpec","getOracleQueriesByPubkey","getOracleQueriesByPubkeyOperationSpec","getOracleQueryByPubkeyAndQueryId","getOracleQueryByPubkeyAndQueryIdOperationSpec","getNameEntryByName","getNameEntryByNameOperationSpec","getChannelByPubkey","getChannelByPubkeyOperationSpec","getPeerPubkey","getPeerPubkeyOperationSpec","getStatus","getStatusOperationSpec","getChainEnds","getChainEndsOperationSpec","serializer","Mappers","httpMethod","responses","bodyMapper","isError","queryParameters","Parameters","urlParameters","headerParameters","requestBody","mediaType","bigIntPropertyNames","numberPropertyNames","_mapData","_encodeArg","_decodeRes","NodeTransformed","NodeApi","operationArguments","operationSpec","_encodeArg2","_decodeRes2","_mapData2","transform","bigInt","_networkIdPromise","ignoreVersion","allowInsecureConnection","additionalPolicies","statusPromise","pipeline","addPolicy","getNetworkId","_classPrivateFieldGet2","nodeNetworkId","getTransactionSignerAddress","AccountBase","signTypedData","aci","signDelegationToContract","signNameDelegationToContract","signOracleQueryDelegationToContract","hashJson","_canonicalize","canonicalize","hashDomain","domainType","TypeResolver","resolveType","record","option","ContractByteArrayEncoder","encodeWithType","hashTypedData","secretKeys","getBufferToSign","innerTx","rlpBinaryTx","AccountMemory","generate","signTransaction","txWithNetworkId","dHash","oracleQueryIdDecoded","addressDecoded","compare","getExecutionCost","isInitiator","res","getExecutionCostBySignedTx","isInnerTx","isNotInnerTx","getExecutionCostUsingNode","isMined","isSignedTx","combinedInfo","validators","verifyTransactionInternal","parentTxTypes","account","flat","verifyTransaction","nodeNotCached","clone","_getPollInterval","_expectedMineRate","_microBlockCycle","_maxPollInterval","microblock","txBinary","txHashWithNetworkId","checkedKeys","nestedTx","cost","_ref8","oracleCall","contractCreate","contractCall","_ref9","InvalidTxError","validation","getHeight","poll","_interval","interval","awaitHeight","_interval2","currentHeight","waitForTxConfirm","confirm","newBlockHeight","sendTransaction","txUnsigned","waitMined","__queue","requestOptions","customHeaders","pollResult","txData","confirmationHeight","assign","verifyTx","getAccount","getBalance","format","addr","getGeneration","hashOrHeight","_ref10","getMicroBlockTransactions","_ref11","getKeyBlock","_ref12","getMicroBlockHeader","_ref13","txDryRunRequests","txDryRunHandler","rs","dryRunRes","Set","accountAddress","_ref14","reject","_ref15","resultPayload","txDryRun","_ref16","_txDryRunRequests$get","combine","requests","_requests$timeout","timeout","getContractByteCode","_ref17","_ref18","getName","_ref19","resolveName","_ref20","resolveByNode","DERIVED_KEY_FUNCTIONS","argon2id","pass","memlimit_kib","memoryCost","opslimit","timeCost","hashLength","CRYPTO_FUNCTIONS","encrypt","decrypt","CRYPTO_DEFAULTS","secret_type","symmetric_alg","kdf","kdf_params","parallelism","plaintext","algo","deriveKey","kdfParams","recover","crypto","ciphertext","cipher_params","dump","opt","derivedKey","public_key","uuid","Ecb","aesjs","ecb","encryptKey","binaryData","hashedPasswordBytes","decryptKey","encrypted","encryptedBytes","DerivationError","ED25519_CURVE","HARDENED_OFFSET","deriveChild","chainCode","indexBuffer","I","hmac","derivePathFromKey","segments","fromString","toPathArray","segment","parentKey","getMasterKeyFromSeed","seed","derivePathFromSeed","masterKey","formatAccount","getKeyPair","fromSeed","generateSaveHDWalletFromSeed","walletKey","getSaveHDWalletAccounts","saveHDWallet","accountCount","getHdWalletAccountFromSeed","accountIdx","aensRevoke","aensUpdate","extendPointers","allPointers","nameUpdateTx","aensTransfer","aensQuery","nameEntry","freeze","transfer","revoke","extendTtl","aensClaim","claimTx","nameInter","aensPreclaim","preclaimTx","claim","opts","otherOptions","aensBid","_getCallResult","_sendAndProcess","_getFunctionAci","_getContractNameByEvent","_aciContract","_getCallResult2","fnName","fnAci","_getFunctionAci2","decodedResult","_calldata","_name","decodedEvents","$decodeEvents","decodeFateString","_sendAndProcess2","$options","$getCallResultByTxHash","functions","returns","_getContractNameByEvent2","ctAddress","nameHash","contractAddressToName","addressToName","_aci","event","variant","events","eventName","calcHash","ContractWithMethods","$compile","onCompiler","sourceCode","compileBySourceCode","fileSystem","sourceCodePath","compile","callInfoTyped","_estimateGas","$call","callStatic","$deploy","_opt$gasLimit","_opt$gasLimit2","topOption","txOpt","dryRunOther","omitUnknown","contractName","decoded","decodeEvent","initialize","validateBytecode","_bytecode","onChanBytecode","isValid","validateBySourceCode","validate","_this","aciLast","Calldata","aciArgs","pop","pollForQueries","onQuery","knownQueryIds","checkNewQueries","_await$onNode$getOrac","queries","add","stopped","pollForQueryResponse","responseBuffer","getQueryObject","decodedQuery","decodedResponse","respond","respondToQuery","pollForResponse","postQueryToOracle","_options$queryFee","oracleQueryTx","extendOracleTtl","oracleExtendTx","getOracleObject","oracleRespondTx","pollQueries","postQuery","extendOracle","getQuery","handler","lastArg","registerOracle","oracleRegisterTx","spend","recipientIdOrName","transferFunds","fraction","desiredAmount","payForTransaction","createGeneralizedAccount","authFnName","_options$gasLimit","gaContractId","buildAuthTxHash","buildAuthTxHashByGaMetaTx","_typeof","_defineProperty","prim","getValueOrErrorProxy","valueCb","Proxy","_2","chainMethodsOther","chainMethods","aensMethods","spendMethods","oracleMethods","createDelegationSignature","ids","omitAddress","oq","ensureOracleQuery","contractGaMethods","AeSdkMethods","_options","_getOptions","callOptions","initializeContract","_len2","_key2","AeSdkBase","nodes","instance","addNode","compilerApi","api","ensureNodeConnected","pool","selectedNodeName","select","selectNode","isNodeConnected","getNodesInPool","addresses","_resolveAccount","_options$networkId","_options$networkId2","_options$networkId3","AeSdk","addAccount","selectedAddress","selectAccount","removeAccount","MESSAGE_DIRECTION","WALLET_TYPE","SUBSCRIPTION_TYPES","METHODS","RPC_STATUS","rpcErrors","RpcError","toJSON","json","RpcErr","cl","RpcInvalidTransactionError","RpcRejectedByUserError","RpcUnsupportedProtocolError","RpcConnectionDenyError","RpcNotAuthorizeError","RpcPermissionDenyError","RpcInternalError","RpcMethodNotFoundError","AccountRpc","rpcClient","_rpcClient","returnSigned","signedTransaction","_callbacks","_messageId","_methods","_handleMessage","_sendRequest","_sendResponse","_processResponse","RpcClient","connection","onDisconnect","connect","_handleMessage2","_sendRequest2","notify","origin","jsonrpc","_processResponse2","methodName","_sendResponse2","sendMessage","callbacks","AeSdkAepp","onAddressChange","onNetworkChange","_ensureConnected","_ensureAccountAccess","_accounts","connectToWallet","disconnectParams","connectNode","updateNetwork","client","updateAddress","closeConnection","disconnect","readyToConnect","walletInfo","disconnectWallet","askAddresses","subscribeAddress","jsonBig","JsonBig","storeAsString","convertValuesToBigNumbers","bn","AeSdkWallet","onConnection","onSubscription","onAskAccounts","_type","_getAccountsForClient","addressSubscription","getAccounts","_pushAccountsToApps","_clients","clientId","_isRpcClientConnected","_getClient","rpc","_getNode","CONNECTED","isConnected","_disconnectRpcClient","DISCONNECTED","removeRpcClient","addRpcClient","clientConnection","WAITING_FOR_CONNECTION_REQUEST","icons","getWalletInfo","subscribe","unsubscribe","subscription","aeppOrigin","aeppRpcClientId","transactionHash","shareWalletInfo","location","_authFun","AccountGeneralized","authCallData","gaMetaTx","CLA","AccountLedger","transport","decorateAppAPIMethods","networkIdBuffer","toSend","maxChunkSize","chunkSize","bufferOffset","writeUInt8","copy","previous","send","messageStr","AccountLedgerFactory","versionCheckPromise","getAppConfiguration","getAddress","accountIndex","addressLength","discover","CompilerBase","CompileOpts","srcFile","ErrorPos","file","line","col","CompileResult","SophiaCallResultInput","function","callResult","callValue","BytecodeCallResultInput","DecodedCallresult","FunctionCallInput","DecodeCalldataBytecode","DecodedCalldata","DecodeCalldataSource","ByteCodeInput","FateAssembler","fateAssembler","ValidateByteCodeInput","CompilerVersion","ApiVersion","apiVersion","SophiaBinaryData","sophiaType","SophiaJsonData","ContractMapper","SophiaCallResultInputMapper","body2","BytecodeCallResultInputMapper","body3","FunctionCallInputMapper","body4","DecodeCalldataBytecodeMapper","body5","DecodeCalldataSourceMapper","body6","ByteCodeInputMapper","body7","ValidateByteCodeInputMapper","Compiler","generateACI","generateACIOperationSpec","compileContract","compileContractOperationSpec","decodeCallResult","decodeCallResultOperationSpec","decodeCallResultBytecode","decodeCallResultBytecodeOperationSpec","encodeCalldata","encodeCalldataOperationSpec","decodeCalldataBytecode","decodeCalldataBytecodeOperationSpec","decodeCalldataSource","decodeCalldataSourceOperationSpec","getFateAssemblerCode","getFateAssemblerCodeOperationSpec","validateByteCode","validateByteCodeOperationSpec","getCompilerVersion","getCompilerVersionOperationSpec","versionOperationSpec","apiVersionOperationSpec","apiOperationSpec","CompilerHttp","compilerUrl","CompilerApi","parameter","generateAciBySourceCode","generateAci","snakeToPascal","PING_TIMEOUT_MS","PONG_TIMEOUT_MS","emit","channel","rest","_eventEmitter","enterState","nextState","_fsm","enter","dequeueAction","changeStatus","newStatus","_status","changeState","newState","_state","debug","_websocket","_isActionQueueLocked","queue","_actionQueue","guard","handleMessage","st","updates","clearTimeout","_pingTimeoutId","ping","_nextRpcMessageId","_rpcCallbacks","_message$error$data$","details","signAndNotify","signFn","_signedTx","signedTx","signed_tx","payloadTx","signatures2","appendSignature","handleUnexpectedMessage","_channel","wsMessage","channelOpen","awaitingCompletion","onSuccess","accepted","errorCode","error_code","errorMessage","error_msg","codes","awaitingConnection","channelInfoStatus","nextStatus","awaitingChannelCreateTx","awaitingOpenConfirmation","_fsmId","fsm_id","channelClosed","awaitingReconnection","awaitingOnChainTx","awaitingBlockInclusion","message2","_channelId","channel_id","awaitingTxSignRequest","_message$method$match","awaitingUpdateConflict","awaitingShutdownTx","awaitingLeave","closeTx","EventEmitter","_initialize","connectionHandler","openHandler","channelOptions","wsUrl","searchParams","W3CWebSocket","onerror","onopen","reconnectTx","onclose","onmessage","_messageQueue","_isMessageQueueLocked","shift","dequeueMessage","callback","onMessage","existingFsmId","handlers","on","off","removeListener","channelDisconnect","halfSignedTx","trees","fsmId","enqueueAction","promise","leave","shutdown","reconnect","ChannelSpend","meta","awaitingOffChainTx","balances","awaitingActionTx","awaitingActionCompletion","onOnChainTx","Action","isOwn","withdraw","onOwnWithdrawLocked","onWithdrawLocked","onOwnDepositLocked","onDepositLocked","recipient","onStatusChanged","snakeToPascalObjKeys","ChannelContract","createContract","call_data","vm_version","abi_version","state2","addressKey","callContract","contract_id","forceProgress","gas_price","callContractStatic","getContractCall","caller_id","getContractState","cleanContractCalls","Source","MiddlewareSubscriberError","MiddlewareSubscriberDisconnected","closeEvent","_subscriptions","_requestQueue","_webSocket","_targets","_sendMessage","_sendSubscribe","_emit","_disconnect","_messageHandler","_subscribe","MiddlewareSubscriber","webSocket","_get_targets","_disconnect2","WebSocket","errorEvent","_emit2","_messageHandler2","_sendSubscribe2","subscribeKeyBlocks","cb","_subscribe2","Middleware","subscribeKeyBlocksNode","subscribeKeyBlocksAll","All","subscribeMicroBlocks","subscribeMicroBlocksNode","subscribeMicroBlocksAll","subscribeTransactions","subscribeTransactionsNode","subscribeTransactionsAll","subscribeObject","subscribeObjectNode","subscribeObjectAll","_sendMessage2","isSubscribe","condition","onlyReset","limit","scope","direction","by","hashOrKbi","hash1","Paths1I5J7OcV2AccountsIdActivitiesGetResponses200ContentApplicationJsonSchemaAllof0","Activity","PaginatedResponse","nullable","ErrorResponse","Paths17FlgdkV2Aex141GetResponses200ContentApplicationJsonSchemaAllof0","Aex141Response","baseUrl","contractTxi","extensions","limits","PathsAxw0PwV2Aex141OwnedNftsAccountidGetResponses200ContentApplicationJsonSchemaAllof0","Aex141OwnedTokenResponse","tokenId","PathsN3Ru7DV2Aex141ContractidOwnersGetResponses200ContentApplicationJsonSchemaAllof0","PathsRa6Pv6V2Aex141ContractidTemplatesGetResponses200ContentApplicationJsonSchemaAllof0","Aex141TemplatesResponse","edition","logIdx","templateId","Paths19B9O7TV2Aex141ContractidTemplatesTemplateidTokensGetResponses200ContentApplicationJsonSchemaAllof0","Aex141TemplateTokensResponse","Paths1Fe570RV2Aex9GetResponses200ContentApplicationJsonSchemaAllof0","Aex9Response","decimals","eventSupply","holders","initialSupply","PathsO9MbpkV2Aex9AccountBalancesAccountIdGetResponses200ContentApplicationJsonSchemaAllof1","Aex9BalanceResponse","tokenName","tokenSymbol","txIndex","PathsY2JwfkV2Aex9TransfersFromToSenderRecipientGetResponses200ContentApplicationJsonSchemaAllof0","Aex9TransferResponse","callTxi","microTime","sender","Paths5U7W2V2Aex9TransfersFromIdGetResponses200ContentApplicationJsonSchemaAllof0","Paths12TleqhV2Aex9TransfersToIdGetResponses200ContentApplicationJsonSchemaAllof0","Paths1C2B0UpV2Aex9ContractidBalancesGetResponses200ContentApplicationJsonSchemaAllof0","Aex9ContractBalanceResponse","lastLogIdx","lastTxHash","PathsBelvp6V2Aex9ContractidBalancesAccountidGetResponses200ContentApplicationJsonSchemaAllof0","Paths11X7LpcV2Aex9ContractidBalancesAccountidHistoryGetResponses200ContentApplicationJsonSchemaAllof0","Paths5LeqfqV2BlocksGetResponses200ContentApplicationJsonSchemaAllof0","Block","NotFoundResponse","PathsC25EgV2ChannelsGetResponses200ContentApplicationJsonSchemaAllof0","lastUpdatedHeight","lastUpdatedTxType","updatesCount","Paths1Csrt0IV2ContractsCallsGetResponses200ContentApplicationJsonSchemaAllof0","callTxHash","internalTx","localIdx","microIndex","Paths9Ya94MV2ContractsLogsGetResponses200ContentApplicationJsonSchemaAllof0","ContractLog","eventHash","extCallerContractId","extCallerContractTxi","parentContractId","PathsRzn6HzV2DeltastatsGetResponses200ContentApplicationJsonSchemaAllof0","DeltaStat","auctionsStarted","blockReward","contractsCreated","devReward","namesActivated","namesExpired","namesRevoked","oraclesExpired","oraclesRegistered","Paths10TrrshV2KeyBlocksGetResponses200ContentApplicationJsonSchemaAllof0","Paths7Hfka2V2KeyBlocksHashOrKbiMicroBlocksGetResponses200ContentApplicationJsonSchemaAllof0","MicroBlock","microBlockIndex","transactionsCount","Paths1RxrrvbV2MicroBlocksHashTxsGetResponses200ContentApplicationJsonSchemaAllof0","Paths16Srg6EV2NamesGetResponses200ContentApplicationJsonSchemaAllof0","NameInfo","activeFrom","claims","expireHeight","ownership","transfers","NameInfoOwnership","original","NameInfoPointers","accountPubkey","Auction","AuctionInfo","auctionEnd","bids","lastBid","AuctionInfoLastBid","Paths1I6PwfdV2NamesSearchGetResponses200ContentApplicationJsonSchemaAllof0","Paths7P6Qc1V2NamesSearchGetResponses200ContentApplicationJsonSchemaAllof0PropertiesDataItemsAllof1","NameClaim","PathsDjelzuV2NamesIdPointeesGetResponses200ContentApplicationJsonSchema","inactive","NameTransfer","NameUpdate","extends","oracle","register","OracleExtendsItem","PathsMherz6V2OraclesGetResponses200ContentApplicationJsonSchemaAllof0","mdwAsyncTasks","mdwGensPerMinute","mdwHeight","mdwLastMigration","mdwRevision","mdwSynced","mdwSyncing","mdwTxIndex","mdwVersion","nodeHeight","nodeProgress","nodeSyncing","StatusMdwAsyncTasks","longTasks","producerBuffer","totalPending","PathsDpxn99V2TotalstatsGetResponses200ContentApplicationJsonSchemaAllof0","TotalStat","Paths17Cjtx5V2TransfersGetResponses200ContentApplicationJsonSchemaAllof0","Transfer","refTxi","Paths1R74KpvV2TxsGetResponses200ContentApplicationJsonSchemaAllof0","Paths16Tt677V2TxsCountIdGetResponses200ContentApplicationJsonSchema","channelCloseMutualTx","channelCloseSoloTx","channelCreateTx","channelDepositTx","channelForceProgressTx","channelOffchainTx","channelSettleTx","channelSlashTx","channelSnapshotSoloTx","channelWithdrawTx","contractCallTx","contractCreateTx","gaAttachTx","nameClaimTx","namePreclaimTx","nameRevokeTx","nameTransferTx","oracleResponseTx","payingForTx","spendTx","Aex141TransferEvent","Aex9TransferEvent","InternalContractCallEvent","contractTxHash","InternalTransferEvent","refTxHash","NameClaimEvent","PathsKlr2M2V2AccountsIdActivitiesGetResponses200ContentApplicationJsonSchema","PathsFlc7UjV2Aex141GetResponses200ContentApplicationJsonSchema","PathsSs61ZgV2Aex141OwnedNftsAccountidGetResponses200ContentApplicationJsonSchema","Paths1Ilysy5V2Aex141ContractidOwnersGetResponses200ContentApplicationJsonSchema","Paths17O9Fn6V2Aex141ContractidTemplatesGetResponses200ContentApplicationJsonSchema","PathsNuoourV2Aex141ContractidTemplatesTemplateidTokensGetResponses200ContentApplicationJsonSchema","Paths1Wbogg8V2Aex9GetResponses200ContentApplicationJsonSchema","Paths1BsirxgV2Aex9AccountBalancesAccountIdGetResponses200ContentApplicationJsonSchema","Paths1V0FiznV2Aex9TransfersFromToSenderRecipientGetResponses200ContentApplicationJsonSchema","Paths1X48QgjV2Aex9TransfersFromIdGetResponses200ContentApplicationJsonSchema","Paths1DkkopqV2Aex9TransfersToIdGetResponses200ContentApplicationJsonSchema","PathsNi359V2Aex9ContractidBalancesGetResponses200ContentApplicationJsonSchema","Paths15Ih6XV2BlocksGetResponses200ContentApplicationJsonSchema","Paths1Txl2A9V2ChannelsGetResponses200ContentApplicationJsonSchema","Paths187U0XzV2ContractsCallsGetResponses200ContentApplicationJsonSchema","PathsB246H1V2ContractsLogsGetResponses200ContentApplicationJsonSchema","Paths7Pbec0V2DeltastatsGetResponses200ContentApplicationJsonSchema","Paths1Ulxr59V2KeyBlocksGetResponses200ContentApplicationJsonSchema","PathsO99PhzV2KeyBlocksHashOrKbiMicroBlocksGetResponses200ContentApplicationJsonSchema","PathsGuqvhdV2MicroBlocksHashTxsGetResponses200ContentApplicationJsonSchema","PathsK9TkttV2NamesGetResponses200ContentApplicationJsonSchema","Paths3Msq0DV2NamesSearchGetResponses200ContentApplicationJsonSchema","PathsB0YvynV2OraclesGetResponses200ContentApplicationJsonSchema","Paths15PsutbV2TotalstatsGetResponses200ContentApplicationJsonSchema","PathsIgs9Z1V2TransfersGetResponses200ContentApplicationJsonSchema","PathsFclv4TV2TxsGetResponses200ContentApplicationJsonSchema","Paths1R02SlwV2Aex9ContractidBalancesAccountidGetResponses200ContentApplicationJsonSchema","Paths1T9RwnyV2Aex9ContractidBalancesAccountidHistoryGetResponses200ContentApplicationJsonSchema","Get200ApplicationJsonAllOfPropertiesItemsItem","getAccountActivities","getAccountActivitiesOperationSpec","getSortedAex141Contracts","getSortedAex141ContractsOperationSpec","getAex141OwnedTokens","getAex141OwnedTokensOperationSpec","getAex141TokenOwner","getAex141TokenOwnerOperationSpec","getAex141ContractOwners","getAex141ContractOwnersOperationSpec","getAex141ContractTemplates","getAex141ContractTemplatesOperationSpec","getAex141TemplateTokens","getAex141TemplateTokensOperationSpec","getAex141ByContract","getAex141ByContractOperationSpec","getSortedAex9Tokens","getSortedAex9TokensOperationSpec","getAex9AccountBalances","getAex9AccountBalancesOperationSpec","getAex9TokensCount","getAex9TokensCountOperationSpec","getAex9PairTransfers","getAex9PairTransfersOperationSpec","getAex9SenderTransfers","getAex9SenderTransfersOperationSpec","getAex9RecipientTransfers","getAex9RecipientTransfersOperationSpec","getAex9ContractBalances","getAex9ContractBalancesOperationSpec","getAex9ContractAccountBalance","getAex9ContractAccountBalanceOperationSpec","getAex9ContractAccountBalanceHistory","getAex9ContractAccountBalanceHistoryOperationSpec","getAex9LogsCount","getAex9LogsCountOperationSpec","getAex9ByContract","getAex9ByContractOperationSpec","getBlocks","getBlocksOperationSpec","getBlock","getBlockOperationSpec","getBlockByMbi","kbi","mbi","getBlockByMbiOperationSpec","getChannels","getChannelsOperationSpec","getChannel","getChannelOperationSpec","getContractsCalls","getContractsCallsOperationSpec","getContractsLogs","getContractsLogsOperationSpec","getDeltastats","getDeltastatsOperationSpec","getKeyBlocks","getKeyBlocksOperationSpec","getKeyBlockOperationSpec","getKeyBlockMicroBlocks","getKeyBlockMicroBlocksOperationSpec","getMicroBlock","getMicroBlockOperationSpec","getMicroBlockTransactionsOperationSpec","getNames","getNamesOperationSpec","getNamesAuctions","getNamesAuctionsOperationSpec","searchNames","searchNamesOperationSpec","getNameOperationSpec","getNameAuction","getNameAuctionOperationSpec","getNameClaims","getNameClaimsOperationSpec","getNamePointees","getNamePointeesOperationSpec","getNamePointers","getNamePointersOperationSpec","getNameTransfers","getNameTransfersOperationSpec","getNameUpdates","getNameUpdatesOperationSpec","getOracle","getOracleOperationSpec","getOracles","getOraclesOperationSpec","getTotalstats","getTotalstatsOperationSpec","getTransfers","getTransfersOperationSpec","getTxs","getTxsOperationSpec","getTxCount","getTxCountOperationSpec","getTxCountById","getTxCountByIdOperationSpec","getTx","hashOrIndex","getTxOperationSpec","collectionFormat","MiddlewareTransformed","MiddlewareApi","con1","con2","BrowserConnection","receiveMessage","_onDisconnect","_target","_self","BrowserWindowMessageConnection","sendDirection","receiveDirection","to_aepp","listener","_message$data$jsonrpc","addEventListener","removeEventListener","_this$origin","postMessage","onDetected","wallets","wallet","getConnection","to_waellet","newWallet","_listeners","BrowserRuntimeConnection","_port$sender$url","addListener","RpcBroadcastError","NAME_BID_MAX_LENGTH","encodeFateValue","valueType","decodeFateValue","decodeWithType"],"sourceRoot":""}