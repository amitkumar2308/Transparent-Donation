{"version":3,"file":"aepp-sdk.js","mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;;;;;;ACVA;AACA;AACA;;AAEA,aAAa,mBAAO,CAAC,IAAQ;;AAE7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,cAAc,QAAQ;AACtB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,cAAc,QAAQ;AACtB;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc,QAAQ;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,cAAc,QAAQ;AACtkBAAkB,QAAQ;AAC1B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kBAAkB,kBAAkB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,kBAAkB,gBAAgB;AAClC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;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C,IAAyC;;AAEhF;AACA;AACA,EAAE;AACF;AACA;AACA;;;;;;;;;ACVa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACRa;AACb,oBAAoB,mBAAO,CAAC,IAA8B;AAC1D,2BAA2B,mBAAO,CAAC,IAAqC;AACxE,+BAA+B,mBAAO,CAAC,IAAyC;;AAEhF;AACA;AACA;AACA;AACA;;;;;;;;;ACTa;AACb,qBAAqB,mBAAO,CAAC,IAAqC;;AAElE;AACA;AACA;;;;;;;;;ACLa;AACb,kCAAkC,mBAAO,CAAC,IAA6C;;AAEvF;AACA;AACA;AACA;AACA;;;;;;;;;ACPa;AACb,aAAa,mBAAO,CAAC,IAAqB;;AAE1C;AACA;;AAEA;AACA;AACA,kCAAkC,kDAAkD;AACpF,IAAI;AACJ;AACA,IAAI;AACJ;;;;;;;;;ACZa;AACb,YAAY,mBAAO,CAAC,IAAoB;;AAExC;AACA;AACA;AACA,iCAAiC,OAAO,mBAAmB,aAAa;AACxE,CAAC;;;;;;;;;ACPY;AACb;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;ACVa;AACb,aAAa,mBAAO,CAAC,IAAqB;AAC1C,eAAe,mBAAO,CAAC,GAAwB;;AAE/C;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;ACVa;AACb;AACA,yCAAyC;;AAEzC;AACA;AACA;AACA;;;;;;;;;ACPa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACnCa;AACb;;;;;;;;;ACDa;AACb,aAAa,mBAAO,CAAC,IAAqB;AAC1C,gBAAgB,mBAAO,CAAC,IAAgC;;AAExD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;AC3Ba;AACb;AACA;AACA;AACA;AACA;A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A;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;;;;;;;;;AChDa;AACb;;;;;;;;;ACDa;AACb,eAAe,mBAAO,CAAC,IAAwB;;AAE/C;AACA;AACA;AACA;AACA;;;;;;;;;ACPa;AACb;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACVa;AACb;AACA,eAAe,mBAAO,CAAC,IAAwB;AAC/C,6BAA6B,mBAAO,CAAC,IAAuC;AAC5E,kBAAkB,mBAAO,CAAC,IAA4B;AACtD,iBAAiB,mBAAO,CAAC,IAA0B;AACnD,WAAW,mBAAO,CAAC,IAAmB;AACtC,4BAA4B,mBAAO,CAAC,IAAsC;AAC1E,gBAAgB,mBAAO,CAAC,IAAyB;;AAEjD;AACA;AACA;AACA;AACA;;AAEA,qCAAqC;;AAErC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,gBAAgB;AACpB;AACA;AACA;AACA;AACA,kDAAkD;AAClD;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;;;;;;;;;ACnFa;AACb,kBAAkB,mBAAO,CAAC,IAA0B;AACpD,8BAA8B,mBAAO,CAAC,IAAsC;AAC5E,2BAA2B,mBAAO,CAAC,IAAqC;AACxE,eAAe,mBAAO,CAAC,IAAwB;AAC/C,sBAAsB,mBAAO,CAAC,IAAgC;AAC9D,iBAAiB,mBAAO,CAAC,IAA0B;;AAEnD;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACpBa;AACb,kBAAkB,mBAAO,CAAC,IAA0B;AACpD,qBAAqB,m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AA6B,mBAAO,CAAC,IAAuC;AAC5E,iCAAiC,mBAAO,CAAC,IAA4C;AACrF,oBAAoB,mBAAO,CAAC,IAA8B;AAC1D,4BAA4B,mBAAO,CAAC,IAAuC;AAC3E,aAAa,mBAAO,CAAC,IAAqB;AAC1C,gBAAgB,mBAAO,CAAC,IAAyB;AACjD,iBAAiB,mBAAO,CAAC,IAA0B;AACnD,UAAU,mBAAO,CAAC,IAAkB;AACpC,sBAAsB,mBAAO,CAAC,IAAgC;AAC9D,mCAAmC,mBAAO,CAAC,IAAwC;AACnF,4BAA4B,mBAAO,CAAC,IAAuC;AAC3E,8BAA8B,mBAAO,CAAC,IAAyC;AAC/E,qBAAqB,mBAAO,CAAC,GAAgC;AAC7D,0BAA0B,mBAAO,CAAC,IAA6B;AAC/D,eAAe,mCAA+C;;AAE9D;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,mDAAmD;AACnD,uBAAuB,yCAAyC,UAAU;AAC1E,GAAG;AACH,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4FAA4F;AAC5F;AACA,MAAM;AACN;AACA,oDAAoD,gDAAgD;AACpG,MAAM;AACN,IAAI;AACJ;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+EAA+E,iCAAiC;AAChH;AACA;;AAEA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA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AACF;AACA,EAAE,0CAAiD;AACnD;;;;;;;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AC1BA;AACA;AACA,aAAa,mBAAO,CAAC,IAAQ;AAC7B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA,EAAE,cAAc;AAChB;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AChEA,aAAa,kCAA6B;;AAE1C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,uBAAuB,gBAAgB;AACvC;AACA;;AAEA,oBAAoB,eAAe;AACnC;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;;;;;;;AChFA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAe,mBAAO,CAAC,IAAU;AACjC,WAAW,mBAAO,CAAC,IAAQ;AAC3B,aAAa,kCAA6B;;AAE1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA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AAO,EAAE9oD,OAAO,CAACgU,MAAM,CAACpG,IAAI,CAACk7C;IAAQ,CAAC,CACjE,CAAC;IACD,OAAO;MAAE9T,OAAO,EAAEwZ,wBAAwB;MAAE9F;IAAM,CAAC;EACrD;;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,MAAMmG,QAAQA,CACZ7pD,MAA0B,EAC1ByK,IAAY,EACZ;IAAEi/C,WAAW;IAAEI,mBAAmB;IAAEC;EACyC,CAAC,GAAG,CAAC,CAAC,EACpB;IAC/D,OAAO,IAAI,CAACvG,aAAa,CAAC,MAAM;MAC9B9M,MAAM,CAAC,IAAI,EAAE,mBAAmB,EAAE;QAAE12C;MAAO,CAAC,CAAC;MAC7C,OAAO;QACLgwC,OAAO,EAAE,MAAAA,CACPtmB,CAAU,EACV1uB,OAAuB,EACvB0oD,KAAmB,KAEnB,IAAI,CAAC6F,gBAAgB,CAAC,UAAU,EAAEvuD,OAAO,EAAE0oD,KAAK,CACjD;QACDA,KAAK,EAAE;UACLj5C,IAAI;UACJi/C,WAAW;UACXI,mBAAmB;UACnBC;QACF;MACF,CAAC;IACH,CAAC,CAAC;EACJ;;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,MAAM/sC,OAAOA,CACXhd,MAA0B,EAC1ByK,IAAY,EACZ;IAAEi/C,WAAW;IAAEM,kBAAkB;IAAEC;EACwC,CAAC,GAAG,CAAC,CAAC,EAC5B;IACrD,OAAO,IAAI,CAACzG,aAAa,CAAC,MAAM;MAC9B9M,MAAM,CAAC,IAAI,EAAE,kBAAkB,EAAE;QAAE12C;MAAO,CAAC,CAAC;MAC5C,OAAO;QACLgwC,OAAO,EAAE,MAAAA,CACPtmB,CAAU,EACV1uB,OAAuB,EACvB0oD,KAAmB,KAEnB,IAAI,CAAC6F,gBAAgB,CAAC,SAAS,EAAEvuD,OAAO,EAAE0oD,KAAK,CAChD;QACDA,KAAK,EAAE;UACLj5C,IAAI;UACJi/C,WAAW;UACXM,kBAAkB;UAClBC;QACF;MACF,CAAC;IACH,CAAC,CAAC;EACJ;;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,MAAMjT,WAAWA,CACfh8C,OAAwB,EACxBkvD,SAAiC,EAClB;IACf,MAAMh/B,IAAI,GAAG,OAAOlwB,OAAO,KAAK,QAAQ,GAAGmtB,IAAI,CAACC,SAAS,CAACptB,OAAO,CAAC,GAAGA,OAAO;IAC5E,IAAI,IAAI,CAAC6kB,MAAM,CAAC,CAAC,KAAK,YAAY,EAAE;MAClC,MAAM,IAAInb,OAAO,CAAQC,OAAO,IAAK;QACnC,MAAMwlD,eAAe,GAAItqC,MAAc,IAAW;UAChD,IAAIA,MAAM,KAAK,YAAY,EAAE;UAC7Blb,OAAO,CAAC,CAAC;UACT,IAAI,CAAC+jD,GAAG,CAAC,eAAe,EAAEyB,eAAe,CAAC;QAC5C,CAAC;QACD,IAAI,CAAC1B,EAAE,CAAC,eAAe,EAAE0B,eAAe,CAAC;MAC3C,CAAC,CAAC;MACF;MACA;MACA,MAAM3lD,KAAK,CAAC,GAAG,CAAC;IAClB;IACAkyC,MAAM,CAAC,IAAI,EAAE,kBAAkB,EAAE;MAAExrB,IAAI;MAAEvH,EAAE,EAAEumC;IAAU,CAAC,CAAC;EAC3D;AACF;;ACvYgD;AAGf;AAOb;AAGA;AAIS;AACM;AAC2C;AACrC;AACe;AAExD,SAAS7B,6BAAoBA,CAAOC,GAAW,EAAQ;EACrD,OAAOvjD,MAAM,CAACE,OAAO,CAACqjD,GAAG,CAAC,CAAChlD,MAAM,CAAC,CAACiQ,MAAM,EAAE,CAAC7R,GAAG,EAAEqP,GAAG,CAAC,MAAM;IACzD,GAAGwC,MAAM;IACT,CAACiuC,aAAa,CAAC9/C,GAAG,CAAC,GAAGqP;EACxB,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AACT;AA0Be,MAAMq5C,eAAe,SAASlB,YAAY,CAAC;EACxD,aAAsBvc,UAAUA,CAACv9B,OAAuB,EAA4B;IAClF,OAAOpH,YAAO,CAACugD,WAAW,CAAC,IAAI6B,eAAe,CAAC,CAAC,EAAEh7C,OAAO,CAAC;EAC5D;;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,MAAMi7C,cAAcA,CAClB;IACE/pC,IAAI;IAAEI,QAAQ;IAAE1D,OAAO;IAAE7O,SAAS;IAAEE;EAOtC,CAAC,EACD5D,IAAY,EAGT;IACH,OAAO,IAAI,CAAC+4C,aAAa,CAAC,MAAM;MAC9B9M,MAAM,CAAC,IAAI,EAAE,8BAA8B,EAAE;QAC3Cp2B,IAAI;QACJgqC,SAAS,EAAE5pC,QAAQ;QACnB1D,OAAO;QACPutC,UAAU,EAAEp8C,SAAS;QACrBq8C,WAAW,EAAEn8C;MACf,CAAC,CAAC;MACF,OAAO;QACL2hC,OAAO,EAAE,MAAAA,CACPtmB,CAAU,EACV1uB,OAAuB,EACvB0oD,KAAmB,KACK;UACxB,IAAI1oD,OAAO,CAACktB,MAAM,KAAK,sBAAsB,EAAE;YAC7C,OAAOg+B,uBAAuB,CAAC,IAAI,EAAElrD,OAAO,EAAE0oD,KAAK,CAAC;UACtD;UACA,MAAMqC,aAAa,CACjB,IAAI,EACJ,iBAAiB,EACjB/qD,OAAO,CAACgU,MAAM,CAACpG,IAAI,EACnB,MAAOsH,EAAE,IAAKwzC,KAAK,CAACj5C,IAAI,CAACyF,EAAE,CAC7B,CAAC;UACD,OAAO;YACL8/B,OAAO,EAAEA,CACPgC,EAAW,EACX2V,QAAwB,EACxB8C,MAAoB,KAEpBlE,kBAAkB,CAAC,IAAI,EAAEoB,QAAQ,EAAE8C,MAAM,EAAE,MAAM;cAC/C,MAAMz7C,MAAM,GAAGiB,QAAQ,CAAC03C,QAAQ,CAAC34C,MAAM,CAACpG,IAAI,CAAC86C,KAAK,EAAE11C,GAAG,CAACqQ,QAAQ,CAAC,CAAC1G,SAAS;cAC3E,IAAI3I,MAAM,CAACxN,GAAG,KAAKwM,GAAG,CAACgI,iBAAiB,EAAE;gBACxC,MAAM,IAAI3a,YAAY,CAAE,iBAAgB2S,GAAG,CAACA,GAAG,CAACgI,iBAAiB,CAAE,SAAQhI,GAAG,CAACgB,MAAM,CAACxN,GAAG,CAAE,UAAS,CAAC;cACvG;cACA,MAAMkpD,UAAU,GAAG,IAAI,CAACrY,QAAQ,CAACruB,IAAI,KAAK,WAAW,GACjD,aAAa,GAAG,aAAa;cACjC,MAAMlY,KAAK,GAAG,IAAI,CAACumC,QAAQ,CAACqY,UAAU,CAAC;cACvC5H,WAAW,CAAC,IAAI,EAAE6E,QAAQ,CAAC34C,MAAM,CAACpG,IAAI,CAAC86C,KAAK,CAAC;cAC7C,MAAMhmD,OAAO,GAAGmO,qBAAqB,CAACC,KAAK,EAAEkD,MAAM,CAACgU,KAAK,CAAC;cAC1Di/B,IAAI,CAAC,IAAI,EAAE,aAAa,EAAEvkD,OAAO,CAAC;cAClC+sD,MAAM,CAAC9lD,OAAO,CAAC;gBAAE8hD,QAAQ,EAAE,IAAI;gBAAE/oD,OAAO;gBAAE8nD,QAAQ,EAAEmC,QAAQ,CAAC34C,MAAM,CAACpG,IAAI,CAAC86C;cAAM,CAAC,CAAC;cACjF,OAAO;gBAAE1T,OAAO,EAAEsW,WAAWA;cAAC,CAAC;YACjC,CAAC,CACF;YACD5C;UACF,CAAC;QACH,CAAC;QACDA,KAAK,EAAE;UAAEj5C;QAAK;MAChB,CAAC;IACH,CAAC,CAAC;EACJ;;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,MAAMkgD,YAAYA,CAChB;IACE3qD,MAAM;IAAE0gB,QAAQ;IAAEmD,QAAQ;IAAExV;EACT,CAAC,EACtB5D,IAAY,EACmD;IAC/D,OAAO,IAAI,CAAC+4C,aAAa,CAAC,MAAM;MAC9B9M,MAAM,CAAC,IAAI,EAAE,+BAA+B,EAAE;QAC5C12C,MAAM;QACNsqD,SAAS,EAAE5pC,QAAQ;QACnBkqC,WAAW,EAAE/mC,QAAQ;QACrB2mC,WAAW,EAAEn8C;MACf,CAAC,CAAC;MACF,OAAO;QACL2hC,OAAO,EAAE,MAAAA,CACPtmB,CAAU,EACV1uB,OAAuB,EACvB0oD,KAAmB,KACK;UACxB,IAAI1oD,OAAO,CAACktB,MAAM,KAAK,sBAAsB,EAAE;YAC7C,OAAOg+B,uBAAuB,CAAC,IAAI,EAAElrD,OAAO,EAAE0oD,KAAK,CAAC;UACtD;UACA,MAAMqC,aAAa,CACjB,IAAI,EACJ,iBAAiB,EACjB/qD,OAAO,CAACgU,MAAM,CAACpG,IAAI,EACnB,MAAOsH,EAAE,IAAKwzC,KAAK,CAACj5C,IAAI,CAACyF,EAAE,EAAE;YAAE4zC,OAAO,EAAE9oD,OAAO,CAACgU,MAAM,CAACpG,IAAI,CAACk7C;UAAQ,CAAC,CACvE,CAAC;UACD,OAAO;YACL9T,OAAO,EAAEA,CACPgC,EAAW,EACX2V,QAAwB,EACxB8C,MAAoB,KAEpBlE,kBAAkB,CAAC,IAAI,EAAEoB,QAAQ,EAAE8C,MAAM,EAAE,MAAM;cAC/C3H,WAAW,CAAC,IAAI,EAAE6E,QAAQ,CAAC34C,MAAM,CAACpG,IAAI,CAAC86C,KAAK,CAAC;cAC7C+G,MAAM,CAAC9lD,OAAO,CAAC;gBAAE8hD,QAAQ,EAAE,IAAI;gBAAEjB,QAAQ,EAAEmC,QAAQ,CAAC34C,MAAM,CAACpG,IAAI,CAAC86C;cAAM,CAAC,CAAC;cACxE,OAAO;gBAAE1T,OAAO,EAAEsW,WAAWA;cAAC,CAAC;YACjC,CAAC,CACF;YACD5C;UACF,CAAC;QACH,CAAC;QACDA,KAAK,EAAE;UAAEj5C;QAAK;MAChB,CAAC;IACH,CAAC,CAAC;EACJ;;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,MAAMogD,aAAaA,CACjB;IACE7qD,MAAM;IAAE0gB,QAAQ;IAAEmD,QAAQ;IAAExV,UAAU;IAAEsL,QAAQ,GAAG,OAAO;IAAEsD,QAAQ,GAAG3P,aAAaA;EAQtF,CAAC,EACD7C,IAAY,EACZ;IAAEi/C;EAA+C,CAAC,GAAG,CAAC,CAAC,EAKpD;IACH,OAAO,IAAI,CAAClG,aAAa,CAAC,MAAM;MAC9B9M,MAAM,CAAC,IAAI,EAAE,yBAAyB,EAAE;QACtC12C,MAAM;QACNsqD,SAAS,EAAE5pC,QAAQ;QACnBkqC,WAAW,EAAE/mC,QAAQ;QACrB2mC,WAAW,EAAEn8C,UAAU;QACvBy8C,SAAS,EAAE7tC,QAAQ;QACnByP,GAAG,EAAE/S;MACP,CAAC,CAAC;MACF,OAAO;QACLq2B,OAAO,EAAE,MAAAA,CACPtmB,CAAU,EACV1uB,OAAuB,EACvB0oD,KAAmB,KACK;UACxB,IAAI1oD,OAAO,CAACktB,MAAM,KAAK,iCAAiC,EAAE;YACxD,OAAOg+B,uBAAuB,CAAC,IAAI,EAAElrD,OAAO,EAAE0oD,KAAK,CAAC;UACtD;UACA,MAAMqC,aAAa,CACjB,IAAI,EACJ,8BAA8B,EAC9B/qD,OAAO,CAACgU,MAAM,CAACpG,IAAI,EACnB,MAAOsH,EAAE,IAAKwzC,KAAK,CAACj5C,IAAI,CAACyF,EAAE,EAAE;YAAE4zC,OAAO,EAAE9oD,OAAO,CAACgU,MAAM,CAACpG,IAAI,CAACk7C;UAAQ,CAAC,CACvE,CAAC;UACD,OAAO;YACL9T,OAAO,EAAEA,CACPgC,EAAW,EACX2V,QAAwB,EACxB8C,MAAoB,KACL;cACf,IAAI9C,QAAQ,CAACz/B,MAAM,KAAK,sBAAsB,EAAE;gBAAA,IAAA6iC,mBAAA;gBAC9C,CAAAA,mBAAA,GAAAN,MAAM,CAACf,WAAW,cAAAqB,mBAAA,uBAAlBA,mBAAA,CAAA3xC,IAAA,CAAAqxC,MAAM,EAAe9C,QAAQ,CAAC34C,MAAM,CAACpG,IAAI,CAACsH,EAAE,CAAC;gBAC7C+xC,IAAI,CAAC,IAAI,EAAE,WAAW,EAAE0F,QAAQ,CAAC34C,MAAM,CAACpG,IAAI,CAACsH,EAAE,EAAE;kBAC/Cgb,IAAI,EAAEy8B,QAAQ,CAAC34C,MAAM,CAACpG,IAAI,CAACsiB,IAAI;kBAC/BriB,IAAI,EAAE8+C,QAAQ,CAAC34C,MAAM,CAACpG,IAAI,CAACC;gBAC7B,CAAC,CAAC;gBACF4hD,MAAM,CAAC9lD,OAAO,CAAC;kBAAE8hD,QAAQ,EAAE,IAAI;kBAAEv2C,EAAE,EAAEy3C,QAAQ,CAAC34C,MAAM,CAACpG,IAAI,CAACsH;gBAAG,CAAC,CAAC;gBAC/D;cACF;;cACA,OAAOg2C,uBAAuB,CAAC,IAAI,EAAEyB,QAAQ,EAAE8C,MAAM,CAAC;YACxD,CAAC;YACD/G;UACF,CAAC;QACH,CAAC;QACDA,KAAK,EAAE;UAAEj5C,IAAI;UAAEi/C;QAAY;MAC7B,CAAC;IACH,CAAC,CAAC;EACJ;;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,MAAMsB,kBAAkBA,CACtB;IACEhrD,MAAM;IAAE0gB,QAAQ;IAAEmD,QAAQ;IAAExV;EAM9B,CAAC,EAC6B;IAC9B,OAAOg6C,6BAAoB,CAAC,MAAMjvC,IAAI,CAAC,IAAI,EAAE,gCAAgC,EAAE;MAC7EpZ,MAAM;MACNsqD,SAAS,EAAE5pC,QAAQ;MACnBkqC,WAAW,EAAE/mC,QAAQ;MACrB2mC,WAAW,EAAEn8C;IACf,CAAC,CAAC,CAAC;EACL;;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,MAAM48C,eAAeA,CACnB;IAAErnC,MAAM;IAAEC,QAAQ;IAAEb;EAIpB,CAAC,EAC4B;IAC7B,OAAOqlC,6BAAoB,CACzB,MAAMjvC,IAAI,CAAC,IAAI,EAAE,4BAA4B,EAAE;MAC7C8xC,SAAS,EAAEtnC,MAAM;MACjBgnC,WAAW,EAAE/mC,QAAQ;MACrBb;IACF,CAAC,CACH,CAAC;EACH;;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,MAAMmoC,gBAAgBA,CACpBtnC,QAAiC,EACuB;IACxD,MAAMtQ,MAAM,GAAG,MAAM6F,IAAI,CAAC,IAAI,EAAE,uBAAuB,EAAE;MAAE6K,MAAM,EAAEJ;IAAS,CAAC,CAAC;IAC9E,OAAOwkC,6BAAoB,CAAC;MAC1B,GAAG90C,MAAM;MACTsQ,QAAQ,EAAEwkC,6BAAoB,CAAC90C,MAAM,CAACsQ,QAAQ;IAChD,CAAC,CAAC;EACJ;;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;EACE,MAAMunC,kBAAkBA,CAAA,EAAkB;IACxC,OAAO,IAAI,CAAC5H,aAAa,CAAC,MAAM;MAC9B9M,MAAM,CAAC,IAAI,EAAE,+BAA+B,CAAC;MAC7C,OAAO;QACL1G,OAAOA,CAACtmB,CAAU,EAAE1uB,OAAuB,EAAE0oD,KAAmB,EAAc;UAC5E,IAAI1oD,OAAO,CAACktB,MAAM,KAAK,6BAA6B,EAAE;YACpDw7B,KAAK,CAAC/+C,OAAO,CAAC,CAAC;YACf,OAAO;cAAEqrC,OAAO,EAAEsW,WAAWA;YAAC,CAAC;UACjC;UACA5C,KAAK,CAAC3gB,MAAM,CAAC,IAAIlkC,6BAA6B,CAAC,6BAA6B,CAAC,CAAC;UAC9E,OAAO;YAAEmxC,OAAO,EAAEuX,aAAaA;UAAC,CAAC;QACnC;MACF,CAAC;IACH,CAAC,CAAC;EACJ;AACF;;;;;;;;;;;ACxdA;AACsC;AACuC;AAAA,IAUxE+D,MAAM,0BAANA,MAAM;EAANA,MAAM;EAANA,MAAM;EAANA,MAAM;EAAA,OAANA,MAAM;AAAA,EAANA,MAAM;AAMJ,MAAMC,yBAAyB,SAAS1wD,SAAS,CAAC;EACvDE,WAAWA,CAACC,OAAe,EAAE;IAC3B,KAAK,CAACA,OAAO,CAAC;IACd,IAAI,CAACC,IAAI,GAAG,2BAA2B;EACzC;AACF;AAEO,MAAMuwD,gCAAgC,SAASD,yBAAyB,CAAC;EAC9ExwD,WAAWA,CAAU0wD,UAAgC,EAAE;IACrD,KAAK,CAAC,mBAAmB,CAAC;IAAC,KADRA,UAAgC,GAAhCA,UAAgC;IAEnD,IAAI,CAACxwD,IAAI,GAAG,kCAAkC;EAChD;AACF;AAAC,IAAAywD,cAAA,oBAAAtxC,OAAA;AAAA,IAAAuxC,aAAA,oBAAAvxC,OAAA;AAAA,IAAAwxC,UAAA,oBAAAxxC,OAAA;AAAA,IAAAyxC,QAAA,oBAAAzxC,OAAA;AAAA,IAAA0xC,YAAA,oBAAAnxC,OAAA;AAAA,IAAAoxC,cAAA,oBAAApxC,OAAA;AAAA,IAAAqxC,KAAA,oBAAArxC,OAAA;AAAA,IAAAsxC,WAAA,oBAAAtxC,OAAA;AAAA,IAAAuxC,eAAA,oBAAAvxC,OAAA;AAAA,IAAAwxC,UAAA,oBAAAxxC,OAAA;AAEc,MAAMyxC,oBAAoB,CAAC;EASxC,IAAIC,SAASA,CAAA,EAA0B;IACrC,OAAAtxC,8BAAA,CAAO,IAAI,EAAA6wC,UAAA;EACb;EA6BA7wD,WAAWA,CAAUstB,GAAW,EAAE;IAAApN,+CAAA,OAAAkxC,UAAA;IAAAlxC,+CAAA,OAAAixC,eAAA;IAAAjxC,+CAAA,OAAAgxC,WAAA;IAAAhxC,+CAAA,OAAA+wC,KAAA;IAAA/wC,+CAAA,OAAA8wC,cAAA;IAAA9wC,+CAAA,OAAA6wC,YAAA;IAAA5wC,8CAAA,OAAA2wC,QAAA;MAAA7vC,GAAA,EAAAswC,YAAA;MAAAzkC,GAAA;IAAA;IAAA3M,8CAAA,OAAAwwC,cAAA;MAAAvwC,QAAA;MAAAxY,KAAA,EArC9B;IAAE;IAAAuY,8CAAA,OAAAywC,aAAA;MAAAxwC,QAAA;MAAAxY,KAAA,EAEyD;IAAE;IAAAuY,8CAAA,OAAA0wC,UAAA;MAAAzwC,QAAA;MAAAxY,KAAA;IAAA;IAAA,KAmC5C0lB,GAAW,GAAXA,GAAW;EAChC;EAaA,MAAM4gC,SAASA,CAAA,EAAkB;IAC/B/sC,0CAAA,KAAI,EAAA+vC,WAAA,EAAAM,YAAA,EAAAnzC,IAAA,CAAJ,IAAI;IACJgC,8BAAA,KAAI,EAAAwwC,UAAA,EAAc,MAAM,IAAIlnD,OAAO,CAAEC,OAAO,IAAK;MAC/C,MAAM0nD,SAAS,GAAG,IAAIhB,kCAAS,CAAC,IAAI,CAAChjC,GAAG,CAAC;MACzCtjB,MAAM,CAAC+8B,MAAM,CAACuqB,SAAS,EAAE;QACvB/G,MAAM,EAAEA,CAAA,KAAM3gD,OAAO,CAAC0nD,SAAS,CAAC;QAChChH,OAAO,EAAGmH,UAAgC,IAAK;UAC7CtwC,0CAAA,KAAI,EAAA8vC,KAAA,EAAAS,MAAA,EAAArzC,IAAA,CAAJ,IAAI,EAAO,MAAM,IAAI,EAAExN,SAAS,EAAE4gD,UAAU,CAACjnD,KAAK;QACpD,CAAC;QACDmgD,SAAS,EAAGpZ,KAA6B,IAAK;UAC5C,IAAI,OAAOA,KAAK,CAAC1jC,IAAI,KAAK,QAAQ,EAAE;YAClC,MAAM,IAAIrL,aAAa,CAAE,kCAAiC,OAAO+uC,KAAK,CAAC1jC,IAAK,EAAC,CAAC;UAChF;UACAsT,0CAAA,KAAI,EAAAgwC,eAAA,EAAAQ,gBAAA,EAAAtzC,IAAA,CAAJ,IAAI,EAAiB+O,IAAI,CAACW,KAAK,CAACwjB,KAAK,CAAC1jC,IAAI,CAAC;QAC7C,CAAC;QACD68C,OAAO,EAAGnZ,KAA2B,IAAK;UACxCpwB,0CAAA,KAAI,EAAA8vC,KAAA,EAAAS,MAAA,EAAArzC,IAAA,CAAJ,IAAI,EAAO,MAAM,IAAI,EAAExN,SAAS,EAAE,IAAI4/C,gCAAgC,CAAClf,KAAK,CAAC;UAC7EpwB,0CAAA,KAAI,EAAA+vC,WAAA,EAAAM,YAAA,EAAAnzC,IAAA,CAAJ,IAAI,EAAa,IAAI;QACvB;MACF,CAAC,CAAC;IACJ,CAAC,CAAC;IACF,MAAM1U,OAAO,CAACkhB,GAAG,CAAC,CAAC,GAAA7K,8BAAA,CAAG,IAAI,EAAA8wC,QAAA,CAAS,CAAC,CAACtrD,GAAG,CAAEoqB,MAAM,IAAAzO,0CAAA,CAAK,IAAI,EAAA6vC,cAAA,EAAAY,eAAA,EAAAvzC,IAAA,CAAJ,IAAI,EAAgB,IAAI,EAAEuR,MAAM,CAAC,CAAC,CAAC;EAC1F;EAkCA;;EAEAiiC,kBAAkBA,CAACC,EAAgC,EAAc;IAC/D,OAAA3wC,0CAAA,CAAO,IAAI,EAAAiwC,UAAA,EAAAW,WAAA,EAAA1zC,IAAA,CAAJ,IAAI,EAAY,WAAW,EAAEkyC,MAAM,CAACyB,UAAU,EAAEF,EAAE;EAC3D;EAEAG,sBAAsBA,CAACH,EAAgC,EAAc;IACnE,OAAA3wC,0CAAA,CAAO,IAAI,EAAAiwC,UAAA,EAAAW,WAAA,EAAA1zC,IAAA,CAAJ,IAAI,EAAY,WAAW,EAAEkyC,MAAM,CAACr2B,IAAI,EAAE43B,EAAE;EACrD;EAEAI,qBAAqBA,CAACJ,EAAgC,EAAc;IAClE,OAAA3wC,0CAAA,CAAO,IAAI,EAAAiwC,UAAA,EAAAW,WAAA,EAAA1zC,IAAA,CAAJ,IAAI,EAAY,WAAW,EAAEkyC,MAAM,CAAC4B,GAAG,EAAEL,EAAE;EACpD;EAEAM,oBAAoBA,CAACN,EAAgC,EAAc;IACjE,OAAA3wC,0CAAA,CAAO,IAAI,EAAAiwC,UAAA,EAAAW,WAAA,EAAA1zC,IAAA,CAAJ,IAAI,EAAY,aAAa,EAAEkyC,MAAM,CAACyB,UAAU,EAAEF,EAAE;EAC7D;EAEAO,wBAAwBA,CAACP,EAAgC,EAAc;IACrE,OAAA3wC,0CAAA,CAAO,IAAI,EAAAiwC,UAAA,EAAAW,WAAA,EAAA1zC,IAAA,CAAJ,IAAI,EAAY,aAAa,EAAEkyC,MAAM,CAACr2B,IAAI,EAAE43B,EAAE;EACvD;EAEAQ,uBAAuBA,CAACR,EAAgC,EAAc;IACpE,OAAA3wC,0CAAA,CAAO,IAAI,EAAAiwC,UAAA,EAAAW,WAAA,EAAA1zC,IAAA,CAAJ,IAAI,EAAY,aAAa,EAAEkyC,MAAM,CAAC4B,GAAG,EAAEL,EAAE;EACtD;EAEAS,qBAAqBA,CAACT,EAAgC,EAAc;IAClE,OAAA3wC,0CAAA,CAAO,IAAI,EAAAiwC,UAAA,EAAAW,WAAA,EAAA1zC,IAAA,CAAJ,IAAI,EAAY,cAAc,EAAEkyC,MAAM,CAACyB,UAAU,EAAEF,EAAE;EAC9D;EAEAU,yBAAyBA,CAACV,EAAgC,EAAc;IACtE,OAAA3wC,0CAAA,CAAO,IAAI,EAAAiwC,UAAA,EAAAW,WAAA,EAAA1zC,IAAA,CAAJ,IAAI,EAAY,cAAc,EAAEkyC,MAAM,CAACr2B,IAAI,EAAE43B,EAAE;EACxD;EAEAW,wBAAwBA,CAACX,EAAgC,EAAc;IACrE,OAAA3wC,0CAAA,CAAO,IAAI,EAAAiwC,UAAA,EAAAW,WAAA,EAAA1zC,IAAA,CAAJ,IAAI,EAAY,cAAc,EAAEkyC,MAAM,CAAC4B,GAAG,EAAEL,EAAE;EACvD;EAEAY,eAAeA,CACb9iC,MAEkC,EAClCkiC,EAAgC,EACpB;IACZ,OAAA3wC,0CAAA,CAAO,IAAI,EAAAiwC,UAAA,EAAAW,WAAA,EAAA1zC,IAAA,CAAJ,IAAI,EAAYuR,MAAM,EAAE2gC,MAAM,CAACyB,UAAU,EAAEF,EAAE;EACtD;EAEAa,mBAAmBA,CACjB/iC,MAEkC,EAClCkiC,EAAgC,EACpB;IACZ,OAAA3wC,0CAAA,CAAO,IAAI,EAAAiwC,UAAA,EAAAW,WAAA,EAAA1zC,IAAA,CAAJ,IAAI,EAAYuR,MAAM,EAAE2gC,MAAM,CAACr2B,IAAI,EAAE43B,EAAE;EAChD;EAEAc,kBAAkBA,CAChBhjC,MAEkC,EAClCkiC,EAAgC,EACpB;IACZ,OAAA3wC,0CAAA,CAAO,IAAI,EAAAiwC,UAAA,EAAAW,WAAA,EAAA1zC,IAAA,CAAJ,IAAI,EAAYuR,MAAM,EAAE2gC,MAAM,CAAC4B,GAAG,EAAEL,EAAE;EAC/C;AACF;AAAC,SAAAP,aAAA,EAjK6B;EAC1B,OAAO,IAAIzpB,GAAG,CAAC9nB,8BAAA,KAAI,EAAA2wC,cAAA,EAAgBnrD,GAAG,CAAC,CAAC,CAACoqB,MAAM,CAAC,KAAKA,MAAM,CAAC,CAAC;AAC/D;AAAC,SAAAijC,cAEY5yD,OAAY,EAAQ;EAC/B,IAAI+f,8BAAA,KAAI,EAAA6wC,UAAA,KAAe,IAAI,EAAE,MAAM,IAAIpuD,iBAAiB,CAAC,CAAC;EAC1Dud,8BAAA,KAAI,EAAA6wC,UAAA,EAAYtP,IAAI,CAACn0B,IAAI,CAACC,SAAS,CAACptB,OAAO,CAAC,CAAC;AAC/C;AAAC,SAAA2xD,gBAEckB,WAAoB,EAAEljC,MAAc,EAAQ;EACzD,IAAI5P,8BAAA,KAAI,EAAA6wC,UAAA,KAAe,IAAI,EAAE;EAC7B,MAAM5iD,OAAO,GAAG,CAAC,WAAW,EAAE,aAAa,EAAE,cAAc,CAAC,CAAC3O,QAAQ,CAACswB,MAAM,CAAC,GACzEA,MAAM,GAAG,QAAQ;EACrBzO,0CAAA,KAAI,EAAA4vC,YAAA,EAAA8B,aAAA,EAAAx0C,IAAA,CAAJ,IAAI,EAAc;IAChB4T,EAAE,EAAE6gC,WAAW,GAAG,WAAW,GAAG,aAAa;IAC7C7kD,OAAO;IACP,IAAGA,OAAO,KAAK,QAAQ,IAAI;MAAE2hB;IAAO,CAAC;EACvC,CAAC;EACD5P,8BAAA,KAAI,EAAA4wC,aAAA,EAAe/uC,IAAI,CAAC,CAACixC,WAAW,EAAEljC,MAAM,CAAC,CAAC;AAChD;AAAC,SAAA8hC,OAEKqB,SAAsD,EAAEvqD,CAAU,EAAEY,CAAS,EAAQ;EACzF4W,8BAAA,KAAI,EAAA2wC,cAAA,EACD96C,MAAM,CAAC,CAAC,CAAC+Z,MAAM,EAAEvrB,MAAM,CAAC,KAAK0uD,SAAS,CAACnjC,MAAM,EAAEvrB,MAAM,CAAC,CAAC,CACvDkc,OAAO,CAAC,CAAC,IAAKuxC,EAAE,CAAC,KAAKA,EAAE,CAACtpD,CAAC,EAAEY,CAAC,CAAC,CAAC;AACpC;AAAC,SAAAooD,aAKWwB,SAAS,GAAG,KAAK,EAAQ;EACnC,IAAIhzC,8BAAA,KAAI,EAAA6wC,UAAA,KAAe,IAAI,EAAE;EAC7B,IAAI,CAACmC,SAAS,EAAEhzC,8BAAA,KAAI,EAAA6wC,UAAA,EAAYxH,KAAK,CAAC,CAAC;EACvCr/C,MAAM,CAAC+8B,MAAM,CAAA/mB,8BAAA,CAAC,IAAI,EAAA6wC,UAAA,GAAa;IAC7BtG,MAAM,EAAE15C,SAAS;IACjBy5C,OAAO,EAAEz5C,SAAS;IAClB85C,SAAS,EAAE95C;EACb,CAAC,CAAC;EACFwP,8BAAA,KAAI,EAAAwwC,UAAA,EAAchgD,SAAS;AAC7B;AAAC,SAAA8gD,iBA0Be1xD,OAAoC,EAAQ;EAC1D,IAAI,OAAOA,OAAO,KAAK,QAAQ,IAAIwuB,KAAK,CAAC+R,OAAO,CAACvgC,OAAO,CAAC,EAAE;IACzD,MAAMqsB,OAAO,GAAGtM,8BAAA,KAAI,EAAA4wC,aAAA,EAAexH,KAAK,CAAC,CAAC;IAC1C,IAAI98B,OAAO,IAAI,IAAI,EAAE,MAAM,IAAI9pB,aAAa,CAAC,wBAAwB,CAAC;IACtE,MAAM,CAACswD,WAAW,EAAEljC,MAAM,CAAC,GAAGtD,OAAO;IACrC,IAAI9hB,KAAK;IACT,IAAI,OAAOvK,OAAO,KAAK,QAAQ,EAAEuK,KAAK,GAAG,IAAIgmD,yBAAyB,CAACvwD,OAAO,CAAC;IAC/E,IAAIA,OAAO,CAACX,QAAQ,CAACswB,MAAM,CAAC,KAAKkjC,WAAW,EAAE;MAC5CtoD,KAAK,GAAG,IAAIhI,aAAa,CAAE,YAAWotB,MAAO,SAAQkjC,WAAW,GAAG,EAAE,GAAG,MAAO,kBAAiB7yD,OAAQ,EAAC,CAAC;IAC5G;IACA,IAAIuK,KAAK,IAAI,IAAI,EAAE2W,0CAAA,KAAI,EAAA8vC,KAAA,EAAAS,MAAA,EAAArzC,IAAA,CAAJ,IAAI,EAAQxP,CAAC,IAAK+gB,MAAM,KAAK/gB,CAAC,EAAEgC,SAAS,EAAErG,KAAK;IACnE;EACF;EACA2W,0CAAA,KAAI,EAAA8vC,KAAA,EAAAS,MAAA,EAAArzC,IAAA,CAAJ,IAAI,EACF,CAACuR,MAAM,EAAEvrB,MAAM,KAAK,CAACurB,MAAM,KAAK3vB,OAAO,CAACw/C,YAAY,IAAI7vB,MAAM,KAAK3vB,OAAO,CAAC2vB,MAAM,MAC3EvrB,MAAM,KAAKpE,OAAO,CAACoE,MAAM,IAAIA,MAAM,KAAKksD,MAAM,CAAC4B,GAAG,CAAC,EACzDlyD,OAAO,CAACgO,OAAO;AAEnB;AAAC,SAAA8jD,YAEUniC,MAAc,EAAEvrB,MAAc,EAAEytD,EAAmC,EAAc;EAC1F,MAAMrS,YAAY,GAAG,CAAC7vB,MAAM,EAAEvrB,MAAM,EAAEytD,EAAE,CAAU;EAClD,IAAI9xC,8BAAA,KAAI,EAAA8wC,QAAA,EAAUpS,IAAI,KAAK,CAAC,EAAE,IAAI,CAACwP,SAAS,CAAC,CAAC;EAC9C,IAAI,CAACluC,8BAAA,KAAI,EAAA8wC,QAAA,EAAUpd,GAAG,CAAC9jB,MAAM,CAAC,EAAEzO,0CAAA,KAAI,EAAA6vC,cAAA,EAAAY,eAAA,EAAAvzC,IAAA,CAAJ,IAAI,EAAgB,IAAI,EAAEuR,MAAM;EAChE5P,8BAAA,KAAI,EAAA2wC,cAAA,EAAgB9uC,IAAI,CAAC49B,YAAY,CAAC;EACtC,OAAO,MAAM;IACXp/B,8BAAA,KAAI,EAAAswC,cAAA,EAAkB3wC,8BAAA,KAAI,EAAA2wC,cAAA,EAAgB96C,MAAM,CAAE9K,IAAI,IAAKA,IAAI,KAAK00C,YAAY,CAAC;IACjF,IAAI,CAACz/B,8BAAA,KAAI,EAAA8wC,QAAA,EAAUpd,GAAG,CAAC9jB,MAAM,CAAC,EAAEzO,0CAAA,KAAI,EAAA6vC,cAAA,EAAAY,eAAA,EAAAvzC,IAAA,CAAJ,IAAI,EAAgB,KAAK,EAAEuR,MAAM;IACjE,IAAI5P,8BAAA,KAAI,EAAA8wC,QAAA,EAAUpS,IAAI,KAAK,CAAC,EAAEv9B,0CAAA,KAAI,EAAA+vC,WAAA,EAAAM,YAAA,EAAAnzC,IAAA,CAAJ,IAAI;EACpC,CAAC;AACH;;ACtIK,MAAMib,wBAA0B,GAAG;EACxCC,aAAa,EAAE,QAAQ;EACvBC,MAAM,EAAE;IACNrH,YAAY,EAAE,kBAAkB;IAChCC,UAAU,EAAE,IAAI;IAChB9C,cAAc,EAAE,QAAQ;IACxBxhB,IAAI,EAAE;MACJ5N,IAAI,EAAE;IACR;EACF;AACF,CAAC;AAEM,MAAMu5B,uBAA4B,GAAG;EAC1CF,aAAa,EAAE,OAAO;EACtBC,MAAM,EAAE;IACNlK,cAAc,EAAE,OAAO;IACvBC,QAAQ,EAAE,IAAI;IACdzhB,IAAI,EAAE;MACJ5N,IAAI,EAAE;IACR;EACF,CAAC;EACDw5B,YAAY,EAAE;AAChB,CAAC;AAEM,MAAMp2B,EAAyB,GAAG;EACvCi2B,aAAa,EAAE,IAAI;EACnBC,MAAM,EAAE;IACNlK,cAAc,EAAE,IAAI;IACpBC,QAAQ,EAAE,IAAI;IACdzhB,IAAI,EAAE;MACJ5N,IAAI,EAAE;IACR;EACF;AACF,CAAC;AAEM,MAAM+yD,SAAkC,GAAG;EAChD15B,aAAa,EAAE,CAAC,SAAS,EAAE,WAAW,CAAC;EACvCC,MAAM,EAAE;IACNlK,cAAc,EAAE,YAAY;IAC5BxhB,IAAI,EAAE;MACJ5N,IAAI,EAAE;IACR;EACF;AACF,CAAC;AAEM,MAAM4N,eAA6B,GAAG;EAC3CyrB,aAAa,EAAE,CAAC,SAAS,EAAE,MAAM,CAAC;EAClCC,MAAM,EAAE;IACNlK,cAAc,EAAE,MAAM;IACtBxhB,IAAI,EAAE;MACJ5N,IAAI,EAAE;IACR;EACF;AACF,CAAC;AAEM,MAAM45B,gBAA8B,GAAG;EAC5CP,aAAa,EAAE,OAAO;EACtBC,MAAM,EAAE;IACNrH,YAAY,EAAE,EAAE;IAChBrC,WAAW,EAAE;MACX6F,gBAAgB,EAAE,GAAG;MACrBC,gBAAgB,EAAE;IACpB,CAAC;IACDtG,cAAc,EAAE,OAAO;IACvBxhB,IAAI,EAAE;MACJ5N,IAAI,EAAE;IACR;EACF;AACF,CAAC;AAEM,MAAMgzD,KAA8B,GAAG;EAC5C35B,aAAa,EAAE,OAAO;EACtBC,MAAM,EAAE;IACN1J,WAAW,EAAE;MACX8B,OAAO,EAAE,IAAIC,MAAM,CAAC,wBAAwB;IAC9C,CAAC;IACDvC,cAAc,EAAE,OAAO;IACvBxhB,IAAI,EAAE;MACJ5N,IAAI,EAAE;IACR;EACF;AACF,CAAC;AAEM,MAAMizD,SAAkC,GAAG;EAChD55B,aAAa,EAAE,WAAW;EAC1BC,MAAM,EAAE;IACNlK,cAAc,EAAE,WAAW;IAC3BxhB,IAAI,EAAE;MACJ5N,IAAI,EAAE;IACR;EACF;AACF,CAAC;AAEM,MAAMkzD,EAA2B,GAAG;EACzC75B,aAAa,EAAE,CAAC,SAAS,EAAE,IAAI,CAAC;EAChCC,MAAM,EAAE;IACNlK,cAAc,EAAE,IAAI;IACpBxhB,IAAI,EAAE;MACJ5N,IAAI,EAAE;IACR;EACF;AACF,CAAC;AAEM,MAAM4C,MAA+B,GAAG;EAC7Cy2B,aAAa,EAAE,CAAC,SAAS,EAAE,QAAQ,CAAC;EACpCC,MAAM,EAAE;IACNlK,cAAc,EAAE,QAAQ;IACxBxhB,IAAI,EAAE;MACJ5N,IAAI,EAAE;IACR;EACF;AACF,CAAC;AAEM,MAAM0kB,SAAgC,GAAG;EAC9C2U,aAAa,EAAE,WAAW;EAC1BC,MAAM,EAAE;IACNlK,cAAc,EAAE,WAAW;IAC3BC,QAAQ,EAAE,IAAI;IACdzhB,IAAI,EAAE;MACJ5N,IAAI,EAAE;IACR;EACF;AACF,CAAC;AAEM,MAAM2lB,UAAiC,GAAG;EAC/C0T,aAAa,EAAE,YAAY;EAC3BC,MAAM,EAAE;IACNlK,cAAc,EAAE,YAAY;IAC5BC,QAAQ,EAAE,IAAI;IACdzhB,IAAI,EAAE;MACJ5N,IAAI,EAAE;IACR;EACF;AACF,CAAC;AAEM,MAAMmzD,OAA8B,GAAG;EAC5C95B,aAAa,EAAE,SAAS;EACxBC,MAAM,EAAE;IACNlK,cAAc,EAAE,SAAS;IACzBC,QAAQ,EAAE,IAAI;IACdzhB,IAAI,EAAE;MACJ5N,IAAI,EAAE;IACR;EACF;AACF,CAAC;AAEM,MAAMozD,UAAiC,GAAG;EAC/C/5B,aAAa,EAAE,YAAY;EAC3BC,MAAM,EAAE;IACNlK,cAAc,EAAE,YAAY;IAC5BC,QAAQ,EAAE,IAAI;IACdzhB,IAAI,EAAE;MACJ5N,IAAI,EAAE;IACR;EACF;AACF,CAAC;AAEM,MAAMqzD,UAAiC,GAAG;EAC/Ch6B,aAAa,EAAE,WAAW;EAC1BC,MAAM,EAAE;IACNlK,cAAc,EAAE,YAAY;IAC5BC,QAAQ,EAAE,IAAI;IACdzhB,IAAI,EAAE;MACJ5N,IAAI,EAAE;IACR;EACF;AACF,CAAC;AAEM,MAAMszD,MAA6B,GAAG;EAC3Cj6B,aAAa,EAAE,QAAQ;EACvBC,MAAM,EAAE;IACNlK,cAAc,EAAE,QAAQ;IACxBC,QAAQ,EAAE,IAAI;IACdzhB,IAAI,EAAE;MACJ5N,IAAI,EAAE;IACR;EACF;AACF,CAAC;AAEM,MAAMivD,SAAgC,GAAG;EAC9C51B,aAAa,EAAE,WAAW;EAC1BC,MAAM,EAAE;IACNlK,cAAc,EAAE,WAAW;IAC3BC,QAAQ,EAAE,IAAI;IACdzhB,IAAI,EAAE;MACJ5N,IAAI,EAAE;IACR;EACF;AACF,CAAC;AAEM,MAAM0Q,sBAA6B,GAAG;EAC3C2oB,aAAa,EAAE,MAAM;EACrBC,MAAM,EAAE;IACNlK,cAAc,EAAE,MAAM;IACtBC,QAAQ,EAAE,IAAI;IACdzhB,IAAI,EAAE;MACJ5N,IAAI,EAAE;IACR;EACF;AACF,CAAC;AAEM,MAAMuzD,SAAgC,GAAG;EAC9Cl6B,aAAa,EAAE,WAAW;EAC1BC,MAAM,EAAE;IACNlK,cAAc,EAAE,aAAa;IAC7BC,QAAQ,EAAE,IAAI;IACdzhB,IAAI,EAAE;MACJ5N,IAAI,EAAE;IACR;EACF;AACF,CAAC;AAEM,MAAMwzD,GAA0B,GAAG;EACxCn6B,aAAa,EAAE,KAAK;EACpBC,MAAM,EAAE;IACNlK,cAAc,EAAE,KAAK;IACrBC,QAAQ,EAAE,IAAI;IACdzhB,IAAI,EAAE;MACJ5N,IAAI,EAAE;IACR;EACF;AACF,CAAC;AAEM,MAAMyzD,GAA0B,GAAG;EACxCp6B,aAAa,EAAE,KAAK;EACpBC,MAAM,EAAE;IACNlK,cAAc,EAAE,KAAK;IACrBC,QAAQ,EAAE,IAAI;IACdzhB,IAAI,EAAE;MACJ5N,IAAI,EAAE;IACR;EACF;AACF,CAAC;AAEM,MAAMyoD,KAA8B,GAAG;EAC5CpvB,aAAa,EAAE,CAAC,SAAS,EAAE,OAAO,CAAC;EACnCC,MAAM,EAAE;IACNlK,cAAc,EAAE,OAAO;IACvBxhB,IAAI,EAAE;MACJ5N,IAAI,EAAE;IACR;EACF;AACF,CAAC;AAEM,MAAM0zD,WAAoC,GAAG;EAClDr6B,aAAa,EAAE,CAAC,SAAS,EAAE,YAAY,CAAC;EACxCC,MAAM,EAAE;IACNlK,cAAc,EAAE,aAAa;IAC7BxhB,IAAI,EAAE;MACJ5N,IAAI,EAAE;IACR;EACF;AACF,CAAC;AAEM,MAAMqxC,gBAA8B,GAAG;EAC5ChY,aAAa,EAAE,CAAC,SAAS,EAAE,OAAO,CAAC;EACnCC,MAAM,EAAE;IACNlK,cAAc,EAAE,OAAO;IACvBxhB,IAAI,EAAE;MACJ5N,IAAI,EAAE;IACR;EACF;AACF,CAAC;AAEM,MAAM2zD,cAAuC,GAAG;EACrDt6B,aAAa,EAAE,CAAC,SAAS,EAAE,gBAAgB,CAAC;EAC5CC,MAAM,EAAE;IACNlK,cAAc,EAAE,iBAAiB;IACjCxhB,IAAI,EAAE;MACJ5N,IAAI,EAAE;IACR;EACF;AACF,CAAC;AAEM,MAAM2N,IAA6B,GAAG;EAC3C0rB,aAAa,EAAE,CAAC,SAAS,EAAE,MAAM,CAAC;EAClCC,MAAM,EAAE;IACNlK,cAAc,EAAE,MAAM;IACtBxhB,IAAI,EAAE;MACJ5N,IAAI,EAAE;IACR;EACF;AACF,CAAC;AAEM,MAAM4zD,QAAiC,GAAG;EAC/Cv6B,aAAa,EAAE,CAAC,SAAS,EAAE,UAAU,CAAC;EACtCC,MAAM,EAAE;IACNlK,cAAc,EAAE,WAAW;IAC3BxhB,IAAI,EAAE;MACJ5N,IAAI,EAAE;IACR;EACF;AACF,CAAC;AAEM,MAAM6zD,KAA4B,GAAG;EAC1Cx6B,aAAa,EAAE,MAAM;EACrBC,MAAM,EAAE;IACNlK,cAAc,EAAE,MAAM;IACtBC,QAAQ,EAAE,IAAI;IACdzhB,IAAI,EAAE;MACJ5N,IAAI,EAAE;IACR;EACF;AACF,CAAC;AAEM,MAAM8zD,OAAgC,GAAG;EAC9Cz6B,aAAa,EAAE,CAAC,SAAS,EAAE,SAAS,CAAC;EACrCC,MAAM,EAAE;IACNlK,cAAc,EAAE,UAAU;IAC1BxhB,IAAI,EAAE;MACJ5N,IAAI,EAAE;IACR;EACF;AACF,CAAC;AAEM,MAAM+zD,MAA+B,GAAG;EAC7C16B,aAAa,EAAE,CAAC,SAAS,EAAE,OAAO,CAAC;EACnCC,MAAM,EAAE;IACNlK,cAAc,EAAE,OAAO;IACvBxhB,IAAI,EAAE;MACJ5N,IAAI,EAAE;IACR;EACF;AACF,CAAC;AAEM,MAAMg0D,KAA8B,GAAG;EAC5C36B,aAAa,EAAE,CAAC,SAAS,EAAE,MAAM,CAAC;EAClCC,MAAM,EAAE;IACNlK,cAAc,EAAE,MAAM;IACtBxhB,IAAI,EAAE;MACJ5N,IAAI,EAAE,UAAU;MAChB+vB,OAAO,EAAE;QACPniB,IAAI,EAAE;UACJ5N,IAAI,EAAE;QACR;MACF;IACF;EACF,CAAC;EACDi0D,gBAAgB,EAAE;AACpB,CAAC;AAEM,MAAMC,SAAkC,GAAG;EAChD76B,aAAa,EAAE,CAAC,SAAS,EAAE,WAAW,CAAC;EACvCC,MAAM,EAAE;IACNlK,cAAc,EAAE,YAAY;IAC5BxhB,IAAI,EAAE;MACJ5N,IAAI,EAAE,UAAU;MAChB+vB,OAAO,EAAE;QACPniB,IAAI,EAAE;UACJ5N,IAAI,EAAE;QACR;MACF;IACF;EACF,CAAC;EACDi0D,gBAAgB,EAAE;AACpB,CAAC;AAEM,MAAM5vB,OAAgC,GAAG;EAC9ChL,aAAa,EAAE,CAAC,SAAS,EAAE,SAAS,CAAC;EACrCC,MAAM,EAAE;IACNlK,cAAc,EAAE,SAAS;IACzBxhB,IAAI,EAAE;MACJ5N,IAAI,EAAE;IACR;EACF;AACF,CAAC;AAEM,MAAM4oB,QAAiC,GAAG;EAC/CyQ,aAAa,EAAE,CAAC,SAAS,EAAE,UAAU,CAAC;EACtCC,MAAM,EAAE;IACNlK,cAAc,EAAE,UAAU;IAC1BxhB,IAAI,EAAE;MACJ5N,IAAI,EAAE;IACR;EACF;AACF,CAAC;AAEM,MAAMinD,OAAgC,GAAG;EAC9C5tB,aAAa,EAAE,CAAC,SAAS,EAAE,SAAS,CAAC;EACrCC,MAAM,EAAE;IACNlK,cAAc,EAAE,SAAS;IACzBxhB,IAAI,EAAE;MACJ5N,IAAI,EAAE;IACR;EACF;AACF,CAAC;AAEM,MAAMm0D,MAA+B,GAAG;EAC7C96B,aAAa,EAAE,CAAC,SAAS,EAAE,QAAQ,CAAC;EACpCC,MAAM,EAAE;IACNlK,cAAc,EAAE,QAAQ;IACxBxhB,IAAI,EAAE;MACJ5N,IAAI,EAAE;IACR;EACF;AACF,CAAC;AAEM,MAAMsW,QAAiC,GAAG;EAC/C+iB,aAAa,EAAE,CAAC,SAAS,EAAE,UAAU,CAAC;EACtCC,MAAM,EAAE;IACNlK,cAAc,EAAE,WAAW;IAC3BxhB,IAAI,EAAE;MACJ5N,IAAI,EAAE;IACR;EACF;AACF,CAAC;AAEM,MAAMykB,WAAoC,GAAG;EAClD4U,aAAa,EAAE,CAAC,SAAS,EAAE,aAAa,CAAC;EACzCC,MAAM,EAAE;IACNlK,cAAc,EAAE,cAAc;IAC9BxhB,IAAI,EAAE;MACJ5N,IAAI,EAAE;IACR;EACF;AACF,CAAC;AAEM,MAAMo0D,UAAmC,GAAG;EACjD/6B,aAAa,EAAE,CAAC,SAAS,EAAE,YAAY,CAAC;EACxCC,MAAM,EAAE;IACNlK,cAAc,EAAE,YAAY;IAC5BxhB,IAAI,EAAE;MACJ5N,IAAI,EAAE;IACR;EACF;AACF,CAAC;AAEM,MAAM2a,MAA+B,GAAG;EAC7C0e,aAAa,EAAE,CAAC,SAAS,EAAE,QAAQ,CAAC;EACpCC,MAAM,EAAE;IACNlK,cAAc,EAAE,SAAS;IACzBxhB,IAAI,EAAE;MACJ5N,IAAI,EAAE;IACR;EACF;AACF,CAAC;AAEM,MAAMq0D,GAA4B,GAAG;EAC1Ch7B,aAAa,EAAE,CAAC,SAAS,EAAE,IAAI,CAAC;EAChCC,MAAM,EAAE;IACNlK,cAAc,EAAE,IAAI;IACpBxhB,IAAI,EAAE;MACJ5N,IAAI,EAAE;IACR;EACF;AACF,CAAC;AAEM,MAAMs0D,WAAkC,GAAG;EAChDj7B,aAAa,EAAE,aAAa;EAC5BC,MAAM,EAAE;IACNlK,cAAc,EAAE,eAAe;IAC/BC,QAAQ,EAAE,IAAI;IACdzhB,IAAI,EAAE;MACJ5N,IAAI,EAAE;IACR;EACF;AACF,CAAC;;AC5cM,MAAMu0D,mFAA+G,GAAG;EAC7H3mD,IAAI,EAAE;IACJ5N,IAAI,EAAE,WAAW;IACjBkvB,SAAS,EACP,qFAAqF;IACvFC,eAAe,EAAE;MACfxhB,IAAI,EAAE;QACJyhB,cAAc,EAAE,MAAM;QACtBxhB,IAAI,EAAE;UACJ5N,IAAI,EAAE,UAAU;UAChB+vB,OAAO,EAAE;YACPniB,IAAI,EAAE;cACJ5N,IAAI,EAAE,WAAW;cACjBkvB,SAAS,EAAE;YACb;UACF;QACF;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAMslC,QAAoC,GAAG;EAClD5mD,IAAI,EAAE;IACJ5N,IAAI,EAAE,WAAW;IACjBkvB,SAAS,EAAE,UAAU;IACrBC,eAAe,EAAE;MACf0B,SAAS,EAAE;QACTzB,cAAc,EAAE,YAAY;QAC5BC,QAAQ,EAAE,IAAI;QACdzhB,IAAI,EAAE;UACJ5N,IAAI,EAAE;QACR;MACF,CAAC;MACDwB,MAAM,EAAE;QACN4tB,cAAc,EAAE,QAAQ;QACxBC,QAAQ,EAAE,IAAI;QACdzhB,IAAI,EAAE;UACJ5N,IAAI,EAAE;QACR;MACF,CAAC;MACD+N,OAAO,EAAE;QACPqhB,cAAc,EAAE,SAAS;QACzBC,QAAQ,EAAE,IAAI;QACdzhB,IAAI,EAAE;UACJ5N,IAAI,EAAE,YAAY;UAClB0H,KAAK,EAAE;YAAEkG,IAAI,EAAE;cAAE5N,IAAI,EAAE;YAAM;UAAE;QACjC;MACF,CAAC;MACD4N,IAAI,EAAE;QACJwhB,cAAc,EAAE,MAAM;QACtBC,QAAQ,EAAE,IAAI;QACdzhB,IAAI,EAAE;UACJ5N,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAMy0D,iBAA6C,GAAG;EAC3D7mD,IAAI,EAAE;IACJ5N,IAAI,EAAE,WAAW;IACjBkvB,SAAS,EAAE,mBAAmB;IAC9BC,eAAe,EAAE;MACf9C,IAAI,EAAE;QACJ+C,cAAc,EAAE,MAAM;QACtBC,QAAQ,EAAE,IAAI;QACdqlC,QAAQ,EAAE,IAAI;QACd9mD,IAAI,EAAE;UACJ5N,IAAI,EAAE;QACR;MACF,CAAC;MACD20D,IAAI,EAAE;QACJvlC,cAAc,EAAE,MAAM;QACtBC,QAAQ,EAAE,IAAI;QACdqlC,QAAQ,EAAE,IAAI;QACd9mD,IAAI,EAAE;UACJ5N,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAM40D,aAAyC,GAAG;EACvDhnD,IAAI,EAAE;IACJ5N,IAAI,EAAE,WAAW;IACjBkvB,SAAS,EAAE,eAAe;IAC1BC,eAAe,EAAE;MACf7kB,KAAK,EAAE;QACL8kB,cAAc,EAAE,OAAO;QACvBC,QAAQ,EAAE,IAAI;QACdzhB,IAAI,EAAE;UACJ5N,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAM60D,qEAAiG,GAAG;EAC/GjnD,IAAI,EAAE;IACJ5N,IAAI,EAAE,WAAW;IACjBkvB,SAAS,EACP,uEAAuE;IACzEC,eAAe,EAAE;MACfxhB,IAAI,EAAE;QACJyhB,cAAc,EAAE,MAAM;QACtBxhB,IAAI,EAAE;UACJ5N,IAAI,EAAE,UAAU;UAChB+vB,OAAO,EAAE;YACPniB,IAAI,EAAE;cACJ5N,IAAI,EAAE,WAAW;cACjBkvB,SAAS,EAAE;YACb;UACF;QACF;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAM4lC,cAA0C,GAAG;EACxDlnD,IAAI,EAAE;IACJ5N,IAAI,EAAE,WAAW;IACjBkvB,SAAS,EAAE,gBAAgB;IAC3BC,eAAe,EAAE;MACf4lC,OAAO,EAAE;QACP3lC,cAAc,EAAE,UAAU;QAC1BC,QAAQ,EAAE,IAAI;QACdzhB,IAAI,EAAE;UACJ5N,IAAI,EAAE;QACR;MACF,CAAC;MACD2lB,UAAU,EAAE;QACVyJ,cAAc,EAAE,aAAa;QAC7BC,QAAQ,EAAE,IAAI;QACdzhB,IAAI,EAAE;UACJ5N,IAAI,EAAE;QACR;MACF,CAAC;MACDg1D,WAAW,EAAE;QACX5lC,cAAc,EAAE,cAAc;QAC9BC,QAAQ,EAAE,IAAI;QACdzhB,IAAI,EAAE;UACJ5N,IAAI,EAAE;QACR;MACF,CAAC;MACDi1D,UAAU,EAAE;QACV7lC,cAAc,EAAE,YAAY;QAC5BC,QAAQ,EAAE,IAAI;QACdzhB,IAAI,EAAE;UACJ5N,IAAI,EAAE,UAAU;UAChB+vB,OAAO,EAAE;YACPniB,IAAI,EAAE;cACJ5N,IAAI,EAAE;YACR;UACF;QACF;MACF,CAAC;MACDk1D,MAAM,EAAE;QACN9lC,cAAc,EAAE,QAAQ;QACxBC,QAAQ,EAAE,IAAI;QACdzhB,IAAI,EAAE;UACJ5N,IAAI,EAAE,YAAY;UAClB0H,KAAK,EAAE;YAAEkG,IAAI,EAAE;cAAE5N,IAAI,EAAE;YAAM;UAAE;QACjC;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAMm1D,sFAAkH,GAAG;EAChIvnD,IAAI,EAAE;IACJ5N,IAAI,EAAE,WAAW;IACjBkvB,SAAS,EACP,wFAAwF;IAC1FC,eAAe,EAAE;MACfxhB,IAAI,EAAE;QACJyhB,cAAc,EAAE,MAAM;QACtBxhB,IAAI,EAAE;UACJ5N,IAAI,EAAE,UAAU;UAChB+vB,OAAO,EAAE;YACPniB,IAAI,EAAE;cACJ5N,IAAI,EAAE,WAAW;cACjBkvB,SAAS,EAAE;YACb;UACF;QACF;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAMkmC,wBAAoD,GAAG;EAClExnD,IAAI,EAAE;IACJ5N,IAAI,EAAE,WAAW;IACjBkvB,SAAS,EAAE,0BAA0B;IACrCC,eAAe,EAAE;MACfzK,SAAS,EAAE;QACT0K,cAAc,EAAE,YAAY;QAC5BC,QAAQ,EAAE,IAAI;QACdzhB,IAAI,EAAE;UACJ5N,IAAI,EAAE;QACR;MACF,CAAC;MACD2lB,UAAU,EAAE;QACVyJ,cAAc,EAAE,aAAa;QAC7BC,QAAQ,EAAE,IAAI;QACdzhB,IAAI,EAAE;UACJ5N,IAAI,EAAE;QACR;MACF,CAAC;MACDmzD,OAAO,EAAE;QACP/jC,cAAc,EAAE,UAAU;QAC1BC,QAAQ,EAAE,IAAI;QACdzhB,IAAI,EAAE;UACJ5N,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAMq1D,oFAAgH,GAAG;EAC9HznD,IAAI,EAAE;IACJ5N,IAAI,EAAE,WAAW;IACjBkvB,SAAS,EACP,sFAAsF;IACxFC,eAAe,EAAE;MACfxhB,IAAI,EAAE;QACJyhB,cAAc,EAAE,MAAM;QACtBxhB,IAAI,EAAE;UACJ5N,IAAI,EAAE,UAAU;UAChB+vB,OAAO,EAAE;YACPniB,IAAI,EAAE;cACJ5N,IAAI,EAAE,WAAW;cACjBkvB,SAAS,EAAE;YACb;UACF;QACF;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAMomC,uFAAmH,GAAG;EACjI1nD,IAAI,EAAE;IACJ5N,IAAI,EAAE,WAAW;IACjBkvB,SAAS,EACP,yFAAyF;IAC3FC,eAAe,EAAE;MACfxhB,IAAI,EAAE;QACJyhB,cAAc,EAAE,MAAM;QACtBxhB,IAAI,EAAE;UACJ5N,IAAI,EAAE,UAAU;UAChB+vB,OAAO,EAAE;YACPniB,IAAI,EAAE;cACJ5N,IAAI,EAAE,WAAW;cACjBkvB,SAAS,EAAE;YACb;UACF;QACF;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAMqmC,uBAAmD,GAAG;EACjE3nD,IAAI,EAAE;IACJ5N,IAAI,EAAE,WAAW;IACjBkvB,SAAS,EAAE,yBAAyB;IACpCC,eAAe,EAAE;MACfxJ,UAAU,EAAE;QACVyJ,cAAc,EAAE,aAAa;QAC7BC,QAAQ,EAAE,IAAI;QACdzhB,IAAI,EAAE;UACJ5N,IAAI,EAAE;QACR;MACF,CAAC;MACDw1D,OAAO,EAAE;QACPpmC,cAAc,EAAE,SAAS;QACzBxhB,IAAI,EAAE;UACJ5N,IAAI,EAAE,YAAY;UAClB0H,KAAK,EAAE;YAAEkG,IAAI,EAAE;cAAE5N,IAAI,EAAE;YAAM;UAAE;QACjC;MACF,CAAC;MACDy1D,MAAM,EAAE;QACNrmC,cAAc,EAAE,SAAS;QACzBC,QAAQ,EAAE,IAAI;QACdzhB,IAAI,EAAE;UACJ5N,IAAI,EAAE;QACR;MACF,CAAC;MACDozD,UAAU,EAAE;QACVhkC,cAAc,EAAE,aAAa;QAC7BC,QAAQ,EAAE,IAAI;QACdzhB,IAAI,EAAE;UACJ5N,IAAI,EAAE;QACR;MACF,CAAC;MACD4G,MAAM,EAAE;QACNwoB,cAAc,EAAE,SAAS;QACzBC,QAAQ,EAAE,IAAI;QACdzhB,IAAI,EAAE;UACJ5N,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAM01D,wGAAoI,GAAG;EAClJ9nD,IAAI,EAAE;IACJ5N,IAAI,EAAE,WAAW;IACjBkvB,SAAS,EACP,0GAA0G;IAC5GC,eAAe,EAAE;MACfxhB,IAAI,EAAE;QACJyhB,cAAc,EAAE,MAAM;QACtBxhB,IAAI,EAAE;UACJ5N,IAAI,EAAE,UAAU;UAChB+vB,OAAO,EAAE;YACPniB,IAAI,EAAE;cACJ5N,IAAI,EAAE,WAAW;cACjBkvB,SAAS,EAAE;YACb;UACF;QACF;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAMymC,4BAAwD,GAAG;EACtE/nD,IAAI,EAAE;IACJ5N,IAAI,EAAE,WAAW;IACjBkvB,SAAS,EAAE,8BAA8B;IACzCC,eAAe,EAAE;MACfsmC,MAAM,EAAE;QACNrmC,cAAc,EAAE,SAAS;QACzBC,QAAQ,EAAE,IAAI;QACdzhB,IAAI,EAAE;UACJ5N,IAAI,EAAE;QACR;MACF,CAAC;MACDkW,OAAO,EAAE;QACPkZ,cAAc,EAAE,UAAU;QAC1BC,QAAQ,EAAE,IAAI;QACdzhB,IAAI,EAAE;UACJ5N,IAAI,EAAE;QACR;MACF,CAAC;MACDmzD,OAAO,EAAE;QACP/jC,cAAc,EAAE,UAAU;QAC1BC,QAAQ,EAAE,IAAI;QACdzhB,IAAI,EAAE;UACJ5N,IAAI,EAAE;QACR;MACF,CAAC;MACD4G,MAAM,EAAE;QACNwoB,cAAc,EAAE,SAAS;QACzBC,QAAQ,EAAE,IAAI;QACdzhB,IAAI,EAAE;UACJ5N,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAM41D,mEAA+F,GAAG;EAC7GhoD,IAAI,EAAE;IACJ5N,IAAI,EAAE,WAAW;IACjBkvB,SAAS,EACP,qEAAqE;IACvEC,eAAe,EAAE;MACfxhB,IAAI,EAAE;QACJyhB,cAAc,EAAE,MAAM;QACtBxhB,IAAI,EAAE;UACJ5N,IAAI,EAAE,UAAU;UAChB+vB,OAAO,EAAE;YACPniB,IAAI,EAAE;cACJ5N,IAAI,EAAE,WAAW;cACjBkvB,SAAS,EAAE;YACb;UACF;QACF;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAM2mC,YAAwC,GAAG;EACtDjoD,IAAI,EAAE;IACJ5N,IAAI,EAAE,WAAW;IACjBkvB,SAAS,EAAE,cAAc;IACzBC,eAAe,EAAE;MACfxJ,UAAU,EAAE;QACVyJ,cAAc,EAAE,aAAa;QAC7BC,QAAQ,EAAE,IAAI;QACdzhB,IAAI,EAAE;UACJ5N,IAAI,EAAE;QACR;MACF,CAAC;MACDg1D,WAAW,EAAE;QACX5lC,cAAc,EAAE,cAAc;QAC9BC,QAAQ,EAAE,IAAI;QACdzhB,IAAI,EAAE;UACJ5N,IAAI,EAAE;QACR;MACF,CAAC;MACD81D,QAAQ,EAAE;QACR1mC,cAAc,EAAE,UAAU;QAC1BC,QAAQ,EAAE,IAAI;QACdzhB,IAAI,EAAE;UACJ5N,IAAI,EAAE;QACR;MACF,CAAC;MACD+1D,WAAW,EAAE;QACX3mC,cAAc,EAAE,cAAc;QAC9BC,QAAQ,EAAE,IAAI;QACdzhB,IAAI,EAAE;UACJ5N,IAAI,EAAE;QACR;MACF,CAAC;MACDi1D,UAAU,EAAE;QACV7lC,cAAc,EAAE,YAAY;QAC5BxhB,IAAI,EAAE;UACJ5N,IAAI,EAAE,UAAU;UAChB+vB,OAAO,EAAE;YACPniB,IAAI,EAAE;cACJ5N,IAAI,EAAE;YACR;UACF;QACF;MACF,CAAC;MACDg2D,OAAO,EAAE;QACP5mC,cAAc,EAAE,SAAS;QACzBC,QAAQ,EAAE,IAAI;QACdzhB,IAAI,EAAE;UACJ5N,IAAI,EAAE;QACR;MACF,CAAC;MACDi2D,aAAa,EAAE;QACb7mC,cAAc,EAAE,gBAAgB;QAChCC,QAAQ,EAAE,IAAI;QACdzhB,IAAI,EAAE;UACJ5N,IAAI,EAAE;QACR;MACF,CAAC;MACDA,IAAI,EAAE;QACJovB,cAAc,EAAE,MAAM;QACtBC,QAAQ,EAAE,IAAI;QACdzhB,IAAI,EAAE;UACJ5N,IAAI,EAAE;QACR;MACF,CAAC;MACDk2D,MAAM,EAAE;QACN9mC,cAAc,EAAE,QAAQ;QACxBC,QAAQ,EAAE,IAAI;QACdzhB,IAAI,EAAE;UACJ5N,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAMm2D,0FAAsH,GAAG;EACpIvoD,IAAI,EAAE;IACJ5N,IAAI,EAAE,WAAW;IACjBkvB,SAAS,EACP,4FAA4F;IAC9FC,eAAe,EAAE;MACfxhB,IAAI,EAAE;QACJyhB,cAAc,EAAE,MAAM;QACtBxhB,IAAI,EAAE;UACJ5N,IAAI,EAAE,UAAU;UAChB+vB,OAAO,EAAE;YACPniB,IAAI,EAAE;cACJ5N,IAAI,EAAE,WAAW;cACjBkvB,SAAS,EAAE;YACb;UACF;QACF;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAMknC,mBAA+C,GAAG;EAC7DxoD,IAAI,EAAE;IACJ5N,IAAI,EAAE,WAAW;IACjBkvB,SAAS,EAAE,qBAAqB;IAChCC,eAAe,EAAE;MACfpqB,MAAM,EAAE;QACNqqB,cAAc,EAAE,QAAQ;QACxBC,QAAQ,EAAE,IAAI;QACdzhB,IAAI,EAAE;UACJ5N,IAAI,EAAE;QACR;MACF,CAAC;MACD6wB,SAAS,EAAE;QACTzB,cAAc,EAAE,YAAY;QAC5BC,QAAQ,EAAE,IAAI;QACdzhB,IAAI,EAAE;UACJ5N,IAAI,EAAE;QACR;MACF,CAAC;MACD2lB,UAAU,EAAE;QACVyJ,cAAc,EAAE,aAAa;QAC7BC,QAAQ,EAAE,IAAI;QACdzhB,IAAI,EAAE;UACJ5N,IAAI,EAAE;QACR;MACF,CAAC;MACD81D,QAAQ,EAAE;QACR1mC,cAAc,EAAE,UAAU;QAC1BC,QAAQ,EAAE,IAAI;QACdzhB,IAAI,EAAE;UACJ5N,IAAI,EAAE;QACR;MACF,CAAC;MACDwB,MAAM,EAAE;QACN4tB,cAAc,EAAE,QAAQ;QACxBC,QAAQ,EAAE,IAAI;QACdzhB,IAAI,EAAE;UACJ5N,IAAI,EAAE;QACR;MACF,CAAC;MACDq2D,SAAS,EAAE;QACTjnC,cAAc,EAAE,YAAY;QAC5BC,QAAQ,EAAE,IAAI;QACdzhB,IAAI,EAAE;UACJ5N,IAAI,EAAE;QACR;MACF,CAAC;MACDs2D,WAAW,EAAE;QACXlnC,cAAc,EAAE,cAAc;QAC9BC,QAAQ,EAAE,IAAI;QACdzhB,IAAI,EAAE;UACJ5N,IAAI,EAAE;QACR;MACF,CAAC;MACD4G,MAAM,EAAE;QACNwoB,cAAc,EAAE,SAAS;QACzBC,QAAQ,EAAE,IAAI;QACdzhB,IAAI,EAAE;UACJ5N,IAAI,EAAE;QACR;MACF,CAAC;MACDu2D,OAAO,EAAE;QACPnnC,cAAc,EAAE,UAAU;QAC1BC,QAAQ,EAAE,IAAI;QACdzhB,IAAI,EAAE;UACJ5N,IAAI,EAAE;QACR;MACF,CAAC;MACD2a,MAAM,EAAE;QACNyU,cAAc,EAAE,SAAS;QACzBC,QAAQ,EAAE,IAAI;QACdzhB,IAAI,EAAE;UACJ5N,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAMw2D,gGAA4H,GAAG;EAC1I5oD,IAAI,EAAE;IACJ5N,IAAI,EAAE,WAAW;IACjBkvB,SAAS,EACP,kGAAkG;IACpGC,eAAe,EAAE;MACfxhB,IAAI,EAAE;QACJyhB,cAAc,EAAE,MAAM;QACtBxhB,IAAI,EAAE;UACJ5N,IAAI,EAAE,UAAU;UAChB+vB,OAAO,EAAE;YACPniB,IAAI,EAAE;cACJ5N,IAAI,EAAE,WAAW;cACjBkvB,SAAS,EAAE;YACb;UACF;QACF;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAMunC,oBAAgD,GAAG;EAC9D7oD,IAAI,EAAE;IACJ5N,IAAI,EAAE,WAAW;IACjBkvB,SAAS,EAAE,sBAAsB;IACjCC,eAAe,EAAE;MACfpqB,MAAM,EAAE;QACNqqB,cAAc,EAAE,QAAQ;QACxBC,QAAQ,EAAE,IAAI;QACdzhB,IAAI,EAAE;UACJ5N,IAAI,EAAE;QACR;MACF,CAAC;MACD4wB,WAAW,EAAE;QACXxB,cAAc,EAAE,cAAc;QAC9BC,QAAQ,EAAE,IAAI;QACdzhB,IAAI,EAAE;UACJ5N,IAAI,EAAE;QACR;MACF,CAAC;MACD02D,OAAO,EAAE;QACPtnC,cAAc,EAAE,UAAU;QAC1BC,QAAQ,EAAE,IAAI;QACdzhB,IAAI,EAAE;UACJ5N,IAAI,EAAE;QACR;MACF,CAAC;MACD2lB,UAAU,EAAE;QACVyJ,cAAc,EAAE,aAAa;QAC7BC,QAAQ,EAAE,IAAI;QACdzhB,IAAI,EAAE;UACJ5N,IAAI,EAAE;QACR;MACF,CAAC;MACDy1D,MAAM,EAAE;QACNrmC,cAAc,EAAE,SAAS;QACzBC,QAAQ,EAAE,IAAI;QACdzhB,IAAI,EAAE;UACJ5N,IAAI,EAAE;QACR;MACF,CAAC;MACD22D,SAAS,EAAE;QACTvnC,cAAc,EAAE,YAAY;QAC5BC,QAAQ,EAAE,IAAI;QACdzhB,IAAI,EAAE;UACJ5N,IAAI,EAAE;QACR;MACF,CAAC;MACDivD,SAAS,EAAE;QACT7/B,cAAc,EAAE,WAAW;QAC3BC,QAAQ,EAAE,IAAI;QACdzhB,IAAI,EAAE;UACJ5N,IAAI,EAAE;QACR;MACF,CAAC;MACDszD,MAAM,EAAE;QACNlkC,cAAc,EAAE,QAAQ;QACxBC,QAAQ,EAAE,IAAI;QACdzhB,IAAI,EAAE;UACJ5N,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAM42D,gFAA4G,GAAG;EAC1HhpD,IAAI,EAAE;IACJ5N,IAAI,EAAE,WAAW;IACjBkvB,SAAS,EACP,kFAAkF;IACpFC,eAAe,EAAE;MACfxhB,IAAI,EAAE;QACJyhB,cAAc,EAAE,MAAM;QACtBxhB,IAAI,EAAE;UACJ5N,IAAI,EAAE,UAAU;UAChB+vB,OAAO,EAAE;YACPniB,IAAI,EAAE;cACJ5N,IAAI,EAAE,WAAW;cACjBkvB,SAAS,EAAE;YACb;UACF;QACF;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAM2nC,gFAA4G,GAAG;EAC1HjpD,IAAI,EAAE;IACJ5N,IAAI,EAAE,WAAW;IACjBkvB,SAAS,EACP,kFAAkF;IACpFC,eAAe,EAAE;MACfxhB,IAAI,EAAE;QACJyhB,cAAc,EAAE,MAAM;QACtBxhB,IAAI,EAAE;UACJ5N,IAAI,EAAE,UAAU;UAChB+vB,OAAO,EAAE;YACPniB,IAAI,EAAE;cACJ5N,IAAI,EAAE,WAAW;cACjBkvB,SAAS,EAAE;YACb;UACF;QACF;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAM4nC,qFAAiH,GAAG;EAC/HlpD,IAAI,EAAE;IACJ5N,IAAI,EAAE,WAAW;IACjBkvB,SAAS,EACP,uFAAuF;IACzFC,eAAe,EAAE;MACfxhB,IAAI,EAAE;QACJyhB,cAAc,EAAE,MAAM;QACtBxhB,IAAI,EAAE;UACJ5N,IAAI,EAAE,UAAU;UAChB+vB,OAAO,EAAE;YACPniB,IAAI,EAAE;cACJ5N,IAAI,EAAE,WAAW;cACjBkvB,SAAS,EAAE;YACb;UACF;QACF;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAM6nC,2BAAuD,GAAG;EACrEnpD,IAAI,EAAE;IACJ5N,IAAI,EAAE,WAAW;IACjBkvB,SAAS,EAAE,6BAA6B;IACxCC,eAAe,EAAE;MACfzK,SAAS,EAAE;QACT0K,cAAc,EAAE,YAAY;QAC5BC,QAAQ,EAAE,IAAI;QACdzhB,IAAI,EAAE;UACJ5N,IAAI,EAAE;QACR;MACF,CAAC;MACD+E,MAAM,EAAE;QACNqqB,cAAc,EAAE,QAAQ;QACxBC,QAAQ,EAAE,IAAI;QACdzhB,IAAI,EAAE;UACJ5N,IAAI,EAAE;QACR;MACF,CAAC;MACD6wB,SAAS,EAAE;QACTzB,cAAc,EAAE,YAAY;QAC5BC,QAAQ,EAAE,IAAI;QACdzhB,IAAI,EAAE;UACJ5N,IAAI,EAAE;QACR;MACF,CAAC;MACD2lB,UAAU,EAAE;QACVyJ,cAAc,EAAE,aAAa;QAC7BC,QAAQ,EAAE,IAAI;QACdzhB,IAAI,EAAE;UACJ5N,IAAI,EAAE;QACR;MACF,CAAC;MACDwB,MAAM,EAAE;QACN4tB,cAAc,EAAE,QAAQ;QACxBC,QAAQ,EAAE,IAAI;QACdzhB,IAAI,EAAE;UACJ5N,IAAI,EAAE;QACR;MACF,CAAC;MACDg3D,UAAU,EAAE;QACV5nC,cAAc,EAAE,cAAc;QAC9BC,QAAQ,EAAE,IAAI;QACdzhB,IAAI,EAAE;UACJ5N,IAAI,EAAE;QACR;MACF,CAAC;MACDi3D,UAAU,EAAE;QACV7nC,cAAc,EAAE,cAAc;QAC9BC,QAAQ,EAAE,IAAI;QACdzhB,IAAI,EAAE;UACJ5N,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAMk3D,6FAAyH,GAAG;EACvItpD,IAAI,EAAE;IACJ5N,IAAI,EAAE,WAAW;IACjBkvB,SAAS,EACP,+FAA+F;IACjGC,eAAe,EAAE;MACfkV,OAAO,EAAE;QACPjV,cAAc,EAAE,SAAS;QACzBxhB,IAAI,EAAE;UACJ5N,IAAI,EAAE;QACR;MACF,CAAC;MACD+E,MAAM,EAAE;QACNqqB,cAAc,EAAE,QAAQ;QACxBxhB,IAAI,EAAE;UACJ5N,IAAI,EAAE;QACR;MACF,CAAC;MACD4oB,QAAQ,EAAE;QACRwG,cAAc,EAAE,UAAU;QAC1BxhB,IAAI,EAAE;UACJ5N,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAMm3D,qGAAiI,GAAG;EAC/IvpD,IAAI,EAAE;IACJ5N,IAAI,EAAE,WAAW;IACjBkvB,SAAS,EACP,uGAAuG;IACzGC,eAAe,EAAE;MACfkV,OAAO,EAAE;QACPjV,cAAc,EAAE,SAAS;QACzBxhB,IAAI,EAAE;UACJ5N,IAAI,EAAE;QACR;MACF,CAAC;MACD+E,MAAM,EAAE;QACNqqB,cAAc,EAAE,QAAQ;QACxBxhB,IAAI,EAAE;UACJ5N,IAAI,EAAE;QACR;MACF,CAAC;MACD4oB,QAAQ,EAAE;QACRwG,cAAc,EAAE,UAAU;QAC1BxhB,IAAI,EAAE;UACJ5N,IAAI,EAAE;QACR;MACF,CAAC;MACDwB,MAAM,EAAE;QACN4tB,cAAc,EAAE,QAAQ;QACxBxhB,IAAI,EAAE;UACJ5N,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAMo3D,oEAAgG,GAAG;EAC9GxpD,IAAI,EAAE;IACJ5N,IAAI,EAAE,WAAW;IACjBkvB,SAAS,EACP,sEAAsE;IACxEC,eAAe,EAAE;MACfxhB,IAAI,EAAE;QACJyhB,cAAc,EAAE,MAAM;QACtBxhB,IAAI,EAAE;UACJ5N,IAAI,EAAE,UAAU;UAChB+vB,OAAO,EAAE;YACPniB,IAAI,EAAE;cACJ5N,IAAI,EAAE,WAAW;cACjBkvB,SAAS,EAAE;YACb;UACF;QACF;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAMmoC,KAAiC,GAAG;EAC/CzpD,IAAI,EAAE;IACJ5N,IAAI,EAAE,WAAW;IACjBkvB,SAAS,EAAE,OAAO;IAClBC,eAAe,EAAE;MACfM,WAAW,EAAE;QACXL,cAAc,EAAE,aAAa;QAC7BxhB,IAAI,EAAE;UACJ5N,IAAI,EAAE;QACR;MACF,CAAC;MACD0Q,IAAI,EAAE;QACJ0e,cAAc,EAAE,MAAM;QACtBxhB,IAAI,EAAE;UACJ5N,IAAI,EAAE;QACR;MACF,CAAC;MACDwB,MAAM,EAAE;QACN4tB,cAAc,EAAE,QAAQ;QACxBxhB,IAAI,EAAE;UACJ5N,IAAI,EAAE;QACR;MACF,CAAC;MACDiwB,IAAI,EAAE;QACJb,cAAc,EAAE,MAAM;QACtBxhB,IAAI,EAAE;UACJ5N,IAAI,EAAE;QACR;MACF,CAAC;MACDwvB,KAAK,EAAE;QACLJ,cAAc,EAAE,OAAO;QACvBxhB,IAAI,EAAE;UACJ5N,IAAI,EAAE;QACR;MACF,CAAC;MACD8Q,KAAK,EAAE;QACLse,cAAc,EAAE,OAAO;QACvBxhB,IAAI,EAAE;UACJ5N,IAAI,EAAE;QACR;MACF,CAAC;MACD2vB,GAAG,EAAE;QACHP,cAAc,EAAE,KAAK;QACrBxhB,IAAI,EAAE;UACJ5N,IAAI,EAAE,UAAU;UAChB+vB,OAAO,EAAE;YACPniB,IAAI,EAAE;cACJ5N,IAAI,EAAE;YACR;UACF;QACF;MACF,CAAC;MACDsvB,QAAQ,EAAE;QACRF,cAAc,EAAE,WAAW;QAC3BxhB,IAAI,EAAE;UACJ5N,IAAI,EAAE;QACR;MACF,CAAC;MACDuvB,WAAW,EAAE;QACXH,cAAc,EAAE,eAAe;QAC/BxhB,IAAI,EAAE;UACJ5N,IAAI,EAAE;QACR;MACF,CAAC;MACDqnB,SAAS,EAAE;QACT+H,cAAc,EAAE,YAAY;QAC5BxhB,IAAI,EAAE;UACJ5N,IAAI,EAAE;QACR;MACF,CAAC;MACD0vB,MAAM,EAAE;QACNN,cAAc,EAAE,QAAQ;QACxBxhB,IAAI,EAAE;UACJ5N,IAAI,EAAE;QACR;MACF,CAAC;MACDgwB,IAAI,EAAE;QACJZ,cAAc,EAAE,MAAM;QACtBxhB,IAAI,EAAE;UACJ5N,IAAI,EAAE;QACR;MACF,CAAC;MACDmC,OAAO,EAAE;QACPitB,cAAc,EAAE,SAAS;QACzBxhB,IAAI,EAAE;UACJ5N,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAMs3D,gBAA4C,GAAG;EAC1D1pD,IAAI,EAAE;IACJ5N,IAAI,EAAE,WAAW;IACjBkvB,SAAS,EAAE,kBAAkB;IAC7BC,eAAe,EAAE;MACf7kB,KAAK,EAAE;QACL8kB,cAAc,EAAE,OAAO;QACvBC,QAAQ,EAAE,IAAI;QACdzhB,IAAI,EAAE;UACJ5N,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAMu3D,qEAAiG,GAAG;EAC/G3pD,IAAI,EAAE;IACJ5N,IAAI,EAAE,WAAW;IACjBkvB,SAAS,EACP,uEAAuE;IACzEC,eAAe,EAAE;MACfxhB,IAAI,EAAE;QACJyhB,cAAc,EAAE,MAAM;QACtBxhB,IAAI,EAAE;UACJ5N,IAAI,EAAE,UAAU;UAChB+vB,OAAO,EAAE;YACPniB,IAAI,EAAE;cACJ5N,IAAI,EAAE,WAAW;cACjBkvB,SAAS,EAAE;YACb;UACF;QACF;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAMniB,eAAmC,GAAG;EACjDa,IAAI,EAAE;IACJ5N,IAAI,EAAE,WAAW;IACjBkvB,SAAS,EAAE,SAAS;IACpBC,eAAe,EAAE;MACfpqB,MAAM,EAAE;QACNqqB,cAAc,EAAE,QAAQ;QACxBxhB,IAAI,EAAE;UACJ5N,IAAI,EAAE;QACR;MACF,CAAC;MACDinD,OAAO,EAAE;QACP73B,cAAc,EAAE,SAAS;QACzBxhB,IAAI,EAAE;UACJ5N,IAAI,EAAE;QACR;MACF,CAAC;MACDinB,cAAc,EAAE;QACdmI,cAAc,EAAE,iBAAiB;QACjCxhB,IAAI,EAAE;UACJ5N,IAAI,EAAE;QACR;MACF,CAAC;MACDoxB,WAAW,EAAE;QACXhC,cAAc,EAAE,cAAc;QAC9BxhB,IAAI,EAAE;UACJ5N,IAAI,EAAE,YAAY;UAClB0H,KAAK,EAAE;YAAEkG,IAAI,EAAE;cAAE5N,IAAI,EAAE;YAAM;UAAE;QACjC;MACF,CAAC;MACD6mB,SAAS,EAAE;QACTuI,cAAc,EAAE,WAAW;QAC3BxhB,IAAI,EAAE;UACJ5N,IAAI,EAAE;QACR;MACF,CAAC;MACD8mB,eAAe,EAAE;QACfsI,cAAc,EAAE,kBAAkB;QAClCxhB,IAAI,EAAE;UACJ5N,IAAI,EAAE;QACR;MACF,CAAC;MACDw3D,iBAAiB,EAAE;QACjBpoC,cAAc,EAAE,qBAAqB;QACrCxhB,IAAI,EAAE;UACJ5N,IAAI,EAAE;QACR;MACF,CAAC;MACDy3D,iBAAiB,EAAE;QACjBroC,cAAc,EAAE,sBAAsB;QACtCxhB,IAAI,EAAE;UACJ5N,IAAI,EAAE;QACR;MACF,CAAC;MACDknB,UAAU,EAAE;QACVkI,cAAc,EAAE,aAAa;QAC7BxhB,IAAI,EAAE;UACJ5N,IAAI,EAAE;QACR;MACF,CAAC;MACDsoB,WAAW,EAAE;QACX8G,cAAc,EAAE,cAAc;QAC9BxhB,IAAI,EAAE;UACJ5N,IAAI,EAAE;QACR;MACF,CAAC;MACD+mB,SAAS,EAAE;QACTqI,cAAc,EAAE,WAAW;QAC3BxhB,IAAI,EAAE;UACJ5N,IAAI,EAAE;QACR;MACF,CAAC;MACDgnB,eAAe,EAAE;QACfoI,cAAc,EAAE,kBAAkB;QAClCxhB,IAAI,EAAE;UACJ5N,IAAI,EAAE;QACR;MACF,CAAC;MACD+nB,KAAK,EAAE;QACLqH,cAAc,EAAE,OAAO;QACvBxhB,IAAI,EAAE;UACJ5N,IAAI,EAAE;QACR;MACF,CAAC;MACDqoB,SAAS,EAAE;QACT+G,cAAc,EAAE,YAAY;QAC5BxhB,IAAI,EAAE;UACJ5N,IAAI,EAAE;QACR;MACF,CAAC;MACDqnB,SAAS,EAAE;QACT+H,cAAc,EAAE,YAAY;QAC5BxhB,IAAI,EAAE;UACJ5N,IAAI,EAAE;QACR;MACF,CAAC;MACD03D,YAAY,EAAE;QACZtoC,cAAc,EAAE,eAAe;QAC/BxhB,IAAI,EAAE;UACJ5N,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAM23D,6EAAyG,GAAG;EACvH/pD,IAAI,EAAE;IACJ5N,IAAI,EAAE,WAAW;IACjBkvB,SAAS,EACP,+EAA+E;IACjFC,eAAe,EAAE;MACfxhB,IAAI,EAAE;QACJyhB,cAAc,EAAE,MAAM;QACtBxhB,IAAI,EAAE;UACJ5N,IAAI,EAAE,UAAU;UAChB+vB,OAAO,EAAE;YACPniB,IAAI,EAAE;cACJ5N,IAAI,EAAE,WAAW;cACjBkvB,SAAS,EAAE;YACb;UACF;QACF;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAMrL,YAAwC,GAAG;EACtDjW,IAAI,EAAE;IACJ5N,IAAI,EAAE,WAAW;IACjBkvB,SAAS,EAAE,cAAc;IACzBC,eAAe,EAAE;MACf0B,SAAS,EAAE;QACTzB,cAAc,EAAE,YAAY;QAC5BxhB,IAAI,EAAE;UACJ5N,IAAI,EAAE;QACR;MACF,CAAC;MACD43D,UAAU,EAAE;QACVxoC,cAAc,EAAE,cAAc;QAC9BxhB,IAAI,EAAE;UACJ5N,IAAI,EAAE;QACR;MACF,CAAC;MACD02D,OAAO,EAAE;QACPtnC,cAAc,EAAE,UAAU;QAC1BxhB,IAAI,EAAE;UACJ5N,IAAI,EAAE;QACR;MACF,CAAC;MACD2lB,UAAU,EAAE;QACVyJ,cAAc,EAAE,aAAa;QAC7BxhB,IAAI,EAAE;UACJ5N,IAAI,EAAE;QACR;MACF,CAAC;MACDg1D,WAAW,EAAE;QACX5lC,cAAc,EAAE,cAAc;QAC9BxhB,IAAI,EAAE;UACJ5N,IAAI,EAAE;QACR;MACF,CAAC;MACDwiD,QAAQ,EAAE;QACRpzB,cAAc,EAAE,UAAU;QAC1BxhB,IAAI,EAAE;UACJ5N,IAAI,EAAE;QACR;MACF,CAAC;MACDwB,MAAM,EAAE;QACN4tB,cAAc,EAAE,QAAQ;QACxBxhB,IAAI,EAAE;UACJ5N,IAAI,EAAE;QACR;MACF,CAAC;MACD63D,UAAU,EAAE;QACVzoC,cAAc,EAAE,aAAa;QAC7BxhB,IAAI,EAAE;UACJ5N,IAAI,EAAE,YAAY;UAClB0H,KAAK,EAAE;YAAEkG,IAAI,EAAE;cAAE5N,IAAI,EAAE;YAAM;UAAE;QACjC;MACF,CAAC;MACD83D,QAAQ,EAAE;QACR1oC,cAAc,EAAE,WAAW;QAC3BxhB,IAAI,EAAE;UACJ5N,IAAI,EAAE;QACR;MACF,CAAC;MACD+3D,UAAU,EAAE;QACV3oC,cAAc,EAAE,aAAa;QAC7BxhB,IAAI,EAAE;UACJ5N,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAMg4D,2EAAuG,GAAG;EACrHpqD,IAAI,EAAE;IACJ5N,IAAI,EAAE,WAAW;IACjBkvB,SAAS,EACP,6EAA6E;IAC/EC,eAAe,EAAE;MACfxhB,IAAI,EAAE;QACJyhB,cAAc,EAAE,MAAM;QACtBxhB,IAAI,EAAE;UACJ5N,IAAI,EAAE,UAAU;UAChB+vB,OAAO,EAAE;YACPniB,IAAI,EAAE;cACJ5N,IAAI,EAAE,WAAW;cACjBkvB,SAAS,EAAE;YACb;UACF;QACF;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAM+oC,WAAuC,GAAG;EACrDrqD,IAAI,EAAE;IACJ5N,IAAI,EAAE,WAAW;IACjBkvB,SAAS,EAAE,aAAa;IACxBC,eAAe,EAAE;MACflB,IAAI,EAAE;QACJmB,cAAc,EAAE,MAAM;QACtBxhB,IAAI,EAAE;UACJ5N,IAAI,EAAE,UAAU;UAChB+vB,OAAO,EAAE;YACPniB,IAAI,EAAE;cACJ5N,IAAI,EAAE;YACR;UACF;QACF;MACF,CAAC;MACD6wB,SAAS,EAAE;QACTzB,cAAc,EAAE,YAAY;QAC5BxhB,IAAI,EAAE;UACJ5N,IAAI,EAAE;QACR;MACF,CAAC;MACD43D,UAAU,EAAE;QACVxoC,cAAc,EAAE,cAAc;QAC9BxhB,IAAI,EAAE;UACJ5N,IAAI,EAAE;QACR;MACF,CAAC;MACD02D,OAAO,EAAE;QACPtnC,cAAc,EAAE,UAAU;QAC1BxhB,IAAI,EAAE;UACJ5N,IAAI,EAAE;QACR;MACF,CAAC;MACD2lB,UAAU,EAAE;QACVyJ,cAAc,EAAE,aAAa;QAC7BxhB,IAAI,EAAE;UACJ5N,IAAI,EAAE;QACR;MACF,CAAC;MACDg1D,WAAW,EAAE;QACX5lC,cAAc,EAAE,cAAc;QAC9BxhB,IAAI,EAAE;UACJ5N,IAAI,EAAE;QACR;MACF,CAAC;MACD2N,IAAI,EAAE;QACJyhB,cAAc,EAAE,MAAM;QACtBxhB,IAAI,EAAE;UACJ5N,IAAI,EAAE;QACR;MACF,CAAC;MACDk4D,SAAS,EAAE;QACT9oC,cAAc,EAAE,YAAY;QAC5BxhB,IAAI,EAAE;UACJ5N,IAAI,EAAE;QACR;MACF,CAAC;MACDm4D,mBAAmB,EAAE;QACnB/oC,cAAc,EAAE,wBAAwB;QACxCxhB,IAAI,EAAE;UACJ5N,IAAI,EAAE;QACR;MACF,CAAC;MACDo4D,oBAAoB,EAAE;QACpBhpC,cAAc,EAAE,yBAAyB;QACzCxhB,IAAI,EAAE;UACJ5N,IAAI,EAAE;QACR;MACF,CAAC;MACDwB,MAAM,EAAE;QACN4tB,cAAc,EAAE,QAAQ;QACxBxhB,IAAI,EAAE;UACJ5N,IAAI,EAAE;QACR;MACF,CAAC;MACDy1D,MAAM,EAAE;QACNrmC,cAAc,EAAE,SAAS;QACzBxhB,IAAI,EAAE;UACJ5N,IAAI,EAAE;QACR;MACF,CAAC;MACD+3D,UAAU,EAAE;QACV3oC,cAAc,EAAE,aAAa;QAC7BxhB,IAAI,EAAE;UACJ5N,IAAI,EAAE;QACR;MACF,CAAC;MACDq4D,gBAAgB,EAAE;QAChBjpC,cAAc,EAAE,oBAAoB;QACpCslC,QAAQ,EAAE,IAAI;QACd9mD,IAAI,EAAE;UACJ5N,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAMs4D,wEAAoG,GAAG;EAClH1qD,IAAI,EAAE;IACJ5N,IAAI,EAAE,WAAW;IACjBkvB,SAAS,EACP,0EAA0E;IAC5EC,eAAe,EAAE;MACfxhB,IAAI,EAAE;QACJyhB,cAAc,EAAE,MAAM;QACtBxhB,IAAI,EAAE;UACJ5N,IAAI,EAAE,UAAU;UAChB+vB,OAAO,EAAE;YACPniB,IAAI,EAAE;cACJ5N,IAAI,EAAE,WAAW;cACjBkvB,SAAS,EAAE;YACb;UACF;QACF;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAMqpC,SAAqC,GAAG;EACnD3qD,IAAI,EAAE;IACJ5N,IAAI,EAAE,WAAW;IACjBkvB,SAAS,EAAE,WAAW;IACtBC,eAAe,EAAE;MACfqpC,eAAe,EAAE;QACfppC,cAAc,EAAE,kBAAkB;QAClCxhB,IAAI,EAAE;UACJ5N,IAAI,EAAE;QACR;MACF,CAAC;MACDy4D,WAAW,EAAE;QACXrpC,cAAc,EAAE,cAAc;QAC9BxhB,IAAI,EAAE;UACJ5N,IAAI,EAAE;QACR;MACF,CAAC;MACD04D,gBAAgB,EAAE;QAChBtpC,cAAc,EAAE,mBAAmB;QACnCxhB,IAAI,EAAE;UACJ5N,IAAI,EAAE;QACR;MACF,CAAC;MACD24D,SAAS,EAAE;QACTvpC,cAAc,EAAE,YAAY;QAC5BxhB,IAAI,EAAE;UACJ5N,IAAI,EAAE;QACR;MACF,CAAC;MACDwB,MAAM,EAAE;QACN4tB,cAAc,EAAE,QAAQ;QACxBxhB,IAAI,EAAE;UACJ5N,IAAI,EAAE;QACR;MACF,CAAC;MACD44D,cAAc,EAAE;QACdxpC,cAAc,EAAE,iBAAiB;QACjCxhB,IAAI,EAAE;UACJ5N,IAAI,EAAE;QACR;MACF,CAAC;MACD64D,YAAY,EAAE;QACZzpC,cAAc,EAAE,eAAe;QAC/BxhB,IAAI,EAAE;UACJ5N,IAAI,EAAE;QACR;MACF,CAAC;MACD84D,YAAY,EAAE;QACZ1pC,cAAc,EAAE,eAAe;QAC/BxhB,IAAI,EAAE;UACJ5N,IAAI,EAAE;QACR;MACF,CAAC;MACD+4D,cAAc,EAAE;QACd3pC,cAAc,EAAE,iBAAiB;QACjCxhB,IAAI,EAAE;UACJ5N,IAAI,EAAE;QACR;MACF,CAAC;MACDg5D,iBAAiB,EAAE;QACjB5pC,cAAc,EAAE,oBAAoB;QACpCxhB,IAAI,EAAE;UACJ5N,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAMi5D,wEAAoG,GAAG;EAClHrrD,IAAI,EAAE;IACJ5N,IAAI,EAAE,WAAW;IACjBkvB,SAAS,EACP,0EAA0E;IAC5EC,eAAe,EAAE;MACfxhB,IAAI,EAAE;QACJyhB,cAAc,EAAE,MAAM;QACtBxhB,IAAI,EAAE;UACJ5N,IAAI,EAAE,UAAU;UAChB+vB,OAAO,EAAE;YACPniB,IAAI,EAAE;cACJ5N,IAAI,EAAE,WAAW;cACjBkvB,SAAS,EAAE;YACb;UACF;QACF;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAMoB,gBAAoC,GAAG;EAClD1iB,IAAI,EAAE;IACJ5N,IAAI,EAAE,WAAW;IACjBkvB,SAAS,EAAE,UAAU;IACrBC,eAAe,EAAE;MACfM,WAAW,EAAE;QACXL,cAAc,EAAE,aAAa;QAC7BxhB,IAAI,EAAE;UACJ5N,IAAI,EAAE;QACR;MACF,CAAC;MACD0Q,IAAI,EAAE;QACJ0e,cAAc,EAAE,MAAM;QACtBxhB,IAAI,EAAE;UACJ5N,IAAI,EAAE;QACR;MACF,CAAC;MACDwB,MAAM,EAAE;QACN4tB,cAAc,EAAE,QAAQ;QACxBxhB,IAAI,EAAE;UACJ5N,IAAI,EAAE;QACR;MACF,CAAC;MACDiwB,IAAI,EAAE;QACJb,cAAc,EAAE,MAAM;QACtBxhB,IAAI,EAAE;UACJ5N,IAAI,EAAE;QACR;MACF,CAAC;MACDwvB,KAAK,EAAE;QACLJ,cAAc,EAAE,OAAO;QACvBxhB,IAAI,EAAE;UACJ5N,IAAI,EAAE;QACR;MACF,CAAC;MACD8Q,KAAK,EAAE;QACLse,cAAc,EAAE,OAAO;QACvBxhB,IAAI,EAAE;UACJ5N,IAAI,EAAE;QACR;MACF,CAAC;MACD2vB,GAAG,EAAE;QACHP,cAAc,EAAE,KAAK;QACrBxhB,IAAI,EAAE;UACJ5N,IAAI,EAAE,UAAU;UAChB+vB,OAAO,EAAE;YACPniB,IAAI,EAAE;cACJ5N,IAAI,EAAE;YACR;UACF;QACF;MACF,CAAC;MACDsvB,QAAQ,EAAE;QACRF,cAAc,EAAE,WAAW;QAC3BxhB,IAAI,EAAE;UACJ5N,IAAI,EAAE;QACR;MACF,CAAC;MACDuvB,WAAW,EAAE;QACXH,cAAc,EAAE,eAAe;QAC/BxhB,IAAI,EAAE;UACJ5N,IAAI,EAAE;QACR;MACF,CAAC;MACDqnB,SAAS,EAAE;QACT+H,cAAc,EAAE,YAAY;QAC5BxhB,IAAI,EAAE;UACJ5N,IAAI,EAAE;QACR;MACF,CAAC;MACD0vB,MAAM,EAAE;QACNN,cAAc,EAAE,QAAQ;QACxBxhB,IAAI,EAAE;UACJ5N,IAAI,EAAE;QACR;MACF,CAAC;MACDgwB,IAAI,EAAE;QACJZ,cAAc,EAAE,MAAM;QACtBxhB,IAAI,EAAE;UACJ5N,IAAI,EAAE;QACR;MACF,CAAC;MACDmC,OAAO,EAAE;QACPitB,cAAc,EAAE,SAAS;QACzBxhB,IAAI,EAAE;UACJ5N,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAMk5D,2FAAuH,GAAG;EACrItrD,IAAI,EAAE;IACJ5N,IAAI,EAAE,WAAW;IACjBkvB,SAAS,EACP,6FAA6F;IAC/FC,eAAe,EAAE;MACfxhB,IAAI,EAAE;QACJyhB,cAAc,EAAE,MAAM;QACtBxhB,IAAI,EAAE;UACJ5N,IAAI,EAAE,UAAU;UAChB+vB,OAAO,EAAE;YACPniB,IAAI,EAAE;cACJ5N,IAAI,EAAE,WAAW;cACjBkvB,SAAS,EAAE;YACb;UACF;QACF;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAMiqC,UAAsC,GAAG;EACpDvrD,IAAI,EAAE;IACJ5N,IAAI,EAAE,WAAW;IACjBkvB,SAAS,EAAE,YAAY;IACvBC,eAAe,EAAE;MACfze,IAAI,EAAE;QACJ0e,cAAc,EAAE,MAAM;QACtBxhB,IAAI,EAAE;UACJ5N,IAAI,EAAE;QACR;MACF,CAAC;MACDwB,MAAM,EAAE;QACN4tB,cAAc,EAAE,QAAQ;QACxBxhB,IAAI,EAAE;UACJ5N,IAAI,EAAE;QACR;MACF,CAAC;MACDo5D,eAAe,EAAE;QACfhqC,cAAc,EAAE,mBAAmB;QACnCxhB,IAAI,EAAE;UACJ5N,IAAI,EAAE;QACR;MACF,CAAC;MACDkwB,OAAO,EAAE;QACPd,cAAc,EAAE,UAAU;QAC1BxhB,IAAI,EAAE;UACJ5N,IAAI,EAAE,UAAU;UAChB+vB,OAAO,EAAE;YACPniB,IAAI,EAAE;cACJ5N,IAAI,EAAE;YACR;UACF;QACF;MACF,CAAC;MACDsvB,QAAQ,EAAE;QACRF,cAAc,EAAE,WAAW;QAC3BxhB,IAAI,EAAE;UACJ5N,IAAI,EAAE;QACR;MACF,CAAC;MACDuvB,WAAW,EAAE;QACXH,cAAc,EAAE,eAAe;QAC/BxhB,IAAI,EAAE;UACJ5N,IAAI,EAAE;QACR;MACF,CAAC;MACDqnB,SAAS,EAAE;QACT+H,cAAc,EAAE,YAAY;QAC5BxhB,IAAI,EAAE;UACJ5N,IAAI,EAAE;QACR;MACF,CAAC;MACDgwB,IAAI,EAAE;QACJZ,cAAc,EAAE,MAAM;QACtBxhB,IAAI,EAAE;UACJ5N,IAAI,EAAE;QACR;MACF,CAAC;MACDq5D,iBAAiB,EAAE;QACjBjqC,cAAc,EAAE,oBAAoB;QACpCxhB,IAAI,EAAE;UACJ5N,IAAI,EAAE;QACR;MACF,CAAC;MACDmC,OAAO,EAAE;QACPitB,cAAc,EAAE,SAAS;QACzBxhB,IAAI,EAAE;UACJ5N,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAMs5D,iFAA6G,GAAG;EAC3H1rD,IAAI,EAAE;IACJ5N,IAAI,EAAE,WAAW;IACjBkvB,SAAS,EACP,mFAAmF;IACrFC,eAAe,EAAE;MACfxhB,IAAI,EAAE;QACJyhB,cAAc,EAAE,MAAM;QACtBxhB,IAAI,EAAE;UACJ5N,IAAI,EAAE,UAAU;UAChB+vB,OAAO,EAAE;YACPniB,IAAI,EAAE;cACJ5N,IAAI,EAAE,WAAW;cACjBkvB,SAAS,EAAE;YACb;UACF;QACF;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAM4B,UAA8B,GAAG;EAC5CljB,IAAI,EAAE;IACJ5N,IAAI,EAAE,WAAW;IACjBkvB,SAAS,EAAE,IAAI;IACfC,eAAe,EAAE;MACf0B,SAAS,EAAE;QACTzB,cAAc,EAAE,YAAY;QAC5BxhB,IAAI,EAAE;UACJ5N,IAAI,EAAE;QACR;MACF,CAAC;MACD4wB,WAAW,EAAE;QACXxB,cAAc,EAAE,cAAc;QAC9BxhB,IAAI,EAAE;UACJ5N,IAAI,EAAE;QACR;MACF,CAAC;MACD0Q,IAAI,EAAE;QACJ0e,cAAc,EAAE,MAAM;QACtBxhB,IAAI,EAAE;UACJ5N,IAAI,EAAE;QACR;MACF,CAAC;MACD+3D,UAAU,EAAE;QACV3oC,cAAc,EAAE,aAAa;QAC7BxhB,IAAI,EAAE;UACJ5N,IAAI,EAAE;QACR;MACF,CAAC;MACD22D,SAAS,EAAE;QACTvnC,cAAc,EAAE,YAAY;QAC5BxhB,IAAI,EAAE;UACJ5N,IAAI,EAAE;QACR;MACF,CAAC;MACDukB,UAAU,EAAE;QACV6K,cAAc,EAAE,YAAY;QAC5BxhB,IAAI,EAAE;UACJ5N,IAAI,EAAE,UAAU;UAChB+vB,OAAO,EAAE;YACPniB,IAAI,EAAE;cACJ5N,IAAI,EAAE;YACR;UACF;QACF;MACF,CAAC;MACDiV,EAAE,EAAE;QACFma,cAAc,EAAE,IAAI;QACpBxhB,IAAI,EAAE;UACJ5N,IAAI,EAAE,YAAY;UAClB0H,KAAK,EAAE;YAAEkG,IAAI,EAAE;cAAE5N,IAAI,EAAE;YAAM;UAAE;QACjC;MACF,CAAC;MACDu2D,OAAO,EAAE;QACPnnC,cAAc,EAAE,UAAU;QAC1BxhB,IAAI,EAAE;UACJ5N,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAMu5D,oEAAgG,GAAG;EAC9G3rD,IAAI,EAAE;IACJ5N,IAAI,EAAE,WAAW;IACjBkvB,SAAS,EACP,sEAAsE;IACxEC,eAAe,EAAE;MACfxhB,IAAI,EAAE;QACJyhB,cAAc,EAAE,MAAM;QACtBxhB,IAAI,EAAE;UACJ5N,IAAI,EAAE,UAAU;UAChB+vB,OAAO,EAAE;YACPniB,IAAI,EAAE;cACJ5N,IAAI,EAAE,WAAW;cACjBkvB,SAAS,EAAE;YACb;UACF;QACF;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAM1hB,IAAgC,GAAG;EAC9CI,IAAI,EAAE;IACJ5N,IAAI,EAAE,WAAW;IACjBkvB,SAAS,EAAE,MAAM;IACjBC,eAAe,EAAE;MACf5J,MAAM,EAAE;QACN6J,cAAc,EAAE,QAAQ;QACxBxhB,IAAI,EAAE;UACJ5N,IAAI,EAAE;QACR;MACF,CAAC;MACD0Q,IAAI,EAAE;QACJ0e,cAAc,EAAE,MAAM;QACtBxhB,IAAI,EAAE;UACJ5N,IAAI,EAAE;QACR;MACF,CAAC;MACDiwB,IAAI,EAAE;QACJb,cAAc,EAAE,MAAM;QACtBxhB,IAAI,EAAE;UACJ5N,IAAI,EAAE,WAAW;UACjBkvB,SAAS,EAAE;QACb;MACF,CAAC;MACDkyB,QAAQ,EAAE;QACRhyB,cAAc,EAAE,UAAU;QAC1BxhB,IAAI,EAAE;UACJ5N,IAAI,EAAE,UAAU;UAChB+vB,OAAO,EAAE;YACPniB,IAAI,EAAE;cACJ5N,IAAI,EAAE,WAAW;cACjBkvB,SAAS,EAAE;YACb;UACF;QACF;MACF,CAAC;MACDtK,MAAM,EAAE;QACNwK,cAAc,EAAE,QAAQ;QACxBxhB,IAAI,EAAE;UACJ5N,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAMw5D,QAAoC,GAAG;EAClD5rD,IAAI,EAAE;IACJ5N,IAAI,EAAE,WAAW;IACjBkvB,SAAS,EAAE,UAAU;IACrBC,eAAe,EAAE;MACfsqC,UAAU,EAAE;QACVrqC,cAAc,EAAE,aAAa;QAC7BxhB,IAAI,EAAE;UACJ5N,IAAI,EAAE;QACR;MACF,CAAC;MACD05D,MAAM,EAAE;QACNtqC,cAAc,EAAE,QAAQ;QACxBxhB,IAAI,EAAE;UACJ5N,IAAI,EAAE,UAAU;UAChB+vB,OAAO,EAAE;YACPniB,IAAI,EAAE;cACJ5N,IAAI,EAAE;YACR;UACF;QACF;MACF,CAAC;MACD25D,YAAY,EAAE;QACZvqC,cAAc,EAAE,eAAe;QAC/BxhB,IAAI,EAAE;UACJ5N,IAAI,EAAE;QACR;MACF,CAAC;MACD45D,SAAS,EAAE;QACTxqC,cAAc,EAAE,WAAW;QAC3BxhB,IAAI,EAAE;UACJ5N,IAAI,EAAE,WAAW;UACjBkvB,SAAS,EAAE;QACb;MACF,CAAC;MACDpR,QAAQ,EAAE;QACRsR,cAAc,EAAE,UAAU;QAC1BxhB,IAAI,EAAE;UACJ5N,IAAI,EAAE,WAAW;UACjBkvB,SAAS,EAAE;QACb;MACF,CAAC;MACD2qC,SAAS,EAAE;QACTzqC,cAAc,EAAE,WAAW;QAC3BxhB,IAAI,EAAE;UACJ5N,IAAI,EAAE,UAAU;UAChB+vB,OAAO,EAAE;YACPniB,IAAI,EAAE;cACJ5N,IAAI,EAAE;YACR;UACF;QACF;MACF,CAAC;MACD6oD,OAAO,EAAE;QACPz5B,cAAc,EAAE,SAAS;QACzBxhB,IAAI,EAAE;UACJ5N,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAM85D,iBAA6C,GAAG;EAC3DlsD,IAAI,EAAE;IACJ5N,IAAI,EAAE,WAAW;IACjBkvB,SAAS,EAAE,mBAAmB;IAC9BC,eAAe,EAAE;MACfotB,OAAO,EAAE;QACPntB,cAAc,EAAE,SAAS;QACzBxhB,IAAI,EAAE;UACJ5N,IAAI,EAAE;QACR;MACF,CAAC;MACD+5D,QAAQ,EAAE;QACR3qC,cAAc,EAAE,UAAU;QAC1BxhB,IAAI,EAAE;UACJ5N,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAMg6D,gBAA4C,GAAG;EAC1DpsD,IAAI,EAAE;IACJ5N,IAAI,EAAE,WAAW;IACjBkvB,SAAS,EAAE,kBAAkB;IAC7BC,eAAe,EAAE;MACf8qC,aAAa,EAAE;QACb7qC,cAAc,EAAE,gBAAgB;QAChCxhB,IAAI,EAAE;UACJ5N,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAMk6D,OAAmC,GAAG;EACjDtsD,IAAI,EAAE;IACJ5N,IAAI,EAAE,WAAW;IACjBkvB,SAAS,EAAE,SAAS;IACpBC,eAAe,EAAE;MACf5J,MAAM,EAAE;QACN6J,cAAc,EAAE,QAAQ;QACxBxhB,IAAI,EAAE;UACJ5N,IAAI,EAAE;QACR;MACF,CAAC;MACDiwB,IAAI,EAAE;QACJb,cAAc,EAAE,MAAM;QACtBxhB,IAAI,EAAE;UACJ5N,IAAI,EAAE,WAAW;UACjBkvB,SAAS,EAAE;QACb;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAMirC,WAAuC,GAAG;EACrDvsD,IAAI,EAAE;IACJ5N,IAAI,EAAE,WAAW;IACjBkvB,SAAS,EAAE,aAAa;IACxBC,eAAe,EAAE;MACfirC,UAAU,EAAE;QACVhrC,cAAc,EAAE,aAAa;QAC7BxhB,IAAI,EAAE;UACJ5N,IAAI,EAAE;QACR;MACF,CAAC;MACDq6D,IAAI,EAAE;QACJjrC,cAAc,EAAE,MAAM;QACtBxhB,IAAI,EAAE;UACJ5N,IAAI,EAAE,UAAU;UAChB+vB,OAAO,EAAE;YACPniB,IAAI,EAAE;cACJ5N,IAAI,EAAE;YACR;UACF;QACF;MACF,CAAC;MACDs6D,OAAO,EAAE;QACPlrC,cAAc,EAAE,UAAU;QAC1BxhB,IAAI,EAAE;UACJ5N,IAAI,EAAE,WAAW;UACjBkvB,SAAS,EAAE;QACb;MACF,CAAC;MACDlvB,IAAI,EAAE;QACJovB,cAAc,EAAE,MAAM;QACtBxhB,IAAI,EAAE;UACJ5N,IAAI,EAAE;QACR;MACF,CAAC;MACDohD,QAAQ,EAAE;QACRhyB,cAAc,EAAE,UAAU;QAC1BxhB,IAAI,EAAE;UACJ5N,IAAI,EAAE,WAAW;UACjBkvB,SAAS,EAAE;QACb;MACF,CAAC;MACDtK,MAAM,EAAE;QACNwK,cAAc,EAAE,QAAQ;QACxBxhB,IAAI,EAAE;UACJ5N,IAAI,EAAE;QACR;MACF,CAAC;MACDu2D,OAAO,EAAE;QACPnnC,cAAc,EAAE,UAAU;QAC1BxhB,IAAI,EAAE;UACJ5N,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAMu6D,kBAA8C,GAAG;EAC5D3sD,IAAI,EAAE;IACJ5N,IAAI,EAAE,WAAW;IACjBkvB,SAAS,EAAE,oBAAoB;IAC/BC,eAAe,EAAE;MACf0B,SAAS,EAAE;QACTzB,cAAc,EAAE,YAAY;QAC5BxhB,IAAI,EAAE;UACJ5N,IAAI,EAAE;QACR;MACF,CAAC;MACD4wB,WAAW,EAAE;QACXxB,cAAc,EAAE,cAAc;QAC9BxhB,IAAI,EAAE;UACJ5N,IAAI,EAAE;QACR;MACF,CAAC;MACD0Q,IAAI,EAAE;QACJ0e,cAAc,EAAE,MAAM;QACtBxhB,IAAI,EAAE;UACJ5N,IAAI,EAAE;QACR;MACF,CAAC;MACD+3D,UAAU,EAAE;QACV3oC,cAAc,EAAE,aAAa;QAC7BxhB,IAAI,EAAE;UACJ5N,IAAI,EAAE;QACR;MACF,CAAC;MACD22D,SAAS,EAAE;QACTvnC,cAAc,EAAE,YAAY;QAC5BxhB,IAAI,EAAE;UACJ5N,IAAI,EAAE;QACR;MACF,CAAC;MACDukB,UAAU,EAAE;QACV6K,cAAc,EAAE,YAAY;QAC5BxhB,IAAI,EAAE;UACJ5N,IAAI,EAAE,UAAU;UAChB+vB,OAAO,EAAE;YACPniB,IAAI,EAAE;cACJ5N,IAAI,EAAE;YACR;UACF;QACF;MACF,CAAC;MACDiV,EAAE,EAAE;QACFma,cAAc,EAAE,IAAI;QACpBxhB,IAAI,EAAE;UACJ5N,IAAI,EAAE,YAAY;UAClB0H,KAAK,EAAE;YAAEkG,IAAI,EAAE;cAAE5N,IAAI,EAAE;YAAM;UAAE;QACjC;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAMw6D,0EAAsG,GAAG;EACpH5sD,IAAI,EAAE;IACJ5N,IAAI,EAAE,WAAW;IACjBkvB,SAAS,EACP,4EAA4E;IAC9EC,eAAe,EAAE;MACfxhB,IAAI,EAAE;QACJyhB,cAAc,EAAE,MAAM;QACtBxhB,IAAI,EAAE;UACJ5N,IAAI,EAAE,UAAU;UAChB+vB,OAAO,EAAE;YACPniB,IAAI,EAAE;cACJ5N,IAAI,EAAE,WAAW;cACjBkvB,SAAS,EAAE;YACb;UACF;QACF;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAMurC,kGAA8H,GAAG;EAC5I7sD,IAAI,EAAE;IACJ5N,IAAI,EAAE,WAAW;IACjBkvB,SAAS,EACP,oGAAoG;IACtGC,eAAe,EAAE;MACfvK,MAAM,EAAE;QACNwK,cAAc,EAAE,QAAQ;QACxBxhB,IAAI,EAAE;UACJ5N,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAM06D,SAAqC,GAAG;EACnD9sD,IAAI,EAAE;IACJ5N,IAAI,EAAE,WAAW;IACjBkvB,SAAS,EAAE,WAAW;IACtBC,eAAe,EAAE;MACf0B,SAAS,EAAE;QACTzB,cAAc,EAAE,YAAY;QAC5BxhB,IAAI,EAAE;UACJ5N,IAAI,EAAE;QACR;MACF,CAAC;MACDwB,MAAM,EAAE;QACN4tB,cAAc,EAAE,QAAQ;QACxBxhB,IAAI,EAAE;UACJ5N,IAAI,EAAE;QACR;MACF,CAAC;MACDiV,EAAE,EAAE;QACFma,cAAc,EAAE,IAAI;QACpBxhB,IAAI,EAAE;UACJ5N,IAAI,EAAE,YAAY;UAClB0H,KAAK,EAAE;YAAEkG,IAAI,EAAE;cAAE5N,IAAI,EAAE;YAAM;UAAE;QACjC;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAM26D,uEAAmG,GAAG;EACjH/sD,IAAI,EAAE;IACJ5N,IAAI,EAAE,WAAW;IACjBkvB,SAAS,EACP,yEAAyE;IAC3EC,eAAe,EAAE;MACf5J,MAAM,EAAE;QACN6J,cAAc,EAAE,QAAQ;QACxBxhB,IAAI,EAAE;UACJ5N,IAAI,EAAE,YAAY;UAClB0H,KAAK,EAAE;YAAEkG,IAAI,EAAE;cAAE5N,IAAI,EAAE;YAAM;UAAE;QACjC;MACF,CAAC;MACD46D,QAAQ,EAAE;QACRxrC,cAAc,EAAE,UAAU;QAC1BxhB,IAAI,EAAE;UACJ5N,IAAI,EAAE,YAAY;UAClB0H,KAAK,EAAE;YAAEkG,IAAI,EAAE;cAAE5N,IAAI,EAAE;YAAM;UAAE;QACjC;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAM66D,YAAwC,GAAG;EACtDjtD,IAAI,EAAE;IACJ5N,IAAI,EAAE,WAAW;IACjBkvB,SAAS,EAAE,cAAc;IACzBC,eAAe,EAAE;MACf0B,SAAS,EAAE;QACTzB,cAAc,EAAE,YAAY;QAC5BxhB,IAAI,EAAE;UACJ5N,IAAI,EAAE;QACR;MACF,CAAC;MACDwB,MAAM,EAAE;QACN4tB,cAAc,EAAE,QAAQ;QACxBxhB,IAAI,EAAE;UACJ5N,IAAI,EAAE;QACR;MACF,CAAC;MACDiV,EAAE,EAAE;QACFma,cAAc,EAAE,IAAI;QACpBxhB,IAAI,EAAE;UACJ5N,IAAI,EAAE,YAAY;UAClB0H,KAAK,EAAE;YAAEkG,IAAI,EAAE;cAAE5N,IAAI,EAAE;YAAM;UAAE;QACjC;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAM86D,UAAsC,GAAG;EACpDltD,IAAI,EAAE;IACJ5N,IAAI,EAAE,WAAW;IACjBkvB,SAAS,EAAE,YAAY;IACvBC,eAAe,EAAE;MACf0B,SAAS,EAAE;QACTzB,cAAc,EAAE,YAAY;QAC5BxhB,IAAI,EAAE;UACJ5N,IAAI,EAAE;QACR;MACF,CAAC;MACDwB,MAAM,EAAE;QACN4tB,cAAc,EAAE,QAAQ;QACxBxhB,IAAI,EAAE;UACJ5N,IAAI,EAAE;QACR;MACF,CAAC;MACDiV,EAAE,EAAE;QACFma,cAAc,EAAE,IAAI;QACpBxhB,IAAI,EAAE;UACJ5N,IAAI,EAAE,YAAY;UAClB0H,KAAK,EAAE;YAAEkG,IAAI,EAAE;cAAE5N,IAAI,EAAE;YAAM;UAAE;QACjC;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAMikB,MAAkC,GAAG;EAChDrW,IAAI,EAAE;IACJ5N,IAAI,EAAE,WAAW;IACjBkvB,SAAS,EAAE,QAAQ;IACnBC,eAAe,EAAE;MACf5J,MAAM,EAAE;QACN6J,cAAc,EAAE,QAAQ;QACxBC,QAAQ,EAAE,IAAI;QACdzhB,IAAI,EAAE;UACJ5N,IAAI,EAAE;QACR;MACF,CAAC;MACDy5D,UAAU,EAAE;QACVrqC,cAAc,EAAE,aAAa;QAC7BC,QAAQ,EAAE,IAAI;QACdzhB,IAAI,EAAE;UACJ5N,IAAI,EAAE;QACR;MACF,CAAC;MACD25D,YAAY,EAAE;QACZvqC,cAAc,EAAE,eAAe;QAC/BC,QAAQ,EAAE,IAAI;QACdzhB,IAAI,EAAE;UACJ5N,IAAI,EAAE;QACR;MACF,CAAC;MACD+6D,OAAO,EAAE;QACP3rC,cAAc,EAAE,SAAS;QACzBC,QAAQ,EAAE,IAAI;QACdzhB,IAAI,EAAE;UACJ5N,IAAI,EAAE,UAAU;UAChB+vB,OAAO,EAAE;YACPniB,IAAI,EAAE;cACJ5N,IAAI,EAAE,WAAW;cACjBkvB,SAAS,EAAE;YACb;UACF;QACF;MACF,CAAC;MACDilC,MAAM,EAAE;QACN/kC,cAAc,EAAE,QAAQ;QACxBC,QAAQ,EAAE,IAAI;QACdzhB,IAAI,EAAE;UACJ5N,IAAI,EAAE;QACR;MACF,CAAC;MACDkmB,QAAQ,EAAE;QACRkJ,cAAc,EAAE,WAAW;QAC3BC,QAAQ,EAAE,IAAI;QACdzhB,IAAI,EAAE;UACJ5N,IAAI,EAAE;QACR;MACF,CAAC;MACDg7D,QAAQ,EAAE;QACR5rC,cAAc,EAAE,UAAU;QAC1BC,QAAQ,EAAE,IAAI;QACdzhB,IAAI,EAAE;UACJ5N,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAMi7D,iBAA6C,GAAG;EAC3DrtD,IAAI,EAAE;IACJ5N,IAAI,EAAE,WAAW;IACjBkvB,SAAS,EAAE,mBAAmB;IAC9BC,eAAe,EAAE;MACf9I,KAAK,EAAE;QACL+I,cAAc,EAAE,OAAO;QACvBC,QAAQ,EAAE,IAAI;QACdzhB,IAAI,EAAE;UACJ5N,IAAI,EAAE;QACR;MACF,CAAC;MACD2mB,QAAQ,EAAE;QACRyI,cAAc,EAAE,UAAU;QAC1BC,QAAQ,EAAE,IAAI;QACdzhB,IAAI,EAAE;UACJ5N,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAMk7D,qEAAiG,GAAG;EAC/GttD,IAAI,EAAE;IACJ5N,IAAI,EAAE,WAAW;IACjBkvB,SAAS,EACP,uEAAuE;IACzEC,eAAe,EAAE;MACfxhB,IAAI,EAAE;QACJyhB,cAAc,EAAE,MAAM;QACtBxhB,IAAI,EAAE;UACJ5N,IAAI,EAAE,UAAU;UAChB+vB,OAAO,EAAE;YACPniB,IAAI,EAAE;cACJ5N,IAAI,EAAE,WAAW;cACjBkvB,SAAS,EAAE;YACb;UACF;QACF;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAMiG,cAAkC,GAAG;EAChDvnB,IAAI,EAAE;IACJ5N,IAAI,EAAE,WAAW;IACjBkvB,SAAS,EAAE,QAAQ;IACnBC,eAAe,EAAE;MACfgsC,aAAa,EAAE;QACb/rC,cAAc,EAAE,iBAAiB;QACjCxhB,IAAI,EAAE;UACJ5N,IAAI,EAAE,WAAW;UACjBkvB,SAAS,EAAE;QACb;MACF,CAAC;MACDksC,gBAAgB,EAAE;QAChBhsC,cAAc,EAAE,qBAAqB;QACrCC,QAAQ,EAAE,IAAI;QACdzhB,IAAI,EAAE;UACJ5N,IAAI,EAAE;QACR;MACF,CAAC;MACDq7D,SAAS,EAAE;QACTjsC,cAAc,EAAE,YAAY;QAC5BC,QAAQ,EAAE,IAAI;QACdzhB,IAAI,EAAE;UACJ5N,IAAI,EAAE;QACR;MACF,CAAC;MACDs7D,gBAAgB,EAAE;QAChBlsC,cAAc,EAAE,oBAAoB;QACpCC,QAAQ,EAAE,IAAI;QACdzhB,IAAI,EAAE;UACJ5N,IAAI,EAAE;QACR;MACF,CAAC;MACDu7D,WAAW,EAAE;QACXnsC,cAAc,EAAE,cAAc;QAC9BC,QAAQ,EAAE,IAAI;QACdzhB,IAAI,EAAE;UACJ5N,IAAI,EAAE;QACR;MACF,CAAC;MACDw7D,SAAS,EAAE;QACTpsC,cAAc,EAAE,YAAY;QAC5BC,QAAQ,EAAE,IAAI;QACdzhB,IAAI,EAAE;UACJ5N,IAAI,EAAE;QACR;MACF,CAAC;MACDy7D,UAAU,EAAE;QACVrsC,cAAc,EAAE,aAAa;QAC7BC,QAAQ,EAAE,IAAI;QACdzhB,IAAI,EAAE;UACJ5N,IAAI,EAAE;QACR;MACF,CAAC;MACD07D,UAAU,EAAE;QACVtsC,cAAc,EAAE,cAAc;QAC9BC,QAAQ,EAAE,IAAI;QACdzhB,IAAI,EAAE;UACJ5N,IAAI,EAAE;QACR;MACF,CAAC;MACD27D,UAAU,EAAE;QACVvsC,cAAc,EAAE,aAAa;QAC7BC,QAAQ,EAAE,IAAI;QACdzhB,IAAI,EAAE;UACJ5N,IAAI,EAAE;QACR;MACF,CAAC;MACD47D,UAAU,EAAE;QACVxsC,cAAc,EAAE,aAAa;QAC7BC,QAAQ,EAAE,IAAI;QACdzhB,IAAI,EAAE;UACJ5N,IAAI,EAAE;QACR;MACF,CAAC;MACD67D,YAAY,EAAE;QACZzsC,cAAc,EAAE,eAAe;QAC/BC,QAAQ,EAAE,IAAI;QACdzhB,IAAI,EAAE;UACJ5N,IAAI,EAAE;QACR;MACF,CAAC;MACD81B,YAAY,EAAE;QACZ1G,cAAc,EAAE,eAAe;QAC/BC,QAAQ,EAAE,IAAI;QACdzhB,IAAI,EAAE;UACJ5N,IAAI,EAAE;QACR;MACF,CAAC;MACD87D,WAAW,EAAE;QACX1sC,cAAc,EAAE,cAAc;QAC9BC,QAAQ,EAAE,IAAI;QACdzhB,IAAI,EAAE;UACJ5N,IAAI,EAAE;QACR;MACF,CAAC;MACD61B,WAAW,EAAE;QACXzG,cAAc,EAAE,cAAc;QAC9BC,QAAQ,EAAE,IAAI;QACdzhB,IAAI,EAAE;UACJ5N,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAM+7D,mBAA+C,GAAG;EAC7DnuD,IAAI,EAAE;IACJ5N,IAAI,EAAE,WAAW;IACjBkvB,SAAS,EAAE,qBAAqB;IAChCC,eAAe,EAAE;MACf6sC,SAAS,EAAE;QACT5sC,cAAc,EAAE,YAAY;QAC5BC,QAAQ,EAAE,IAAI;QACdzhB,IAAI,EAAE;UACJ5N,IAAI,EAAE;QACR;MACF,CAAC;MACDi8D,cAAc,EAAE;QACd7sC,cAAc,EAAE,iBAAiB;QACjCC,QAAQ,EAAE,IAAI;QACdzhB,IAAI,EAAE;UACJ5N,IAAI,EAAE;QACR;MACF,CAAC;MACDk8D,YAAY,EAAE;QACZ9sC,cAAc,EAAE,eAAe;QAC/BC,QAAQ,EAAE,IAAI;QACdzhB,IAAI,EAAE;UACJ5N,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAMm8D,wEAAoG,GAAG;EAClHvuD,IAAI,EAAE;IACJ5N,IAAI,EAAE,WAAW;IACjBkvB,SAAS,EACP,0EAA0E;IAC5EC,eAAe,EAAE;MACfxhB,IAAI,EAAE;QACJyhB,cAAc,EAAE,MAAM;QACtBxhB,IAAI,EAAE;UACJ5N,IAAI,EAAE,UAAU;UAChB+vB,OAAO,EAAE;YACPniB,IAAI,EAAE;cACJ5N,IAAI,EAAE,WAAW;cACjBkvB,SAAS,EAAE;YACb;UACF;QACF;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAMktC,SAAqC,GAAG;EACnDxuD,IAAI,EAAE;IACJ5N,IAAI,EAAE,WAAW;IACjBkvB,SAAS,EAAE,WAAW;IACtBC,eAAe,EAAE;MACfqpC,eAAe,EAAE;QACfppC,cAAc,EAAE,kBAAkB;QAClCxhB,IAAI,EAAE;UACJ5N,IAAI,EAAE;QACR;MACF,CAAC;MACDy4D,WAAW,EAAE;QACXrpC,cAAc,EAAE,cAAc;QAC9BxhB,IAAI,EAAE;UACJ5N,IAAI,EAAE;QACR;MACF,CAAC;MACD04D,gBAAgB,EAAE;QAChBtpC,cAAc,EAAE,mBAAmB;QACnCxhB,IAAI,EAAE;UACJ5N,IAAI,EAAE;QACR;MACF,CAAC;MACD24D,SAAS,EAAE;QACTvpC,cAAc,EAAE,YAAY;QAC5BxhB,IAAI,EAAE;UACJ5N,IAAI,EAAE;QACR;MACF,CAAC;MACDwB,MAAM,EAAE;QACN4tB,cAAc,EAAE,QAAQ;QACxBxhB,IAAI,EAAE;UACJ5N,IAAI,EAAE;QACR;MACF,CAAC;MACD44D,cAAc,EAAE;QACdxpC,cAAc,EAAE,iBAAiB;QACjCxhB,IAAI,EAAE;UACJ5N,IAAI,EAAE;QACR;MACF,CAAC;MACD64D,YAAY,EAAE;QACZzpC,cAAc,EAAE,eAAe;QAC/BxhB,IAAI,EAAE;UACJ5N,IAAI,EAAE;QACR;MACF,CAAC;MACD84D,YAAY,EAAE;QACZ1pC,cAAc,EAAE,eAAe;QAC/BxhB,IAAI,EAAE;UACJ5N,IAAI,EAAE;QACR;MACF,CAAC;MACD+4D,cAAc,EAAE;QACd3pC,cAAc,EAAE,iBAAiB;QACjCxhB,IAAI,EAAE;UACJ5N,IAAI,EAAE;QACR;MACF,CAAC;MACDg5D,iBAAiB,EAAE;QACjB5pC,cAAc,EAAE,oBAAoB;QACpCxhB,IAAI,EAAE;UACJ5N,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAMq8D,wEAAoG,GAAG;EAClHzuD,IAAI,EAAE;IACJ5N,IAAI,EAAE,WAAW;IACjBkvB,SAAS,EACP,0EAA0E;IAC5EC,eAAe,EAAE;MACfxhB,IAAI,EAAE;QACJyhB,cAAc,EAAE,MAAM;QACtBxhB,IAAI,EAAE;UACJ5N,IAAI,EAAE,UAAU;UAChB+vB,OAAO,EAAE;YACPniB,IAAI,EAAE;cACJ5N,IAAI,EAAE,WAAW;cACjBkvB,SAAS,EAAE;YACb;UACF;QACF;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAMotC,QAAoC,GAAG;EAClD1uD,IAAI,EAAE;IACJ5N,IAAI,EAAE,WAAW;IACjBkvB,SAAS,EAAE,UAAU;IACrBC,eAAe,EAAE;MACfzK,SAAS,EAAE;QACT0K,cAAc,EAAE,YAAY;QAC5BxhB,IAAI,EAAE;UACJ5N,IAAI,EAAE;QACR;MACF,CAAC;MACD+E,MAAM,EAAE;QACNqqB,cAAc,EAAE,QAAQ;QACxBxhB,IAAI,EAAE;UACJ5N,IAAI,EAAE;QACR;MACF,CAAC;MACDwB,MAAM,EAAE;QACN4tB,cAAc,EAAE,QAAQ;QACxBxhB,IAAI,EAAE;UACJ5N,IAAI,EAAE;QACR;MACF,CAAC;MACD6e,IAAI,EAAE;QACJuQ,cAAc,EAAE,MAAM;QACtBxhB,IAAI,EAAE;UACJ5N,IAAI,EAAE;QACR;MACF,CAAC;MACDu8D,MAAM,EAAE;QACNntC,cAAc,EAAE,SAAS;QACzBslC,QAAQ,EAAE,IAAI;QACd9mD,IAAI,EAAE;UACJ5N,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAMw8D,kEAA8F,GAAG;EAC5G5uD,IAAI,EAAE;IACJ5N,IAAI,EAAE,WAAW;IACjBkvB,SAAS,EACP,oEAAoE;IACtEC,eAAe,EAAE;MACfxhB,IAAI,EAAE;QACJyhB,cAAc,EAAE,MAAM;QACtBxhB,IAAI,EAAE;UACJ5N,IAAI,EAAE,UAAU;UAChB+vB,OAAO,EAAE;YACPniB,IAAI,EAAE;cACJ5N,IAAI,EAAE,WAAW;cACjBkvB,SAAS,EAAE;YACb;UACF;QACF;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAMutC,mEAA+F,GAAG;EAC7G7uD,IAAI,EAAE;IACJ5N,IAAI,EAAE,WAAW;IACjBkvB,SAAS,EACP,qEAAqE;IACvEC,eAAe,EAAE;MACfutC,oBAAoB,EAAE;QACpBttC,cAAc,EAAE,yBAAyB;QACzCxhB,IAAI,EAAE;UACJ5N,IAAI,EAAE,YAAY;UAClB0H,KAAK,EAAE;YAAEkG,IAAI,EAAE;cAAE5N,IAAI,EAAE;YAAM;UAAE;QACjC;MACF,CAAC;MACD28D,kBAAkB,EAAE;QAClBvtC,cAAc,EAAE,uBAAuB;QACvCxhB,IAAI,EAAE;UACJ5N,IAAI,EAAE,YAAY;UAClB0H,KAAK,EAAE;YAAEkG,IAAI,EAAE;cAAE5N,IAAI,EAAE;YAAM;UAAE;QACjC;MACF,CAAC;MACD48D,eAAe,EAAE;QACfxtC,cAAc,EAAE,mBAAmB;QACnCxhB,IAAI,EAAE;UACJ5N,IAAI,EAAE,YAAY;UAClB0H,KAAK,EAAE;YAAEkG,IAAI,EAAE;cAAE5N,IAAI,EAAE;YAAM;UAAE;QACjC;MACF,CAAC;MACD68D,gBAAgB,EAAE;QAChBztC,cAAc,EAAE,oBAAoB;QACpCxhB,IAAI,EAAE;UACJ5N,IAAI,EAAE,YAAY;UAClB0H,KAAK,EAAE;YAAEkG,IAAI,EAAE;cAAE5N,IAAI,EAAE;YAAM;UAAE;QACjC;MACF,CAAC;MACD88D,sBAAsB,EAAE;QACtB1tC,cAAc,EAAE,2BAA2B;QAC3CxhB,IAAI,EAAE;UACJ5N,IAAI,EAAE;QACR;MACF,CAAC;MACD+8D,iBAAiB,EAAE;QACjB3tC,cAAc,EAAE,qBAAqB;QACrCxhB,IAAI,EAAE;UACJ5N,IAAI,EAAE,YAAY;UAClB0H,KAAK,EAAE;YAAEkG,IAAI,EAAE;cAAE5N,IAAI,EAAE;YAAM;UAAE;QACjC;MACF,CAAC;MACDg9D,eAAe,EAAE;QACf5tC,cAAc,EAAE,mBAAmB;QACnCxhB,IAAI,EAAE;UACJ5N,IAAI,EAAE,YAAY;UAClB0H,KAAK,EAAE;YAAEkG,IAAI,EAAE;cAAE5N,IAAI,EAAE;YAAM;UAAE;QACjC;MACF,CAAC;MACDi9D,cAAc,EAAE;QACd7tC,cAAc,EAAE,kBAAkB;QAClCxhB,IAAI,EAAE;UACJ5N,IAAI,EAAE,YAAY;UAClB0H,KAAK,EAAE;YAAEkG,IAAI,EAAE;cAAE5N,IAAI,EAAE;YAAM;UAAE;QACjC;MACF,CAAC;MACDk9D,qBAAqB,EAAE;QACrB9tC,cAAc,EAAE,0BAA0B;QAC1CxhB,IAAI,EAAE;UACJ5N,IAAI,EAAE,YAAY;UAClB0H,KAAK,EAAE;YAAEkG,IAAI,EAAE;cAAE5N,IAAI,EAAE;YAAM;UAAE;QACjC;MACF,CAAC;MACDm9D,iBAAiB,EAAE;QACjB/tC,cAAc,EAAE,qBAAqB;QACrCxhB,IAAI,EAAE;UACJ5N,IAAI,EAAE,YAAY;UAClB0H,KAAK,EAAE;YAAEkG,IAAI,EAAE;cAAE5N,IAAI,EAAE;YAAM;UAAE;QACjC;MACF,CAAC;MACDo9D,cAAc,EAAE;QACdhuC,cAAc,EAAE,kBAAkB;QAClCxhB,IAAI,EAAE;UACJ5N,IAAI,EAAE,YAAY;UAClB0H,KAAK,EAAE;YAAEkG,IAAI,EAAE;cAAE5N,IAAI,EAAE;YAAM;UAAE;QACjC;MACF,CAAC;MACDq9D,gBAAgB,EAAE;QAChBjuC,cAAc,EAAE,oBAAoB;QACpCxhB,IAAI,EAAE;UACJ5N,IAAI,EAAE,YAAY;UAClB0H,KAAK,EAAE;YAAEkG,IAAI,EAAE;cAAE5N,IAAI,EAAE;YAAM;UAAE;QACjC;MACF,CAAC;MACDs9D,UAAU,EAAE;QACVluC,cAAc,EAAE,cAAc;QAC9BxhB,IAAI,EAAE;UACJ5N,IAAI,EAAE,YAAY;UAClB0H,KAAK,EAAE;YAAEkG,IAAI,EAAE;cAAE5N,IAAI,EAAE;YAAM;UAAE;QACjC;MACF,CAAC;MACDigD,QAAQ,EAAE;QACR7wB,cAAc,EAAE,YAAY;QAC5BxhB,IAAI,EAAE;UACJ5N,IAAI,EAAE,YAAY;UAClB0H,KAAK,EAAE;YAAEkG,IAAI,EAAE;cAAE5N,IAAI,EAAE;YAAM;UAAE;QACjC;MACF,CAAC;MACDu9D,WAAW,EAAE;QACXnuC,cAAc,EAAE,eAAe;QAC/BxhB,IAAI,EAAE;UACJ5N,IAAI,EAAE,YAAY;UAClB0H,KAAK,EAAE;YAAEkG,IAAI,EAAE;cAAE5N,IAAI,EAAE;YAAM;UAAE;QACjC;MACF,CAAC;MACDw9D,cAAc,EAAE;QACdpuC,cAAc,EAAE,kBAAkB;QAClCxhB,IAAI,EAAE;UACJ5N,IAAI,EAAE,YAAY;UAClB0H,KAAK,EAAE;YAAEkG,IAAI,EAAE;cAAE5N,IAAI,EAAE;YAAM;UAAE;QACjC;MACF,CAAC;MACDutC,YAAY,EAAE;QACZne,cAAc,EAAE,gBAAgB;QAChCxhB,IAAI,EAAE;UACJ5N,IAAI,EAAE,YAAY;UAClB0H,KAAK,EAAE;YAAEkG,IAAI,EAAE;cAAE5N,IAAI,EAAE;YAAM;UAAE;QACjC;MACF,CAAC;MACD6tC,cAAc,EAAE;QACdze,cAAc,EAAE,kBAAkB;QAClCxhB,IAAI,EAAE;UACJ5N,IAAI,EAAE;QACR;MACF,CAAC;MACD2tC,YAAY,EAAE;QACZve,cAAc,EAAE,gBAAgB;QAChCxhB,IAAI,EAAE;UACJ5N,IAAI,EAAE,YAAY;UAClB0H,KAAK,EAAE;YAAEkG,IAAI,EAAE;cAAE5N,IAAI,EAAE;YAAM;UAAE;QACjC;MACF,CAAC;MACDw0C,cAAc,EAAE;QACdplB,cAAc,EAAE,kBAAkB;QAClCxhB,IAAI,EAAE;UACJ5N,IAAI,EAAE,YAAY;UAClB0H,KAAK,EAAE;YAAEkG,IAAI,EAAE;cAAE5N,IAAI,EAAE;YAAM;UAAE;QACjC;MACF,CAAC;MACDs0C,aAAa,EAAE;QACbllB,cAAc,EAAE,iBAAiB;QACjCxhB,IAAI,EAAE;UACJ5N,IAAI,EAAE,YAAY;UAClB0H,KAAK,EAAE;YAAEkG,IAAI,EAAE;cAAE5N,IAAI,EAAE;YAAM;UAAE;QACjC;MACF,CAAC;MACDk1C,gBAAgB,EAAE;QAChB9lB,cAAc,EAAE,oBAAoB;QACpCxhB,IAAI,EAAE;UACJ5N,IAAI,EAAE,YAAY;UAClB0H,KAAK,EAAE;YAAEkG,IAAI,EAAE;cAAE5N,IAAI,EAAE;YAAM;UAAE;QACjC;MACF,CAAC;MACDy9D,gBAAgB,EAAE;QAChBruC,cAAc,EAAE,oBAAoB;QACpCxhB,IAAI,EAAE;UACJ5N,IAAI,EAAE,YAAY;UAClB0H,KAAK,EAAE;YAAEkG,IAAI,EAAE;cAAE5N,IAAI,EAAE;YAAM;UAAE;QACjC;MACF,CAAC;MACD09D,WAAW,EAAE;QACXtuC,cAAc,EAAE,eAAe;QAC/BxhB,IAAI,EAAE;UACJ5N,IAAI,EAAE,YAAY;UAClB0H,KAAK,EAAE;YAAEkG,IAAI,EAAE;cAAE5N,IAAI,EAAE;YAAM;UAAE;QACjC;MACF,CAAC;MACD29D,OAAO,EAAE;QACPvuC,cAAc,EAAE,UAAU;QAC1BxhB,IAAI,EAAE;UACJ5N,IAAI,EAAE,YAAY;UAClB0H,KAAK,EAAE;YAAEkG,IAAI,EAAE;cAAE5N,IAAI,EAAE;YAAM;UAAE;QACjC;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAM49D,mBAA+C,GAAG;EAC7DhwD,IAAI,EAAE;IACJ5N,IAAI,EAAE,WAAW;IACjBkvB,SAAS,EAAE,qBAAqB;IAChCC,eAAe,EAAE;MACfyB,WAAW,EAAE;QACXxB,cAAc,EAAE,cAAc;QAC9BxhB,IAAI,EAAE;UACJ5N,IAAI,EAAE;QACR;MACF,CAAC;MACD2lB,UAAU,EAAE;QACVyJ,cAAc,EAAE,aAAa;QAC7BxhB,IAAI,EAAE;UACJ5N,IAAI,EAAE;QACR;MACF,CAAC;MACDy1D,MAAM,EAAE;QACNrmC,cAAc,EAAE,SAAS;QACzBxhB,IAAI,EAAE;UACJ5N,IAAI,EAAE;QACR;MACF,CAAC;MACD+3D,UAAU,EAAE;QACV3oC,cAAc,EAAE,aAAa;QAC7BxhB,IAAI,EAAE;UACJ5N,IAAI,EAAE;QACR;MACF,CAAC;MACD22D,SAAS,EAAE;QACTvnC,cAAc,EAAE,YAAY;QAC5BxhB,IAAI,EAAE;UACJ5N,IAAI,EAAE;QACR;MACF,CAAC;MACDykB,WAAW,EAAE;QACX2K,cAAc,EAAE,cAAc;QAC9BxhB,IAAI,EAAE;UACJ5N,IAAI,EAAE;QACR;MACF,CAAC;MACDsW,QAAQ,EAAE;QACR8Y,cAAc,EAAE,WAAW;QAC3BxhB,IAAI,EAAE;UACJ5N,IAAI,EAAE;QACR;MACF,CAAC;MACDmzD,OAAO,EAAE;QACP/jC,cAAc,EAAE,UAAU;QAC1BxhB,IAAI,EAAE;UACJ5N,IAAI,EAAE;QACR;MACF,CAAC;MACD4G,MAAM,EAAE;QACNwoB,cAAc,EAAE,SAAS;QACzBxhB,IAAI,EAAE;UACJ5N,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAM69D,iBAA6C,GAAG;EAC3DjwD,IAAI,EAAE;IACJ5N,IAAI,EAAE,WAAW;IACjBkvB,SAAS,EAAE,mBAAmB;IAC9BC,eAAe,EAAE;MACfpqB,MAAM,EAAE;QACNqqB,cAAc,EAAE,QAAQ;QACxBxhB,IAAI,EAAE;UACJ5N,IAAI,EAAE;QACR;MACF,CAAC;MACD4wB,WAAW,EAAE;QACXxB,cAAc,EAAE,cAAc;QAC9BxhB,IAAI,EAAE;UACJ5N,IAAI,EAAE;QACR;MACF,CAAC;MACD2lB,UAAU,EAAE;QACVyJ,cAAc,EAAE,aAAa;QAC7BxhB,IAAI,EAAE;UACJ5N,IAAI,EAAE;QACR;MACF,CAAC;MACDy1D,MAAM,EAAE;QACNrmC,cAAc,EAAE,SAAS;QACzBxhB,IAAI,EAAE;UACJ5N,IAAI,EAAE;QACR;MACF,CAAC;MACD+3D,UAAU,EAAE;QACV3oC,cAAc,EAAE,aAAa;QAC7BxhB,IAAI,EAAE;UACJ5N,IAAI,EAAE;QACR;MACF,CAAC;MACD22D,SAAS,EAAE;QACTvnC,cAAc,EAAE,YAAY;QAC5BxhB,IAAI,EAAE;UACJ5N,IAAI,EAAE;QACR;MACF,CAAC;MACDykB,WAAW,EAAE;QACX2K,cAAc,EAAE,cAAc;QAC9BxhB,IAAI,EAAE;UACJ5N,IAAI,EAAE;QACR;MACF,CAAC;MACDsW,QAAQ,EAAE;QACR8Y,cAAc,EAAE,WAAW;QAC3BxhB,IAAI,EAAE;UACJ5N,IAAI,EAAE;QACR;MACF,CAAC;MACD4G,MAAM,EAAE;QACNwoB,cAAc,EAAE,SAAS;QACzBxhB,IAAI,EAAE;UACJ5N,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAM89D,yBAAqD,GAAG;EACnElwD,IAAI,EAAE;IACJ5N,IAAI,EAAE,WAAW;IACjBkvB,SAAS,EAAE,2BAA2B;IACtCC,eAAe,EAAE;MACf0B,SAAS,EAAE;QACTzB,cAAc,EAAE,YAAY;QAC5BC,QAAQ,EAAE,IAAI;QACdzhB,IAAI,EAAE;UACJ5N,IAAI,EAAE;QACR;MACF,CAAC;MACD43D,UAAU,EAAE;QACVxoC,cAAc,EAAE,cAAc;QAC9BxhB,IAAI,EAAE;UACJ5N,IAAI,EAAE;QACR;MACF,CAAC;MACD2lB,UAAU,EAAE;QACVyJ,cAAc,EAAE,aAAa;QAC7BC,QAAQ,EAAE,IAAI;QACdzhB,IAAI,EAAE;UACJ5N,IAAI,EAAE;QACR;MACF,CAAC;MACD+9D,cAAc,EAAE;QACd3uC,cAAc,EAAE,kBAAkB;QAClCC,QAAQ,EAAE,IAAI;QACdzhB,IAAI,EAAE;UACJ5N,IAAI,EAAE;QACR;MACF,CAAC;MACDwiD,QAAQ,EAAE;QACRpzB,cAAc,EAAE,UAAU;QAC1BC,QAAQ,EAAE,IAAI;QACdzhB,IAAI,EAAE;UACJ5N,IAAI,EAAE;QACR;MACF,CAAC;MACDwB,MAAM,EAAE;QACN4tB,cAAc,EAAE,QAAQ;QACxBC,QAAQ,EAAE,IAAI;QACdzhB,IAAI,EAAE;UACJ5N,IAAI,EAAE;QACR;MACF,CAAC;MACD63D,UAAU,EAAE;QACVzoC,cAAc,EAAE,aAAa;QAC7BC,QAAQ,EAAE,IAAI;QACdzhB,IAAI,EAAE;UACJ5N,IAAI,EAAE,YAAY;UAClB0H,KAAK,EAAE;YAAEkG,IAAI,EAAE;cAAE5N,IAAI,EAAE;YAAM;UAAE;QACjC;MACF,CAAC;MACD+3D,UAAU,EAAE;QACV3oC,cAAc,EAAE,aAAa;QAC7BC,QAAQ,EAAE,IAAI;QACdzhB,IAAI,EAAE;UACJ5N,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAMg+D,qBAAiD,GAAG;EAC/DpwD,IAAI,EAAE;IACJ5N,IAAI,EAAE,WAAW;IACjBkvB,SAAS,EAAE,uBAAuB;IAClCC,eAAe,EAAE;MACfpqB,MAAM,EAAE;QACNqqB,cAAc,EAAE,QAAQ;QACxBC,QAAQ,EAAE,IAAI;QACdzhB,IAAI,EAAE;UACJ5N,IAAI,EAAE;QACR;MACF,CAAC;MACD6e,IAAI,EAAE;QACJuQ,cAAc,EAAE,MAAM;QACtBC,QAAQ,EAAE,IAAI;QACdzhB,IAAI,EAAE;UACJ5N,IAAI,EAAE;QACR;MACF,CAAC;MACDi+D,SAAS,EAAE;QACT7uC,cAAc,EAAE,aAAa;QAC7BC,QAAQ,EAAE,IAAI;QACdzhB,IAAI,EAAE;UACJ5N,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAMk+D,cAA0C,GAAG;EACxDtwD,IAAI,EAAE;IACJ5N,IAAI,EAAE,WAAW;IACjBkvB,SAAS,EAAE,gBAAgB;IAC3BC,eAAe,EAAE;MACfla,EAAE,EAAE;QACFma,cAAc,EAAE,IAAI;QACpBC,QAAQ,EAAE,IAAI;QACdzhB,IAAI,EAAE;UACJ5N,IAAI,EAAE,YAAY;UAClB0H,KAAK,EAAE;YAAEkG,IAAI,EAAE;cAAE5N,IAAI,EAAE;YAAM;UAAE;QACjC;MACF,CAAC;MACD4G,MAAM,EAAE;QACNwoB,cAAc,EAAE,SAAS;QACzBC,QAAQ,EAAE,IAAI;QACdzhB,IAAI,EAAE;UACJ5N,IAAI,EAAE;QACR;MACF;IACF;EACF;AACF,CAAC;AAEM,MAAMm+D,4EAAwG,GAAG;EACtHvwD,IAAI,EAAE;IACJ5N,IAAI,EAAE,WAAW;IACjBkvB,SAAS,EACP,8EAA8E;IAChFC,eAAe,EAAE;MACf,GAAGolC,mFAAmF,CACnF3mD,IAAI,CAACuhB,eAAe;MACvB,GAAGslC,iBAAiB,CAAC7mD,IAAI,CAACuhB;IAC5B;EACF;AACF,CAAC;AAEM,MAAMivC,8DAA0F,GAAG;EACxGxwD,IAAI,EAAE;IACJ5N,IAAI,EAAE,WAAW;IACjBkvB,SAAS,EAAE,gEAAgE;IAC3EC,eAAe,EAAE;MACf,GAAG0lC,qEAAqE,CACrEjnD,IAAI,CAACuhB,eAAe;MACvB,GAAGslC,iBAAiB,CAAC7mD,IAAI,CAACuhB;IAC5B;EACF;AACF,CAAC;AAEM,MAAMkvC,gFAA4G,GAAG;EAC1HzwD,IAAI,EAAE;IACJ5N,IAAI,EAAE,WAAW;IACjBkvB,SAAS,EACP,kFAAkF;IACpFC,eAAe,EAAE;MACf,GAAGgmC,sFAAsF,CACtFvnD,IAAI,CAACuhB,eAAe;MACvB,GAAGslC,iBAAiB,CAAC7mD,IAAI,CAACuhB;IAC5B;EACF;AACF,CAAC;AAEM,MAAMmvC,+EAA2G,GAAG;EACzH1wD,IAAI,EAAE;IACJ5N,IAAI,EAAE,WAAW;IACjBkvB,SAAS,EACP,iFAAiF;IACnFC,eAAe,EAAE;MACf,GAAGkmC,oFAAoF,CACpFznD,IAAI,CAACuhB,eAAe;MACvB,GAAGslC,iBAAiB,CAAC7mD,IAAI,CAACuhB;IAC5B;EACF;AACF,CAAC;AAEM,MAAMovC,kFAA8G,GAAG;EAC5H3wD,IAAI,EAAE;IACJ5N,IAAI,EAAE,WAAW;IACjBkvB,SAAS,EACP,oFAAoF;IACtFC,eAAe,EAAE;MACf,GAAGmmC,uFAAuF,CACvF1nD,IAAI,CAACuhB,eAAe;MACvB,GAAGslC,iBAAiB,CAAC7mD,IAAI,CAACuhB;IAC5B;EACF;AACF,CAAC;AAEM,MAAMqvC,iGAA6H,GAAG;EAC3I5wD,IAAI,EAAE;IACJ5N,IAAI,EAAE,WAAW;IACjBkvB,SAAS,EACP,mGAAmG;IACrGC,eAAe,EAAE;MACf,GAAGumC,wGAAwG,CACxG9nD,IAAI,CAACuhB,eAAe;MACvB,GAAGslC,iBAAiB,CAAC7mD,IAAI,CAACuhB;IAC5B;EACF;AACF,CAAC;AAEM,MAAMsvC,6DAAyF,GAAG;EACvG7wD,IAAI,EAAE;IACJ5N,IAAI,EAAE,WAAW;IACjBkvB,SAAS,EAAE,+DAA+D;IAC1EC,eAAe,EAAE;MACf,GAAGymC,mEAAmE,CACnEhoD,IAAI,CAACuhB,eAAe;MACvB,GAAGslC,iBAAiB,CAAC7mD,IAAI,CAACuhB;IAC5B;EACF;AACF,CAAC;AAEM,MAAMuvC,qFAAiH,GAAG;EAC/H9wD,IAAI,EAAE;IACJ5N,IAAI,EAAE,WAAW;IACjBkvB,SAAS,EACP,uFAAuF;IACzFC,eAAe,EAAE;MACf,GAAGslC,iBAAiB,CAAC7mD,IAAI,CAACuhB,eAAe;MACzC,GAAGgnC,0FAA0F,CAC1FvoD,IAAI,CAACuhB;IACV;EACF;AACF,CAAC;AAEM,MAAMwvC,2FAAuH,GAAG;EACrI/wD,IAAI,EAAE;IACJ5N,IAAI,EAAE,WAAW;IACjBkvB,SAAS,EACP,6FAA6F;IAC/FC,eAAe,EAAE;MACf,GAAGqnC,gGAAgG,CAChG5oD,IAAI,CAACuhB,eAAe;MACvB,GAAGslC,iBAAiB,CAAC7mD,IAAI,CAACuhB;IAC5B;EACF;AACF,CAAC;AAEM,MAAMyvC,4EAAwG,GAAG;EACtHhxD,IAAI,EAAE;IACJ5N,IAAI,EAAE,WAAW;IACjBkvB,SAAS,EACP,8EAA8E;IAChFC,eAAe,EAAE;MACf,GAAGynC,gFAAgF,CAChFhpD,IAAI,CAACuhB,eAAe;MACvB,GAAGslC,iBAAiB,CAAC7mD,IAAI,CAACuhB;IAC5B;EACF;AACF,CAAC;AAEM,MAAM0vC,0EAAsG,GAAG;EACpHjxD,IAAI,EAAE;IACJ5N,IAAI,EAAE,WAAW;IACjBkvB,SAAS,EACP,4EAA4E;IAC9EC,eAAe,EAAE;MACf,GAAG0nC,gFAAgF,CAChFjpD,IAAI,CAACuhB,eAAe;MACvB,GAAGslC,iBAAiB,CAAC7mD,IAAI,CAACuhB;IAC5B;EACF;AACF,CAAC;AAEM,MAAM2vC,6EAAyG,GAAG;EACvHlxD,IAAI,EAAE;IACJ5N,IAAI,EAAE,WAAW;IACjBkvB,SAAS,EACP,+EAA+E;IACjFC,eAAe,EAAE;MACf,GAAG2nC,qFAAqF,CACrFlpD,IAAI,CAACuhB,eAAe;MACvB,GAAGslC,iBAAiB,CAAC7mD,IAAI,CAACuhB;IAC5B;EACF;AACF,CAAC;AAEM,MAAM4vC,8DAA0F,GAAG;EACxGnxD,IAAI,EAAE;IACJ5N,IAAI,EAAE,WAAW;IACjBkvB,SAAS,EAAE,gEAAgE;IAC3EC,eAAe,EAAE;MACf,GAAGioC,oEAAoE,CACpExpD,IAAI,CAACuhB,eAAe;MACvB,GAAGslC,iBAAiB,CAAC7mD,IAAI,CAACuhB;IAC5B;EACF;AACF,CAAC;AAEM,MAAM6vC,iEAA6F,GAAG;EAC3GpxD,IAAI,EAAE;IACJ5N,IAAI,EAAE,WAAW;IACjBkvB,SAAS,EACP,mEAAmE;IACrEC,eAAe,EAAE;MACf,GAAGooC,qEAAqE,CACrE3pD,IAAI,CAACuhB,eAAe;MACvB,GAAGslC,iBAAiB,CAAC7mD,IAAI,CAACuhB;IAC5B;EACF;AACF,CAAC;AAEM,MAAM8vC,uEAAmG,GAAG;EACjHrxD,IAAI,EAAE;IACJ5N,IAAI,EAAE,WAAW;IACjBkvB,SAAS,EACP,yEAAyE;IAC3EC,eAAe,EAAE;MACf,GAAGwoC,6EAA6E,CAC7E/pD,IAAI,CAACuhB,eAAe;MACvB,GAAGslC,iBAAiB,CAAC7mD,IAAI,CAACuhB;IAC5B;EACF;AACF,CAAC;AAEM,MAAM+vC,qEAAiG,GAAG;EAC/GtxD,IAAI,EAAE;IACJ5N,IAAI,EAAE,WAAW;IACjBkvB,SAAS,EACP,uEAAuE;IACzEC,eAAe,EAAE;MACf,GAAG6oC,2EAA2E,CAC3EpqD,IAAI,CAACuhB,eAAe;MACvB,GAAGslC,iBAAiB,CAAC7mD,IAAI,CAACuhB;IAC5B;EACF;AACF,CAAC;AAEM,MAAMgwC,kEAA8F,GAAG;EAC5GvxD,IAAI,EAAE;IACJ5N,IAAI,EAAE,WAAW;IACjBkvB,SAAS,EACP,oEAAoE;IACtEC,eAAe,EAAE;MACf,GAAGmpC,wEAAwE,CACxE1qD,IAAI,CAACuhB,eAAe;MACvB,GAAGslC,iBAAiB,CAAC7mD,IAAI,CAACuhB;IAC5B;EACF;AACF,CAAC;AAEM,MAAMiwC,kEAA8F,GAAG;EAC5GxxD,IAAI,EAAE;IACJ5N,IAAI,EAAE,WAAW;IACjBkvB,SAAS,EACP,oEAAoE;IACtEC,eAAe,EAAE;MACf,GAAG8pC,wEAAwE,CACxErrD,IAAI,CAACuhB,eAAe;MACvB,GAAGslC,iBAAiB,CAAC7mD,IAAI,CAACuhB;IAC5B;EACF;AACF,CAAC;AAEM,MAAMkwC,qFAAiH,GAAG;EAC/HzxD,IAAI,EAAE;IACJ5N,IAAI,EAAE,WAAW;IACjBkvB,SAAS,EACP,uFAAuF;IACzFC,eAAe,EAAE;MACf,GAAG+pC,2FAA2F,CAC3FtrD,IAAI,CAACuhB,eAAe;MACvB,GAAGslC,iBAAiB,CAAC7mD,IAAI,CAACuhB;IAC5B;EACF;AACF,CAAC;AAEM,MAAMmwC,0EAAsG,GAAG;EACpH1xD,IAAI,EAAE;IACJ5N,IAAI,EAAE,WAAW;IACjBkvB,SAAS,EACP,4EAA4E;IAC9EC,eAAe,EAAE;MACf,GAAGmqC,iFAAiF,CACjF1rD,IAAI,CAACuhB,eAAe;MACvB,GAAGslC,iBAAiB,CAAC7mD,IAAI,CAACuhB;IAC5B;EACF;AACF,CAAC;AAEM,MAAMowC,6DAAyF,GAAG;EACvG3xD,IAAI,EAAE;IACJ5N,IAAI,EAAE,WAAW;IACjBkvB,SAAS,EAAE,+DAA+D;IAC1EC,eAAe,EAAE;MACf,GAAGoqC,oEAAoE,CACpE3rD,IAAI,CAACuhB,eAAe;MACvB,GAAGslC,iBAAiB,CAAC7mD,IAAI,CAACuhB;IAC5B;EACF;AACF,CAAC;AAEM,MAAMqwC,mEAA+F,GAAG;EAC7G5xD,IAAI,EAAE;IACJ5N,IAAI,EAAE,WAAW;IACjBkvB,SAAS,EACP,qEAAqE;IACvEC,eAAe,EAAE;MACf,GAAGqrC,0EAA0E,CAC1E5sD,IAAI,CAACuhB,eAAe;MACvB,GAAGslC,iBAAiB,CAAC7mD,IAAI,CAACuhB;IAC5B;EACF;AACF,CAAC;AAEM,MAAMswC,+DAA2F,GAAG;EACzG7xD,IAAI,EAAE;IACJ5N,IAAI,EAAE,WAAW;IACjBkvB,SAAS,EACP,iEAAiE;IACnEC,eAAe,EAAE;MACf,GAAG+rC,qEAAqE,CACrEttD,IAAI,CAACuhB,eAAe;MACvB,GAAGslC,iBAAiB,CAAC7mD,IAAI,CAACuhB;IAC5B;EACF;AACF,CAAC;AAEM,MAAMuwC,mEAA+F,GAAG;EAC7G9xD,IAAI,EAAE;IACJ5N,IAAI,EAAE,WAAW;IACjBkvB,SAAS,EACP,qEAAqE;IACvEC,eAAe,EAAE;MACf,GAAGgtC,wEAAwE,CACxEvuD,IAAI,CAACuhB,eAAe;MACvB,GAAGslC,iBAAiB,CAAC7mD,IAAI,CAACuhB;IAC5B;EACF;AACF,CAAC;AAEM,MAAMwwC,iEAA6F,GAAG;EAC3G/xD,IAAI,EAAE;IACJ5N,IAAI,EAAE,WAAW;IACjBkvB,SAAS,EACP,mEAAmE;IACrEC,eAAe,EAAE;MACf,GAAGktC,wEAAwE,CACxEzuD,IAAI,CAACuhB,eAAe;MACvB,GAAGslC,iBAAiB,CAAC7mD,IAAI,CAACuhB;IAC5B;EACF;AACF,CAAC;AAEM,MAAMywC,2DAAuF,GAAG;EACrGhyD,IAAI,EAAE;IACJ5N,IAAI,EAAE,WAAW;IACjBkvB,SAAS,EAAE,6DAA6D;IACxEC,eAAe,EAAE;MACf,GAAGqtC,kEAAkE,CAAC5uD,IAAI,CACvEuhB,eAAe;MAClB,GAAGslC,iBAAiB,CAAC7mD,IAAI,CAACuhB;IAC5B;EACF;AACF,CAAC;AAEM,MAAM0wC,wFAAoH,GAAG;EAClIjyD,IAAI,EAAE;IACJ5N,IAAI,EAAE,WAAW;IACjBkvB,SAAS,EACP,0FAA0F;IAC5FC,eAAe,EAAE;MACf,GAAG+nC,6FAA6F,CAC7FtpD,IAAI,CAACuhB;IACV;EACF;AACF,CAAC;AAEM,MAAM2wC,+FAA2H,GAAG;EACzIlyD,IAAI,EAAE;IACJ5N,IAAI,EAAE,WAAW;IACjBkvB,SAAS,EACP,iGAAiG;IACnGC,eAAe,EAAE;MACf,GAAGgoC,qGAAqG,CACrGvpD,IAAI,CAACuhB;IACV;EACF;AACF,CAAC;AAEM,MAAM4wC,6CAAyE,GAAG;EACvFnyD,IAAI,EAAE;IACJ5N,IAAI,EAAE,WAAW;IACjBkvB,SAAS,EAAE,+CAA+C;IAC1DC,eAAe,EAAE;MACf,GAAG3hB,IAAI,CAACI,IAAI,CAACuhB,eAAe;MAC5B,GAAGsrC,kGAAkG,CAClG7sD,IAAI,CAACuhB;IACV;EACF;AACF,CAAC;;ACzyGgD;AACC;AACN;AA4GrC,MAAM2iC,UAAU,SAASj4B,0BAAwB,CAAC;EAMvD;AACF;AACA;AACA;AACA;EACE/5B,WAAWA,CAACy5B,KAAa,EAAEplB,OAAkC,EAAE;IAAA,IAAA4E,IAAA,EAAAmhB,iBAAA;IAC7D,IAAIX,KAAK,KAAK5oB,SAAS,EAAE;MACvB,MAAM,IAAI9Q,KAAK,CAAC,wBAAwB,CAAC;IAC3C;;IAEA;IACA,IAAI,CAACsU,OAAO,EAAE;MACZA,OAAO,GAAG,CAAC,CAAC;IACd;IACA,MAAMgmB,QAAkC,GAAG;MACzCC,kBAAkB,EAAE;IACtB,CAAC;IAED,MAAMC,cAAc,GAAI,kCAAiC;IACzD,MAAMC,eAAe,GACnBnmB,OAAO,CAAComB,gBAAgB,IAAIpmB,OAAO,CAAComB,gBAAgB,CAACD,eAAe,GAC/D,GAAEnmB,OAAO,CAAComB,gBAAgB,CAACD,eAAgB,IAAGD,cAAe,EAAC,GAC9D,GAAEA,cAAe,EAAC;IAEzB,MAAMG,mBAAmB,GAAG;MAC1B,GAAGL,QAAQ;MACX,GAAGhmB,OAAO;MACVomB,gBAAgB,EAAE;QAChBD;MACF,CAAC;MACDG,QAAQ,GAAA1hB,IAAA,IAAAmhB,iBAAA,GAAE/lB,OAAO,CAACsmB,QAAQ,cAAAP,iBAAA,cAAAA,iBAAA,GAAI/lB,OAAO,CAACumB,OAAO,cAAA3hB,IAAA,cAAAA,IAAA,GAAI;IACnD,CAAC;IACD,KAAK,CAACyhB,mBAAmB,CAAC;IAC1B;IACA,IAAI,CAACjB,KAAK,GAAGA,KAAK;EACpB;;EAEA;AACF;AACA;AACA;AACA;EACEymC,oBAAoBA,CAClB58D,EAAU,EACV+Q,OAA4C,EACL;IACvC,OAAO,IAAI,CAACymB,oBAAoB,CAC9B;MAAEx3B,EAAE;MAAE+Q;IAAQ,CAAC,EACf8rD,iCACF,CAAC;EACH;;EAEA;AACF;AACA;AACA;EACEC,wBAAwBA,CACtB/rD,OAAgD,EACL;IAC3C,OAAO,IAAI,CAACymB,oBAAoB,CAC9B;MAAEzmB;IAAQ,CAAC,EACXgsD,qCACF,CAAC;EACH;;EAEA;AACF;AACA;AACA;AACA;EACEC,oBAAoBA,CAClB17C,SAAiB,EACjBvQ,OAA4C,EACL;IACvC,OAAO,IAAI,CAACymB,oBAAoB,CAC9B;MAAElW,SAAS;MAAEvQ;IAAQ,CAAC,EACtBksD,iCACF,CAAC;EACH;;EAEA;AACF;AACA;AACA;AACA;AACA;EACEC,mBAAmBA,CACjB36C,UAAkB,EAClBwtC,OAAe,EACfh/C,OAA2C,EACL;IACtC,OAAO,IAAI,CAACymB,oBAAoB,CAC9B;MAAEjV,UAAU;MAAEwtC,OAAO;MAAEh/C;IAAQ,CAAC,EAChCosD,gCACF,CAAC;EACH;;EAEA;AACF;AACA;AACA;AACA;EACEC,uBAAuBA,CACrB76C,UAAkB,EAClBxR,OAA+C,EACL;IAC1C,OAAO,IAAI,CAACymB,oBAAoB,CAC9B;MAAEjV,UAAU;MAAExR;IAAQ,CAAC,EACvBssD,oCACF,CAAC;EACH;;EAEA;AACF;AACA;AACA;AACA;EACEC,0BAA0BA,CACxB/6C,UAAkB,EAClBxR,OAAkD,EACL;IAC7C,OAAO,IAAI,CAACymB,oBAAoB,CAC9B;MAAEjV,UAAU;MAAExR;IAAQ,CAAC,EACvBwsD,uCACF,CAAC;EACH;;EAEA;AACF;AACA;AACA;AACA;AACA;EACEC,uBAAuBA,CACrBj7C,UAAkB,EAClBytC,UAAkB,EAClBj/C,OAA+C,EACL;IAC1C,OAAO,IAAI,CAACymB,oBAAoB,CAC9B;MAAEjV,UAAU;MAAEytC,UAAU;MAAEj/C;IAAQ,CAAC,EACnC0sD,oCACF,CAAC;EACH;;EAEA;AACF;AACA;AACA;AACA;EACEC,mBAAmBA,CACjB19D,EAAU,EACV+Q,OAA2C,EACL;IACtC,OAAO,IAAI,CAACymB,oBAAoB,CAC9B;MAAEx3B,EAAE;MAAE+Q;IAAQ,CAAC,EACf4sD,gCACF,CAAC;EACH;;EAEA;AACF;AACA;AACA;EACEC,mBAAmBA,CACjB7sD,OAA2C,EACL;IACtC,OAAO,IAAI,CAACymB,oBAAoB,CAC9B;MAAEzmB;IAAQ,CAAC,EACX8sD,gCACF,CAAC;EACH;;EAEA;AACF;AACA;AACA;AACA;EACEC,sBAAsBA,CACpBx8C,SAAiB,EACjBvQ,OAA8C,EACL;IACzC,OAAO,IAAI,CAACymB,oBAAoB,CAC9B;MAAElW,SAAS;MAAEvQ;IAAQ,CAAC,EACtBgtD,mCACF,CAAC;EACH;;EAEA;AACF;AACA;AACA;EACEC,kBAAkBA,CAChBjtD,OAA0C,EACL;IACrC,OAAO,IAAI,CAACymB,oBAAoB,CAC9B;MAAEzmB;IAAQ,CAAC,EACXktD,+BACF,CAAC;EACH;;EAEA;AACF;AACA;AACA;AACA;AACA;EACEC,oBAAoBA,CAClBhO,MAAc,EACdrE,SAAiB,EACjB96C,OAA4C,EACL;IACvC,OAAO,IAAI,CAACymB,oBAAoB,CAC9B;MAAE04B,MAAM;MAAErE,SAAS;MAAE96C;IAAQ,CAAC,EAC9BotD,iCACF,CAAC;EACH;;EAEA;AACF;AACA;AACA;AACA;EACEC,sBAAsBA,CACpBp+D,EAAU,EACV+Q,OAA8C,EACL;IACzC,OAAO,IAAI,CAACymB,oBAAoB,CAC9B;MAAEx3B,EAAE;MAAE+Q;IAAQ,CAAC,EACfstD,mCACF,CAAC;EACH;;EAEA;AACF;AACA;AACA;AACA;EACEC,yBAAyBA,CACvBt+D,EAAU,EACV+Q,OAAiD,EACL;IAC5C,OAAO,IAAI,CAACymB,oBAAoB,CAC9B;MAAEx3B,EAAE;MAAE+Q;IAAQ,CAAC,EACfwtD,sCACF,CAAC;EACH;;EAEA;AACF;AACA;AACA;AACA;EACEC,uBAAuBA,CACrBj8C,UAAkB,EAClBxR,OAA+C,EACL;IAC1C,OAAO,IAAI,CAACymB,oBAAoB,CAC9B;MAAEjV,UAAU;MAAExR;IAAQ,CAAC,EACvB0tD,oCACF,CAAC;EACH;;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;EACEC,6BAA6BA,CAC3Bn8C,UAAkB,EAClBjB,SAAiB,EACjBhU,IAAY,EACZyD,OAAqD,EACL;IAChD,OAAO,IAAI,CAACymB,oBAAoB,CAC9B;MAAEjV,UAAU;MAAEjB,SAAS;MAAEhU,IAAI;MAAEyD;IAAQ,CAAC,EACxC4tD,0CACF,CAAC;EACH;;EAEA;AACF;AACA;AACA;AACA;AACA;EACEC,oCAAoCA,CAClCr8C,UAAkB,EAClBjB,SAAiB,EACjBvQ,OAA4D,EACL;IACvD,OAAO,IAAI,CAACymB,oBAAoB,CAC9B;MAAEjV,UAAU;MAAEjB,SAAS;MAAEvQ;IAAQ,CAAC,EAClC8tD,iDACF,CAAC;EACH;;EAEA;AACF;AACA;AACA;AACA;EACEC,gBAAgBA,CACdv8C,UAAkB,EAClBxR,OAAwC,EACL;IACnC,OAAO,IAAI,CAACymB,oBAAoB,CAC9B;MAAEjV,UAAU;MAAExR;IAAQ,CAAC,EACvBguD,6BACF,CAAC;EACH;;EAEA;AACF;AACA;AACA;AACA;EACEC,iBAAiBA,CACfh/D,EAAU,EACV+Q,OAAyC,EACL;IACpC,OAAO,IAAI,CAACymB,oBAAoB,CAC9B;MAAEx3B,EAAE;MAAE+Q;IAAQ,CAAC,EACfkuD,8BACF,CAAC;EACH;;EAEA;AACF;AACA;AACA;EACEC,SAASA,CAACnuD,OAAiC,EAA8B;IACvE,OAAO,IAAI,CAACymB,oBAAoB,CAAC;MAAEzmB;IAAQ,CAAC,EAAEouD,sBAAsB,CAAC;EACvE;;EAEA;AACF;AACA;AACA;AACA;EACEC,QAAQA,CACNjP,SAAiB,EACjBp/C,OAAgC,EACL;IAC3B,OAAO,IAAI,CAACymB,oBAAoB,CAC9B;MAAE24B,SAAS;MAAEp/C;IAAQ,CAAC,EACtBsuD,qBACF,CAAC;EACH;;EAEA;AACF;AACA;AACA;AACA;AACA;EACEC,aAAaA,CACXlP,GAAW,EACXC,GAAW,EACXt/C,OAAqC,EACL;IAChC,OAAO,IAAI,CAACymB,oBAAoB,CAC9B;MAAE44B,GAAG;MAAEC,GAAG;MAAEt/C;IAAQ,CAAC,EACrBwuD,0BACF,CAAC;EACH;;EAEA;AACF;AACA;AACA;EACEC,WAAWA,CACTzuD,OAAmC,EACL;IAC9B,OAAO,IAAI,CAACymB,oBAAoB,CAAC;MAAEzmB;IAAQ,CAAC,EAAE0uD,wBAAwB,CAAC;EACzE;;EAEA;AACF;AACA;AACA;AACA;EACEC,UAAUA,CACR1/D,EAAU,EACV+Q,OAAkC,EACL;IAC7B,OAAO,IAAI,CAACymB,oBAAoB,CAAC;MAAEx3B,EAAE;MAAE+Q;IAAQ,CAAC,EAAE4uD,uBAAuB,CAAC;EAC5E;;EAEA;AACF;AACA;AACA;EACEC,iBAAiBA,CACf7uD,OAAyC,EACL;IACpC,OAAO,IAAI,CAACymB,oBAAoB,CAC9B;MAAEzmB;IAAQ,CAAC,EACX8uD,8BACF,CAAC;EACH;;EAEA;AACF;AACA;AACA;EACEC,gBAAgBA,CACd/uD,OAAwC,EACL;IACnC,OAAO,IAAI,CAACymB,oBAAoB,CAC9B;MAAEzmB;IAAQ,CAAC,EACXgvD,6BACF,CAAC;EACH;;EAEA;AACF;AACA;AACA;EACEC,aAAaA,CACXjvD,OAAqC,EACL;IAChC,OAAO,IAAI,CAACymB,oBAAoB,CAAC;MAAEzmB;IAAQ,CAAC,EAAEkvD,0BAA0B,CAAC;EAC3E;;EAEA;AACF;AACA;AACA;EACEC,YAAYA,CACVnvD,OAAoC,EACL;IAC/B,OAAO,IAAI,CAACymB,oBAAoB,CAAC;MAAEzmB;IAAQ,CAAC,EAAEovD,yBAAyB,CAAC;EAC1E;;EAEA;AACF;AACA;AACA;AACA;EACEj8B,WAAWA,CACTisB,SAAiB,EACjBp/C,OAAmC,EACL;IAC9B,OAAO,IAAI,CAACymB,oBAAoB,CAC9B;MAAE24B,SAAS;MAAEp/C;IAAQ,CAAC,EACtBqvD,wBACF,CAAC;EACH;;EAEA;AACF;AACA;AACA;AACA;EACEC,sBAAsBA,CACpBlQ,SAAiB,EACjBp/C,OAA8C,EACL;IACzC,OAAO,IAAI,CAACymB,oBAAoB,CAC9B;MAAE24B,SAAS;MAAEp/C;IAAQ,CAAC,EACtBuvD,mCACF,CAAC;EACH;;EAEA;AACF;AACA;AACA;AACA;EACEC,aAAaA,CACXjzD,IAAY,EACZyD,OAAqC,EACL;IAChC,OAAO,IAAI,CAACymB,oBAAoB,CAC9B;MAAElqB,IAAI;MAAEyD;IAAQ,CAAC,EACjByvD,0BACF,CAAC;EACH;;EAEA;AACF;AACA;AACA;AACA;EACEv8B,yBAAyBA,CACvB32B,IAAY,EACZyD,OAAiD,EACL;IAC5C,OAAO,IAAI,CAACymB,oBAAoB,CAC9B;MAAElqB,IAAI;MAAEyD;IAAQ,CAAC,EACjB0vD,sCACF,CAAC;EACH;;EAEA;AACF;AACA;AACA;EACEC,QAAQA,CAAC3vD,OAAgC,EAA6B;IACpE,OAAO,IAAI,CAACymB,oBAAoB,CAAC;MAAEzmB;IAAQ,CAAC,EAAE4vD,qBAAqB,CAAC;EACtE;;EAEA;AACF;AACA;AACA;EACEC,gBAAgBA,CACd7vD,OAAwC,EACL;IACnC,OAAO,IAAI,CAACymB,oBAAoB,CAC9B;MAAEzmB;IAAQ,CAAC,EACX8vD,6BACF,CAAC;EACH;;EAEA;AACF;AACA;AACA;EACEC,WAAWA,CACT/vD,OAAmC,EACL;IAC9B,OAAO,IAAI,CAACymB,oBAAoB,CAAC;MAAEzmB;IAAQ,CAAC,EAAEgwD,wBAAwB,CAAC;EACzE;;EAEA;AACF;AACA;AACA;AACA;EACE57B,OAAOA,CACLnlC,EAAU,EACV+Q,OAA+B,EACL;IAC1B,OAAO,IAAI,CAACymB,oBAAoB,CAAC;MAAEx3B,EAAE;MAAE+Q;IAAQ,CAAC,EAAEiwD,oBAAoB,CAAC;EACzE;;EAEA;AACF;AACA;AACA;AACA;EACEC,cAAcA,CACZjhE,EAAU,EACV+Q,OAAsC,EACL;IACjC,OAAO,IAAI,CAACymB,oBAAoB,CAC9B;MAAEx3B,EAAE;MAAE+Q;IAAQ,CAAC,EACfmwD,2BACF,CAAC;EACH;;EAEA;AACF;AACA;AACA;AACA;EACEC,aAAaA,CACXnhE,EAAU,EACV+Q,OAAqC,EACL;IAChC,OAAO,IAAI,CAACymB,oBAAoB,CAC9B;MAAEx3B,EAAE;MAAE+Q;IAAQ,CAAC,EACfqwD,0BACF,CAAC;EACH;;EAEA;AACF;AACA;AACA;AACA;EACEC,eAAeA,CACbrhE,EAAU,EACV+Q,OAAuC,EACL;IAClC,OAAO,IAAI,CAACymB,oBAAoB,CAC9B;MAAEx3B,EAAE;MAAE+Q;IAAQ,CAAC,EACfuwD,4BACF,CAAC;EACH;;EAEA;AACF;AACA;AACA;AACA;EACEC,eAAeA,CACbvhE,EAAU,EACV+Q,OAAuC,EACL;IAClC,OAAO,IAAI,CAACymB,oBAAoB,CAC9B;MAAEx3B,EAAE;MAAE+Q;IAAQ,CAAC,EACfywD,4BACF,CAAC;EACH;;EAEA;AACF;AACA;AACA;AACA;EACEC,gBAAgBA,CACdzhE,EAAU,EACV+Q,OAAwC,EACL;IACnC,OAAO,IAAI,CAACymB,oBAAoB,CAC9B;MAAEx3B,EAAE;MAAE+Q;IAAQ,CAAC,EACf2wD,6BACF,CAAC;EACH;;EAEA;AACF;AACA;AACA;AACA;EACEC,cAAcA,CACZ3hE,EAAU,EACV+Q,OAAsC,EACL;IACjC,OAAO,IAAI,CAACymB,oBAAoB,CAC9B;MAAEx3B,EAAE;MAAE+Q;IAAQ,CAAC,EACf6wD,2BACF,CAAC;EACH;;EAEA;AACF;AACA;AACA;AACA;EACEC,SAASA,CACP7hE,EAAU,EACV+Q,OAAiC,EACL;IAC5B,OAAO,IAAI,CAACymB,oBAAoB,CAAC;MAAEx3B,EAAE;MAAE+Q;IAAQ,CAAC,EAAE+wD,sBAAsB,CAAC;EAC3E;;EAEA;AACF;AACA;AACA;EACEC,UAAUA,CAAChxD,OAAkC,EAA+B;IAC1E,OAAO,IAAI,CAACymB,oBAAoB,CAAC;MAAEzmB;IAAQ,CAAC,EAAEixD,uBAAuB,CAAC;EACxE;;EAEA;AACF;AACA;AACA;EACE1mC,SAASA,CAACvqB,OAAiC,EAA8B;IACvE,OAAO,IAAI,CAACymB,oBAAoB,CAAC;MAAEzmB;IAAQ,CAAC,EAAEwqB,iCAAsB,CAAC;EACvE;;EAEA;AACF;AACA;AACA;EACE0mC,aAAaA,CACXlxD,OAAqC,EACL;IAChC,OAAO,IAAI,CAACymB,oBAAoB,CAAC;MAAEzmB;IAAQ,CAAC,EAAEmxD,0BAA0B,CAAC;EAC3E;;EAEA;AACF;AACA;AACA;EACEC,YAAYA,CACVpxD,OAAoC,EACL;IAC/B,OAAO,IAAI,CAACymB,oBAAoB,CAAC;MAAEzmB;IAAQ,CAAC,EAAEqxD,yBAAyB,CAAC;EAC1E;;EAEA;AACF;AACA;AACA;EACEC,MAAMA,CAACtxD,OAA8B,EAA2B;IAC9D,OAAO,IAAI,CAACymB,oBAAoB,CAAC;MAAEzmB;IAAQ,CAAC,EAAEuxD,mBAAmB,CAAC;EACpE;;EAEA;AACF;AACA;AACA;EACEC,UAAUA,CAACxxD,OAAkC,EAA+B;IAC1E,OAAO,IAAI,CAACymB,oBAAoB,CAAC;MAAEzmB;IAAQ,CAAC,EAAEyxD,uBAAuB,CAAC;EACxE;;EAEA;AACF;AACA;AACA;AACA;EACEC,cAAcA,CACZziE,EAAU,EACV+Q,OAAsC,EACL;IACjC,OAAO,IAAI,CAACymB,oBAAoB,CAC9B;MAAEx3B,EAAE;MAAE+Q;IAAQ,CAAC,EACf2xD,2BACF,CAAC;EACH;;EAEA;AACF;AACA;AACA;AACA;EACEC,KAAKA,CACHzR,WAAmB,EACnBngD,OAA6B,EACL;IACxB,OAAO,IAAI,CAACymB,oBAAoB,CAC9B;MAAE05B,WAAW;MAAEngD;IAAQ,CAAC,EACxB6xD,kBACF,CAAC;EACH;AACF;AACA;AACA,MAAMlnC,qBAAU,GAAGjF,6BAA2B,CAACE,yCAAO,EAAE,WAAY,KAAK,CAAC;AAE1E,MAAMkmC,iCAA2D,GAAG;EAClE3+C,IAAI,EAAE,8BAA8B;EACpC0d,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EACRnF,4EAAoFokC;IACxF,CAAC;IACD,GAAG,EAAE;MACHj/B,UAAU,EAAEnF,aAAqB;MACjCoF,OAAO,EAAE;IACX;EACF,CAAC;EACDC,eAAe,EAAE,CACftF,SAAoB,EACpBA,eAAe,EACfA,gBAAgB,EAChBA,KAAgB,EAChBA,SAAoB,CACrB;EACDuF,aAAa,EAAE,CAACvF,uBAAgB,EAAEA,EAAa,CAAC;EAChDwF,gBAAgB,EAAE,CAACxF,wBAAiB,CAAC;EACrCgF,UAAUA,uBAAAA;AACZ,CAAC;AACD,MAAMqhC,qCAA+D,GAAG;EACtE7+C,IAAI,EAAE,YAAY;EAClB0d,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EACRnF,8DAAsEqkC;IAC1E,CAAC;IACD,GAAG,EAAE;MACHl/B,UAAU,EAAEnF,aAAqB;MACjCoF,OAAO,EAAE;IACX;EACF,CAAC;EACDC,eAAe,EAAE,CACftF,gBAAgB,EAChBA,SAAoB,EACpBA,EAAa,EACbA,MAAiB,CAClB;EACDuF,aAAa,EAAE,CAACvF,uBAAgB,CAAC;EACjCwF,gBAAgB,EAAE,CAACxF,wBAAiB,CAAC;EACrCgF,UAAUA,uBAAAA;AACZ,CAAC;AACD,MAAMuhC,iCAA2D,GAAG;EAClE/+C,IAAI,EAAE,mCAAmC;EACzC0d,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EACRnF,gFAAwFskC;IAC5F,CAAC;IACD,GAAG,EAAE;MACHn/B,UAAU,EAAEnF,aAAqB;MACjCoF,OAAO,EAAE;IACX;EACF,CAAC;EACDC,eAAe,EAAE,CAACtF,gBAAgB,EAAEA,SAAoB,CAAC;EACzDuF,aAAa,EAAE,CAACvF,uBAAgB,EAAEA,SAAoB,CAAC;EACvDwF,gBAAgB,EAAE,CAACxF,wBAAiB,CAAC;EACrCgF,UAAUA,uBAAAA;AACZ,CAAC;AACD,MAAMyhC,gCAA0D,GAAG;EACjEj/C,IAAI,EAAE,yCAAyC;EAC/C0d,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EAAE;QAAEtxB,IAAI,EAAE;UAAE5N,IAAI,EAAE;QAAS;MAAE;IACzC,CAAC;IACD,GAAG,EAAE;MACHk/B,UAAU,EAAEnF,aAAqB;MACjCoF,OAAO,EAAE;IACX;EACF,CAAC;EACDE,aAAa,EAAE,CAACvF,uBAAgB,EAAEA,UAAqB,EAAEA,OAAkB,CAAC;EAC5EwF,gBAAgB,EAAE,CAACxF,wBAAiB,CAAC;EACrCgF,UAAUA,uBAAAA;AACZ,CAAC;AACD,MAAM2hC,oCAA8D,GAAG;EACrEn/C,IAAI,EAAE,gCAAgC;EACtC0d,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EACRnF,+EAAuFukC;IAC3F,CAAC;IACD,GAAG,EAAE;MACHp/B,UAAU,EAAEnF,aAAqB;MACjCoF,OAAO,EAAE;IACX;EACF,CAAC;EACDC,eAAe,EAAE,CAACtF,gBAAgB,EAAEA,SAAoB,CAAC;EACzDuF,aAAa,EAAE,CAACvF,uBAAgB,EAAEA,UAAqB,CAAC;EACxDwF,gBAAgB,EAAE,CAACxF,wBAAiB,CAAC;EACrCgF,UAAUA,uBAAAA;AACZ,CAAC;AACD,MAAM6hC,uCAAiE,GAAG;EACxEr/C,IAAI,EAAE,mCAAmC;EACzC0d,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EACRnF,kFAA0FwkC;IAC9F,CAAC;IACD,GAAG,EAAE;MACHr/B,UAAU,EAAEnF,aAAqB;MACjCoF,OAAO,EAAE;IACX;EACF,CAAC;EACDC,eAAe,EAAE,CAACtF,gBAAgB,EAAEA,SAAoB,CAAC;EACzDuF,aAAa,EAAE,CAACvF,uBAAgB,EAAEA,UAAqB,CAAC;EACxDwF,gBAAgB,EAAE,CAACxF,wBAAiB,CAAC;EACrCgF,UAAUA,uBAAAA;AACZ,CAAC;AACD,MAAM+hC,oCAA8D,GAAG;EACrEv/C,IAAI,EAAE,uDAAuD;EAC7D0d,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EACRnF,iGAAyGykC;IAC7G,CAAC;IACD,GAAG,EAAE;MACHt/B,UAAU,EAAEnF,aAAqB;MACjCoF,OAAO,EAAE;IACX;EACF,CAAC;EACDC,eAAe,EAAE,CAACtF,gBAAgB,EAAEA,SAAoB,CAAC;EACzDuF,aAAa,EAAE,CACbvF,uBAAgB,EAChBA,UAAqB,EACrBA,UAAqB,CACtB;EACDwF,gBAAgB,EAAE,CAACxF,wBAAiB,CAAC;EACrCgF,UAAUA,uBAAAA;AACZ,CAAC;AACD,MAAMiiC,gCAA0D,GAAG;EACjEz/C,IAAI,EAAE,iBAAiB;EACvB0d,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EAAEnF,cAAsB+6B;IACpC,CAAC;IACD,GAAG,EAAE;MACH51B,UAAU,EAAEnF,aAAqB;MACjCoF,OAAO,EAAE;IACX;EACF,CAAC;EACDE,aAAa,EAAE,CAACvF,uBAAgB,EAAEA,EAAa,CAAC;EAChDwF,gBAAgB,EAAE,CAACxF,wBAAiB,CAAC;EACrCgF,UAAUA,uBAAAA;AACZ,CAAC;AACD,MAAMmiC,gCAA0D,GAAG;EACjE3/C,IAAI,EAAE,UAAU;EAChB0d,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EACRnF,6DAAqE0kC;IACzE,CAAC;IACD,GAAG,EAAE;MACHv/B,UAAU,EAAEnF,aAAqB;MACjCoF,OAAO,EAAE;IACX;EACF,CAAC;EACDC,eAAe,EAAE,CACftF,gBAAgB,EAChBA,SAAoB,EACpBA,EAAa,EACbA,MAAiB,CAClB;EACDuF,aAAa,EAAE,CAACvF,uBAAgB,CAAC;EACjCwF,gBAAgB,EAAE,CAACxF,wBAAiB,CAAC;EACrCgF,UAAUA,uBAAAA;AACZ,CAAC;AACD,MAAMqiC,mCAA6D,GAAG;EACpE7/C,IAAI,EAAE,wCAAwC;EAC9C0d,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EACRnF,qFAA6F2kC;IACjG,CAAC;IACD,GAAG,EAAE;MACHx/B,UAAU,EAAEnF,aAAqB;MACjCoF,OAAO,EAAE;IACX;EACF,CAAC;EACDE,aAAa,EAAE,CAACvF,uBAAgB,EAAEA,UAAqB,CAAC;EACxDwF,gBAAgB,EAAE,CAACxF,wBAAiB,CAAC;EACrCgF,UAAUA,uBAAAA;AACZ,CAAC;AACD,MAAMuiC,+BAAyD,GAAG;EAChE//C,IAAI,EAAE,gBAAgB;EACtB0d,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EAAE;QAAEtxB,IAAI,EAAE;UAAE5N,IAAI,EAAE;QAAS;MAAE;IACzC;EACF,CAAC;EACDq/B,aAAa,EAAE,CAACvF,uBAAgB,CAAC;EACjCwF,gBAAgB,EAAE,CAACxF,wBAAiB,CAAC;EACrCgF,UAAUA,uBAAAA;AACZ,CAAC;AACD,MAAMyiC,iCAA2D,GAAG;EAClEjgD,IAAI,EAAE,iDAAiD;EACvD0d,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EACRnF,2FAAmG4kC;IACvG,CAAC;IACD,GAAG,EAAE;MACHz/B,UAAU,EAAEnF,aAAqB;MACjCoF,OAAO,EAAE;IACX;EACF,CAAC;EACDC,eAAe,EAAE,CAACtF,gBAAgB,EAAEA,SAAoB,CAAC;EACzDuF,aAAa,EAAE,CAACvF,uBAAgB,EAAEA,MAAiB,EAAEA,SAAoB,CAAC;EAC1EwF,gBAAgB,EAAE,CAACxF,wBAAiB,CAAC;EACrCgF,UAAUA,uBAAAA;AACZ,CAAC;AACD,MAAM2iC,mCAA6D,GAAG;EACpEngD,IAAI,EAAE,8BAA8B;EACpC0d,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EACRnF,4EAAoF6kC;IACxF,CAAC;IACD,GAAG,EAAE;MACH1/B,UAAU,EAAEnF,aAAqB;MACjCoF,OAAO,EAAE;IACX;EACF,CAAC;EACDC,eAAe,EAAE,CAACtF,gBAAgB,EAAEA,SAAoB,CAAC;EACzDuF,aAAa,EAAE,CAACvF,uBAAgB,EAAEA,EAAa,CAAC;EAChDwF,gBAAgB,EAAE,CAACxF,wBAAiB,CAAC;EACrCgF,UAAUA,uBAAAA;AACZ,CAAC;AACD,MAAM6iC,sCAAgE,GAAG;EACvErgD,IAAI,EAAE,4BAA4B;EAClC0d,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EACRnF,0EAAkF8kC;IACtF,CAAC;IACD,GAAG,EAAE;MACH3/B,UAAU,EAAEnF,aAAqB;MACjCoF,OAAO,EAAE;IACX;EACF,CAAC;EACDC,eAAe,EAAE,CAACtF,gBAAgB,EAAEA,SAAoB,CAAC;EACzDuF,aAAa,EAAE,CAACvF,uBAAgB,EAAEA,EAAa,CAAC;EAChDwF,gBAAgB,EAAE,CAACxF,wBAAiB,CAAC;EACrCgF,UAAUA,uBAAAA;AACZ,CAAC;AACD,MAAM+iC,oCAA8D,GAAG;EACrEvgD,IAAI,EAAE,gCAAgC;EACtC0d,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EACRnF,6EAAqF+kC;IACzF,CAAC;IACD,GAAG,EAAE;MACH5/B,UAAU,EAAEnF,aAAqB;MACjCoF,OAAO,EAAE;IACX;EACF,CAAC;EACDC,eAAe,EAAE,CAACtF,gBAAgB,EAAEA,SAAoB,EAAEA,EAAa,CAAC;EACxEuF,aAAa,EAAE,CAACvF,uBAAgB,EAAEA,UAAqB,CAAC;EACxDwF,gBAAgB,EAAE,CAACxF,wBAAiB,CAAC;EACrCgF,UAAUA,uBAAAA;AACZ,CAAC;AACD,MAAMijC,0CAAoE,GAAG;EAC3EzgD,IAAI,EAAE,4CAA4C;EAClD0d,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EACRnF,wFAAgG8lC;IACpG,CAAC;IACD,GAAG,EAAE;MACH3gC,UAAU,EAAEnF,aAAqB;MACjCoF,OAAO,EAAE;IACX;EACF,CAAC;EACDC,eAAe,EAAE,CAACtF,sBAAe,CAAC;EAClCuF,aAAa,EAAE,CACbvF,uBAAgB,EAChBA,SAAoB,EACpBA,UAAqB,CACtB;EACDwF,gBAAgB,EAAE,CAACxF,wBAAiB,CAAC;EACrCgF,UAAUA,uBAAAA;AACZ,CAAC;AACD,MAAMmjC,iDAA2E,GAAG;EAClF3gD,IAAI,EAAE,oDAAoD;EAC1D0d,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EACRnF,+FAAuG+lC;IAC3G,CAAC;IACD,GAAG,EAAE;MACH5gC,UAAU,EAAEnF,aAAqB;MACjCoF,OAAO,EAAE;IACX;EACF,CAAC;EACDC,eAAe,EAAE,CAACtF,gBAAgB,EAAEA,KAAgB,EAAEA,SAAoB,CAAC;EAC3EuF,aAAa,EAAE,CACbvF,uBAAgB,EAChBA,SAAoB,EACpBA,UAAqB,CACtB;EACDwF,gBAAgB,EAAE,CAACxF,wBAAiB,CAAC;EACrCgF,UAAUA,uBAAAA;AACZ,CAAC;AACD,MAAMqjC,6BAAuD,GAAG;EAC9D7gD,IAAI,EAAE,kCAAkC;EACxC0d,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EAAE;QAAEtxB,IAAI,EAAE;UAAE5N,IAAI,EAAE;QAAS;MAAE;IACzC,CAAC;IACD,GAAG,EAAE;MACHk/B,UAAU,EAAEnF,aAAqB;MACjCoF,OAAO,EAAE;IACX;EACF,CAAC;EACDE,aAAa,EAAE,CAACvF,uBAAgB,EAAEA,UAAqB,CAAC;EACxDwF,gBAAgB,EAAE,CAACxF,wBAAiB,CAAC;EACrCgF,UAAUA,uBAAAA;AACZ,CAAC;AACD,MAAMujC,8BAAwD,GAAG;EAC/D/gD,IAAI,EAAE,eAAe;EACrB0d,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EAAEnF,YAAoB87B;IAClC,CAAC;IACD,GAAG,EAAE;MACH32B,UAAU,EAAEnF,aAAqB;MACjCoF,OAAO,EAAE;IACX;EACF,CAAC;EACDE,aAAa,EAAE,CAACvF,uBAAgB,EAAEA,EAAa,CAAC;EAChDwF,gBAAgB,EAAE,CAACxF,wBAAiB,CAAC;EACrCgF,UAAUA,uBAAAA;AACZ,CAAC;AACD,MAAMyjC,sBAAgD,GAAG;EACvDjhD,IAAI,EAAE,YAAY;EAClB0d,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EACRnF,8DAAsEglC;IAC1E,CAAC;IACD,GAAG,EAAE;MACH7/B,UAAU,EAAEnF,aAAqB;MACjCoF,OAAO,EAAE;IACX;EACF,CAAC;EACDC,eAAe,EAAE,CAACtF,gBAAgB,EAAEA,KAAgB,EAAEA,SAAoB,CAAC;EAC3EuF,aAAa,EAAE,CAACvF,uBAAgB,CAAC;EACjCwF,gBAAgB,EAAE,CAACxF,wBAAiB,CAAC;EACrCgF,UAAUA,uBAAAA;AACZ,CAAC;AACD,MAAM2jC,qBAA+C,GAAG;EACtDnhD,IAAI,EAAE,0BAA0B;EAChC0d,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EAAEnF,KAAas9B;IAC3B,CAAC;IACD,GAAG,EAAE;MACHn4B,UAAU,EAAEnF,aAAqB;MACjCoF,OAAO,EAAE;IACX,CAAC;IACD,GAAG,EAAE;MACHD,UAAU,EAAEnF,gBAAwB;MACpCoF,OAAO,EAAE;IACX;EACF,CAAC;EACDE,aAAa,EAAE,CAACvF,uBAAgB,EAAEA,SAAoB,CAAC;EACvDwF,gBAAgB,EAAE,CAACxF,wBAAiB,CAAC;EACrCgF,UAAUA,uBAAAA;AACZ,CAAC;AACD,MAAM6jC,0BAAoD,GAAG;EAC3DrhD,IAAI,EAAE,wBAAwB;EAC9B0d,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EAAEnF,KAAas9B;IAC3B,CAAC;IACD,GAAG,EAAE;MACHn4B,UAAU,EAAEnF,aAAqB;MACjCoF,OAAO,EAAE;IACX,CAAC;IACD,GAAG,EAAE;MACHD,UAAU,EAAEnF,gBAAwB;MACpCoF,OAAO,EAAE;IACX;EACF,CAAC;EACDE,aAAa,EAAE,CAACvF,uBAAgB,EAAEA,GAAc,EAAEA,GAAc,CAAC;EACjEwF,gBAAgB,EAAE,CAACxF,wBAAiB,CAAC;EACrCgF,UAAUA,uBAAAA;AACZ,CAAC;AACD,MAAM+jC,wBAAkD,GAAG;EACzDvhD,IAAI,EAAE,cAAc;EACpB0d,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EACRnF,iEAAyEilC;IAC7E,CAAC;IACD,GAAG,EAAE;MACH9/B,UAAU,EAAEnF,aAAqB;MACjCoF,OAAO,EAAE;IACX;EACF,CAAC;EACDC,eAAe,EAAE,CACftF,gBAAgB,EAChBA,KAAgB,EAChBA,SAAoB,EACpBA,KAAgB,CACjB;EACDuF,aAAa,EAAE,CAACvF,uBAAgB,CAAC;EACjCwF,gBAAgB,EAAE,CAACxF,wBAAiB,CAAC;EACrCgF,UAAUA,uBAAAA;AACZ,CAAC;AACD,MAAMikC,uBAAiD,GAAG;EACxDzhD,IAAI,EAAE,mBAAmB;EACzB0d,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EAAEnF,eAAehtB;IAC7B,CAAC;IACD,GAAG,EAAE;MACHmyB,UAAU,EAAEnF,aAAqB;MACjCoF,OAAO,EAAE;IACX,CAAC;IACD,GAAG,EAAE;MACHD,UAAU,EAAEnF,gBAAwB;MACpCoF,OAAO,EAAE;IACX;EACF,CAAC;EACDE,aAAa,EAAE,CAACvF,uBAAgB,EAAEA,EAAa,CAAC;EAChDwF,gBAAgB,EAAE,CAACxF,wBAAiB,CAAC;EACrCgF,UAAUA,uBAAAA;AACZ,CAAC;AACD,MAAMmkC,8BAAwD,GAAG;EAC/D3hD,IAAI,EAAE,qBAAqB;EAC3B0d,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EACRnF,uEAA+EklC;IACnF,CAAC;IACD,GAAG,EAAE;MACH//B,UAAU,EAAEnF,aAAqB;MACjCoF,OAAO,EAAE;IACX;EACF,CAAC;EACDC,eAAe,EAAE,CAACtF,gBAAgB,EAAEA,KAAgB,EAAEA,SAAoB,CAAC;EAC3EuF,aAAa,EAAE,CAACvF,uBAAgB,CAAC;EACjCwF,gBAAgB,EAAE,CAACxF,wBAAiB,CAAC;EACrCgF,UAAUA,uBAAAA;AACZ,CAAC;AACD,MAAMqkC,6BAAuD,GAAG;EAC9D7hD,IAAI,EAAE,oBAAoB;EAC1B0d,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EACRnF,qEAA6EmlC;IACjF,CAAC;IACD,GAAG,EAAE;MACHhgC,UAAU,EAAEnF,aAAqB;MACjCoF,OAAO,EAAE;IACX;EACF,CAAC;EACDC,eAAe,EAAE,CACftF,gBAAgB,EAChBA,KAAgB,EAChBA,SAAoB,EACpBA,WAAsB,EACtBA,gBAAgB,EAChBA,cAAyB,EACzBA,IAAe,EACfA,QAAmB,CACpB;EACDuF,aAAa,EAAE,CAACvF,uBAAgB,CAAC;EACjCwF,gBAAgB,EAAE,CAACxF,wBAAiB,CAAC;EACrCgF,UAAUA,uBAAAA;AACZ,CAAC;AACD,MAAMukC,0BAAoD,GAAG;EAC3D/hD,IAAI,EAAE,gBAAgB;EACtB0d,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EACRnF,kEAA0EolC;IAC9E,CAAC;IACD,GAAG,EAAE;MACHjgC,UAAU,EAAEnF,aAAqB;MACjCoF,OAAO,EAAE;IACX;EACF,CAAC;EACDC,eAAe,EAAE,CAACtF,gBAAgB,EAAEA,KAAgB,EAAEA,SAAoB,CAAC;EAC3EuF,aAAa,EAAE,CAACvF,uBAAgB,CAAC;EACjCwF,gBAAgB,EAAE,CAACxF,wBAAiB,CAAC;EACrCgF,UAAUA,uBAAAA;AACZ,CAAC;AACD,MAAMykC,yBAAmD,GAAG;EAC1DjiD,IAAI,EAAE,gBAAgB;EACtB0d,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EACRnF,kEAA0EqlC;IAC9E,CAAC;IACD,GAAG,EAAE;MACHlgC,UAAU,EAAEnF,aAAqB;MACjCoF,OAAO,EAAE;IACX;EACF,CAAC;EACDC,eAAe,EAAE,CAACtF,gBAAgB,EAAEA,KAAgB,EAAEA,SAAoB,CAAC;EAC3EuF,aAAa,EAAE,CAACvF,uBAAgB,CAAC;EACjCwF,gBAAgB,EAAE,CAACxF,wBAAiB,CAAC;EACrCgF,UAAUA,uBAAAA;AACZ,CAAC;AACD,MAAM0kC,wBAAkD,GAAG;EACzDliD,IAAI,EAAE,8BAA8B;EACpC0d,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EAAEnF,gBAAgBzJ;IAC9B,CAAC;IACD,GAAG,EAAE;MACH4O,UAAU,EAAEnF,aAAqB;MACjCoF,OAAO,EAAE;IACX,CAAC;IACD,GAAG,EAAE;MACHD,UAAU,EAAEnF,gBAAwB;MACpCoF,OAAO,EAAE;IACX;EACF,CAAC;EACDE,aAAa,EAAE,CAACvF,uBAAgB,EAAEA,SAAoB,CAAC;EACvDwF,gBAAgB,EAAE,CAACxF,wBAAiB,CAAC;EACrCgF,UAAUA,uBAAAA;AACZ,CAAC;AACD,MAAM4kC,mCAA6D,GAAG;EACpEpiD,IAAI,EAAE,2CAA2C;EACjD0d,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EACRnF,qFAA6FslC;IACjG,CAAC;IACD,GAAG,EAAE;MACHngC,UAAU,EAAEnF,aAAqB;MACjCoF,OAAO,EAAE;IACX;EACF,CAAC;EACDC,eAAe,EAAE,CAACtF,gBAAgB,EAAEA,KAAgB,EAAEA,SAAoB,CAAC;EAC3EuF,aAAa,EAAE,CAACvF,uBAAgB,EAAEA,SAAoB,CAAC;EACvDwF,gBAAgB,EAAE,CAACxF,wBAAiB,CAAC;EACrCgF,UAAUA,uBAAAA;AACZ,CAAC;AACD,MAAM8kC,0BAAoD,GAAG;EAC3DtiD,IAAI,EAAE,yBAAyB;EAC/B0d,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EAAEnF,UAAkBo/B;IAChC,CAAC;IACD,GAAG,EAAE;MACHj6B,UAAU,EAAEnF,aAAqB;MACjCoF,OAAO,EAAE;IACX,CAAC;IACD,GAAG,EAAE;MACHD,UAAU,EAAEnF,gBAAwB;MACpCoF,OAAO,EAAE;IACX;EACF,CAAC;EACDE,aAAa,EAAE,CAACvF,uBAAgB,EAAEA,KAAgB,CAAC;EACnDwF,gBAAgB,EAAE,CAACxF,wBAAiB,CAAC;EACrCgF,UAAUA,uBAAAA;AACZ,CAAC;AACD,MAAM+kC,sCAAgE,GAAG;EACvEviD,IAAI,EAAE,6BAA6B;EACnC0d,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EACRnF,0EAAkFulC;IACtF,CAAC;IACD,GAAG,EAAE;MACHpgC,UAAU,EAAEnF,aAAqB;MACjCoF,OAAO,EAAE;IACX;EACF,CAAC;EACDE,aAAa,EAAE,CAACvF,uBAAgB,EAAEA,KAAgB,CAAC;EACnDwF,gBAAgB,EAAE,CAACxF,wBAAiB,CAAC;EACrCgF,UAAUA,uBAAAA;AACZ,CAAC;AACD,MAAMilC,qBAA+C,GAAG;EACtDziD,IAAI,EAAE,WAAW;EACjB0d,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EACRnF,6DAAqEwlC;IACzE,CAAC;IACD,GAAG,EAAE;MACHrgC,UAAU,EAAEnF,aAAqB;MACjCoF,OAAO,EAAE;IACX;EACF,CAAC;EACDC,eAAe,EAAE,CACftF,gBAAgB,EAChBA,SAAoB,EACpBA,EAAa,EACbA,OAAkB,EAClBA,MAAiB,CAClB;EACDuF,aAAa,EAAE,CAACvF,uBAAgB,CAAC;EACjCwF,gBAAgB,EAAE,CAACxF,wBAAiB,CAAC;EACrCgF,UAAUA,uBAAAA;AACZ,CAAC;AACD,MAAMmlC,6BAAuD,GAAG;EAC9D3iD,IAAI,EAAE,oBAAoB;EAC1B0d,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EAAEnF,OAAemgC;IAC7B,CAAC;IACD,GAAG,EAAE;MACHh7B,UAAU,EAAEnF,aAAqB;MACjCoF,OAAO,EAAE;IACX;EACF,CAAC;EACDC,eAAe,EAAE,CAACtF,gBAAgB,EAAEA,KAAgB,EAAEA,SAAoB,CAAC;EAC3EuF,aAAa,EAAE,CAACvF,uBAAgB,CAAC;EACjCwF,gBAAgB,EAAE,CAACxF,wBAAiB,CAAC;EACrCgF,UAAUA,uBAAAA;AACZ,CAAC;AACD,MAAMqlC,wBAAkD,GAAG;EACzD7iD,IAAI,EAAE,kBAAkB;EACxB0d,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EACRnF,mEAA2EylC;IAC/E,CAAC;IACD,GAAG,EAAE;MACHtgC,UAAU,EAAEnF,aAAqB;MACjCoF,OAAO,EAAE;IACX;EACF,CAAC;EACDC,eAAe,EAAE,CAACtF,gBAAgB,EAAEA,KAAgB,EAAEA,SAAoB,CAAC;EAC3EuF,aAAa,EAAE,CAACvF,uBAAgB,CAAC;EACjCwF,gBAAgB,EAAE,CAACxF,wBAAiB,CAAC;EACrCgF,UAAUA,uBAAAA;AACZ,CAAC;AACD,MAAMslC,oBAA8C,GAAG;EACrD9iD,IAAI,EAAE,gBAAgB;EACtB0d,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EAAEnF,IAAYvsB;IAC1B,CAAC;IACD,GAAG,EAAE;MACH0xB,UAAU,EAAEnF,aAAqB;MACjCoF,OAAO,EAAE;IACX,CAAC;IACD,GAAG,EAAE;MACHD,UAAU,EAAEnF,gBAAwB;MACpCoF,OAAO,EAAE;IACX;EACF,CAAC;EACDE,aAAa,EAAE,CAACvF,uBAAgB,EAAEA,EAAa,CAAC;EAChDwF,gBAAgB,EAAE,CAACxF,wBAAiB,CAAC;EACrCgF,UAAUA,uBAAAA;AACZ,CAAC;AACD,MAAMwlC,2BAAqD,GAAG;EAC5DhjD,IAAI,EAAE,wBAAwB;EAC9B0d,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EAAEnF,OAAemgC;IAC7B,CAAC;IACD,GAAG,EAAE;MACHh7B,UAAU,EAAEnF,aAAqB;MACjCoF,OAAO,EAAE;IACX,CAAC;IACD,GAAG,EAAE;MACHD,UAAU,EAAEnF,gBAAwB;MACpCoF,OAAO,EAAE;IACX;EACF,CAAC;EACDC,eAAe,EAAE,CAACtF,gBAAgB,EAAEA,KAAgB,EAAEA,SAAoB,CAAC;EAC3EuF,aAAa,EAAE,CAACvF,uBAAgB,EAAEA,EAAa,CAAC;EAChDwF,gBAAgB,EAAE,CAACxF,wBAAiB,CAAC;EACrCgF,UAAUA,uBAAAA;AACZ,CAAC;AACD,MAAM0lC,0BAAoD,GAAG;EAC3DljD,IAAI,EAAE,uBAAuB;EAC7B0d,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EAAEnF,SAAiB2gC;IAC/B,CAAC;IACD,GAAG,EAAE;MACHx7B,UAAU,EAAEnF,gBAAwB;MACpCoF,OAAO,EAAE;IACX;EACF,CAAC;EACDC,eAAe,EAAE,CAACtF,gBAAgB,EAAEA,KAAgB,EAAEA,SAAoB,CAAC;EAC3EuF,aAAa,EAAE,CAACvF,uBAAgB,EAAEA,EAAa,CAAC;EAChDwF,gBAAgB,EAAE,CAACxF,wBAAiB,CAAC;EACrCgF,UAAUA,uBAAAA;AACZ,CAAC;AACD,MAAM4lC,4BAAsD,GAAG;EAC7DpjD,IAAI,EAAE,yBAAyB;EAC/B0d,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EACRnF,uEAA+E4gC;IACnF,CAAC;IACD,GAAG,EAAE;MACHz7B,UAAU,EAAEnF,gBAAwB;MACpCoF,OAAO,EAAE;IACX;EACF,CAAC;EACDE,aAAa,EAAE,CAACvF,uBAAgB,EAAEA,EAAa,CAAC;EAChDwF,gBAAgB,EAAE,CAACxF,wBAAiB,CAAC;EACrCgF,UAAUA,uBAAAA;AACZ,CAAC;AACD,MAAM8lC,4BAAsD,GAAG;EAC7DtjD,IAAI,EAAE,yBAAyB;EAC/B0d,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EAAE;QACVtxB,IAAI,EAAE;UAAE5N,IAAI,EAAE,YAAY;UAAE0H,KAAK,EAAE;YAAEkG,IAAI,EAAE;cAAE5N,IAAI,EAAE;YAAM;UAAE;QAAE;MAC/D;IACF,CAAC;IACD,GAAG,EAAE;MACHk/B,UAAU,EAAEnF,gBAAwB;MACpCoF,OAAO,EAAE;IACX;EACF,CAAC;EACDE,aAAa,EAAE,CAACvF,uBAAgB,EAAEA,EAAa,CAAC;EAChDwF,gBAAgB,EAAE,CAACxF,wBAAiB,CAAC;EACrCgF,UAAUA,uBAAAA;AACZ,CAAC;AACD,MAAMgmC,6BAAuD,GAAG;EAC9DxjD,IAAI,EAAE,0BAA0B;EAChC0d,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EAAEnF,YAAoB8gC;IAClC,CAAC;IACD,GAAG,EAAE;MACH37B,UAAU,EAAEnF,gBAAwB;MACpCoF,OAAO,EAAE;IACX;EACF,CAAC;EACDC,eAAe,EAAE,CAACtF,gBAAgB,EAAEA,KAAgB,EAAEA,SAAoB,CAAC;EAC3EuF,aAAa,EAAE,CAACvF,uBAAgB,EAAEA,EAAa,CAAC;EAChDwF,gBAAgB,EAAE,CAACxF,wBAAiB,CAAC;EACrCgF,UAAUA,uBAAAA;AACZ,CAAC;AACD,MAAMkmC,2BAAqD,GAAG;EAC5D1jD,IAAI,EAAE,wBAAwB;EAC9B0d,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EAAEnF,UAAkB+gC;IAChC,CAAC;IACD,GAAG,EAAE;MACH57B,UAAU,EAAEnF,gBAAwB;MACpCoF,OAAO,EAAE;IACX;EACF,CAAC;EACDC,eAAe,EAAE,CAACtF,gBAAgB,EAAEA,KAAgB,EAAEA,SAAoB,CAAC;EAC3EuF,aAAa,EAAE,CAACvF,uBAAgB,EAAEA,EAAa,CAAC;EAChDwF,gBAAgB,EAAE,CAACxF,wBAAiB,CAAC;EACrCgF,UAAUA,uBAAAA;AACZ,CAAC;AACD,MAAMomC,sBAAgD,GAAG;EACvD5jD,IAAI,EAAE,iBAAiB;EACvB0d,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EAAEnF,MAAc9V;IAC5B,CAAC;IACD,GAAG,EAAE;MACHib,UAAU,EAAEnF,aAAqB;MACjCoF,OAAO,EAAE;IACX,CAAC;IACD,GAAG,EAAE;MACHD,UAAU,EAAEnF,gBAAwB;MACpCoF,OAAO,EAAE;IACX;EACF,CAAC;EACDE,aAAa,EAAE,CAACvF,uBAAgB,EAAEA,EAAa,CAAC;EAChDwF,gBAAgB,EAAE,CAACxF,wBAAiB,CAAC;EACrCgF,UAAUA,uBAAAA;AACZ,CAAC;AACD,MAAMsmC,uBAAiD,GAAG;EACxD9jD,IAAI,EAAE,aAAa;EACnB0d,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EACRnF,+DAAuE0lC;IAC3E,CAAC;IACD,GAAG,EAAE;MACHvgC,UAAU,EAAEnF,aAAqB;MACjCoF,OAAO,EAAE;IACX;EACF,CAAC;EACDC,eAAe,EAAE,CAACtF,gBAAgB,EAAEA,KAAgB,EAAEA,SAAoB,CAAC;EAC3EuF,aAAa,EAAE,CAACvF,uBAAgB,CAAC;EACjCwF,gBAAgB,EAAE,CAACxF,wBAAiB,CAAC;EACrCgF,UAAUA,uBAAAA;AACZ,CAAC;AACD,MAAMH,iCAAgD,GAAG;EACvDrd,IAAI,EAAE,YAAY;EAClB0d,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EAAEnF,cAAc5E;IAC5B;EACF,CAAC;EACDkK,aAAa,EAAE,CAACvF,uBAAgB,CAAC;EACjCwF,gBAAgB,EAAE,CAACxF,wBAAiB,CAAC;EACrCgF,UAAUA,uBAAAA;AACZ,CAAC;AACD,MAAMwmC,0BAAoD,GAAG;EAC3DhkD,IAAI,EAAE,gBAAgB;EACtB0d,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EACRnF,mEAA2E2lC;IAC/E,CAAC;IACD,GAAG,EAAE;MACHxgC,UAAU,EAAEnF,aAAqB;MACjCoF,OAAO,EAAE;IACX;EACF,CAAC;EACDC,eAAe,EAAE,CAACtF,gBAAgB,EAAEA,KAAgB,EAAEA,SAAoB,CAAC;EAC3EuF,aAAa,EAAE,CAACvF,uBAAgB,CAAC;EACjCwF,gBAAgB,EAAE,CAACxF,wBAAiB,CAAC;EACrCgF,UAAUA,uBAAAA;AACZ,CAAC;AACD,MAAM0mC,yBAAmD,GAAG;EAC1DlkD,IAAI,EAAE,eAAe;EACrB0d,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EACRnF,iEAAyE4lC;IAC7E,CAAC;IACD,GAAG,EAAE;MACHzgC,UAAU,EAAEnF,aAAqB;MACjCoF,OAAO,EAAE;IACX;EACF,CAAC;EACDC,eAAe,EAAE,CAACtF,gBAAgB,EAAEA,KAAgB,EAAEA,SAAoB,CAAC;EAC3EuF,aAAa,EAAE,CAACvF,uBAAgB,CAAC;EACjCwF,gBAAgB,EAAE,CAACxF,wBAAiB,CAAC;EACrCgF,UAAUA,uBAAAA;AACZ,CAAC;AACD,MAAM4mC,mBAA6C,GAAG;EACpDpkD,IAAI,EAAE,SAAS;EACf0d,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EACRnF,2DAAmE6lC;IACvE,CAAC;IACD,GAAG,EAAE;MACH1gC,UAAU,EAAEnF,aAAqB;MACjCoF,OAAO,EAAE;IACX;EACF,CAAC;EACDC,eAAe,EAAE,CACftF,gBAAgB,EAChBA,KAAgB,EAChBA,SAAoB,EACpBA,KAAgB,EAChBA,SAAoB,EACpBA,OAAkB,EAClBA,QAAmB,EACnBA,OAAkB,EAClBA,MAAiB,EACjBA,QAAmB,EACnBA,WAAsB,EACtBA,UAAqB,CACtB;EACDuF,aAAa,EAAE,CAACvF,uBAAgB,CAAC;EACjCwF,gBAAgB,EAAE,CAACxF,wBAAiB,CAAC;EACrCgF,UAAUA,uBAAAA;AACZ,CAAC;AACD,MAAM8mC,uBAAiD,GAAG;EACxDtkD,IAAI,EAAE,eAAe;EACrB0d,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EAAE;QAAEtxB,IAAI,EAAE;UAAE5N,IAAI,EAAE;QAAS;MAAE;IACzC;EACF,CAAC;EACDo/B,eAAe,EAAE,CAACtF,KAAgB,EAAEA,MAAiB,EAAEA,GAAc,CAAC;EACtEuF,aAAa,EAAE,CAACvF,uBAAgB,CAAC;EACjCwF,gBAAgB,EAAE,CAACxF,wBAAiB,CAAC;EACrCgF,UAAUA,uBAAAA;AACZ,CAAC;AACD,MAAMgnC,2BAAqD,GAAG;EAC5DxkD,IAAI,EAAE,oBAAoB;EAC1B0d,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EACRnF,mEAA2E0iC;IAC/E,CAAC;IACD,GAAG,EAAE;MACHv9B,UAAU,EAAEnF,aAAqB;MACjCoF,OAAO,EAAE;IACX;EACF,CAAC;EACDE,aAAa,EAAE,CAACvF,uBAAgB,EAAEA,EAAa,CAAC;EAChDwF,gBAAgB,EAAE,CAACxF,wBAAiB,CAAC;EACrCgF,UAAUA,uBAAAA;AACZ,CAAC;AACD,MAAMknC,kBAA4C,GAAG;EACnD1kD,IAAI,EAAE,yBAAyB;EAC/B0d,UAAU,EAAE,KAAK;EACjBC,SAAS,EAAE;IACT,GAAG,EAAE;MACHC,UAAU,EAAEnF,UAAUjJ;IACxB,CAAC;IACD,GAAG,EAAE;MACHoO,UAAU,EAAEnF,aAAqB;MACjCoF,OAAO,EAAE;IACX,CAAC;IACD,GAAG,EAAE;MACHD,UAAU,EAAEnF,gBAAwB;MACpCoF,OAAO,EAAE;IACX;EACF,CAAC;EACDE,aAAa,EAAE,CAACvF,uBAAgB,EAAEA,WAAsB,CAAC;EACzDwF,gBAAgB,EAAE,CAACxF,wBAAiB,CAAC;EACrCgF,UAAUA,uBAAAA;AACZ,CAAC;;;;;AC9wDD;AACqC;AAKX;AAC+E;AAC/D;AAI1C,MAAMY,8BAAmB,GAAG,EAAW;AAEvC,MAAMC,8BAAmB,GAAG,EAAW;AAAC,IAAAC,kBAAA,oBAAAlgB,OAAA;AAAA,IAAAmgB,oBAAA,oBAAAngB,OAAA;AAAA,IAAAogB,oBAAA,oBAAApgB,OAAA;AAExC,MAAMwmD,qBAAqB,SAASD,UAAa,CAAC;EAAAnmE,YAAA,GAAAmuB,IAAA;IAAA,SAAAA,IAAA;IAAAjO,qCAAA,OAAA8f,oBAAA;IAAA9f,qCAAA,OAAA6f,oBAAA;IAAA7f,qCAAA,OAAA4f,kBAAA;EAAA;EAChD,MAAehF,oBAAoBA,CACjCoF,kBAAsC,EACtCC,aAA4B,EACd;IACd,MAAMhS,IAAI,GAAGrkB,SAAS,CACpBo2B,kBAAkB,EAClB,CAAC,CAACv5B,GAAG,EAAEiB,KAAK,CAAC,KAAK,CAACjB,GAAG,EAAAwa,gCAAA,CAAE,IAAI,EAAA4e,oBAAA,EAAAK,qBAAA,EAAA/hB,IAAA,CAAJ,IAAI,EAAYzW,KAAK,EAC/C,CAAuB;IACvB,OAAAuZ,gCAAA,CAAO,IAAI,EAAA6e,oBAAA,EAAAK,qBAAA,EAAAhiB,IAAA,CAAJ,IAAI,EAAY,MAAM,KAAK,CAACyc,oBAAoB,CAAC3M,IAAI,EAAEgS,aAAa,CAAC;EAC9E;AAkCF;AAAC,SAAAG,mBAAAA,CAhCUzyB,IAAS,EAAE0yB,SAGnB,EAAW;EACV,IAAI9R,KAAK,CAAC+R,OAAO,CAAC3yB,IAAI,CAAC,EAAE,OAAOA,IAAI,CAACrI,GAAG,CAAE0b,CAAC,IAAAC,gCAAA,CAAK,IAAI,EAAA2e,kBAAA,EAAAQ,mBAAA,EAAAjiB,IAAA,CAAJ,IAAI,EAAU6C,CAAC,EAAEqf,SAAS,CAAC,CAAC;EAC5E,IAAI1yB,IAAI,IAAI,IAAI,IAAI,OAAOA,IAAI,KAAK,QAAQ,EAAE;IAC5C,OAAO/D,SAAS,CAAC+D,IAAI,EAAE,CAAC,CAAClH,GAAG,EAAEiB,KAAK,CAAC,KAAK;MACvC,IAAIA,KAAK,IAAI,IAAI,EAAE,OAAO,CAACjB,GAAG,EAAEiB,KAAK,CAAC;MACtC,IAAIg4B,8BAAmB,CAACa,IAAI,CAAElf,CAAC,IAAKA,CAAC,KAAK5a,GAAG,CAAC,EAAE,OAAO,CAACA,GAAG,EAAE45B,SAAS,CAACG,MAAM,CAAC94B,KAAK,CAAC,CAAC;MACrF,IAAIi4B,8BAAmB,CAACY,IAAI,CAAElf,CAAC,IAAKA,CAAC,KAAK5a,GAAG,CAAC,EAAE,OAAO,CAACA,GAAG,EAAE45B,SAAS,CAAClhC,MAAM,CAACuI,KAAK,CAAC,CAAC;MACrF,OAAO,CAACjB,GAAG,EAAAwa,gCAAA,CAAE,IAAI,EAAA2e,kBAAA,EAAAQ,mBAAA,EAAAjiB,IAAA,CAAJ,IAAI,EAAUzW,KAAK,EAAE24B,SAAS,EAAE;IAC/C,CAAC,CAAC;EACJ;EACA,OAAO1yB,IAAI;AACb;AAAC,SAAAuyB,qBAAAA,CAEUvyB,IAAS,EAAO;EACzB,OAAAsT,gCAAA,CAAO,IAAI,EAAA2e,kBAAA,EAAAQ,mBAAA,EAAAjiB,IAAA,CAAJ,IAAI,EAAUxQ,IAAI,EAAE;IACzB6yB,MAAM,EAAG94B,KAAK,IAAK;MACjB,IAAIA,KAAK,YAAYzI,iCAAS,EAAE,OAAOyI,KAAK,CAACI,OAAO,CAAC,CAAC;MACtD,OAAOJ,KAAK,CAAC1E,QAAQ,CAAC,CAAC;IACzB,CAAC;IACD7D,MAAM,EAAGuI,KAAK,IAAKA,KAAK,CAAC1E,QAAQ,CAAC;EACpC,CAAC;AACH;AAAC,SAAAm9B,qBAAAA,CAEUxyB,IAAS,EAAO;EACzB,OAAAsT,gCAAA,CAAO,IAAI,EAAA2e,kBAAA,EAAAQ,mBAAA,EAAAjiB,IAAA,CAAJ,IAAI,EAAUxQ,IAAI,EAAE;IACzB6yB,MAAM,EAAG94B,KAAK,IAAKwI,MAAM,CAACxI,KAAK,CAAC;IAChCvI,MAAM,EAAGuI,KAAK,IAAK,CAACA;EACtB,CAAC;AACH;AA2Ca,MAAMoqD,qBAAU,SACpBoU,qBAAqB,CAAyC;EACvE;AACF;AACA;AACA;AACA;AACA;AACA;EACEpmE,WAAWA,CACTstB,GAAW,EACX;IACEsT,aAAa,GAAG,KAAK;IAAEvS,UAAU,GAAG,CAAC;IAAEC,iBAAiB,GAAG,GAAG;IAAE,GAAGja;EAKrE,CAAC,GAAG,CAAC,CAAC,EACN;IACA;IACA,KAAK,CAACiZ,GAAG,EAAE;MACTuT,uBAAuB,EAAE,IAAI;MAC7BC,kBAAkB,EAAE,CAClB7U,sBAAsB,CAAC,CAAC,EACxBe,2BAA2B,CAAC,CAAC,EAC7BoB,uBAAuB,CAACC,UAAU,EAAEC,iBAAiB,CAAC,EACtDX,uBAAuB,CAAEJ,IAAmB,IAAM,IAAGA,IAAI,CAAC/iB,KAAM,EAAC,CAAC,CACnE;MACD,GAAG6J;IACL,CAAC,CAAC;IACF,IAAI,CAACusB,aAAa,EAAE;MAClB,MAAMG,aAAa,GAAG,IAAI,CAACnC,SAAS,CAAC,CAAC;MACtC,MAAM1Q,cAAc,GAAG6S,aAAa,CAAClU,IAAI,CAAC,CAAC;QAAEgvC;MAAW,CAAC,KAAKA,UAAU,EAAGrxD,KAAK,IAAKA,KAAK,CAAC;MAC3F,IAAI,CAACw2B,QAAQ,CAACC,SAAS,CACrBjT,qBAAqB,CAAC,YAAY,EAAE,YAAY,EAAEE,cAAc,EAAE,QAAQ,EAAE,OAAO,CACrF,CAAC;IACH;EACF;AACF;;AC1IA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAe,CAACm4C,IAAuB,EAAEC,IAAuB,KAAiB;EAC/ED,IAAI,CAAC7qB,OAAO,CAAE3pC,GAAQ,IAAKy0D,IAAI,CAACrqB,WAAW,CAACpqC,GAAG,CAAC,EAAE,MAAMy0D,IAAI,CAACppB,UAAU,CAAC,CAAC,CAAC;EAC1EopB,IAAI,CAAC9qB,OAAO,CAAE3pC,GAAQ,IAAKw0D,IAAI,CAACpqB,WAAW,CAACpqC,GAAG,CAAC,EAAE,MAAMw0D,IAAI,CAACnpB,UAAU,CAAC,CAAC,CAAC;EAE1E,OAAO,MAAM;IACXmpB,IAAI,CAACnpB,UAAU,CAAC,CAAC;IACjBopB,IAAI,CAACppB,UAAU,CAAC,CAAC;EACnB,CAAC;AACH,CAAC;;AClBkF;;AAEnF;AACA;AACA;AACA;AACe,MAAeqpB,iBAAiB,CAAC;EAGpCvmE,WAAWA,CAAC;IAAEkoD,KAAK,GAAG;EAA2B,CAAC,EAAE;IAC5D,IAAI,CAACA,KAAK,GAAGA,KAAK;EACpB;;EAEA;AACF;AACA;AACA;AACA;EACE1M,OAAOA;EACL;EACAiO,SAA8D;EAC9D;EACAlO,YAAwB,EAClB;IACN,IAAI,IAAI,CAACuD,WAAW,CAAC,CAAC,EAAE,MAAM,IAAI/3C,qBAAqB,CAAC,uBAAuB,CAAC;EAClF;;EAEA;AACF;AACA;EACEm2C,UAAUA,CAAA,EAAS;IACjB,IAAI,CAAC,IAAI,CAAC4B,WAAW,CAAC,CAAC,EAAE,MAAM,IAAI93C,sBAAsB,CAAC,iDAAiD,CAAC;EAC9G;;EAEA;AACF;AACA;EACYw/D,cAAcA,CAACvmE,OAAY,EAAQ;IAC3C,IAAI,IAAI,CAACioD,KAAK,EAAErU,OAAO,CAACruB,GAAG,CAAC,kBAAkB,EAAEvlB,OAAO,CAAC;EAC1D;;EAEA;AACF;AACA;EACEg8C,WAAWA,CAACh8C,OAAY,EAAQ;IAC9B,IAAI,IAAI,CAACioD,KAAK,EAAErU,OAAO,CAACruB,GAAG,CAAC,eAAe,EAAEvlB,OAAO,CAAC;EACvD;;EAEA;AACF;AACA;AACA;AAEA;;;;;;ACrD0C;AACI;AACyB;AAAA,IAAAwmE,aAAA,oBAAApnD,OAAA;AAAA,IAAAqnD,OAAA,oBAAArnD,OAAA;AAAA,IAAAsnD,KAAA,oBAAAtnD,OAAA;AAIvE;AACA;AACA;AACA;AACe,MAAMunD,8BAA8B,SAASL,iBAAiB,CAAC;EAe5E;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACEvmE,WAAWA,CAAC;IACV4vB,MAAM;IACNi3C,IAAI,GAAG/mB,MAAM;IACblE,MAAM;IACNkrB,aAAa;IACbC,gBAAgB,GAAG1tB,iBAAiB,CAAC2tB,OAAO;IAC5C,GAAG3yD;EAQL,CAAC,GAAG,CAAC,CAAC,EAAE;IACN,KAAK,CAACA,OAAO,CAAC;IAAC8L,8CAAA,OAAAsmD,aAAA;MAAArmD,QAAA;MAAAxY,KAAA;IAAA;IAAAuY,8CAAA,OAAAumD,OAAA;MAAAtmD,QAAA;MAAAxY,KAAA;IAAA;IAAAuY,8CAAA,OAAAwmD,KAAA;MAAAvmD,QAAA;MAAAxY,KAAA;IAAA;IACfyY,8BAAA,KAAI,EAAAqmD,OAAA,EAAW92C,MAAM;IACrBvP,8BAAA,KAAI,EAAAsmD,KAAA,EAASE,IAAI;IACjB,IAAI,CAACjrB,MAAM,GAAGA,MAAM;IACpB,IAAI,CAACkrB,aAAa,GAAGA,aAAa;IAClC,IAAI,CAACC,gBAAgB,GAAGA,gBAAgB;EAC1C;EAEAjoB,WAAWA,CAAA,EAAY;IACrB,OAAO,IAAI,CAACmoB,QAAQ,IAAI,IAAI;EAC9B;EAESzrB,OAAOA,CACdiO,SAAoF,EACpFlO,YAAwB,EAClB;IACN,KAAK,CAACC,OAAO,CAACiO,SAAS,EAAElO,YAAY,CAAC;IACtC,IAAI,CAAC0rB,QAAQ,GAAIhnE,OAA0B,IAAK;MAAA,IAAAinE,qBAAA,EAAAC,kBAAA;MAC9C;MACA,IACE,OAAOlnE,OAAO,CAAC4N,IAAI,KAAK,QAAQ,IAC7B,EAAAq5D,qBAAA,GAACjnE,OAAO,CAAC4N,IAAI,CAACguC,OAAO,cAAAqrB,qBAAA,cAAAA,qBAAA,IAAAC,kBAAA,GAAIlnE,OAAO,CAAC4N,IAAI,CAACA,IAAI,cAAAs5D,kBAAA,uBAAjBA,kBAAA,CAAmBtrB,OAAO,MAAM,KAAK,EACjE;MACF,IAAI,IAAI,CAACD,MAAM,IAAI,IAAI,IAAI,IAAI,CAACA,MAAM,KAAK37C,OAAO,CAAC27C,MAAM,EAAE;MAC3D,IAAI57B,8BAAA,KAAI,EAAA0mD,OAAA,KAAY,IAAI,IAAI1mD,8BAAA,KAAI,EAAA0mD,OAAA,MAAazmE,OAAO,CAACoE,MAAM,EAAE;MAC7D,IAAI,CAACmiE,cAAc,CAACvmE,OAAO,CAAC;MAC5B,IAAI;QAAE4N;MAAK,CAAC,GAAG5N,OAAO;MACtB,IAAI4N,IAAI,CAACC,IAAI,IAAI,IAAI,EAAE;QACrB,IAAI7N,OAAO,CAAC4N,IAAI,CAACC,IAAI,KAAK,IAAI,CAACi5D,gBAAgB,EAAE;QACjDl5D,IAAI,GAAGA,IAAI,CAACA,IAAI;MAClB;MACA47C,SAAS,CAAC57C,IAAI,EAAE5N,OAAO,CAAC27C,MAAM,EAAE37C,OAAO,CAACoE,MAAM,CAAC;IACjD,CAAC;IACD2b,8BAAA,KAAI,EAAA2mD,KAAA,EAAOS,gBAAgB,CAAC,SAAS,EAAE,IAAI,CAACH,QAAQ,CAAC;IACrD5mD,8BAAA,KAAI,EAAAomD,aAAA,EAAiBlrB,YAAY;EACnC;EAES2B,UAAUA,CAAA,EAAS;IAC1B,KAAK,CAACA,UAAU,CAAC,CAAC;IAClB,IAAI,IAAI,CAAC+pB,QAAQ,IAAI,IAAI,IAAIjnD,8BAAA,KAAI,EAAAymD,aAAA,KAAkB,IAAI,EAAE;MACvD,MAAM,IAAIjkE,aAAa,CAAC,yCAAyC,CAAC;IACpE;IACAwd,8BAAA,KAAI,EAAA2mD,KAAA,EAAOU,mBAAmB,CAAC,SAAS,EAAE,IAAI,CAACJ,QAAQ,CAAC;IACxD,OAAO,IAAI,CAACA,QAAQ;IACpBjnD,8BAAA,KAAI,EAAAymD,aAAA,EAAApoD,IAAA,CAAJ,IAAI;IACJgC,8BAAA,KAAI,EAAAomD,aAAA,EAAiB51D,SAAS;EAChC;EAESorC,WAAWA,CAACpqC,GAAQ,EAAQ;IAAA,IAAAy1D,YAAA;IACnC,IAAItnD,8BAAA,KAAI,EAAA0mD,OAAA,KAAY,IAAI,EAAE,MAAM,IAAIz/D,kBAAkB,CAAC,qCAAqC,CAAC;IAC7F,MAAMhH,OAAO,GAAG,IAAI,CAAC6mE,aAAa,IAAI,IAAI,GAAG;MAAEh5D,IAAI,EAAE,IAAI,CAACg5D,aAAa;MAAEj5D,IAAI,EAAEgE;IAAI,CAAC,GAAGA,GAAG;IAC1F,KAAK,CAACoqC,WAAW,CAACh8C,OAAO,CAAC;IAC1B+f,8BAAA,KAAI,EAAA0mD,OAAA,EAASa,WAAW,CAACtnE,OAAO,GAAAqnE,YAAA,GAAE,IAAI,CAAC1rB,MAAM,cAAA0rB,YAAA,cAAAA,YAAA,GAAI,GAAG,CAAC;EACvD;AACF;;ACvG+E;AACzB;AAEK;AAQ3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAe,CACbhsB,UAA6B,EAC7BksB,UAAqF,KACtE;EACf,IAAI1nB,MAAM,IAAI,IAAI,EAAE,MAAM,IAAI99C,wBAAwB,CAAC,sEAAsE,CAAC;EAC9H,MAAMylE,OAAgB,GAAG,CAAC,CAAC;EAE3BnsB,UAAU,CAACE,OAAO,CAAC,CACjB;IAAEruB,MAAM;IAAElZ;EAA+C,CAAC,EAC1D2nC,MAAc,EACdv3C,MAAc,KACX;IACH,IAAI8oB,MAAM,KAAKqsB,OAAO,CAAC2D,cAAc,IAAIsqB,OAAO,CAACxzD,MAAM,CAAC3Q,EAAE,CAAC,IAAI,IAAI,EAAE;IAErE,MAAMokE,MAAM,GAAG;MACbv3C,IAAI,EAAElc,MAAM;MACZ0zD,aAAaA,CAAA,EAAG;QACd,OAAO,IAAIf,8BAA8B,CAAC;UACxCh3C,MAAM,EAAEvrB,MAAM;UACd,IAAG4P,MAAM,CAACnG,IAAI,KAAK,WAAW,GAAG;YAC/Bg5D,aAAa,EAAEztB,iBAAiB,CAACuuB,UAAU;YAC3Cb,gBAAgB,EAAE1tB,iBAAiB,CAAC2tB,OAAO;YAC3C,IAAGlnB,MAAM,CAAClE,MAAM,KAAK,MAAM,IAAI;cAAEA,MAAM,EAAEkE,MAAM,CAAClE;YAAO,CAAC;UAC1D,CAAC,GAAG;YACFA,MAAM,EAAE3nC,MAAM,CAAC2nC;UACjB,CAAC;QACH,CAAC,CAAC;MACJ;IACF,CAAC;IACD6rB,OAAO,CAACC,MAAM,CAACv3C,IAAI,CAAC7sB,EAAE,CAAC,GAAGokE,MAAM;IAChCF,UAAU,CAAC;MAAEC,OAAO;MAAEI,SAAS,EAAEH;IAAO,CAAC,CAAC;EAC5C,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC;EAEZ,OAAO,MAAMpsB,UAAU,CAAC4B,UAAU,CAAC,CAAC;AACtC,CAAC;;;;;;ACpDyC;AACa;;AAEvD;AACA;AACA;AACA;AACA;AAJA,IAAA4qB,UAAA,oBAAAzoD,OAAA;AAKe,MAAM0oD,wBAAwB,SAASxB,iBAAiB,CAAC;EAKtEvmE,WAAWA,CAAC;IAAEwX,IAAI;IAAE,GAAGnD;EAAgD,CAAC,EAAE;IACxE,KAAK,CAACA,OAAO,CAAC;IAAC8L,wCAAA,OAAA2nD,UAAA;MAAA1nD,QAAA;MAAAxY,KAAA;IAAA;IACf,IAAI,CAAC4P,IAAI,GAAGA,IAAI;EAClB;EAES0lC,UAAUA,CAAA,EAAS;IAC1B,KAAK,CAACA,UAAU,CAAC,CAAC;IAClB,IAAI,CAAC1lC,IAAI,CAAC0lC,UAAU,CAAC,CAAC;IACtB,IAAIl9B,8BAAA,KAAI,EAAA8nD,UAAA,KAAe,IAAI,EAAE,MAAM,IAAIrlE,iBAAiB,CAAC,CAAC;IAC1D,IAAI,CAAC+U,IAAI,CAACiyC,SAAS,CAACmE,cAAc,CAAC5tC,8BAAA,KAAI,EAAA8nD,UAAA,EAAY,CAAC,CAAC,CAAC;IACtD,IAAI,CAACtwD,IAAI,CAAC+jC,YAAY,CAACqS,cAAc,CAAC5tC,8BAAA,KAAI,EAAA8nD,UAAA,EAAY,CAAC,CAAC,CAAC;IACzDznD,8BAAA,KAAI,EAAAynD,UAAA,EAAcj3D,SAAS;EAC7B;EAES2qC,OAAOA,CACdiO,SAAuE,EACvElO,YAAwB,EAClB;IACN,KAAK,CAACC,OAAO,CAACiO,SAAS,EAAElO,YAAY,CAAC;IACtCl7B,8BAAA,KAAI,EAAAynD,UAAA,EAAc,CAChB,CAAC7nE,OAAO,EAAEuX,IAAI,KAAK;MAAA,IAAAwwD,gBAAA,EAAAC,YAAA;MACjB,IAAI,CAACzB,cAAc,CAACvmE,OAAO,CAAC;MAC5B;MACAwpD,SAAS,CAACxpD,OAAO,GAAA+nE,gBAAA,IAAAC,YAAA,GAAEzwD,IAAI,CAACg8C,MAAM,cAAAyU,YAAA,uBAAXA,YAAA,CAAa36C,GAAG,cAAA06C,gBAAA,cAAAA,gBAAA,GAAI,EAAE,EAAExwD,IAAI,CAAC;IAClD,CAAC,EACD+jC,YAAY,CACb;IACD,IAAI,CAAC/jC,IAAI,CAACiyC,SAAS,CAACye,WAAW,CAACloD,8BAAA,KAAI,EAAA8nD,UAAA,EAAY,CAAC,CAAC,CAAC;IACnD,IAAI,CAACtwD,IAAI,CAAC+jC,YAAY,CAAC2sB,WAAW,CAACloD,8BAAA,KAAI,EAAA8nD,UAAA,EAAY,CAAC,CAAC,CAAC;EACxD;EAES7rB,WAAWA,CAACh8C,OAAY,EAAQ;IACvC,KAAK,CAACg8C,WAAW,CAACh8C,OAAO,CAAC;IAC1B,IAAI,CAACuX,IAAI,CAAC+vD,WAAW,CAACtnE,OAAO,CAAC;EAChC;EAEA6+C,WAAWA,CAAA,EAAY;IACrB,OAAO9+B,8BAAA,KAAI,EAAA8nD,UAAA,KAAe,IAAI;EAChC;AACF;;;ACrDkF;AAGpB;;AAE9D;AACA;AACA;AACA;AACO,MAAMK,iBAAiB,SAASxuB,QAAQ,CAAC;EAK9C35C,WAAWA,CAAC6N,IAAU,EAAE;IACtB,KAAK,CAAC,kBAAkB,CAAC;IAACwpC,wBAAA,eAHZ,CAAC;IAIf,IAAI,CAACxpC,IAAI,GAAGA,IAAI;IAChB,IAAI,CAAC3N,IAAI,GAAG,mBAAmB;EACjC;AACF;;AAEA;AACA;AACA;AAFAm3C,wBAAA,CAZa8wB,iBAAiB,UACL,CAAC;AAcnB,MAAMC,mBAAmB,GAAG,EAAE,CAAC,CAAC;;AAEvC;AACA;AACA;AACO,SAASC,eAAeA,CAACzgE,KAAc,EAAE85B,GAAa,EAA6B;EACxF,MAAM4mC,SAAS,GAAG,IAAIxmC,2BAAY,CAAC,CAAC,CAACW,WAAW,CAACf,GAAG,EAAE,CAAC,CAAC,CAAC;EACzD,OAAO,IAAIK,uCAAwB,CAAC,CAAC,CAACY,cAAc,CAAC/6B,KAAK,EAAE0gE,SAAS,CAAC;AACxE;;AAEA;AACA;AACA;AACO,SAASC,eAAeA,CAAC3gE,KAAgC,EAAE85B,GAAa,EAAO;EACpF,MAAM4mC,SAAS,GAAG,IAAIxmC,2BAAY,CAAC,CAAC,CAACW,WAAW,CAACf,GAAG,EAAE,CAAC,CAAC,CAAC;EACzD,OAAO,IAAIK,uCAAwB,CAAC,CAAC,CAACymC,cAAc,CAAC5gE,KAAK,EAAE0gE,SAAS,CAAC;AACxE;;ACnCiB;AAKO;AACyB;AAET;AAGlB;AAIQ;AAKE;AAEhC;AAG6B;AAGA;AACoD;AAG/C;AAIP;AAGF;AACgD;AAGzD;AAC0C;AAKxC;AACgD;AACmC;AAE5C;AACN;AACR;AACQ;AACI;AACd;AACqB;AACN;AACI;AACU;AACV;AACc;AACP;AACA;AACX;AAKxB;AACsB;AAEoC;AAM9C;AAC4C;AACoB;AACY;AAqBhG;;;AC9GxB,MAAM,sCAA4B;;ACAlC,MAAM,2BAA4B;;ACAlC,MAAM,6BAA4B;;ACAlC,MAAM,wBAA4B;;;;;;;;;;;;ACAO;AACb;AACsB;AACC;AACf;AACO;AAEgD;AAChC;AACX;AAEhD,MAAMmB,cAAc,GAAGA,CAAA,KAAc;EACnC,MAAMjoD,IAAI,GAAG2nD,yCAAO,CAACK,+BAAa,CAAAE,yCAAA,CAAAE,UAAA,EAAA1mE,QAAA,EAAgB,CAAC,CAAC;EACpD,IAAIkmE,0CAAQ,CAAC5nD,IAAI,CAAC,KAAK,MAAM,EAAE,OAAO5X,yCAAO,CAAC4X,IAAI,EAAE,IAAI,CAAC;EACzD,IAAI4nD,0CAAQ,CAAC5nD,IAAI,CAAC,KAAK,UAAU,EAAE,OAAO5X,yCAAO,CAAC4X,IAAI,EAAE,UAAU,CAAC;EACnE,MAAM,IAAIhf,aAAa,CAAC,yBAAyB,CAAC;AACpD,CAAC;;AAED;AACA;AACA;AACA;AAHA,IAAAqnE,KAAA,oBAAAxqD,OAAA;AAAA,IAAAyqD,wBAAA,oBAAAzqD,OAAA;AAAA,IAAA0qD,IAAA,oBAAAnqD,OAAA;AAIe,MAAMoqD,WAAW,SAAShoB,YAAY,CAAC;EAKpD;AACF;AACA;AACA;AACA;EACEhiD,WAAWA,CACTiqE,YAAY,GAAGrgE,yCAAO,CAAC6/D,cAAc,CAAC,CAAC,EAAE,oBAAoB,CAAC,EAC9D;IAAE7oC;EAA2C,CAAC,GAAG,CAAC,CAAC,EACnD;IACA,KAAK,CAAC,CAAC;IAAC1gB,8BAAA,OAAA6pD,IAAA;IAAA5pD,6BAAA,OAAA0pD,KAAA;MAAAzpD,QAAA;MAAAxY,KAAA;IAAA;IAAAuY,6BAAA,OAAA2pD,wBAAA;MAAA1pD,QAAA;MAAAxY,KAAA,EAXiB+B,OAAO,CAACC,OAAO,CAAC;IAAC;IAY1CyW,8BAAA,KAAI,EAAAwpD,KAAA,EAASI,YAAY;IACzB,IAAIrpC,aAAa,KAAK,IAAI,EAAE;MAC1BvgB,8BAAA,KAAI,EAAAypD,wBAAA,EAA4B,IAAI,CAACznE,OAAO,CAAC,CAAC,CAACwqB,IAAI,CAAExqB,OAAO,IAAK;QAC/D,MAAMg/B,QAAQ,GAAG,CAACh/B,OAAO,EAAE,OAAO,EAAE,OAAO,CAAU;QACrD,IAAI,CAACgpB,eAAe,CAAC,GAAGgW,QAAQ,CAAC,EAAE,MAAM,IAAIl/B,uBAAuB,CAAC,UAAU,EAAE,GAAGk/B,QAAQ,CAAC;MAC/F,CAAC,CAAC;IACJ;EACF;EA8BA,MAAMyO,OAAOA,CAACtuB,IAAY,EAGvB;IACD,MAAAxB,8BAAA,CAAM,IAAI,EAAA8pD,wBAAA,CAAyB;IACnC,IAAI;MACF,MAAM,CAACj1C,QAAQ,EAAE6M,GAAG,CAAC,GAAG,MAAM/3B,OAAO,CAACkhB,GAAG,CAAC,CAAA1J,yBAAA,CACxC,IAAI,EAAA4oD,IAAA,EAAAG,KAAA,EAAA7rD,IAAA,CAAJ,IAAI,EAAMmD,IAAI,GACdL,yBAAA,KAAI,EAAA4oD,IAAA,EAAAG,KAAA,EAAA7rD,IAAA,CAAJ,IAAI,EAAM,mBAAmB,EAAEmD,IAAI,EAAEqL,IAAI,CAAE8W,GAAG,IAAKvW,IAAI,CAACW,KAAK,CAAC4V,GAAG,CAAC,CAAC,CACpE,CAAC;MACF,OAAO;QACL9O,QAAQ,EAAEA,QAAQ,CAACs1C,OAAO,CAAC,CAA8B;QACzDzoC;MACF,CAAC;IACH,CAAC,CAAC,OAAOl3B,KAAK,EAAE;MACdW,WAAW,CAACX,KAAK,CAAC;MAClB,MAAM,IAAIjK,aAAa,CAACiK,KAAK,CAACvK,OAAO,CAAC;IACxC;EACF;EAEA,MAAM0vC,mBAAmBA,CAACD,UAAkB,EAAEE,UAAmC,EAG9E;IACD,MAAMw6B,GAAG,GAAG,MAAA5pD,+BAAA,CAAMwpD,WAAW,EA5EZA,WAAW,EAAAK,qBAAA,EAAAhsD,IAAA,CA4EV2rD,WAAW,EAAuBt6B,UAAU,EAAEE,UAAU,CAAC;IAC3E,IAAI;MACF,OAAO,MAAM,IAAI,CAACE,OAAO,CAACs6B,GAAG,CAAC;IAChC,CAAC,SAAS;MACR,MAAMb,+BAAE,CAACJ,yCAAO,CAACiB,GAAG,CAAC,EAAE;QAAEE,SAAS,EAAE;MAAK,CAAC,CAAC;IAC7C;EACF;EAEA,MAAM9jB,WAAWA,CAAChlC,IAAY,EAAgB;IAC5C,MAAAxB,8BAAA,CAAM,IAAI,EAAA8pD,wBAAA,CAAyB;IACnC,IAAI;MACF,OAAO18C,IAAI,CAACW,KAAK,CAAC,MAAA5M,yBAAA,CAAM,IAAI,EAAA4oD,IAAA,EAAAG,KAAA,EAAA7rD,IAAA,CAAJ,IAAI,EAAM,WAAW,EAAE,mBAAmB,EAAEmD,IAAI,CAAC,CAAC;IAC5E,CAAC,CAAC,OAAOhX,KAAK,EAAE;MACdW,WAAW,CAACX,KAAK,CAAC;MAClB,MAAM,IAAIjK,aAAa,CAACiK,KAAK,CAACvK,OAAO,CAAC;IACxC;EACF;EAEA,MAAMsmD,uBAAuBA,CAC3B7W,UAAkB,EAClBE,UAAmC,EACrB;IACd,MAAMw6B,GAAG,GAAG,MAAA5pD,+BAAA,CAAMwpD,WAAW,EAlGZA,WAAW,EAAAK,qBAAA,EAAAhsD,IAAA,CAkGV2rD,WAAW,EAAuBt6B,UAAU,EAAEE,UAAU,CAAC;IAC3E,IAAI;MACF,OAAO,MAAM,IAAI,CAAC4W,WAAW,CAAC4jB,GAAG,CAAC;IACpC,CAAC,SAAS;MACR,MAAMb,+BAAE,CAACJ,yCAAO,CAACiB,GAAG,CAAC,EAAE;QAAEE,SAAS,EAAE;MAAK,CAAC,CAAC;IAC7C;EACF;EAEA,MAAMp4B,QAAQA,CAACrd,QAAmC,EAAErT,IAAY,EAAoB;IAClF,MAAAxB,8BAAA,CAAM,IAAI,EAAA8pD,wBAAA,CAAyB;IACnC,IAAI;MACF,OAAO,CAAC,MAAA3oD,yBAAA,CAAM,IAAI,EAAA4oD,IAAA,EAAAG,KAAA,EAAA7rD,IAAA,CAAJ,IAAI,EAAMmD,IAAI,EAAE,YAAY,EAAEqT,QAAQ,CAAC,EAAEv1B,QAAQ,CAAC,wBAAwB,CAAC;IAC3F,CAAC,CAAC,OAAOkL,KAAK,EAAE;MACd,OAAO,KAAK;IACd;EACF;EAEA,MAAMynC,oBAAoBA,CACxBpd,QAAmC,EACnC6a,UAAkB,EAClBE,UAAmC,EACjB;IAClB,MAAMw6B,GAAG,GAAG,MAAA5pD,+BAAA,CAAMwpD,WAAW,EAxHZA,WAAW,EAAAK,qBAAA,EAAAhsD,IAAA,CAwHV2rD,WAAW,EAAuBt6B,UAAU,EAAEE,UAAU,CAAC;IAC3E,IAAI;MACF,OAAO,MAAM,IAAI,CAACsC,QAAQ,CAACrd,QAAQ,EAAEu1C,GAAG,CAAC;IAC3C,CAAC,SAAS;MACR,MAAMb,+BAAE,CAACJ,yCAAO,CAACiB,GAAG,CAAC,EAAE;QAAEE,SAAS,EAAE;MAAK,CAAC,CAAC;IAC7C;EACF;EAEA,MAAMjoE,OAAOA,CAAA,EAAoB;IAAA,IAAAkoE,iBAAA;IAC/B,MAAMC,UAAU,GAAG,MAAArpD,yBAAA,CAAM,IAAI,EAAA4oD,IAAA,EAAAG,KAAA,EAAA7rD,IAAA,CAAJ,IAAI,EAAM,WAAW,CAAC;IAC/C,MAAMosD,GAAG,IAAAF,iBAAA,GAAGC,UAAU,CAAC9jB,KAAK,CAAC,oCAAoC,CAAC,cAAA6jB,iBAAA,uBAAtDA,iBAAA,CAAyD,CAAC,CAAC;IACvE,IAAIE,GAAG,IAAI,IAAI,EAAE,MAAM,IAAIlqE,aAAa,CAAC,6BAA6B,CAAC;IACvE,OAAOkqE,GAAG;EACZ;AACF;AAAC,eAAAP,MA9GY,GAAG9rD,UAAoB,EAAmB;EACnD,OAAO,IAAIzU,OAAO,CAAC,CAAC+gE,QAAQ,EAAEC,OAAO,KAAK;IACxC1B,mDAAQ,CAAC,SAAS,EAAE,CAAAjpD,8BAAA,CAAC,IAAI,EAAA6pD,KAAA,GAAQ,GAAGzrD,UAAU,CAAC,EAAE,CAAC5T,KAAK,EAAEogE,MAAM,EAAEC,MAAM,KAAK;MAC1E,IAAIrgE,KAAK,IAAI,IAAI,EAAEmgE,OAAO,CAACngE,KAAK,CAAC,CAAC,KAC7B,IAAIqgE,MAAM,KAAK,EAAE,EAAEF,OAAO,CAAC,IAAIpqE,aAAa,CAACsqE,MAAM,CAAC,CAAC,CAAC,KACtDH,QAAQ,CAACE,MAAM,CAAC;IACvB,CAAC,CAAC;EACJ,CAAC,CAAC;AACJ;AAAC,eAAAP,sBAGC36B,UAAkB,EAClBE,UAAkC,GAAG,CAAC,CAAC,EACtB;EACjB,MAAMk7B,UAAU,GAAGA,CAAA,KAAcpiE,IAAI,CAACuH,MAAM,CAAC,CAAC,CAAC/M,QAAQ,CAAC,EAAE,CAAC,CAACgL,KAAK,CAAC,CAAC,CAAC;EACpE,MAAMsT,IAAI,GAAG5X,yCAAO,CAACs/D,sCAAM,CAAC,CAAC,EAAG,eAAc4B,UAAU,CAAC,CAAE,EAAC,CAAC;EAC7D,MAAMzB,kCAAK,CAAC7nD,IAAI,CAAC;EACjB,MAAMquB,cAAc,GAAGjmC,yCAAO,CAAC4X,IAAI,EAAG,GAAEspD,UAAU,CAAC,CAAE,MAAK,CAAC;EAC3D,MAAMxB,sCAAS,CAACz5B,cAAc,EAAEH,UAAU,CAAC;EAC3C,MAAM/lC,OAAO,CAACkhB,GAAG,CAAC7gB,MAAM,CAACE,OAAO,CAAC0lC,UAAU,CAAC,CACzCpqC,GAAG,CAAC,OAAO,CAACtF,IAAI,EAAE6qE,GAAG,CAAC,KAAK;IAC1B,MAAMviE,CAAC,GAAGoB,yCAAO,CAAC4X,IAAI,EAAEthB,IAAI,CAAC;IAC7B,MAAMmpE,kCAAK,CAACF,yCAAO,CAAC3gE,CAAC,CAAC,EAAE;MAAE8hE,SAAS,EAAE;IAAK,CAAC,CAAC;IAC5C,OAAOhB,sCAAS,CAAC9gE,CAAC,EAAEuiE,GAAG,CAAC;EAC1B,CAAC,CAAC,CAAC;EACL,OAAOl7B,cAAc;AACvB;;;;;;ACxEqC;AACW;AACC;AAEnD,MAAMo7B,eAAe,GAAG,CACtB,UAAU,EAAE,YAAY,EAAE,YAAY,EACtC,UAAU,EAAE,UAAU,EAAE,YAAY,EACpC,eAAe,EAAE,UAAU,EAAE,SAAS,EACtC,aAAa,CACd;AACD,MAAMC,aAAa,GAAG,2BAA2B;AACjD,MAAMC,cAAc,GAAG,IAAIt5C,MAAM,CAACq5C,aAAa,CAAC7mE,MAAM,EAAG,GAAA+mE,eAAA,CAAEF,aAAa,CAAO,GAAE,CAAC;AAElF,eAAeG,gBAAgBA,CAC7BC,IAAY,EACZC,QAAgB,EACiB;EAAA,IAAAC,iBAAA;EACjC,MAAM97B,UAAU,GAAG,MAAMs7B,qCAAQ,CAACphE,yCAAO,CAAC0hE,IAAI,EAAEC,QAAQ,CAAC,EAAE,MAAM,CAAC;EAClE,MAAME,UAAkC,GAAG,CAAC,CAAC;EAC7C,MAAM9hE,OAAO,CAACkhB,GAAG,CAAC,EAAA2gD,iBAAA,GAAC97B,UAAU,CAACgX,KAAK,CAACykB,cAAc,CAAC,cAAAK,iBAAA,cAAAA,iBAAA,GAAI,EAAE,EACtDhmE,GAAG,CAAEkmE,OAAO,IAAK;IAChB,MAAMC,CAAC,GAAGD,OAAO,CAAChlB,KAAK,CAACwkB,aAAa,CAAC;IACtC,IAAI,CAAAS,CAAC,aAADA,CAAC,uBAADA,CAAC,CAAE5iE,MAAM,MAAK,CAAC,EAAE,MAAM,IAAIvG,aAAa,CAAC,yBAAyB,CAAC;IACvE,OAAOmpE,CAAC,CAAC,CAAC,CAAC;EACb,CAAC,CAAC,CACD91D,MAAM,CAAE61D,OAAO,IAAK,CAACT,eAAe,CAAC3rE,QAAQ,CAACosE,OAAO,CAAC,CAAC,CACvDlmE,GAAG,CAAC,MAAOkmE,OAAO,IAAK;IACtB,MAAME,WAAW,GAAGhiE,yCAAO,CAAC0hE,IAAI,EAAEI,OAAO,CAAC;IAC1CD,UAAU,CAACC,OAAO,CAAC,GAAG,MAAMV,qCAAQ,CAACY,WAAW,EAAE,MAAM,CAAC;IACzD5hE,MAAM,CAAC+8B,MAAM,CAAC0kC,UAAU,EAAE,MAAMJ,gBAAgB,CAACC,IAAI,EAAEI,OAAO,CAAC,CAAC;EAClE,CAAC,CAAC,CAAC;EACL,OAAOD,UAAU;AACnB;;AAEA;AACA;AACA;AACA;AACA;AACe,eAAeI,aAAaA,CAACrqD,IAAY,EAAmC;EACzF,OAAO6pD,gBAAgB,CAAClC,yCAAO,CAAC3nD,IAAI,CAAC,EAAE4nD,0CAAQ,CAAC5nD,IAAI,CAAC,CAAC;AACxD;;ACzCuC;AACN;AAGW;;AAE5C;AACA;AACA;AACA;AACA;AACA;AACA;AACe,MAAMuqD,gBAAgB,SAASD,YAAW,CAAC;EACxD,MAAeh8B,OAAOA,CAACtuB,IAAY,EAA8D;IAC/F,MAAMouB,UAAU,GAAG,MAAMi8B,aAAa,CAACrqD,IAAI,CAAC;IAC5C,MAAMkuB,UAAU,GAAG,MAAMs7B,qCAAQ,CAACxpD,IAAI,EAAE,MAAM,CAAC;IAC/C,OAAO,IAAI,CAACmuB,mBAAmB,CAACD,UAAU,EAAEE,UAAU,CAAC;EACzD;EAEA,MAAe4W,WAAWA,CAAChlC,IAAY,EAAgB;IACrD,MAAMouB,UAAU,GAAG,MAAMi8B,aAAa,CAACrqD,IAAI,CAAC;IAC5C,MAAMkuB,UAAU,GAAG,MAAMs7B,qCAAQ,CAACxpD,IAAI,EAAE,MAAM,CAAC;IAC/C,OAAO,IAAI,CAAC+kC,uBAAuB,CAAC7W,UAAU,EAAEE,UAAU,CAAC;EAC7D;EAEA,MAAesC,QAAQA,CAACrd,QAAmC,EAAErT,IAAY,EAAoB;IAC3F,MAAMouB,UAAU,GAAG,MAAMi8B,aAAa,CAACrqD,IAAI,CAAC;IAC5C,MAAMkuB,UAAU,GAAG,MAAMs7B,qCAAQ,CAACxpD,IAAI,EAAE,MAAM,CAAC;IAC/C,OAAO,IAAI,CAACywB,oBAAoB,CAACpd,QAAQ,EAAE6a,UAAU,EAAEE,UAAU,CAAC;EACpE;AACF;;AC/BgC;AAEiC;AACY","sources":["webpack://Aeternity/webpack/universalModuleDefinition","webpack://Aeternity/./node_modules/blakejs/blake2b.js","webpack://Aeternity/./node_modules/blakejs/util.js","webpack://Aeternity/./node_modules/core-js-pure/actual/object/define-property.js","webpack://Aeternity/./node_modules/core-js-pure/actual/symbol/index.js","webpack://Aeternity/./node_modules/core-js-pure/actual/symbol/iterator.js","webpack://Aeternity/./node_modules/core-js-pure/actual/symbol/to-primitive.js","webpack://Aeternity/./node_modules/core-js-pure/es/instance/flags.js","webpack://Aeternity/./node_modules/core-js-pure/es/object/define-property.js","webpack://Aeternity/./node_modules/core-js-pure/es/regexp/flags.js","webpack://Aeternity/./node_modules/core-js-pure/es/symbol/index.js","webpack://Aeternity/./node_modules/core-js-pure/es/symbol/iterator.js","webpack://Aeternity/./node_modules/core-js-pure/es/symbol/to-primitive.js","webpack://Aeternity/./node_modules/core-js-pure/features/object/define-property.js","webpack://Aeternity/./node_modules/core-js-pure/features/symbol/index.js","webpack://Aeternity/./node_modules/core-js-pure/features/symbol/iterator.js","webpack://Aeternity/./node_modules/core-js-pure/features/symbol/to-primitive.js","webpack://Aeternity/./node_modules/core-js-pure/full/object/define-property.js","webpack://Aeternity/./node_modules/core-js-pure/full/symbol/index.js","webpack://Aeternity/./node_modules/core-js-pure/full/symbol/iterator.js","webpack://Aeternity/./node_modules/core-js-pure/full/symbol/to-primitive.js","webpack://Aeternity/./node_modules/core-js-pure/internals/a-callable.js","webpack://Aeternity/./node_modules/core-js-pure/internals/a-possible-prototype.js","webpack://Aeternity/./node_modules/core-js-pure/internals/add-to-unscopables.js","webpack://Aeternity/./node_modules/core-js-pure/internals/an-object.js","webpack://Aeternity/./node_modules/core-js-pure/internals/array-includes.js","webpack://Aeternity/./node_modules/core-js-pure/internals/array-iteration.js","webpack://Aeternity/./node_modules/core-js-pure/internals/array-method-has-species-support.js","webpack://Aeternity/./node_modules/core-js-pure/internals/array-slice-simple.js","webpack://Aeternity/./node_modules/core-js-pure/internals/array-slice.js","webpack://Aeternity/./node_modules/core-js-pure/internals/array-species-constructor.js","webpack://Aeternity/./node_modules/core-js-pure/internals/array-species-create.js","webpack://Aeternity/./node_modules/core-js-pure/internals/classof-raw.js","webpack://Aeternity/./node_modules/core-js-pure/internals/classof.js","webpack://Aeternity/./node_modules/core-js-pure/internals/correct-prototype-getter.js","webpack://Aeternity/./node_modules/core-js-pure/internals/create-iter-result-object.js","webpack://Aeternity/./node_modules/core-js-pure/internals/create-non-enumerable-property.js","webpack://Aeternity/./node_modules/core-js-pure/internals/create-property-descriptor.js","webpack://Aeternity/./node_modules/core-js-pure/internals/create-property.js","webpack://Aeternity/./node_modules/core-js-pure/internals/define-built-in-accessor.js","webpack://Aeternity/./node_modules/core-js-pure/internals/define-built-in.js","webpack://Aeternity/./node_modules/core-js-pure/internals/define-global-property.js","webpack://Aeternity/./node_modules/core-js-pure/internals/descriptors.js","webpack://Aeternity/./node_modules/core-js-pure/internals/document-all.js","webpack://Aeternity/./node_modules/core-js-pure/internals/document-create-element.js","webpack://Aeternity/./node_modules/core-js-pure/internals/does-not-exceed-safe-integer.js","webpack://Aeternity/./node_modules/core-js-pure/internals/dom-iterables.js","webpack://Aeternity/./node_modules/core-js-pure/internals/engine-user-agent.js","webpack://Aeternity/./node_modules/core-js-pure/internals/engine-v8-version.js","webpack://Aeternity/./node_modules/core-js-pure/internals/enum-bug-keys.js","webpack://Aeternity/./node_modules/core-js-pure/internals/export.js","webpack://Aeternity/./node_modules/core-js-pure/internals/fails.js","webpack://Aeternity/./node_modules/core-js-pure/internals/function-apply.js","webpack://Aeternity/./node_modules/core-js-pure/internals/function-bind-context.js","webpack://Aeternity/./node_modules/core-js-pure/internals/function-bind-native.js","webpack://Aeternity/./node_modules/core-js-pure/internals/function-call.js","webpack://Aeternity/./node_modules/core-js-pure/internals/function-name.js","webpack://Aeternity/./node_modules/core-js-pure/internals/function-uncurry-this-accessor.js","webpack://Aeternity/./node_modules/core-js-pure/internals/function-uncurry-this-clause.js","webpack://Aeternity/./node_modules/core-js-pure/internals/function-uncurry-this.js","webpack://Aeternity/./node_modules/core-js-pure/internals/get-built-in.js","webpack://Aeternity/./node_modules/core-js-pure/internals/get-json-replacer-function.js","webpack://Aeternity/./node_modules/core-js-pure/internals/get-method.js","webpack://Aeternity/./node_modules/core-js-pure/internals/global.js","webpack://Aeternity/./node_modules/core-js-pure/internals/has-own-property.js","webpack://Aeternity/./node_modules/core-js-pure/internals/hidden-keys.js","webpack://Aeternity/./node_modules/core-js-pure/internals/html.js","webpack://Aeternity/./node_modules/core-js-pure/internals/ie8-dom-define.js","webpack://Aeternity/./node_modules/core-js-pure/internals/indexed-object.js","webpack://Aeternity/./node_modules/core-js-pure/internals/inspect-source.js","webpack://Aeternity/./node_modules/core-js-pure/internals/internal-state.js","webpack://Aeternity/./node_modules/core-js-pure/internals/is-array.js","webpack://Aeternity/./node_modules/core-js-pure/internals/is-callable.js","webpack://Aeternity/./node_modules/core-js-pure/internals/is-constructor.js","webpack://Aeternity/./node_modules/core-js-pure/internals/is-forced.js","webpack://Aeternity/./node_modules/core-js-pure/internals/is-null-or-undefined.js","webpack://Aeternity/./node_modules/core-js-pure/internals/is-object.js","webpack://Aeternity/./node_modules/core-js-pure/internals/is-pure.js","webpack://Aeternity/./node_modules/core-js-pure/internals/is-symbol.js","webpack://Aeternity/./node_modules/core-js-pure/internals/iterator-create-constructor.js","webpack://Aeternity/./node_modules/core-js-pure/internals/iterator-define.js","webpack://Aeternity/./node_modules/core-js-pure/internals/iterators-core.js","webpack://Aeternity/./node_modules/core-js-pure/internals/iterators.js","webpack://Aeternity/./node_modules/core-js-pure/internals/length-of-array-like.js","webpack://Aeternity/./node_modules/core-js-pure/internals/math-trunc.js","webpack://Aeternity/./node_modules/core-js-pure/internals/object-create.js","webpack://Aeternity/./node_modules/core-js-pure/internals/object-define-properties.js","webpack://Aeternity/./node_modules/core-js-pure/internals/object-define-property.js","webpack://Aeternity/./node_modules/core-js-pure/internals/object-get-own-property-descriptor.js","webpack://Aeternity/./node_modules/core-js-pure/internals/object-get-own-property-names-external.js","webpack://Aeternity/./node_modules/core-js-pure/internals/object-get-own-property-names.js","webpack://Aeternity/./node_modules/core-js-pure/internals/object-get-own-property-symbols.js","webpack://Aeternity/./node_modules/core-js-pure/internals/object-get-prototype-of.js","webpack://Aeternity/./node_modules/core-js-pure/internals/object-is-prototype-of.js","webpack://Aeternity/./node_modules/core-js-pure/internals/object-keys-internal.js","webpack://Aeternity/./node_modules/core-js-pure/internals/object-keys.js","webpack://Aeternity/./node_modules/core-js-pure/internals/object-property-is-enumerable.js","webpack://Aeternity/./node_modules/core-js-pure/internals/object-set-prototype-of.js","webpack://Aeternity/./node_modules/core-js-pure/internals/object-to-string.js","webpack://Aeternity/./node_modules/core-js-pure/internals/ordinary-to-primitive.js","webpack://Aeternity/./node_modules/core-js-pure/internals/path.js","webpack://Aeternity/./node_modules/core-js-pure/internals/regexp-flags.js","webpack://Aeternity/./node_modules/core-js-pure/internals/regexp-get-flags.js","webpack://Aeternity/./node_modules/core-js-pure/internals/require-object-coercible.js","webpack://Aeternity/./node_modules/core-js-pure/internals/set-to-string-tag.js","webpack://Aeternity/./node_modules/core-js-pure/internals/shared-key.js","webpack://Aeternity/./node_modules/core-js-pure/internals/shared-store.js","webpack://Aeternity/./node_modules/core-js-pure/internals/shared.js","webpack://Aeternity/./node_modules/core-js-pure/internals/string-multibyte.js","webpack://Aeternity/./node_modules/core-js-pure/internals/symbol-constructor-detection.js","webpack://Aeternity/./node_modules/core-js-pure/internals/symbol-define-to-primitive.js","webpack://Aeternity/./node_modules/core-js-pure/internals/symbol-is-registered.js","webpack://Aeternity/./node_modules/core-js-pure/internals/symbol-is-well-known.js","webpack://Aeternity/./node_modules/core-js-pure/internals/symbol-registry-detection.js","webpack://Aeternity/./node_modules/core-js-pure/internals/to-absolute-index.js","webpack://Aeternity/./node_modules/core-js-pure/internals/to-indexed-object.js","webpack://Aeternity/./node_modules/core-js-pure/internals/to-integer-or-infinity.js","webpack://Aeternity/./node_modules/core-js-pure/internals/to-length.js","webpack://Aeternity/./node_modules/core-js-pure/internals/to-object.js","webpack://Aeternity/./node_modules/core-js-pure/internals/to-primitive.js","webpack://Aeternity/./node_modules/core-js-pure/internals/to-property-key.js","webpack://Aeternity/./node_modules/core-js-pure/internals/to-string-tag-support.js","webpack://Aeternity/./node_modules/core-js-pure/internals/to-string.js","webpack://Aeternity/./node_modules/core-js-pure/internals/try-to-string.js","webpack://Aeternity/./node_modules/core-js-pure/internals/uid.js","webpack://Aeternity/./node_modules/core-js-pure/internals/use-symbol-as-uid.js","webpack://Aeternity/./node_modules/core-js-pure/internals/v8-prototype-define-bug.js","webpack://Aeternity/./node_modules/core-js-pure/internals/weak-map-basic-detection.js","webpack://Aeternity/./node_modules/core-js-pure/internals/well-known-symbol-define.js","webpack://Aeternity/./node_modules/core-js-pure/internals/well-known-symbol-wrapped.js","webpack://Aeternity/./node_modules/core-js-pure/internals/well-known-symbol.js","webpack://Aeternity/./node_modules/core-js-pure/modules/es.array.concat.js","webpack://Aeternity/./node_modules/core-js-pure/modules/es.array.iterator.js","webpack://Aeternity/./node_modules/core-js-pure/modules/es.date.to-primitive.js","webpack://Aeternity/./node_modules/core-js-pure/modules/es.json.stringify.js","webpack://Aeternity/./node_modules/core-js-pure/modules/es.json.to-string-tag.js","webpack://Aeternity/./node_modules/core-js-pure/modules/es.math.to-string-tag.js","webpack://Aeternity/./node_modules/core-js-pure/modules/es.object.define-property.js","webpack://Aeternity/./node_modules/core-js-pure/modules/es.object.get-own-property-symbols.js","webpack://Aeternity/./node_modules/core-js-pure/modules/es.object.to-string.js","webpack://Aeternity/./node_modules/core-js-pure/modules/es.reflect.to-string-tag.js","webpack://Aeternity/./node_modules/core-js-pure/modules/es.regexp.flags.js","webpack://Aeternity/./node_modules/core-js-pure/modules/es.string.iterator.js","webpack://Aeternity/./node_modules/core-js-pure/modules/es.symbol.async-iterator.js","webpack://Aeternity/./node_modules/core-js-pure/modules/es.symbol.constructor.js","webpack://Aeternity/./node_modules/core-js-pure/modules/es.symbol.description.js","webpack://Aeternity/./node_modules/core-js-pure/modules/es.symbol.for.js","webpack://Aeternity/./node_modules/core-js-pure/modules/es.symbol.has-instance.js","webpack://Aeternity/./node_modules/core-js-pure/modules/es.symbol.is-concat-spreadable.js","webpack://Aeternity/./node_modules/core-js-pure/modules/es.symbol.iterator.js","webpack://Aeternity/./node_modules/core-js-pure/modules/es.symbol.js","webpack://Aeternity/./node_modules/core-js-pure/modules/es.symbol.key-for.js","webpack://Aeternity/./node_modules/core-js-pure/modules/es.symbol.match-all.js","webpack://Aeternity/./node_modules/core-js-pure/modules/es.symbol.match.js","webpack://Aeternity/./node_modules/core-js-pure/modules/es.symbol.replace.js","webpack://Aeternity/./node_modules/core-js-pure/modules/es.symbol.search.js","webpack://Aeternity/./node_modules/core-js-pure/modules/es.symbol.species.js","webpack://Aeternity/./node_modules/core-js-pure/modules/es.symbol.split.js","webpack://Aeternity/./node_modules/core-js-pure/modules/es.symbol.to-primitive.js","webpack://Aeternity/./node_modules/core-js-pure/modules/es.symbol.to-string-tag.js","webpack://Aeternity/./node_modules/core-js-pure/modules/es.symbol.unscopables.js","webpack://Aeternity/./node_modules/core-js-pure/modules/esnext.function.metadata.js","webpack://Aeternity/./node_modules/core-js-pure/modules/esnext.symbol.async-dispose.js","webpack://Aeternity/./node_modules/core-js-pure/modules/esnext.symbol.dispose.js","webpack://Aeternity/./node_modules/core-js-pure/modules/esnext.symbol.is-registered-symbol.js","webpack://Aeternity/./node_modules/core-js-pure/modules/esnext.symbol.is-registered.js","webpack://Aeternity/./node_modules/core-js-pure/modules/esnext.symbol.is-well-known-symbol.js","webpack://Aeternity/./node_modules/core-js-pure/modules/esnext.symbol.is-well-known.js","webpack://Aeternity/./node_modules/core-js-pure/modules/esnext.symbol.matcher.js","webpack://Aeternity/./node_modules/core-js-pure/modules/esnext.symbol.metadata-key.js","webpack://Aeternity/./node_modules/core-js-pure/modules/esnext.symbol.metadata.js","webpack://Aeternity/./node_modules/core-js-pure/modules/esnext.symbol.observable.js","webpack://Aeternity/./node_modules/core-js-pure/modules/esnext.symbol.pattern-match.js","webpack://Aeternity/./node_modules/core-js-pure/modules/esnext.symbol.replace-all.js","webpack://Aeternity/./node_modules/core-js-pure/modules/web.dom-collections.iterator.js","webpack://Aeternity/./node_modules/core-js-pure/stable/instance/flags.js","webpack://Aeternity/./node_modules/core-js-pure/stable/object/define-property.js","webpack://Aeternity/./node_modules/core-js-pure/stable/symbol/index.js","webpack://Aeternity/./node_modules/core-js-pure/stable/symbol/iterator.js","webpack://Aeternity/./node_modules/core-js-pure/stable/symbol/to-primitive.js","webpack://Aeternity/./node_modules/inherits/inherits.js","webpack://Aeternity/./node_modules/inherits/inherits_browser.js","webpack://Aeternity/./node_modules/safe-buffer/index.js","webpack://Aeternity/./node_modules/sha.js/hash.js","webpack://Aeternity/./node_modules/sha.js/sha256.js","webpack://Aeternity/external node-commonjs \"url\"","webpack://Aeternity/external node-commonjs \"util\"","webpack://Aeternity/external umd \"@aeternity/aepp-calldata\"","webpack://Aeternity/external umd \"@aeternity/argon2\"","webpack://Aeternity/external umd \"@aeternity/uuid\"","webpack://Aeternity/external umd \"@azure/core-client\"","webpack://Aeternity/external umd \"@azure/core-rest-pipeline\"","webpack://Aeternity/external umd \"aes-js\"","webpack://Aeternity/external umd \"bignumber.js\"","webpack://Aeternity/external umd \"bip32-path\"","webpack://Aeternity/external umd \"bs58\"","webpack://Aeternity/external umd \"buffer\"","webpack://Aeternity/external umd \"canonicalize\"","webpack://Aeternity/external umd \"events\"","webpack://Aeternity/external umd \"isomorphic-ws\"","webpack://Aeternity/external umd \"json-bigint\"","webpack://Aeternity/external umd \"rlp\"","webpack://Aeternity/external umd \"tweetnacl\"","webpack://Aeternity/external umd \"tweetnacl-auth\"","webpack://Aeternity/external umd \"varuint-bitcoin\"","webpack://Aeternity/external umd \"websocket\"","webpack://Aeternity/./node_modules/@babel/runtime-corejs3/core-js-stable/instance/flags.js","webpack://Aeternity/./node_modules/@babel/runtime-corejs3/helpers/classApplyDescriptorGet.js","webpack://Aeternity/./node_modules/@babel/runtime-corejs3/helpers/classApplyDescriptorSet.js","webpack://Aeternity/./node_modules/@babel/runtime-corejs3/helpers/classExtractFieldDescriptor.js","webpack://Aeternity/./node_modules/@babel/runtime-corejs3/helpers/classPrivateFieldGet.js","webpack://Aeternity/./node_modules/@babel/runtime-corejs3/helpers/classPrivateFieldSet.js","webpack://Aeternity/./node_modules/@babel/runtime-corejs3/helpers/defineProperty.js","webpack://Aeternity/./node_modules/@babel/runtime-corejs3/helpers/toPrimitive.js","webpack://Aeternity/./node_modules/@babel/runtime-corejs3/helpers/toPropertyKey.js","webpack://Aeternity/./node_modules/@babel/runtime-corejs3/helpers/typeof.js","webpack://Aeternity/webpack/bootstrap","webpack://Aeternity/webpack/runtime/compat get default export","webpack://Aeternity/webpack/runtime/define property getters","webpack://Aeternity/webpack/runtime/hasOwnProperty shorthand","webpack://Aeternity/webpack/runtime/make namespace object","webpack://Aeternity/./src/utils/bignumber.ts","webpack://Aeternity/./src/utils/errors.ts","webpack://Aeternity/./src/utils/amount-formatter.ts","webpack://Aeternity/./src/utils/other.ts","webpack://Aeternity/./src/utils/encoder-types.ts","webpack://Aeternity/./src/utils/encoder.ts","webpack://Aeternity/./src/utils/crypto.ts","webpack://Aeternity/./src/tx/builder/constants.ts","webpack://Aeternity/./src/tx/builder/field-types/ct-version.ts","webpack://Aeternity/./src/tx/builder/field-types/entry.ts","webpack://Aeternity/./src/tx/builder/field-types/array.ts","webpack://Aeternity/./src/tx/builder/field-types/map.ts","webpack://Aeternity/./src/utils/bytes.ts","webpack://Aeternity/./src/tx/builder/helpers.ts","webpack://Aeternity/./src/tx/builder/field-types/u-int.ts","webpack://Aeternity/./src/tx/builder/field-types/short-u-int.ts","webpack://Aeternity/./src/tx/builder/field-types/short-u-int-const.ts","webpack://Aeternity/./src/tx/builder/field-types/address.ts","webpack://Aeternity/./src/tx/builder/field-types/encoded.ts","webpack://Aeternity/./src/tx/builder/field-types/raw.ts","webpack://Aeternity/./src/tx/builder/field-types/coin-amount.ts","webpack://Aeternity/./src/tx/builder/field-types/fee.ts","webpack://Aeternity/./src/tx/builder/field-types/ttl.ts","webpack://Aeternity/./src/tx/builder/field-types/nonce.ts","webpack://Aeternity/./src/tx/builder/field-types/pointers.ts","webpack://Aeternity/./src/tx/builder/field-types/field.ts","webpack://Aeternity/./src/tx/builder/field-types/name.ts","webpack://Aeternity/./src/tx/builder/field-types/name-fee.ts","webpack://Aeternity/./src/tx/builder/field-types/name-id.ts","webpack://Aeternity/./src/tx/builder/field-types/boolean.ts","webpack://Aeternity/./src/tx/builder/field-types/deposit.ts","webpack://Aeternity/./src/tx/builder/field-types/gas-limit.ts","webpack://Aeternity/./src/tx/builder/field-types/gas-price.ts","webpack://Aeternity/./src/tx/builder/field-types/abi-version.ts","webpack://Aeternity/./src/tx/builder/field-types/enumeration.ts","webpack://Aeternity/./src/tx/builder/field-types/string.ts","webpack://Aeternity/./src/tx/builder/field-types/mptree.ts","webpack://Aeternity/./src/tx/builder/field-types/wrapped.ts","webpack://Aeternity/./src/tx/builder/schema.ts","webpack://Aeternity/./src/tx/builder/index.ts","webpack://Aeternity/./src/utils/semver-satisfies.ts","webpack://Aeternity/./src/utils/autorest.ts","webpack://Aeternity/./src/apis/node/models/mappers.ts","webpack://Aeternity/./src/apis/node/models/parameters.ts","webpack://Aeternity/./src/apis/node/node.ts","webpack://Aeternity/./src/Node.ts","webpack://Aeternity/./src/tx/transaction-signer.ts","webpack://Aeternity/./src/account/Base.ts","webpack://Aeternity/./src/utils/typed-data.ts","webpack://Aeternity/./src/account/Memory.ts","webpack://Aeternity/./src/tx/execution-cost.ts","webpack://Aeternity/./src/tx/validator.ts","webpack://Aeternity/./src/chain.ts","webpack://Aeternity/./src/utils/keystore.ts","webpack://Aeternity/./src/utils/hd-wallet.ts","webpack://Aeternity/./src/aens.ts","webpack://Aeternity/./src/contract/Contract.ts","webpack://Aeternity/./src/oracle.ts","webpack://Aeternity/./src/spend.ts","webpack://Aeternity/./src/contract/ga.ts","webpack://Aeternity/./src/contract/delegation-signature.ts","webpack://Aeternity/./src/AeSdkMethods.ts","webpack://Aeternity/./src/AeSdkBase.ts","webpack://Aeternity/./src/AeSdk.ts","webpack://Aeternity/./src/aepp-wallet-communication/schema.ts","webpack://Aeternity/./src/account/Rpc.ts","webpack://Aeternity/./src/aepp-wallet-communication/rpc/types.ts","webpack://Aeternity/./src/aepp-wallet-communication/rpc/RpcClient.ts","webpack://Aeternity/./src/AeSdkAepp.ts","webpack://Aeternity/./src/utils/json-big.ts","webpack://Aeternity/./src/AeSdkWallet.ts","webpack://Aeternity/./src/account/Generalized.ts","webpack://Aeternity/./src/account/Ledger.ts","webpack://Aeternity/./src/account/LedgerFactory.ts","webpack://Aeternity/./src/contract/compiler/Base.ts","webpack://Aeternity/./src/apis/compiler/models/mappers.ts","webpack://Aeternity/./src/apis/compiler/models/parameters.ts","webpack://Aeternity/./src/apis/compiler/compiler.ts","webpack://Aeternity/./src/contract/compiler/Http.ts","webpack://Aeternity/./src/utils/string.ts","webpack://Aeternity/./src/channel/internal.ts","webpack://Aeternity/./src/channel/handlers.ts","webpack://Aeternity/./src/channel/Base.ts","webpack://Aeternity/./src/channel/Spend.ts","webpack://Aeternity/./src/channel/Contract.ts","webpack://Aeternity/./src/MiddlewareSubscriber.ts","webpack://Aeternity/./src/apis/middleware/models/parameters.ts","webpack://Aeternity/./src/apis/middleware/models/mappers.ts","webpack://Aeternity/./src/apis/middleware/middleware.ts","webpack://Aeternity/./src/Middleware.ts","webpack://Aeternity/./src/aepp-wallet-communication/connection-proxy.ts","webpack://Aeternity/./src/aepp-wallet-communication/connection/Browser.ts","webpack://Aeternity/./src/aepp-wallet-communication/connection/BrowserWindowMessage.ts","webpack://Aeternity/./src/aepp-wallet-communication/wallet-detector.ts","webpack://Aeternity/./src/aepp-wallet-communication/connection/BrowserRuntime.ts","webpack://Aeternity/./src/deprecated.ts","webpack://Aeternity/./src/index-browser.ts","webpack://Aeternity/external node-commonjs \"child_process\"","webpack://Aeternity/external node-commonjs \"os\"","webpack://Aeternity/external node-commonjs \"path\"","webpack://Aeternity/external node-commonjs \"fs/promises\"","webpack://Aeternity/./src/contract/compiler/Cli.ts","webpack://Aeternity/./src/contract/compiler/getFileSystem.ts","webpack://Aeternity/./src/contract/compiler/HttpNode.ts","webpack://Aeternity/./src/index.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"@azure/core-rest-pipeline\"), require(\"rlp\"), require(\"bs58\"), require(\"buffer\"), require(\"bignumber.js\"), require(\"tweetnacl\"), require(\"varuint-bitcoin\"), require(\"@azure/core-client\"), require(\"@aeternity/aepp-calldata\"), require(\"canonicalize\"), require(\"@aeternity/uuid\"), require(\"@aeternity/argon2\"), require(\"tweetnacl-auth\"), require(\"bip32-path\"), require(\"aes-js\"), require(\"json-bigint\"), require(\"events\"), require(\"websocket\"), require(\"isomorphic-ws\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"@azure/core-rest-pipeline\", \"rlp\", \"bs58\", \"buffer\", \"bignumber.js\", \"tweetnacl\", \"varuint-bitcoin\", \"@azure/core-client\", \"@aeternity/aepp-calldata\", \"canonicalize\", \"@aeternity/uuid\", \"@aeternity/argon2\", \"tweetnacl-auth\", \"bip32-path\", \"aes-js\", \"json-bigint\", \"events\", \"websocket\", \"isomorphic-ws\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Aeternity\"] = factory(require(\"@azure/core-rest-pipeline\"), require(\"rlp\"), require(\"bs58\"), require(\"buffer\"), require(\"bignumber.js\"), require(\"tweetnacl\"), require(\"varuint-bitcoin\"), require(\"@azure/core-client\"), require(\"@aeternity/aepp-calldata\"), require(\"canonicalize\"), require(\"@aeternity/uuid\"), require(\"@aeternity/argon2\"), require(\"tweetnacl-auth\"), require(\"bip32-path\"), require(\"aes-js\"), require(\"json-bigint\"), require(\"events\"), require(\"websocket\"), require(\"isomorphic-ws\"));\n\telse\n\t\troot[\"Aeternity\"] = factory(root[\"@azure/core-rest-pipeline\"], root[\"rlp\"], root[\"bs58\"], root[\"buffer\"], root[\"bignumber.js\"], root[\"tweetnacl\"], root[\"varuint-bitcoin\"], root[\"@azure/core-client\"], root[\"@aeternity/aepp-calldata\"], root[\"canonicalize\"], root[\"@aeternity/uuid\"], root[\"@aeternity/argon2\"], root[\"tweetnacl-auth\"], root[\"bip32-path\"], root[\"aes-js\"], root[\"json-bigint\"], root[\"events\"], root[\"websocket\"], root[\"isomorphic-ws\"]);\n})(global, (__WEBPACK_EXTERNAL_MODULE__5039__, __WEBPACK_EXTERNAL_MODULE__3485__, __WEBPACK_EXTERNAL_MODULE__3783__, __WEBPACK_EXTERNAL_MODULE__9408__, __WEBPACK_EXTERNAL_MODULE__5192__, __WEBPACK_EXTERNAL_MODULE__79__, __WEBPACK_EXTERNAL_MODULE__7480__, __WEBPACK_EXTERNAL_MODULE__4711__, __WEBPACK_EXTERNAL_MODULE__7946__, __WEBPACK_EXTERNAL_MODULE__6667__, __WEBPACK_EXTERNAL_MODULE__3983__, __WEBPACK_EXTERNAL_MODULE__7417__, __WEBPACK_EXTERNAL_MODULE__9882__, __WEBPACK_EXTERNAL_MODULE__1986__, __WEBPACK_EXTERNAL_MODULE__8236__, __WEBPACK_EXTERNAL_MODULE__2716__, __WEBPACK_EXTERNAL_MODULE__3735__, __WEBPACK_EXTERNAL_MODULE__8079__, __WEBPACK_EXTERNAL_MODULE__3153__) => {\nreturn ","// Blake2B in pure Javascript\n// Adapted from the reference implementation in RFC7693\n// Ported to Javascript by DC - https://github.com/dcposch\n\nconst util = require('./util')\n\n// 64-bit unsigned addition\n// Sets v[a,a+1] += v[b,b+1]\n// v should be a Uint32Array\nfunction ADD64AA (v, a, b) {\n  const o0 = v[a] + v[b]\n  let o1 = v[a + 1] + v[b + 1]\n  if (o0 >= 0x100000000) {\n    o1++\n  }\n  v[a] = o0\n  v[a + 1] = o1\n}\n\n// 64-bit unsigned addition\n// Sets v[a,a+1] += b\n// b0 is the low 32 bits of b, b1 represents the high 32 bits\nfunction ADD64AC (v, a, b0, b1) {\n  let o0 = v[a] + b0\n  if (b0 < 0) {\n    o0 += 0x100000000\n  }\n  let o1 = v[a + 1] + b1\n  if (o0 >= 0x100000000) {\n    o1++\n  }\n  v[a] = o0\n  v[a + 1] = o1\n}\n\n// Little-endian byte access\nfunction B2B_GET32 (arr, i) {\n  return arr[i] ^ (arr[i + 1] << 8) ^ (arr[i + 2] << 16) ^ (arr[i + 3] << 24)\n}\n\n// G Mixing function\n// The ROTRs are inlined for speed\nfunction B2B_G (a, b, c, d, ix, iy) {\n  const x0 = m[ix]\n  const x1 = m[ix + 1]\n  const y0 = m[iy]\n  const y1 = m[iy + 1]\n\n  ADD64AA(v, a, b) // v[a,a+1] += v[b,b+1] ... in JS we must store a uint64 as two uint32s\n  ADD64AC(v, a, x0, x1) // v[a, a+1] += x ... x0 is the low 32 bits of x, x1 is the high 32 bits\n\n  // v[d,d+1] = (v[d,d+1] xor v[a,a+1]) rotated to the right by 32 bits\n  let xor0 = v[d] ^ v[a]\n  let xor1 = v[d + 1] ^ v[a + 1]\n  v[d] = xor1\n  v[d + 1] = xor0\n\n  ADD64AA(v, c, d)\n\n  // v[b,b+1] = (v[b,b+1] xor v[c,c+1]) rotated right by 24 bits\n  xor0 = v[b] ^ v[c]\n  xor1 = v[b + 1] ^ v[c + 1]\n  v[b] = (xor0 >>> 24) ^ (xor1 << 8)\n  v[b + 1] = (xor1 >>> 24) ^ (xor0 << 8)\n\n  ADD64AA(v, a, b)\n  ADD64AC(v, a, y0, y1)\n\n  // v[d,d+1] = (v[d,d+1] xor v[a,a+1]) rotated right by 16 bits\n  xor0 = v[d] ^ v[a]\n  xor1 = v[d + 1] ^ v[a + 1]\n  v[d] = (xor0 >>> 16) ^ (xor1 << 16)\n  v[d + 1] = (xor1 >>> 16) ^ (xor0 << 16)\n\n  ADD64AA(v, c, d)\n\n  // v[b,b+1] = (v[b,b+1] xor v[c,c+1]) rotated right by 63 bits\n  xor0 = v[b] ^ v[c]\n  xor1 = v[b + 1] ^ v[c + 1]\n  v[b] = (xor1 >>> 31) ^ (xor0 << 1)\n  v[b + 1] = (xor0 >>> 31) ^ (xor1 << 1)\n}\n\n// Initialization Vector\nconst BLAKE2B_IV32 = new Uint32Array([\n  0xf3bcc908, 0x6a09e667, 0x84caa73b, 0xbb67ae85, 0xfe94f82b, 0x3c6ef372,\n  0x5f1d36f1, 0xa54ff53a, 0xade682d1, 0x510e527f, 0x2b3e6c1f, 0x9b05688c,\n  0xfb41bd6b, 0x1f83d9ab, 0x137e2179, 0x5be0cd19\n])\n\nconst SIGMA8 = [\n  0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 14, 10, 4, 8, 9, 15, 13,\n  6, 1, 12, 0, 2, 11, 7, 5, 3, 11, 8, 12, 0, 5, 2, 15, 13, 10, 14, 3, 6, 7, 1,\n  9, 4, 7, 9, 3, 1, 13, 12, 11, 14, 2, 6, 5, 10, 4, 0, 15, 8, 9, 0, 5, 7, 2, 4,\n  10, 15, 14, 1, 11, 12, 6, 8, 3, 13, 2, 12, 6, 10, 0, 11, 8, 3, 4, 13, 7, 5,\n  15, 14, 1, 9, 12, 5, 1, 15, 14, 13, 4, 10, 0, 7, 6, 3, 9, 2, 8, 11, 13, 11, 7,\n  14, 12, 1, 3, 9, 5, 0, 15, 4, 8, 6, 2, 10, 6, 15, 14, 9, 11, 3, 0, 8, 12, 2,\n  13, 7, 1, 4, 10, 5, 10, 2, 8, 4, 7, 6, 1, 5, 15, 11, 9, 14, 3, 12, 13, 0, 0,\n  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 14, 10, 4, 8, 9, 15, 13, 6,\n  1, 12, 0, 2, 11, 7, 5, 3\n]\n\n// These are offsets into a uint64 buffer.\n// Multiply them all by 2 to make them offsets into a uint32 buffer,\n// because this is Javascript and we don't have uint64s\nconst SIGMA82 = new Uint8Array(\n  SIGMA8.map(function (x) {\n    return x * 2\n  })\n)\n\n// Compression function. 'last' flag indicates last block.\n// Note we're representing 16 uint64s as 32 uint32s\nconst v = new Uint32Array(32)\nconst m = new Uint32Array(32)\nfunction blake2bCompress (ctx, last) {\n  let i = 0\n\n  // init work variables\n  for (i = 0; i < 16; i++) {\n    v[i] = ctx.h[i]\n    v[i + 16] = BLAKE2B_IV32[i]\n  }\n\n  // low 64 bits of offset\n  v[24] = v[24] ^ ctx.t\n  v[25] = v[25] ^ (ctx.t / 0x100000000)\n  // high 64 bits not supported, offset may not be higher than 2**53-1\n\n  // last block flag set ?\n  if (last) {\n    v[28] = ~v[28]\n    v[29] = ~v[29]\n  }\n\n  // get little-endian words\n  for (i = 0; i < 32; i++) {\n    m[i] = B2B_GET32(ctx.b, 4 * i)\n  }\n\n  // twelve rounds of mixing\n  // uncomment the DebugPrint calls to log the computation\n  // and match the RFC sample documentation\n  // util.debugPrint('          m[16]', m, 64)\n  for (i = 0; i < 12; i++) {\n    // util.debugPrint('   (i=' + (i < 10 ? ' ' : '') + i + ') v[16]', v, 64)\n    B2B_G(0, 8, 16, 24, SIGMA82[i * 16 + 0], SIGMA82[i * 16 + 1])\n    B2B_G(2, 10, 18, 26, SIGMA82[i * 16 + 2], SIGMA82[i * 16 + 3])\n    B2B_G(4, 12, 20, 28, SIGMA82[i * 16 + 4], SIGMA82[i * 16 + 5])\n    B2B_G(6, 14, 22, 30, SIGMA82[i * 16 + 6], SIGMA82[i * 16 + 7])\n    B2B_G(0, 10, 20, 30, SIGMA82[i * 16 + 8], SIGMA82[i * 16 + 9])\n    B2B_G(2, 12, 22, 24, SIGMA82[i * 16 + 10], SIGMA82[i * 16 + 11])\n    B2B_G(4, 14, 16, 26, SIGMA82[i * 16 + 12], SIGMA82[i * 16 + 13])\n    B2B_G(6, 8, 18, 28, SIGMA82[i * 16 + 14], SIGMA82[i * 16 + 15])\n  }\n  // util.debugPrint('   (i=12) v[16]', v, 64)\n\n  for (i = 0; i < 16; i++) {\n    ctx.h[i] = ctx.h[i] ^ v[i] ^ v[i + 16]\n  }\n  // util.debugPrint('h[8]', ctx.h, 64)\n}\n\n// reusable parameterBlock\nconst parameterBlock = new Uint8Array([\n  0,\n  0,\n  0,\n  0, //  0: outlen, keylen, fanout, depth\n  0,\n  0,\n  0,\n  0, //  4: leaf length, sequential mode\n  0,\n  0,\n  0,\n  0, //  8: node offset\n  0,\n  0,\n  0,\n  0, // 12: node offset\n  0,\n  0,\n  0,\n  0, // 16: node depth, inner length, rfu\n  0,\n  0,\n  0,\n  0, // 20: rfu\n  0,\n  0,\n  0,\n  0, // 24: rfu\n  0,\n  0,\n  0,\n  0, // 28: rfu\n  0,\n  0,\n  0,\n  0, // 32: salt\n  0,\n  0,\n  0,\n  0, // 36: salt\n  0,\n  0,\n  0,\n  0, // 40: salt\n  0,\n  0,\n  0,\n  0, // 44: salt\n  0,\n  0,\n  0,\n  0, // 48: personal\n  0,\n  0,\n  0,\n  0, // 52: personal\n  0,\n  0,\n  0,\n  0, // 56: personal\n  0,\n  0,\n  0,\n  0 // 60: personal\n])\n\n// Creates a BLAKE2b hashing context\n// Requires an output length between 1 and 64 bytes\n// Takes an optional Uint8Array key\n// Takes an optinal Uint8Array salt\n// Takes an optinal Uint8Array personal\nfunction blake2bInit (outlen, key, salt, personal) {\n  if (outlen === 0 || outlen > 64) {\n    throw new Error('Illegal output length, expected 0 < length <= 64')\n  }\n  if (key && key.length > 64) {\n    throw new Error('Illegal key, expected Uint8Array with 0 < length <= 64')\n  }\n  if (salt && salt.length !== 16) {\n    throw new Error('Illegal salt, expected Uint8Array with length is 16')\n  }\n  if (personal && personal.length !== 16) {\n    throw new Error('Illegal personal, expected Uint8Array with length is 16')\n  }\n\n  // state, 'param block'\n  const ctx = {\n    b: new Uint8Array(128),\n    h: new Uint32Array(16),\n    t: 0, // input count\n    c: 0, // pointer within buffer\n    outlen: outlen // output length in bytes\n  }\n\n  // initialize parameterBlock before usage\n  parameterBlock.fill(0)\n  parameterBlock[0] = outlen\n  if (key) parameterBlock[1] = key.length\n  parameterBlock[2] = 1 // fanout\n  parameterBlock[3] = 1 // depth\n  if (salt) parameterBlock.set(salt, 32)\n  if (personal) parameterBlock.set(personal, 48)\n\n  // initialize hash state\n  for (let i = 0; i < 16; i++) {\n    ctx.h[i] = BLAKE2B_IV32[i] ^ B2B_GET32(parameterBlock, i * 4)\n  }\n\n  // key the hash, if applicable\n  if (key) {\n    blake2bUpdate(ctx, key)\n    // at the end\n    ctx.c = 128\n  }\n\n  return ctx\n}\n\n// Updates a BLAKE2b streaming hash\n// Requires hash context and Uint8Array (byte array)\nfunction blake2bUpdate (ctx, input) {\n  for (let i = 0; i < input.length; i++) {\n    if (ctx.c === 128) {\n      // buffer full ?\n      ctx.t += ctx.c // add counters\n      blake2bCompress(ctx, false) // compress (not last)\n      ctx.c = 0 // counter to zero\n    }\n    ctx.b[ctx.c++] = input[i]\n  }\n}\n\n// Completes a BLAKE2b streaming hash\n// Returns a Uint8Array containing the message digest\nfunction blake2bFinal (ctx) {\n  ctx.t += ctx.c // mark last block offset\n\n  while (ctx.c < 128) {\n    // fill up with zeros\n    ctx.b[ctx.c++] = 0\n  }\n  blake2bCompress(ctx, true) // final block flag = 1\n\n  // little endian convert and store\n  const out = new Uint8Array(ctx.outlen)\n  for (let i = 0; i < ctx.outlen; i++) {\n    out[i] = ctx.h[i >> 2] >> (8 * (i & 3))\n  }\n  return out\n}\n\n// Computes the BLAKE2B hash of a string or byte array, and returns a Uint8Array\n//\n// Returns a n-byte Uint8Array\n//\n// Parameters:\n// - input - the input bytes, as a string, Buffer or Uint8Array\n// - key - optional key Uint8Array, up to 64 bytes\n// - outlen - optional output length in bytes, default 64\n// - salt - optional salt bytes, string, Buffer or Uint8Array\n// - personal - optional personal bytes, string, Buffer or Uint8Array\nfunction blake2b (input, key, outlen, salt, personal) {\n  // preprocess inputs\n  outlen = outlen || 64\n  input = util.normalizeInput(input)\n  if (salt) {\n    salt = util.normalizeInput(salt)\n  }\n  if (personal) {\n    personal = util.normalizeInput(personal)\n  }\n\n  // do the math\n  const ctx = blake2bInit(outlen, key, salt, personal)\n  blake2bUpdate(ctx, input)\n  return blake2bFinal(ctx)\n}\n\n// Computes the BLAKE2B hash of a string or byte array\n//\n// Returns an n-byte hash in hex, all lowercase\n//\n// Parameters:\n// - input - the input bytes, as a string, Buffer, or Uint8Array\n// - key - optional key Uint8Array, up to 64 bytes\n// - outlen - optional output length in bytes, default 64\n// - salt - optional salt bytes, string, Buffer or Uint8Array\n// - personal - optional personal bytes, string, Buffer or Uint8Array\nfunction blake2bHex (input, key, outlen, salt, personal) {\n  const output = blake2b(input, key, outlen, salt, personal)\n  return util.toHex(output)\n}\n\nmodule.exports = {\n  blake2b: blake2b,\n  blake2bHex: blake2bHex,\n  blake2bInit: blake2bInit,\n  blake2bUpdate: blake2bUpdate,\n  blake2bFinal: blake2bFinal\n}\n","const ERROR_MSG_INPUT = 'Input must be an string, Buffer or Uint8Array'\n\n// For convenience, let people hash a string, not just a Uint8Array\nfunction normalizeInput (input) {\n  let ret\n  if (input instanceof Uint8Array) {\n    ret = input\n  } else if (typeof input === 'string') {\n    const encoder = new TextEncoder()\n    ret = encoder.encode(input)\n  } else {\n    throw new Error(ERROR_MSG_INPUT)\n  }\n  return ret\n}\n\n// Converts a Uint8Array to a hexadecimal string\n// For example, toHex([255, 0, 255]) returns \"ff00ff\"\nfunction toHex (bytes) {\n  return Array.prototype.map\n    .call(bytes, function (n) {\n      return (n < 16 ? '0' : '') + n.toString(16)\n    })\n    .join('')\n}\n\n// Converts any value in [0...2^32-1] to an 8-character hex string\nfunction uint32ToHex (val) {\n  return (0x100000000 + val).toString(16).substring(1)\n}\n\n// For debugging: prints out hash state in the same format as the RFC\n// sample computation exactly, so that you can diff\nfunction debugPrint (label, arr, size) {\n  let msg = '\\n' + label + ' = '\n  for (let i = 0; i < arr.length; i += 2) {\n    if (size === 32) {\n      msg += uint32ToHex(arr[i]).toUpperCase()\n      msg += ' '\n      msg += uint32ToHex(arr[i + 1]).toUpperCase()\n    } else if (size === 64) {\n      msg += uint32ToHex(arr[i + 1]).toUpperCase()\n      msg += uint32ToHex(arr[i]).toUpperCase()\n    } else throw new Error('Invalid size ' + size)\n    if (i % 6 === 4) {\n      msg += '\\n' + new Array(label.length + 4).join(' ')\n    } else if (i < arr.length - 2) {\n      msg += ' '\n    }\n  }\n  console.log(msg)\n}\n\n// For performance testing: generates N bytes of input, hashes M times\n// Measures and prints MB/second hash performance each time\nfunction testSpeed (hashFn, N, M) {\n  let startMs = new Date().getTime()\n\n  const input = new Uint8Array(N)\n  for (let i = 0; i < N; i++) {\n    input[i] = i % 256\n  }\n  const genMs = new Date().getTime()\n  console.log('Generated random input in ' + (genMs - startMs) + 'ms')\n  startMs = genMs\n\n  for (let i = 0; i < M; i++) {\n    const hashHex = hashFn(input)\n    const hashMs = new Date().getTime()\n    const ms = hashMs - startMs\n    startMs = hashMs\n    console.log('Hashed in ' + ms + 'ms: ' + hashHex.substring(0, 20) + '...')\n    console.log(\n      Math.round((N / (1 << 20) / (ms / 1000)) * 100) / 100 + ' MB PER SECOND'\n    )\n  }\n}\n\nmodule.exports = {\n  normalizeInput: normalizeInput,\n  toHex: toHex,\n  debugPrint: debugPrint,\n  testSpeed: testSpeed\n}\n","'use strict';\nvar parent = require('../../stable/object/define-property');\n\nmodule.exports = parent;\n","'use strict';\nvar parent = require('../../stable/symbol');\n\nrequire('../../modules/esnext.function.metadata');\nrequire('../../modules/esnext.symbol.async-dispose');\nrequire('../../modules/esnext.symbol.dispose');\nrequire('../../modules/esnext.symbol.metadata');\n\nmodule.exports = parent;\n","'use strict';\nvar parent = require('../../stable/symbol/iterator');\n\nmodule.exports = parent;\n","'use strict';\nvar parent = require('../../stable/symbol/to-primitive');\n\nmodule.exports = parent;\n","'use strict';\nvar isPrototypeOf = require('../../internals/object-is-prototype-of');\nvar flags = require('../regexp/flags');\n\nvar RegExpPrototype = RegExp.prototype;\n\nmodule.exports = function (it) {\n  return (it === RegExpPrototype || isPrototypeOf(RegExpPrototype, it)) ? flags(it) : it.flags;\n};\n","'use strict';\nrequire('../../modules/es.object.define-property');\nvar path = require('../../internals/path');\n\nvar Object = path.Object;\n\nvar defineProperty = module.exports = function defineProperty(it, key, desc) {\n  return Object.defineProperty(it, key, desc);\n};\n\nif (Object.defineProperty.sham) defineProperty.sham = true;\n","'use strict';\nrequire('../../modules/es.regexp.flags');\nvar getRegExpFlags = require('../../internals/regexp-get-flags');\n\nmodule.exports = getRegExpFlags;\n","'use strict';\nrequire('../../modules/es.array.concat');\nrequire('../../modules/es.object.to-string');\nrequire('../../modules/es.symbol');\nrequire('../../modules/es.symbol.async-iterator');\nrequire('../../modules/es.symbol.description');\nrequire('../../modules/es.symbol.has-instance');\nrequire('../../modules/es.symbol.is-concat-spreadable');\nrequire('../../modules/es.symbol.iterator');\nrequire('../../modules/es.symbol.match');\nrequire('../../modules/es.symbol.match-all');\nrequire('../../modules/es.symbol.replace');\nrequire('../../modules/es.symbol.search');\nrequire('../../modules/es.symbol.species');\nrequire('../../modules/es.symbol.split');\nrequire('../../modules/es.symbol.to-primitive');\nrequire('../../modules/es.symbol.to-string-tag');\nrequire('../../modules/es.symbol.unscopables');\nrequire('../../modules/es.json.to-string-tag');\nrequire('../../modules/es.math.to-string-tag');\nrequire('../../modules/es.reflect.to-string-tag');\nvar path = require('../../internals/path');\n\nmodule.exports = path.Symbol;\n","'use strict';\nrequire('../../modules/es.array.iterator');\nrequire('../../modules/es.object.to-string');\nrequire('../../modules/es.string.iterator');\nrequire('../../modules/es.symbol.iterator');\nvar WrappedWellKnownSymbolModule = require('../../internals/well-known-symbol-wrapped');\n\nmodule.exports = WrappedWellKnownSymbolModule.f('iterator');\n","'use strict';\nrequire('../../modules/es.date.to-primitive');\nrequire('../../modules/es.symbol.to-primitive');\nvar WrappedWellKnownSymbolModule = require('../../internals/well-known-symbol-wrapped');\n\nmodule.exports = WrappedWellKnownSymbolModule.f('toPrimitive');\n","'use strict';\nmodule.exports = require('../../full/object/define-property');\n","'use strict';\nmodule.exports = require('../../full/symbol');\n","'use strict';\nmodule.exports = require('../../full/symbol/iterator');\n","'use strict';\nmodule.exports = require('../../full/symbol/to-primitive');\n","'use strict';\nvar parent = require('../../actual/object/define-property');\n\nmodule.exports = parent;\n","'use strict';\nvar parent = require('../../actual/symbol');\nrequire('../../modules/esnext.symbol.is-registered-symbol');\nrequire('../../modules/esnext.symbol.is-well-known-symbol');\nrequire('../../modules/esnext.symbol.matcher');\nrequire('../../modules/esnext.symbol.observable');\n// TODO: Remove from `core-js@4`\nrequire('../../modules/esnext.symbol.is-registered');\nrequire('../../modules/esnext.symbol.is-well-known');\nrequire('../../modules/esnext.symbol.metadata-key');\nrequire('../../modules/esnext.symbol.pattern-match');\nrequire('../../modules/esnext.symbol.replace-all');\n\nmodule.exports = parent;\n","'use strict';\nvar parent = require('../../actual/symbol/iterator');\n\nmodule.exports = parent;\n","'use strict';\nvar parent = require('../../actual/symbol/to-primitive');\n\nmodule.exports = parent;\n","'use strict';\nvar isCallable = require('../internals/is-callable');\nvar tryToString = require('../internals/try-to-string');\n\nvar $TypeError = TypeError;\n\n// `Assert: IsCallable(argument) is true`\nmodule.exports = function (argument) {\n  if (isCallable(argument)) return argument;\n  throw $TypeError(tryToString(argument) + ' is not a function');\n};\n","'use strict';\nvar isCallable = require('../internals/is-callable');\n\nvar $String = String;\nvar $TypeError = TypeError;\n\nmodule.exports = function (argument) {\n  if (typeof argument == 'object' || isCallable(argument)) return argument;\n  throw $TypeError(\"Can't set \" + $String(argument) + ' as a prototype');\n};\n","'use strict';\nmodule.exports = function () { /* empty */ };\n","'use strict';\nvar isObject = require('../internals/is-object');\n\nvar $String = String;\nvar $TypeError = TypeError;\n\n// `Assert: Type(argument) is Object`\nmodule.exports = function (argument) {\n  if (isObject(argument)) return argument;\n  throw $TypeError($String(argument) + ' is not an object');\n};\n","'use strict';\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar toAbsoluteIndex = require('../internals/to-absolute-index');\nvar lengthOfArrayLike = require('../internals/length-of-array-like');\n\n// `Array.prototype.{ indexOf, includes }` methods implementation\nvar createMethod = function (IS_INCLUDES) {\n  return function ($this, el, fromIndex) {\n    var O = toIndexedObject($this);\n    var length = lengthOfArrayLike(O);\n    var index = toAbsoluteIndex(fromIndex, length);\n    var value;\n    // Array#includes uses SameValueZero equality algorithm\n    // eslint-disable-next-line no-self-compare -- NaN check\n    if (IS_INCLUDES && el != el) while (length > index) {\n      value = O[index++];\n      // eslint-disable-next-line no-self-compare -- NaN check\n      if (value != value) return true;\n    // Array#indexOf ignores holes, Array#includes - not\n    } else for (;length > index; index++) {\n      if ((IS_INCLUDES || index in O) && O[index] === el) return IS_INCLUDES || index || 0;\n    } return !IS_INCLUDES && -1;\n  };\n};\n\nmodule.exports = {\n  // `Array.prototype.includes` method\n  // https://tc39.es/ecma262/#sec-array.prototype.includes\n  includes: createMethod(true),\n  // `Array.prototype.indexOf` method\n  // https://tc39.es/ecma262/#sec-array.prototype.indexof\n  indexOf: createMethod(false)\n};\n","'use strict';\nvar bind = require('../internals/function-bind-context');\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar IndexedObject = require('../internals/indexed-object');\nvar toObject = require('../internals/to-object');\nvar lengthOfArrayLike = require('../internals/length-of-array-like');\nvar arraySpeciesCreate = require('../internals/array-species-create');\n\nvar push = uncurryThis([].push);\n\n// `Array.prototype.{ forEach, map, filter, some, every, find, findIndex, filterReject }` methods implementation\nvar createMethod = function (TYPE) {\n  var IS_MAP = TYPE == 1;\n  var IS_FILTER = TYPE == 2;\n  var IS_SOME = TYPE == 3;\n  var IS_EVERY = TYPE == 4;\n  var IS_FIND_INDEX = TYPE == 6;\n  var IS_FILTER_REJECT = TYPE == 7;\n  var NO_HOLES = TYPE == 5 || IS_FIND_INDEX;\n  return function ($this, callbackfn, that, specificCreate) {\n    var O = toObject($this);\n    var self = IndexedObject(O);\n    var boundFunction = bind(callbackfn, that);\n    var length = lengthOfArrayLike(self);\n    var index = 0;\n    var create = specificCreate || arraySpeciesCreate;\n    var target = IS_MAP ? create($this, length) : IS_FILTER || IS_FILTER_REJECT ? create($this, 0) : undefined;\n    var value, result;\n    for (;length > index; index++) if (NO_HOLES || index in self) {\n      value = self[index];\n      result = boundFunction(value, index, O);\n      if (TYPE) {\n        if (IS_MAP) target[index] = result; // map\n        else if (result) switch (TYPE) {\n          case 3: return true;              // some\n          case 5: return value;             // find\n          case 6: return index;             // findIndex\n          case 2: push(target, value);      // filter\n        } else switch (TYPE) {\n          case 4: return false;             // every\n          case 7: push(target, value);      // filterReject\n        }\n      }\n    }\n    return IS_FIND_INDEX ? -1 : IS_SOME || IS_EVERY ? IS_EVERY : target;\n  };\n};\n\nmodule.exports = {\n  // `Array.prototype.forEach` method\n  // https://tc39.es/ecma262/#sec-array.prototype.foreach\n  forEach: createMethod(0),\n  // `Array.prototype.map` method\n  // https://tc39.es/ecma262/#sec-array.prototype.map\n  map: createMethod(1),\n  // `Array.prototype.filter` method\n  // https://tc39.es/ecma262/#sec-array.prototype.filter\n  filter: createMethod(2),\n  // `Array.prototype.some` method\n  // https://tc39.es/ecma262/#sec-array.prototype.some\n  some: createMethod(3),\n  // `Array.prototype.every` method\n  // https://tc39.es/ecma262/#sec-array.prototype.every\n  every: createMethod(4),\n  // `Array.prototype.find` method\n  // https://tc39.es/ecma262/#sec-array.prototype.find\n  find: createMethod(5),\n  // `Array.prototype.findIndex` method\n  // https://tc39.es/ecma262/#sec-array.prototype.findIndex\n  findIndex: createMethod(6),\n  // `Array.prototype.filterReject` method\n  // https://github.com/tc39/proposal-array-filtering\n  filterReject: createMethod(7)\n};\n","'use strict';\nvar fails = require('../internals/fails');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar V8_VERSION = require('../internals/engine-v8-version');\n\nvar SPECIES = wellKnownSymbol('species');\n\nmodule.exports = function (METHOD_NAME) {\n  // We can't use this feature detection in V8 since it causes\n  // deoptimization and serious performance degradation\n  // https://github.com/zloirock/core-js/issues/677\n  return V8_VERSION >= 51 || !fails(function () {\n    var array = [];\n    var constructor = array.constructor = {};\n    constructor[SPECIES] = function () {\n      return { foo: 1 };\n    };\n    return array[METHOD_NAME](Boolean).foo !== 1;\n  });\n};\n","'use strict';\nvar toAbsoluteIndex = require('../internals/to-absolute-index');\nvar lengthOfArrayLike = require('../internals/length-of-array-like');\nvar createProperty = require('../internals/create-property');\n\nvar $Array = Array;\nvar max = Math.max;\n\nmodule.exports = function (O, start, end) {\n  var length = lengthOfArrayLike(O);\n  var k = toAbsoluteIndex(start, length);\n  var fin = toAbsoluteIndex(end === undefined ? length : end, length);\n  var result = $Array(max(fin - k, 0));\n  for (var n = 0; k < fin; k++, n++) createProperty(result, n, O[k]);\n  result.length = n;\n  return result;\n};\n","'use strict';\nvar uncurryThis = require('../internals/function-uncurry-this');\n\nmodule.exports = uncurryThis([].slice);\n","'use strict';\nvar isArray = require('../internals/is-array');\nvar isConstructor = require('../internals/is-constructor');\nvar isObject = require('../internals/is-object');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar SPECIES = wellKnownSymbol('species');\nvar $Array = Array;\n\n// a part of `ArraySpeciesCreate` abstract operation\n// https://tc39.es/ecma262/#sec-arrayspeciescreate\nmodule.exports = function (originalArray) {\n  var C;\n  if (isArray(originalArray)) {\n    C = originalArray.constructor;\n    // cross-realm fallback\n    if (isConstructor(C) && (C === $Array || isArray(C.prototype))) C = undefined;\n    else if (isObject(C)) {\n      C = C[SPECIES];\n      if (C === null) C = undefined;\n    }\n  } return C === undefined ? $Array : C;\n};\n","'use strict';\nvar arraySpeciesConstructor = require('../internals/array-species-constructor');\n\n// `ArraySpeciesCreate` abstract operation\n// https://tc39.es/ecma262/#sec-arrayspeciescreate\nmodule.exports = function (originalArray, length) {\n  return new (arraySpeciesConstructor(originalArray))(length === 0 ? 0 : length);\n};\n","'use strict';\nvar uncurryThis = require('../internals/function-uncurry-this');\n\nvar toString = uncurryThis({}.toString);\nvar stringSlice = uncurryThis(''.slice);\n\nmodule.exports = function (it) {\n  return stringSlice(toString(it), 8, -1);\n};\n","'use strict';\nvar TO_STRING_TAG_SUPPORT = require('../internals/to-string-tag-support');\nvar isCallable = require('../internals/is-callable');\nvar classofRaw = require('../internals/classof-raw');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar TO_STRING_TAG = wellKnownSymbol('toStringTag');\nvar $Object = Object;\n\n// ES3 wrong here\nvar CORRECT_ARGUMENTS = classofRaw(function () { return arguments; }()) == 'Arguments';\n\n// fallback for IE11 Script Access Denied error\nvar tryGet = function (it, key) {\n  try {\n    return it[key];\n  } catch (error) { /* empty */ }\n};\n\n// getting tag from ES6+ `Object.prototype.toString`\nmodule.exports = TO_STRING_TAG_SUPPORT ? classofRaw : function (it) {\n  var O, tag, result;\n  return it === undefined ? 'Undefined' : it === null ? 'Null'\n    // @@toStringTag case\n    : typeof (tag = tryGet(O = $Object(it), TO_STRING_TAG)) == 'string' ? tag\n    // builtinTag case\n    : CORRECT_ARGUMENTS ? classofRaw(O)\n    // ES3 arguments fallback\n    : (result = classofRaw(O)) == 'Object' && isCallable(O.callee) ? 'Arguments' : result;\n};\n","'use strict';\nvar fails = require('../internals/fails');\n\nmodule.exports = !fails(function () {\n  function F() { /* empty */ }\n  F.prototype.constructor = null;\n  // eslint-disable-next-line es/no-object-getprototypeof -- required for testing\n  return Object.getPrototypeOf(new F()) !== F.prototype;\n});\n","'use strict';\n// `CreateIterResultObject` abstract operation\n// https://tc39.es/ecma262/#sec-createiterresultobject\nmodule.exports = function (value, done) {\n  return { value: value, done: done };\n};\n","'use strict';\nvar DESCRIPTORS = require('../internals/descriptors');\nvar definePropertyModule = require('../internals/object-define-property');\nvar createPropertyDescriptor = require('../internals/create-property-descriptor');\n\nmodule.exports = DESCRIPTORS ? function (object, key, value) {\n  return definePropertyModule.f(object, key, createPropertyDescriptor(1, value));\n} : function (object, key, value) {\n  object[key] = value;\n  return object;\n};\n","'use strict';\nmodule.exports = function (bitmap, value) {\n  return {\n    enumerable: !(bitmap & 1),\n    configurable: !(bitmap & 2),\n    writable: !(bitmap & 4),\n    value: value\n  };\n};\n","'use strict';\nvar toPropertyKey = require('../internals/to-property-key');\nvar definePropertyModule = require('../internals/object-define-property');\nvar createPropertyDescriptor = require('../internals/create-property-descriptor');\n\nmodule.exports = function (object, key, value) {\n  var propertyKey = toPropertyKey(key);\n  if (propertyKey in object) definePropertyModule.f(object, propertyKey, createPropertyDescriptor(0, value));\n  else object[propertyKey] = value;\n};\n","'use strict';\nvar defineProperty = require('../internals/object-define-property');\n\nmodule.exports = function (target, name, descriptor) {\n  return defineProperty.f(target, name, descriptor);\n};\n","'use strict';\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\n\nmodule.exports = function (target, key, value, options) {\n  if (options && options.enumerable) target[key] = value;\n  else createNonEnumerableProperty(target, key, value);\n  return target;\n};\n","'use strict';\nvar global = require('../internals/global');\n\n// eslint-disable-next-line es/no-object-defineproperty -- safe\nvar defineProperty = Object.defineProperty;\n\nmodule.exports = function (key, value) {\n  try {\n    defineProperty(global, key, { value: value, configurable: true, writable: true });\n  } catch (error) {\n    global[key] = value;\n  } return value;\n};\n","'use strict';\nvar fails = require('../internals/fails');\n\n// Detect IE8's incomplete defineProperty implementation\nmodule.exports = !fails(function () {\n  // eslint-disable-next-line es/no-object-defineproperty -- required for testing\n  return Object.defineProperty({}, 1, { get: function () { return 7; } })[1] != 7;\n});\n","'use strict';\nvar documentAll = typeof document == 'object' && document.all;\n\n// https://tc39.es/ecma262/#sec-IsHTMLDDA-internal-slot\n// eslint-disable-next-line unicorn/no-typeof-undefined -- required for testing\nvar IS_HTMLDDA = typeof documentAll == 'undefined' && documentAll !== undefined;\n\nmodule.exports = {\n  all: documentAll,\n  IS_HTMLDDA: IS_HTMLDDA\n};\n","'use strict';\nvar global = require('../internals/global');\nvar isObject = require('../internals/is-object');\n\nvar document = global.document;\n// typeof document.createElement is 'object' in old IE\nvar EXISTS = isObject(document) && isObject(document.createElement);\n\nmodule.exports = function (it) {\n  return EXISTS ? document.createElement(it) : {};\n};\n","'use strict';\nvar $TypeError = TypeError;\nvar MAX_SAFE_INTEGER = 0x1FFFFFFFFFFFFF; // 2 ** 53 - 1 == 9007199254740991\n\nmodule.exports = function (it) {\n  if (it > MAX_SAFE_INTEGER) throw $TypeError('Maximum allowed index exceeded');\n  return it;\n};\n","'use strict';\n// iterable DOM collections\n// flag - `iterable` interface - 'entries', 'keys', 'values', 'forEach' methods\nmodule.exports = {\n  CSSRuleList: 0,\n  CSSStyleDeclaration: 0,\n  CSSValueList: 0,\n  ClientRectList: 0,\n  DOMRectList: 0,\n  DOMStringList: 0,\n  DOMTokenList: 1,\n  DataTransferItemList: 0,\n  FileList: 0,\n  HTMLAllCollection: 0,\n  HTMLCollection: 0,\n  HTMLFormElement: 0,\n  HTMLSelectElement: 0,\n  MediaList: 0,\n  MimeTypeArray: 0,\n  NamedNodeMap: 0,\n  NodeList: 1,\n  PaintRequestList: 0,\n  Plugin: 0,\n  PluginArray: 0,\n  SVGLengthList: 0,\n  SVGNumberList: 0,\n  SVGPathSegList: 0,\n  SVGPointList: 0,\n  SVGStringList: 0,\n  SVGTransformList: 0,\n  SourceBufferList: 0,\n  StyleSheetList: 0,\n  TextTrackCueList: 0,\n  TextTrackList: 0,\n  TouchList: 0\n};\n","'use strict';\nmodule.exports = typeof navigator != 'undefined' && String(navigator.userAgent) || '';\n","'use strict';\nvar global = require('../internals/global');\nvar userAgent = require('../internals/engine-user-agent');\n\nvar process = global.process;\nvar Deno = global.Deno;\nvar versions = process && process.versions || Deno && Deno.version;\nvar v8 = versions && versions.v8;\nvar match, version;\n\nif (v8) {\n  match = v8.split('.');\n  // in old Chrome, versions of V8 isn't V8 = Chrome / 10\n  // but their correct versions are not interesting for us\n  version = match[0] > 0 && match[0] < 4 ? 1 : +(match[0] + match[1]);\n}\n\n// BrowserFS NodeJS `process` polyfill incorrectly set `.v8` to `0.0`\n// so check `userAgent` even if `.v8` exists, but 0\nif (!version && userAgent) {\n  match = userAgent.match(/Edge\\/(\\d+)/);\n  if (!match || match[1] >= 74) {\n    match = userAgent.match(/Chrome\\/(\\d+)/);\n    if (match) version = +match[1];\n  }\n}\n\nmodule.exports = version;\n","'use strict';\n// IE8- don't enum bug keys\nmodule.exports = [\n  'constructor',\n  'hasOwnProperty',\n  'isPrototypeOf',\n  'propertyIsEnumerable',\n  'toLocaleString',\n  'toString',\n  'valueOf'\n];\n","'use strict';\nvar global = require('../internals/global');\nvar apply = require('../internals/function-apply');\nvar uncurryThis = require('../internals/function-uncurry-this-clause');\nvar isCallable = require('../internals/is-callable');\nvar getOwnPropertyDescriptor = require('../internals/object-get-own-property-descriptor').f;\nvar isForced = require('../internals/is-forced');\nvar path = require('../internals/path');\nvar bind = require('../internals/function-bind-context');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\nvar hasOwn = require('../internals/has-own-property');\n\nvar wrapConstructor = function (NativeConstructor) {\n  var Wrapper = function (a, b, c) {\n    if (this instanceof Wrapper) {\n      switch (arguments.length) {\n        case 0: return new NativeConstructor();\n        case 1: return new NativeConstructor(a);\n        case 2: return new NativeConstructor(a, b);\n      } return new NativeConstructor(a, b, c);\n    } return apply(NativeConstructor, this, arguments);\n  };\n  Wrapper.prototype = NativeConstructor.prototype;\n  return Wrapper;\n};\n\n/*\n  options.target         - name of the target object\n  options.global         - target is the global object\n  options.stat           - export as static methods of target\n  options.proto          - export as prototype methods of target\n  options.real           - real prototype method for the `pure` version\n  options.forced         - export even if the native feature is available\n  options.bind           - bind methods to the target, required for the `pure` version\n  options.wrap           - wrap constructors to preventing global pollution, required for the `pure` version\n  options.unsafe         - use the simple assignment of property instead of delete + defineProperty\n  options.sham           - add a flag to not completely full polyfills\n  options.enumerable     - export as enumerable property\n  options.dontCallGetSet - prevent calling a getter on target\n  options.name           - the .name of the function if it does not match the key\n*/\nmodule.exports = function (options, source) {\n  var TARGET = options.target;\n  var GLOBAL = options.global;\n  var STATIC = options.stat;\n  var PROTO = options.proto;\n\n  var nativeSource = GLOBAL ? global : STATIC ? global[TARGET] : (global[TARGET] || {}).prototype;\n\n  var target = GLOBAL ? path : path[TARGET] || createNonEnumerableProperty(path, TARGET, {})[TARGET];\n  var targetPrototype = target.prototype;\n\n  var FORCED, USE_NATIVE, VIRTUAL_PROTOTYPE;\n  var key, sourceProperty, targetProperty, nativeProperty, resultProperty, descriptor;\n\n  for (key in source) {\n    FORCED = isForced(GLOBAL ? key : TARGET + (STATIC ? '.' : '#') + key, options.forced);\n    // contains in native\n    USE_NATIVE = !FORCED && nativeSource && hasOwn(nativeSource, key);\n\n    targetProperty = target[key];\n\n    if (USE_NATIVE) if (options.dontCallGetSet) {\n      descriptor = getOwnPropertyDescriptor(nativeSource, key);\n      nativeProperty = descriptor && descriptor.value;\n    } else nativeProperty = nativeSource[key];\n\n    // export native or implementation\n    sourceProperty = (USE_NATIVE && nativeProperty) ? nativeProperty : source[key];\n\n    if (USE_NATIVE && typeof targetProperty == typeof sourceProperty) continue;\n\n    // bind methods to global for calling from export context\n    if (options.bind && USE_NATIVE) resultProperty = bind(sourceProperty, global);\n    // wrap global constructors for prevent changes in this version\n    else if (options.wrap && USE_NATIVE) resultProperty = wrapConstructor(sourceProperty);\n    // make static versions for prototype methods\n    else if (PROTO && isCallable(sourceProperty)) resultProperty = uncurryThis(sourceProperty);\n    // default case\n    else resultProperty = sourceProperty;\n\n    // add a flag to not completely full polyfills\n    if (options.sham || (sourceProperty && sourceProperty.sham) || (targetProperty && targetProperty.sham)) {\n      createNonEnumerableProperty(resultProperty, 'sham', true);\n    }\n\n    createNonEnumerableProperty(target, key, resultProperty);\n\n    if (PROTO) {\n      VIRTUAL_PROTOTYPE = TARGET + 'Prototype';\n      if (!hasOwn(path, VIRTUAL_PROTOTYPE)) {\n        createNonEnumerableProperty(path, VIRTUAL_PROTOTYPE, {});\n      }\n      // export virtual prototype methods\n      createNonEnumerableProperty(path[VIRTUAL_PROTOTYPE], key, sourceProperty);\n      // export real prototype methods\n      if (options.real && targetPrototype && (FORCED || !targetPrototype[key])) {\n        createNonEnumerableProperty(targetPrototype, key, sourceProperty);\n      }\n    }\n  }\n};\n","'use strict';\nmodule.exports = function (exec) {\n  try {\n    return !!exec();\n  } catch (error) {\n    return true;\n  }\n};\n","'use strict';\nvar NATIVE_BIND = require('../internals/function-bind-native');\n\nvar FunctionPrototype = Function.prototype;\nvar apply = FunctionPrototype.apply;\nvar call = FunctionPrototype.call;\n\n// eslint-disable-next-line es/no-reflect -- safe\nmodule.exports = typeof Reflect == 'object' && Reflect.apply || (NATIVE_BIND ? call.bind(apply) : function () {\n  return call.apply(apply, arguments);\n});\n","'use strict';\nvar uncurryThis = require('../internals/function-uncurry-this-clause');\nvar aCallable = require('../internals/a-callable');\nvar NATIVE_BIND = require('../internals/function-bind-native');\n\nvar bind = uncurryThis(uncurryThis.bind);\n\n// optional / simple context binding\nmodule.exports = function (fn, that) {\n  aCallable(fn);\n  return that === undefined ? fn : NATIVE_BIND ? bind(fn, that) : function (/* ...args */) {\n    return fn.apply(that, arguments);\n  };\n};\n","'use strict';\nvar fails = require('../internals/fails');\n\nmodule.exports = !fails(function () {\n  // eslint-disable-next-line es/no-function-prototype-bind -- safe\n  var test = (function () { /* empty */ }).bind();\n  // eslint-disable-next-line no-prototype-builtins -- safe\n  return typeof test != 'function' || test.hasOwnProperty('prototype');\n});\n","'use strict';\nvar NATIVE_BIND = require('../internals/function-bind-native');\n\nvar call = Function.prototype.call;\n\nmodule.exports = NATIVE_BIND ? call.bind(call) : function () {\n  return call.apply(call, arguments);\n};\n","'use strict';\nvar DESCRIPTORS = require('../internals/descriptors');\nvar hasOwn = require('../internals/has-own-property');\n\nvar FunctionPrototype = Function.prototype;\n// eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe\nvar getDescriptor = DESCRIPTORS && Object.getOwnPropertyDescriptor;\n\nvar EXISTS = hasOwn(FunctionPrototype, 'name');\n// additional protection from minified / mangled / dropped function names\nvar PROPER = EXISTS && (function something() { /* empty */ }).name === 'something';\nvar CONFIGURABLE = EXISTS && (!DESCRIPTORS || (DESCRIPTORS && getDescriptor(FunctionPrototype, 'name').configurable));\n\nmodule.exports = {\n  EXISTS: EXISTS,\n  PROPER: PROPER,\n  CONFIGURABLE: CONFIGURABLE\n};\n","'use strict';\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar aCallable = require('../internals/a-callable');\n\nmodule.exports = function (object, key, method) {\n  try {\n    // eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe\n    return uncurryThis(aCallable(Object.getOwnPropertyDescriptor(object, key)[method]));\n  } catch (error) { /* empty */ }\n};\n","'use strict';\nvar classofRaw = require('../internals/classof-raw');\nvar uncurryThis = require('../internals/function-uncurry-this');\n\nmodule.exports = function (fn) {\n  // Nashorn bug:\n  //   https://github.com/zloirock/core-js/issues/1128\n  //   https://github.com/zloirock/core-js/issues/1130\n  if (classofRaw(fn) === 'Function') return uncurryThis(fn);\n};\n","'use strict';\nvar NATIVE_BIND = require('../internals/function-bind-native');\n\nvar FunctionPrototype = Function.prototype;\nvar call = FunctionPrototype.call;\nvar uncurryThisWithBind = NATIVE_BIND && FunctionPrototype.bind.bind(call, call);\n\nmodule.exports = NATIVE_BIND ? uncurryThisWithBind : function (fn) {\n  return function () {\n    return call.apply(fn, arguments);\n  };\n};\n","'use strict';\nvar path = require('../internals/path');\nvar global = require('../internals/global');\nvar isCallable = require('../internals/is-callable');\n\nvar aFunction = function (variable) {\n  return isCallable(variable) ? variable : undefined;\n};\n\nmodule.exports = function (namespace, method) {\n  return arguments.length < 2 ? aFunction(path[namespace]) || aFunction(global[namespace])\n    : path[namespace] && path[namespace][method] || global[namespace] && global[namespace][method];\n};\n","'use strict';\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar isArray = require('../internals/is-array');\nvar isCallable = require('../internals/is-callable');\nvar classof = require('../internals/classof-raw');\nvar toString = require('../internals/to-string');\n\nvar push = uncurryThis([].push);\n\nmodule.exports = function (replacer) {\n  if (isCallable(replacer)) return replacer;\n  if (!isArray(replacer)) return;\n  var rawLength = replacer.length;\n  var keys = [];\n  for (var i = 0; i < rawLength; i++) {\n    var element = replacer[i];\n    if (typeof element == 'string') push(keys, element);\n    else if (typeof element == 'number' || classof(element) == 'Number' || classof(element) == 'String') push(keys, toString(element));\n  }\n  var keysLength = keys.length;\n  var root = true;\n  return function (key, value) {\n    if (root) {\n      root = false;\n      return value;\n    }\n    if (isArray(this)) return value;\n    for (var j = 0; j < keysLength; j++) if (keys[j] === key) return value;\n  };\n};\n","'use strict';\nvar aCallable = require('../internals/a-callable');\nvar isNullOrUndefined = require('../internals/is-null-or-undefined');\n\n// `GetMethod` abstract operation\n// https://tc39.es/ecma262/#sec-getmethod\nmodule.exports = function (V, P) {\n  var func = V[P];\n  return isNullOrUndefined(func) ? undefined : aCallable(func);\n};\n","'use strict';\nvar check = function (it) {\n  return it && it.Math == Math && it;\n};\n\n// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028\nmodule.exports =\n  // eslint-disable-next-line es/no-global-this -- safe\n  check(typeof globalThis == 'object' && globalThis) ||\n  check(typeof window == 'object' && window) ||\n  // eslint-disable-next-line no-restricted-globals -- safe\n  check(typeof self == 'object' && self) ||\n  check(typeof global == 'object' && global) ||\n  // eslint-disable-next-line no-new-func -- fallback\n  (function () { return this; })() || this || Function('return this')();\n","'use strict';\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar toObject = require('../internals/to-object');\n\nvar hasOwnProperty = uncurryThis({}.hasOwnProperty);\n\n// `HasOwnProperty` abstract operation\n// https://tc39.es/ecma262/#sec-hasownproperty\n// eslint-disable-next-line es/no-object-hasown -- safe\nmodule.exports = Object.hasOwn || function hasOwn(it, key) {\n  return hasOwnProperty(toObject(it), key);\n};\n","'use strict';\nmodule.exports = {};\n","'use strict';\nvar getBuiltIn = require('../internals/get-built-in');\n\nmodule.exports = getBuiltIn('document', 'documentElement');\n","'use strict';\nvar DESCRIPTORS = require('../internals/descriptors');\nvar fails = require('../internals/fails');\nvar createElement = require('../internals/document-create-element');\n\n// Thanks to IE8 for its funny defineProperty\nmodule.exports = !DESCRIPTORS && !fails(function () {\n  // eslint-disable-next-line es/no-object-defineproperty -- required for testing\n  return Object.defineProperty(createElement('div'), 'a', {\n    get: function () { return 7; }\n  }).a != 7;\n});\n","'use strict';\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar fails = require('../internals/fails');\nvar classof = require('../internals/classof-raw');\n\nvar $Object = Object;\nvar split = uncurryThis(''.split);\n\n// fallback for non-array-like ES3 and non-enumerable old V8 strings\nmodule.exports = fails(function () {\n  // throws an error in rhino, see https://github.com/mozilla/rhino/issues/346\n  // eslint-disable-next-line no-prototype-builtins -- safe\n  return !$Object('z').propertyIsEnumerable(0);\n}) ? function (it) {\n  return classof(it) == 'String' ? split(it, '') : $Object(it);\n} : $Object;\n","'use strict';\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar isCallable = require('../internals/is-callable');\nvar store = require('../internals/shared-store');\n\nvar functionToString = uncurryThis(Function.toString);\n\n// this helper broken in `core-js@3.4.1-3.4.4`, so we can't use `shared` helper\nif (!isCallable(store.inspectSource)) {\n  store.inspectSource = function (it) {\n    return functionToString(it);\n  };\n}\n\nmodule.exports = store.inspectSource;\n","'use strict';\nvar NATIVE_WEAK_MAP = require('../internals/weak-map-basic-detection');\nvar global = require('../internals/global');\nvar isObject = require('../internals/is-object');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\nvar hasOwn = require('../internals/has-own-property');\nvar shared = require('../internals/shared-store');\nvar sharedKey = require('../internals/shared-key');\nvar hiddenKeys = require('../internals/hidden-keys');\n\nvar OBJECT_ALREADY_INITIALIZED = 'Object already initialized';\nvar TypeError = global.TypeError;\nvar WeakMap = global.WeakMap;\nvar set, get, has;\n\nvar enforce = function (it) {\n  return has(it) ? get(it) : set(it, {});\n};\n\nvar getterFor = function (TYPE) {\n  return function (it) {\n    var state;\n    if (!isObject(it) || (state = get(it)).type !== TYPE) {\n      throw TypeError('Incompatible receiver, ' + TYPE + ' required');\n    } return state;\n  };\n};\n\nif (NATIVE_WEAK_MAP || shared.state) {\n  var store = shared.state || (shared.state = new WeakMap());\n  /* eslint-disable no-self-assign -- prototype methods protection */\n  store.get = store.get;\n  store.has = store.has;\n  store.set = store.set;\n  /* eslint-enable no-self-assign -- prototype methods protection */\n  set = function (it, metadata) {\n    if (store.has(it)) throw TypeError(OBJECT_ALREADY_INITIALIZED);\n    metadata.facade = it;\n    store.set(it, metadata);\n    return metadata;\n  };\n  get = function (it) {\n    return store.get(it) || {};\n  };\n  has = function (it) {\n    return store.has(it);\n  };\n} else {\n  var STATE = sharedKey('state');\n  hiddenKeys[STATE] = true;\n  set = function (it, metadata) {\n    if (hasOwn(it, STATE)) throw TypeError(OBJECT_ALREADY_INITIALIZED);\n    metadata.facade = it;\n    createNonEnumerableProperty(it, STATE, metadata);\n    return metadata;\n  };\n  get = function (it) {\n    return hasOwn(it, STATE) ? it[STATE] : {};\n  };\n  has = function (it) {\n    return hasOwn(it, STATE);\n  };\n}\n\nmodule.exports = {\n  set: set,\n  get: get,\n  has: has,\n  enforce: enforce,\n  getterFor: getterFor\n};\n","'use strict';\nvar classof = require('../internals/classof-raw');\n\n// `IsArray` abstract operation\n// https://tc39.es/ecma262/#sec-isarray\n// eslint-disable-next-line es/no-array-isarray -- safe\nmodule.exports = Array.isArray || function isArray(argument) {\n  return classof(argument) == 'Array';\n};\n","'use strict';\nvar $documentAll = require('../internals/document-all');\n\nvar documentAll = $documentAll.all;\n\n// `IsCallable` abstract operation\n// https://tc39.es/ecma262/#sec-iscallable\nmodule.exports = $documentAll.IS_HTMLDDA ? function (argument) {\n  return typeof argument == 'function' || argument === documentAll;\n} : function (argument) {\n  return typeof argument == 'function';\n};\n","'use strict';\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar fails = require('../internals/fails');\nvar isCallable = require('../internals/is-callable');\nvar classof = require('../internals/classof');\nvar getBuiltIn = require('../internals/get-built-in');\nvar inspectSource = require('../internals/inspect-source');\n\nvar noop = function () { /* empty */ };\nvar empty = [];\nvar construct = getBuiltIn('Reflect', 'construct');\nvar constructorRegExp = /^\\s*(?:class|function)\\b/;\nvar exec = uncurryThis(constructorRegExp.exec);\nvar INCORRECT_TO_STRING = !constructorRegExp.exec(noop);\n\nvar isConstructorModern = function isConstructor(argument) {\n  if (!isCallable(argument)) return false;\n  try {\n    construct(noop, empty, argument);\n    return true;\n  } catch (error) {\n    return false;\n  }\n};\n\nvar isConstructorLegacy = function isConstructor(argument) {\n  if (!isCallable(argument)) return false;\n  switch (classof(argument)) {\n    case 'AsyncFunction':\n    case 'GeneratorFunction':\n    case 'AsyncGeneratorFunction': return false;\n  }\n  try {\n    // we can't check .prototype since constructors produced by .bind haven't it\n    // `Function#toString` throws on some built-it function in some legacy engines\n    // (for example, `DOMQuad` and similar in FF41-)\n    return INCORRECT_TO_STRING || !!exec(constructorRegExp, inspectSource(argument));\n  } catch (error) {\n    return true;\n  }\n};\n\nisConstructorLegacy.sham = true;\n\n// `IsConstructor` abstract operation\n// https://tc39.es/ecma262/#sec-isconstructor\nmodule.exports = !construct || fails(function () {\n  var called;\n  return isConstructorModern(isConstructorModern.call)\n    || !isConstructorModern(Object)\n    || !isConstructorModern(function () { called = true; })\n    || called;\n}) ? isConstructorLegacy : isConstructorModern;\n","'use strict';\nvar fails = require('../internals/fails');\nvar isCallable = require('../internals/is-callable');\n\nvar replacement = /#|\\.prototype\\./;\n\nvar isForced = function (feature, detection) {\n  var value = data[normalize(feature)];\n  return value == POLYFILL ? true\n    : value == NATIVE ? false\n    : isCallable(detection) ? fails(detection)\n    : !!detection;\n};\n\nvar normalize = isForced.normalize = function (string) {\n  return String(string).replace(replacement, '.').toLowerCase();\n};\n\nvar data = isForced.data = {};\nvar NATIVE = isForced.NATIVE = 'N';\nvar POLYFILL = isForced.POLYFILL = 'P';\n\nmodule.exports = isForced;\n","'use strict';\n// we can't use just `it == null` since of `document.all` special case\n// https://tc39.es/ecma262/#sec-IsHTMLDDA-internal-slot-aec\nmodule.exports = function (it) {\n  return it === null || it === undefined;\n};\n","'use strict';\nvar isCallable = require('../internals/is-callable');\nvar $documentAll = require('../internals/document-all');\n\nvar documentAll = $documentAll.all;\n\nmodule.exports = $documentAll.IS_HTMLDDA ? function (it) {\n  return typeof it == 'object' ? it !== null : isCallable(it) || it === documentAll;\n} : function (it) {\n  return typeof it == 'object' ? it !== null : isCallable(it);\n};\n","'use strict';\nmodule.exports = true;\n","'use strict';\nvar getBuiltIn = require('../internals/get-built-in');\nvar isCallable = require('../internals/is-callable');\nvar isPrototypeOf = require('../internals/object-is-prototype-of');\nvar USE_SYMBOL_AS_UID = require('../internals/use-symbol-as-uid');\n\nvar $Object = Object;\n\nmodule.exports = USE_SYMBOL_AS_UID ? function (it) {\n  return typeof it == 'symbol';\n} : function (it) {\n  var $Symbol = getBuiltIn('Symbol');\n  return isCallable($Symbol) && isPrototypeOf($Symbol.prototype, $Object(it));\n};\n","'use strict';\nvar IteratorPrototype = require('../internals/iterators-core').IteratorPrototype;\nvar create = require('../internals/object-create');\nvar createPropertyDescriptor = require('../internals/create-property-descriptor');\nvar setToStringTag = require('../internals/set-to-string-tag');\nvar Iterators = require('../internals/iterators');\n\nvar returnThis = function () { return this; };\n\nmodule.exports = function (IteratorConstructor, NAME, next, ENUMERABLE_NEXT) {\n  var TO_STRING_TAG = NAME + ' Iterator';\n  IteratorConstructor.prototype = create(IteratorPrototype, { next: createPropertyDescriptor(+!ENUMERABLE_NEXT, next) });\n  setToStringTag(IteratorConstructor, TO_STRING_TAG, false, true);\n  Iterators[TO_STRING_TAG] = returnThis;\n  return IteratorConstructor;\n};\n","'use strict';\nvar $ = require('../internals/export');\nvar call = require('../internals/function-call');\nvar IS_PURE = require('../internals/is-pure');\nvar FunctionName = require('../internals/function-name');\nvar isCallable = require('../internals/is-callable');\nvar createIteratorConstructor = require('../internals/iterator-create-constructor');\nvar getPrototypeOf = require('../internals/object-get-prototype-of');\nvar setPrototypeOf = require('../internals/object-set-prototype-of');\nvar setToStringTag = require('../internals/set-to-string-tag');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\nvar defineBuiltIn = require('../internals/define-built-in');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar Iterators = require('../internals/iterators');\nvar IteratorsCore = require('../internals/iterators-core');\n\nvar PROPER_FUNCTION_NAME = FunctionName.PROPER;\nvar CONFIGURABLE_FUNCTION_NAME = FunctionName.CONFIGURABLE;\nvar IteratorPrototype = IteratorsCore.IteratorPrototype;\nvar BUGGY_SAFARI_ITERATORS = IteratorsCore.BUGGY_SAFARI_ITERATORS;\nvar ITERATOR = wellKnownSymbol('iterator');\nvar KEYS = 'keys';\nvar VALUES = 'values';\nvar ENTRIES = 'entries';\n\nvar returnThis = function () { return this; };\n\nmodule.exports = function (Iterable, NAME, IteratorConstructor, next, DEFAULT, IS_SET, FORCED) {\n  createIteratorConstructor(IteratorConstructor, NAME, next);\n\n  var getIterationMethod = function (KIND) {\n    if (KIND === DEFAULT && defaultIterator) return defaultIterator;\n    if (!BUGGY_SAFARI_ITERATORS && KIND in IterablePrototype) return IterablePrototype[KIND];\n    switch (KIND) {\n      case KEYS: return function keys() { return new IteratorConstructor(this, KIND); };\n      case VALUES: return function values() { return new IteratorConstructor(this, KIND); };\n      case ENTRIES: return function entries() { return new IteratorConstructor(this, KIND); };\n    } return function () { return new IteratorConstructor(this); };\n  };\n\n  var TO_STRING_TAG = NAME + ' Iterator';\n  var INCORRECT_VALUES_NAME = false;\n  var IterablePrototype = Iterable.prototype;\n  var nativeIterator = IterablePrototype[ITERATOR]\n    || IterablePrototype['@@iterator']\n    || DEFAULT && IterablePrototype[DEFAULT];\n  var defaultIterator = !BUGGY_SAFARI_ITERATORS && nativeIterator || getIterationMethod(DEFAULT);\n  var anyNativeIterator = NAME == 'Array' ? IterablePrototype.entries || nativeIterator : nativeIterator;\n  var CurrentIteratorPrototype, methods, KEY;\n\n  // fix native\n  if (anyNativeIterator) {\n    CurrentIteratorPrototype = getPrototypeOf(anyNativeIterator.call(new Iterable()));\n    if (CurrentIteratorPrototype !== Object.prototype && CurrentIteratorPrototype.next) {\n      if (!IS_PURE && getPrototypeOf(CurrentIteratorPrototype) !== IteratorPrototype) {\n        if (setPrototypeOf) {\n          setPrototypeOf(CurrentIteratorPrototype, IteratorPrototype);\n        } else if (!isCallable(CurrentIteratorPrototype[ITERATOR])) {\n          defineBuiltIn(CurrentIteratorPrototype, ITERATOR, returnThis);\n        }\n      }\n      // Set @@toStringTag to native iterators\n      setToStringTag(CurrentIteratorPrototype, TO_STRING_TAG, true, true);\n      if (IS_PURE) Iterators[TO_STRING_TAG] = returnThis;\n    }\n  }\n\n  // fix Array.prototype.{ values, @@iterator }.name in V8 / FF\n  if (PROPER_FUNCTION_NAME && DEFAULT == VALUES && nativeIterator && nativeIterator.name !== VALUES) {\n    if (!IS_PURE && CONFIGURABLE_FUNCTION_NAME) {\n      createNonEnumerableProperty(IterablePrototype, 'name', VALUES);\n    } else {\n      INCORRECT_VALUES_NAME = true;\n      defaultIterator = function values() { return call(nativeIterator, this); };\n    }\n  }\n\n  // export additional methods\n  if (DEFAULT) {\n    methods = {\n      values: getIterationMethod(VALUES),\n      keys: IS_SET ? defaultIterator : getIterationMethod(KEYS),\n      entries: getIterationMethod(ENTRIES)\n    };\n    if (FORCED) for (KEY in methods) {\n      if (BUGGY_SAFARI_ITERATORS || INCORRECT_VALUES_NAME || !(KEY in IterablePrototype)) {\n        defineBuiltIn(IterablePrototype, KEY, methods[KEY]);\n      }\n    } else $({ target: NAME, proto: true, forced: BUGGY_SAFARI_ITERATORS || INCORRECT_VALUES_NAME }, methods);\n  }\n\n  // define iterator\n  if ((!IS_PURE || FORCED) && IterablePrototype[ITERATOR] !== defaultIterator) {\n    defineBuiltIn(IterablePrototype, ITERATOR, defaultIterator, { name: DEFAULT });\n  }\n  Iterators[NAME] = defaultIterator;\n\n  return methods;\n};\n","'use strict';\nvar fails = require('../internals/fails');\nvar isCallable = require('../internals/is-callable');\nvar isObject = require('../internals/is-object');\nvar create = require('../internals/object-create');\nvar getPrototypeOf = require('../internals/object-get-prototype-of');\nvar defineBuiltIn = require('../internals/define-built-in');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar IS_PURE = require('../internals/is-pure');\n\nvar ITERATOR = wellKnownSymbol('iterator');\nvar BUGGY_SAFARI_ITERATORS = false;\n\n// `%IteratorPrototype%` object\n// https://tc39.es/ecma262/#sec-%iteratorprototype%-object\nvar IteratorPrototype, PrototypeOfArrayIteratorPrototype, arrayIterator;\n\n/* eslint-disable es/no-array-prototype-keys -- safe */\nif ([].keys) {\n  arrayIterator = [].keys();\n  // Safari 8 has buggy iterators w/o `next`\n  if (!('next' in arrayIterator)) BUGGY_SAFARI_ITERATORS = true;\n  else {\n    PrototypeOfArrayIteratorPrototype = getPrototypeOf(getPrototypeOf(arrayIterator));\n    if (PrototypeOfArrayIteratorPrototype !== Object.prototype) IteratorPrototype = PrototypeOfArrayIteratorPrototype;\n  }\n}\n\nvar NEW_ITERATOR_PROTOTYPE = !isObject(IteratorPrototype) || fails(function () {\n  var test = {};\n  // FF44- legacy iterators case\n  return IteratorPrototype[ITERATOR].call(test) !== test;\n});\n\nif (NEW_ITERATOR_PROTOTYPE) IteratorPrototype = {};\nelse if (IS_PURE) IteratorPrototype = create(IteratorPrototype);\n\n// `%IteratorPrototype%[@@iterator]()` method\n// https://tc39.es/ecma262/#sec-%iteratorprototype%-@@iterator\nif (!isCallable(IteratorPrototype[ITERATOR])) {\n  defineBuiltIn(IteratorPrototype, ITERATOR, function () {\n    return this;\n  });\n}\n\nmodule.exports = {\n  IteratorPrototype: IteratorPrototype,\n  BUGGY_SAFARI_ITERATORS: BUGGY_SAFARI_ITERATORS\n};\n","'use strict';\nmodule.exports = {};\n","'use strict';\nvar toLength = require('../internals/to-length');\n\n// `LengthOfArrayLike` abstract operation\n// https://tc39.es/ecma262/#sec-lengthofarraylike\nmodule.exports = function (obj) {\n  return toLength(obj.length);\n};\n","'use strict';\nvar ceil = Math.ceil;\nvar floor = Math.floor;\n\n// `Math.trunc` method\n// https://tc39.es/ecma262/#sec-math.trunc\n// eslint-disable-next-line es/no-math-trunc -- safe\nmodule.exports = Math.trunc || function trunc(x) {\n  var n = +x;\n  return (n > 0 ? floor : ceil)(n);\n};\n","'use strict';\n/* global ActiveXObject -- old IE, WSH */\nvar anObject = require('../internals/an-object');\nvar definePropertiesModule = require('../internals/object-define-properties');\nvar enumBugKeys = require('../internals/enum-bug-keys');\nvar hiddenKeys = require('../internals/hidden-keys');\nvar html = require('../internals/html');\nvar documentCreateElement = require('../internals/document-create-element');\nvar sharedKey = require('../internals/shared-key');\n\nvar GT = '>';\nvar LT = '<';\nvar PROTOTYPE = 'prototype';\nvar SCRIPT = 'script';\nvar IE_PROTO = sharedKey('IE_PROTO');\n\nvar EmptyConstructor = function () { /* empty */ };\n\nvar scriptTag = function (content) {\n  return LT + SCRIPT + GT + content + LT + '/' + SCRIPT + GT;\n};\n\n// Create object with fake `null` prototype: use ActiveX Object with cleared prototype\nvar NullProtoObjectViaActiveX = function (activeXDocument) {\n  activeXDocument.write(scriptTag(''));\n  activeXDocument.close();\n  var temp = activeXDocument.parentWindow.Object;\n  activeXDocument = null; // avoid memory leak\n  return temp;\n};\n\n// Create object with fake `null` prototype: use iframe Object with cleared prototype\nvar NullProtoObjectViaIFrame = function () {\n  // Thrash, waste and sodomy: IE GC bug\n  var iframe = documentCreateElement('iframe');\n  var JS = 'java' + SCRIPT + ':';\n  var iframeDocument;\n  iframe.style.display = 'none';\n  html.appendChild(iframe);\n  // https://github.com/zloirock/core-js/issues/475\n  iframe.src = String(JS);\n  iframeDocument = iframe.contentWindow.document;\n  iframeDocument.open();\n  iframeDocument.write(scriptTag('document.F=Object'));\n  iframeDocument.close();\n  return iframeDocument.F;\n};\n\n// Check for document.domain and active x support\n// No need to use active x approach when document.domain is not set\n// see https://github.com/es-shims/es5-shim/issues/150\n// variation of https://github.com/kitcambridge/es5-shim/commit/4f738ac066346\n// avoid IE GC bug\nvar activeXDocument;\nvar NullProtoObject = function () {\n  try {\n    activeXDocument = new ActiveXObject('htmlfile');\n  } catch (error) { /* ignore */ }\n  NullProtoObject = typeof document != 'undefined'\n    ? document.domain && activeXDocument\n      ? NullProtoObjectViaActiveX(activeXDocument) // old IE\n      : NullProtoObjectViaIFrame()\n    : NullProtoObjectViaActiveX(activeXDocument); // WSH\n  var length = enumBugKeys.length;\n  while (length--) delete NullProtoObject[PROTOTYPE][enumBugKeys[length]];\n  return NullProtoObject();\n};\n\nhiddenKeys[IE_PROTO] = true;\n\n// `Object.create` method\n// https://tc39.es/ecma262/#sec-object.create\n// eslint-disable-next-line es/no-object-create -- safe\nmodule.exports = Object.create || function create(O, Properties) {\n  var result;\n  if (O !== null) {\n    EmptyConstructor[PROTOTYPE] = anObject(O);\n    result = new EmptyConstructor();\n    EmptyConstructor[PROTOTYPE] = null;\n    // add \"__proto__\" for Object.getPrototypeOf polyfill\n    result[IE_PROTO] = O;\n  } else result = NullProtoObject();\n  return Properties === undefined ? result : definePropertiesModule.f(result, Properties);\n};\n","'use strict';\nvar DESCRIPTORS = require('../internals/descriptors');\nvar V8_PROTOTYPE_DEFINE_BUG = require('../internals/v8-prototype-define-bug');\nvar definePropertyModule = require('../internals/object-define-property');\nvar anObject = require('../internals/an-object');\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar objectKeys = require('../internals/object-keys');\n\n// `Object.defineProperties` method\n// https://tc39.es/ecma262/#sec-object.defineproperties\n// eslint-disable-next-line es/no-object-defineproperties -- safe\nexports.f = DESCRIPTORS && !V8_PROTOTYPE_DEFINE_BUG ? Object.defineProperties : function defineProperties(O, Properties) {\n  anObject(O);\n  var props = toIndexedObject(Properties);\n  var keys = objectKeys(Properties);\n  var length = keys.length;\n  var index = 0;\n  var key;\n  while (length > index) definePropertyModule.f(O, key = keys[index++], props[key]);\n  return O;\n};\n","'use strict';\nvar DESCRIPTORS = require('../internals/descriptors');\nvar IE8_DOM_DEFINE = require('../internals/ie8-dom-define');\nvar V8_PROTOTYPE_DEFINE_BUG = require('../internals/v8-prototype-define-bug');\nvar anObject = require('../internals/an-object');\nvar toPropertyKey = require('../internals/to-property-key');\n\nvar $TypeError = TypeError;\n// eslint-disable-next-line es/no-object-defineproperty -- safe\nvar $defineProperty = Object.defineProperty;\n// eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe\nvar $getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\nvar ENUMERABLE = 'enumerable';\nvar CONFIGURABLE = 'configurable';\nvar WRITABLE = 'writable';\n\n// `Object.defineProperty` method\n// https://tc39.es/ecma262/#sec-object.defineproperty\nexports.f = DESCRIPTORS ? V8_PROTOTYPE_DEFINE_BUG ? function defineProperty(O, P, Attributes) {\n  anObject(O);\n  P = toPropertyKey(P);\n  anObject(Attributes);\n  if (typeof O === 'function' && P === 'prototype' && 'value' in Attributes && WRITABLE in Attributes && !Attributes[WRITABLE]) {\n    var current = $getOwnPropertyDescriptor(O, P);\n    if (current && current[WRITABLE]) {\n      O[P] = Attributes.value;\n      Attributes = {\n        configurable: CONFIGURABLE in Attributes ? Attributes[CONFIGURABLE] : current[CONFIGURABLE],\n        enumerable: ENUMERABLE in Attributes ? Attributes[ENUMERABLE] : current[ENUMERABLE],\n        writable: false\n      };\n    }\n  } return $defineProperty(O, P, Attributes);\n} : $defineProperty : function defineProperty(O, P, Attributes) {\n  anObject(O);\n  P = toPropertyKey(P);\n  anObject(Attributes);\n  if (IE8_DOM_DEFINE) try {\n    return $defineProperty(O, P, Attributes);\n  } catch (error) { /* empty */ }\n  if ('get' in Attributes || 'set' in Attributes) throw $TypeError('Accessors not supported');\n  if ('value' in Attributes) O[P] = Attributes.value;\n  return O;\n};\n","'use strict';\nvar DESCRIPTORS = require('../internals/descriptors');\nvar call = require('../internals/function-call');\nvar propertyIsEnumerableModule = require('../internals/object-property-is-enumerable');\nvar createPropertyDescriptor = require('../internals/create-property-descriptor');\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar toPropertyKey = require('../internals/to-property-key');\nvar hasOwn = require('../internals/has-own-property');\nvar IE8_DOM_DEFINE = require('../internals/ie8-dom-define');\n\n// eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe\nvar $getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n\n// `Object.getOwnPropertyDescriptor` method\n// https://tc39.es/ecma262/#sec-object.getownpropertydescriptor\nexports.f = DESCRIPTORS ? $getOwnPropertyDescriptor : function getOwnPropertyDescriptor(O, P) {\n  O = toIndexedObject(O);\n  P = toPropertyKey(P);\n  if (IE8_DOM_DEFINE) try {\n    return $getOwnPropertyDescriptor(O, P);\n  } catch (error) { /* empty */ }\n  if (hasOwn(O, P)) return createPropertyDescriptor(!call(propertyIsEnumerableModule.f, O, P), O[P]);\n};\n","'use strict';\n/* eslint-disable es/no-object-getownpropertynames -- safe */\nvar classof = require('../internals/classof-raw');\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar $getOwnPropertyNames = require('../internals/object-get-own-property-names').f;\nvar arraySlice = require('../internals/array-slice-simple');\n\nvar windowNames = typeof window == 'object' && window && Object.getOwnPropertyNames\n  ? Object.getOwnPropertyNames(window) : [];\n\nvar getWindowNames = function (it) {\n  try {\n    return $getOwnPropertyNames(it);\n  } catch (error) {\n    return arraySlice(windowNames);\n  }\n};\n\n// fallback for IE11 buggy Object.getOwnPropertyNames with iframe and window\nmodule.exports.f = function getOwnPropertyNames(it) {\n  return windowNames && classof(it) == 'Window'\n    ? getWindowNames(it)\n    : $getOwnPropertyNames(toIndexedObject(it));\n};\n","'use strict';\nvar internalObjectKeys = require('../internals/object-keys-internal');\nvar enumBugKeys = require('../internals/enum-bug-keys');\n\nvar hiddenKeys = enumBugKeys.concat('length', 'prototype');\n\n// `Object.getOwnPropertyNames` method\n// https://tc39.es/ecma262/#sec-object.getownpropertynames\n// eslint-disable-next-line es/no-object-getownpropertynames -- safe\nexports.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O) {\n  return internalObjectKeys(O, hiddenKeys);\n};\n","'use strict';\n// eslint-disable-next-line es/no-object-getownpropertysymbols -- safe\nexports.f = Object.getOwnPropertySymbols;\n","'use strict';\nvar hasOwn = require('../internals/has-own-property');\nvar isCallable = require('../internals/is-callable');\nvar toObject = require('../internals/to-object');\nvar sharedKey = require('../internals/shared-key');\nvar CORRECT_PROTOTYPE_GETTER = require('../internals/correct-prototype-getter');\n\nvar IE_PROTO = sharedKey('IE_PROTO');\nvar $Object = Object;\nvar ObjectPrototype = $Object.prototype;\n\n// `Object.getPrototypeOf` method\n// https://tc39.es/ecma262/#sec-object.getprototypeof\n// eslint-disable-next-line es/no-object-getprototypeof -- safe\nmodule.exports = CORRECT_PROTOTYPE_GETTER ? $Object.getPrototypeOf : function (O) {\n  var object = toObject(O);\n  if (hasOwn(object, IE_PROTO)) return object[IE_PROTO];\n  var constructor = object.constructor;\n  if (isCallable(constructor) && object instanceof constructor) {\n    return constructor.prototype;\n  } return object instanceof $Object ? ObjectPrototype : null;\n};\n","'use strict';\nvar uncurryThis = require('../internals/function-uncurry-this');\n\nmodule.exports = uncurryThis({}.isPrototypeOf);\n","'use strict';\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar hasOwn = require('../internals/has-own-property');\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar indexOf = require('../internals/array-includes').indexOf;\nvar hiddenKeys = require('../internals/hidden-keys');\n\nvar push = uncurryThis([].push);\n\nmodule.exports = function (object, names) {\n  var O = toIndexedObject(object);\n  var i = 0;\n  var result = [];\n  var key;\n  for (key in O) !hasOwn(hiddenKeys, key) && hasOwn(O, key) && push(result, key);\n  // Don't enum bug & hidden keys\n  while (names.length > i) if (hasOwn(O, key = names[i++])) {\n    ~indexOf(result, key) || push(result, key);\n  }\n  return result;\n};\n","'use strict';\nvar internalObjectKeys = require('../internals/object-keys-internal');\nvar enumBugKeys = require('../internals/enum-bug-keys');\n\n// `Object.keys` method\n// https://tc39.es/ecma262/#sec-object.keys\n// eslint-disable-next-line es/no-object-keys -- safe\nmodule.exports = Object.keys || function keys(O) {\n  return internalObjectKeys(O, enumBugKeys);\n};\n","'use strict';\nvar $propertyIsEnumerable = {}.propertyIsEnumerable;\n// eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe\nvar getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n\n// Nashorn ~ JDK8 bug\nvar NASHORN_BUG = getOwnPropertyDescriptor && !$propertyIsEnumerable.call({ 1: 2 }, 1);\n\n// `Object.prototype.propertyIsEnumerable` method implementation\n// https://tc39.es/ecma262/#sec-object.prototype.propertyisenumerable\nexports.f = NASHORN_BUG ? function propertyIsEnumerable(V) {\n  var descriptor = getOwnPropertyDescriptor(this, V);\n  return !!descriptor && descriptor.enumerable;\n} : $propertyIsEnumerable;\n","'use strict';\n/* eslint-disable no-proto -- safe */\nvar uncurryThisAccessor = require('../internals/function-uncurry-this-accessor');\nvar anObject = require('../internals/an-object');\nvar aPossiblePrototype = require('../internals/a-possible-prototype');\n\n// `Object.setPrototypeOf` method\n// https://tc39.es/ecma262/#sec-object.setprototypeof\n// Works with __proto__ only. Old v8 can't work with null proto objects.\n// eslint-disable-next-line es/no-object-setprototypeof -- safe\nmodule.exports = Object.setPrototypeOf || ('__proto__' in {} ? function () {\n  var CORRECT_SETTER = false;\n  var test = {};\n  var setter;\n  try {\n    setter = uncurryThisAccessor(Object.prototype, '__proto__', 'set');\n    setter(test, []);\n    CORRECT_SETTER = test instanceof Array;\n  } catch (error) { /* empty */ }\n  return function setPrototypeOf(O, proto) {\n    anObject(O);\n    aPossiblePrototype(proto);\n    if (CORRECT_SETTER) setter(O, proto);\n    else O.__proto__ = proto;\n    return O;\n  };\n}() : undefined);\n","'use strict';\nvar TO_STRING_TAG_SUPPORT = require('../internals/to-string-tag-support');\nvar classof = require('../internals/classof');\n\n// `Object.prototype.toString` method implementation\n// https://tc39.es/ecma262/#sec-object.prototype.tostring\nmodule.exports = TO_STRING_TAG_SUPPORT ? {}.toString : function toString() {\n  return '[object ' + classof(this) + ']';\n};\n","'use strict';\nvar call = require('../internals/function-call');\nvar isCallable = require('../internals/is-callable');\nvar isObject = require('../internals/is-object');\n\nvar $TypeError = TypeError;\n\n// `OrdinaryToPrimitive` abstract operation\n// https://tc39.es/ecma262/#sec-ordinarytoprimitive\nmodule.exports = function (input, pref) {\n  var fn, val;\n  if (pref === 'string' && isCallable(fn = input.toString) && !isObject(val = call(fn, input))) return val;\n  if (isCallable(fn = input.valueOf) && !isObject(val = call(fn, input))) return val;\n  if (pref !== 'string' && isCallable(fn = input.toString) && !isObject(val = call(fn, input))) return val;\n  throw $TypeError(\"Can't convert object to primitive value\");\n};\n","'use strict';\nmodule.exports = {};\n","'use strict';\nvar anObject = require('../internals/an-object');\n\n// `RegExp.prototype.flags` getter implementation\n// https://tc39.es/ecma262/#sec-get-regexp.prototype.flags\nmodule.exports = function () {\n  var that = anObject(this);\n  var result = '';\n  if (that.hasIndices) result += 'd';\n  if (that.global) result += 'g';\n  if (that.ignoreCase) result += 'i';\n  if (that.multiline) result += 'm';\n  if (that.dotAll) result += 's';\n  if (that.unicode) result += 'u';\n  if (that.unicodeSets) result += 'v';\n  if (that.sticky) result += 'y';\n  return result;\n};\n","'use strict';\nvar call = require('../internals/function-call');\nvar hasOwn = require('../internals/has-own-property');\nvar isPrototypeOf = require('../internals/object-is-prototype-of');\nvar regExpFlags = require('../internals/regexp-flags');\n\nvar RegExpPrototype = RegExp.prototype;\n\nmodule.exports = function (R) {\n  var flags = R.flags;\n  return flags === undefined && !('flags' in RegExpPrototype) && !hasOwn(R, 'flags') && isPrototypeOf(RegExpPrototype, R)\n    ? call(regExpFlags, R) : flags;\n};\n","'use strict';\nvar isNullOrUndefined = require('../internals/is-null-or-undefined');\n\nvar $TypeError = TypeError;\n\n// `RequireObjectCoercible` abstract operation\n// https://tc39.es/ecma262/#sec-requireobjectcoercible\nmodule.exports = function (it) {\n  if (isNullOrUndefined(it)) throw $TypeError(\"Can't call method on \" + it);\n  return it;\n};\n","'use strict';\nvar TO_STRING_TAG_SUPPORT = require('../internals/to-string-tag-support');\nvar defineProperty = require('../internals/object-define-property').f;\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\nvar hasOwn = require('../internals/has-own-property');\nvar toString = require('../internals/object-to-string');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar TO_STRING_TAG = wellKnownSymbol('toStringTag');\n\nmodule.exports = function (it, TAG, STATIC, SET_METHOD) {\n  if (it) {\n    var target = STATIC ? it : it.prototype;\n    if (!hasOwn(target, TO_STRING_TAG)) {\n      defineProperty(target, TO_STRING_TAG, { configurable: true, value: TAG });\n    }\n    if (SET_METHOD && !TO_STRING_TAG_SUPPORT) {\n      createNonEnumerableProperty(target, 'toString', toString);\n    }\n  }\n};\n","'use strict';\nvar shared = require('../internals/shared');\nvar uid = require('../internals/uid');\n\nvar keys = shared('keys');\n\nmodule.exports = function (key) {\n  return keys[key] || (keys[key] = uid(key));\n};\n","'use strict';\nvar global = require('../internals/global');\nvar defineGlobalProperty = require('../internals/define-global-property');\n\nvar SHARED = '__core-js_shared__';\nvar store = global[SHARED] || defineGlobalProperty(SHARED, {});\n\nmodule.exports = store;\n","'use strict';\nvar IS_PURE = require('../internals/is-pure');\nvar store = require('../internals/shared-store');\n\n(module.exports = function (key, value) {\n  return store[key] || (store[key] = value !== undefined ? value : {});\n})('versions', []).push({\n  version: '3.32.0',\n  mode: IS_PURE ? 'pure' : 'global',\n  copyright: '© 2014-2023 Denis Pushkarev (zloirock.ru)',\n  license: 'https://github.com/zloirock/core-js/blob/v3.32.0/LICENSE',\n  source: 'https://github.com/zloirock/core-js'\n});\n","'use strict';\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar toIntegerOrInfinity = require('../internals/to-integer-or-infinity');\nvar toString = require('../internals/to-string');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\n\nvar charAt = uncurryThis(''.charAt);\nvar charCodeAt = uncurryThis(''.charCodeAt);\nvar stringSlice = uncurryThis(''.slice);\n\nvar createMethod = function (CONVERT_TO_STRING) {\n  return function ($this, pos) {\n    var S = toString(requireObjectCoercible($this));\n    var position = toIntegerOrInfinity(pos);\n    var size = S.length;\n    var first, second;\n    if (position < 0 || position >= size) return CONVERT_TO_STRING ? '' : undefined;\n    first = charCodeAt(S, position);\n    return first < 0xD800 || first > 0xDBFF || position + 1 === size\n      || (second = charCodeAt(S, position + 1)) < 0xDC00 || second > 0xDFFF\n        ? CONVERT_TO_STRING\n          ? charAt(S, position)\n          : first\n        : CONVERT_TO_STRING\n          ? stringSlice(S, position, position + 2)\n          : (first - 0xD800 << 10) + (second - 0xDC00) + 0x10000;\n  };\n};\n\nmodule.exports = {\n  // `String.prototype.codePointAt` method\n  // https://tc39.es/ecma262/#sec-string.prototype.codepointat\n  codeAt: createMethod(false),\n  // `String.prototype.at` method\n  // https://github.com/mathiasbynens/String.prototype.at\n  charAt: createMethod(true)\n};\n","'use strict';\n/* eslint-disable es/no-symbol -- required for testing */\nvar V8_VERSION = require('../internals/engine-v8-version');\nvar fails = require('../internals/fails');\nvar global = require('../internals/global');\n\nvar $String = global.String;\n\n// eslint-disable-next-line es/no-object-getownpropertysymbols -- required for testing\nmodule.exports = !!Object.getOwnPropertySymbols && !fails(function () {\n  var symbol = Symbol();\n  // Chrome 38 Symbol has incorrect toString conversion\n  // `get-own-property-symbols` polyfill symbols converted to object are not Symbol instances\n  // nb: Do not call `String` directly to avoid this being optimized out to `symbol+''` which will,\n  // of course, fail.\n  return !$String(symbol) || !(Object(symbol) instanceof Symbol) ||\n    // Chrome 38-40 symbols are not inherited from DOM collections prototypes to instances\n    !Symbol.sham && V8_VERSION && V8_VERSION < 41;\n});\n","'use strict';\nvar call = require('../internals/function-call');\nvar getBuiltIn = require('../internals/get-built-in');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar defineBuiltIn = require('../internals/define-built-in');\n\nmodule.exports = function () {\n  var Symbol = getBuiltIn('Symbol');\n  var SymbolPrototype = Symbol && Symbol.prototype;\n  var valueOf = SymbolPrototype && SymbolPrototype.valueOf;\n  var TO_PRIMITIVE = wellKnownSymbol('toPrimitive');\n\n  if (SymbolPrototype && !SymbolPrototype[TO_PRIMITIVE]) {\n    // `Symbol.prototype[@@toPrimitive]` method\n    // https://tc39.es/ecma262/#sec-symbol.prototype-@@toprimitive\n    // eslint-disable-next-line no-unused-vars -- required for .length\n    defineBuiltIn(SymbolPrototype, TO_PRIMITIVE, function (hint) {\n      return call(valueOf, this);\n    }, { arity: 1 });\n  }\n};\n","'use strict';\nvar getBuiltIn = require('../internals/get-built-in');\nvar uncurryThis = require('../internals/function-uncurry-this');\n\nvar Symbol = getBuiltIn('Symbol');\nvar keyFor = Symbol.keyFor;\nvar thisSymbolValue = uncurryThis(Symbol.prototype.valueOf);\n\n// `Symbol.isRegisteredSymbol` method\n// https://tc39.es/proposal-symbol-predicates/#sec-symbol-isregisteredsymbol\nmodule.exports = Symbol.isRegisteredSymbol || function isRegisteredSymbol(value) {\n  try {\n    return keyFor(thisSymbolValue(value)) !== undefined;\n  } catch (error) {\n    return false;\n  }\n};\n","'use strict';\nvar shared = require('../internals/shared');\nvar getBuiltIn = require('../internals/get-built-in');\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar isSymbol = require('../internals/is-symbol');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar Symbol = getBuiltIn('Symbol');\nvar $isWellKnownSymbol = Symbol.isWellKnownSymbol;\nvar getOwnPropertyNames = getBuiltIn('Object', 'getOwnPropertyNames');\nvar thisSymbolValue = uncurryThis(Symbol.prototype.valueOf);\nvar WellKnownSymbolsStore = shared('wks');\n\nfor (var i = 0, symbolKeys = getOwnPropertyNames(Symbol), symbolKeysLength = symbolKeys.length; i < symbolKeysLength; i++) {\n  // some old engines throws on access to some keys like `arguments` or `caller`\n  try {\n    var symbolKey = symbolKeys[i];\n    if (isSymbol(Symbol[symbolKey])) wellKnownSymbol(symbolKey);\n  } catch (error) { /* empty */ }\n}\n\n// `Symbol.isWellKnownSymbol` method\n// https://tc39.es/proposal-symbol-predicates/#sec-symbol-iswellknownsymbol\n// We should patch it for newly added well-known symbols. If it's not required, this module just will not be injected\nmodule.exports = function isWellKnownSymbol(value) {\n  if ($isWellKnownSymbol && $isWellKnownSymbol(value)) return true;\n  try {\n    var symbol = thisSymbolValue(value);\n    for (var j = 0, keys = getOwnPropertyNames(WellKnownSymbolsStore), keysLength = keys.length; j < keysLength; j++) {\n      if (WellKnownSymbolsStore[keys[j]] == symbol) return true;\n    }\n  } catch (error) { /* empty */ }\n  return false;\n};\n","'use strict';\nvar NATIVE_SYMBOL = require('../internals/symbol-constructor-detection');\n\n/* eslint-disable es/no-symbol -- safe */\nmodule.exports = NATIVE_SYMBOL && !!Symbol['for'] && !!Symbol.keyFor;\n","'use strict';\nvar toIntegerOrInfinity = require('../internals/to-integer-or-infinity');\n\nvar max = Math.max;\nvar min = Math.min;\n\n// Helper for a popular repeating case of the spec:\n// Let integer be ? ToInteger(index).\n// If integer < 0, let result be max((length + integer), 0); else let result be min(integer, length).\nmodule.exports = function (index, length) {\n  var integer = toIntegerOrInfinity(index);\n  return integer < 0 ? max(integer + length, 0) : min(integer, length);\n};\n","'use strict';\n// toObject with fallback for non-array-like ES3 strings\nvar IndexedObject = require('../internals/indexed-object');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\n\nmodule.exports = function (it) {\n  return IndexedObject(requireObjectCoercible(it));\n};\n","'use strict';\nvar trunc = require('../internals/math-trunc');\n\n// `ToIntegerOrInfinity` abstract operation\n// https://tc39.es/ecma262/#sec-tointegerorinfinity\nmodule.exports = function (argument) {\n  var number = +argument;\n  // eslint-disable-next-line no-self-compare -- NaN check\n  return number !== number || number === 0 ? 0 : trunc(number);\n};\n","'use strict';\nvar toIntegerOrInfinity = require('../internals/to-integer-or-infinity');\n\nvar min = Math.min;\n\n// `ToLength` abstract operation\n// https://tc39.es/ecma262/#sec-tolength\nmodule.exports = function (argument) {\n  return argument > 0 ? min(toIntegerOrInfinity(argument), 0x1FFFFFFFFFFFFF) : 0; // 2 ** 53 - 1 == 9007199254740991\n};\n","'use strict';\nvar requireObjectCoercible = require('../internals/require-object-coercible');\n\nvar $Object = Object;\n\n// `ToObject` abstract operation\n// https://tc39.es/ecma262/#sec-toobject\nmodule.exports = function (argument) {\n  return $Object(requireObjectCoercible(argument));\n};\n","'use strict';\nvar call = require('../internals/function-call');\nvar isObject = require('../internals/is-object');\nvar isSymbol = require('../internals/is-symbol');\nvar getMethod = require('../internals/get-method');\nvar ordinaryToPrimitive = require('../internals/ordinary-to-primitive');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar $TypeError = TypeError;\nvar TO_PRIMITIVE = wellKnownSymbol('toPrimitive');\n\n// `ToPrimitive` abstract operation\n// https://tc39.es/ecma262/#sec-toprimitive\nmodule.exports = function (input, pref) {\n  if (!isObject(input) || isSymbol(input)) return input;\n  var exoticToPrim = getMethod(input, TO_PRIMITIVE);\n  var result;\n  if (exoticToPrim) {\n    if (pref === undefined) pref = 'default';\n    result = call(exoticToPrim, input, pref);\n    if (!isObject(result) || isSymbol(result)) return result;\n    throw $TypeError(\"Can't convert object to primitive value\");\n  }\n  if (pref === undefined) pref = 'number';\n  return ordinaryToPrimitive(input, pref);\n};\n","'use strict';\nvar toPrimitive = require('../internals/to-primitive');\nvar isSymbol = require('../internals/is-symbol');\n\n// `ToPropertyKey` abstract operation\n// https://tc39.es/ecma262/#sec-topropertykey\nmodule.exports = function (argument) {\n  var key = toPrimitive(argument, 'string');\n  return isSymbol(key) ? key : key + '';\n};\n","'use strict';\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar TO_STRING_TAG = wellKnownSymbol('toStringTag');\nvar test = {};\n\ntest[TO_STRING_TAG] = 'z';\n\nmodule.exports = String(test) === '[object z]';\n","'use strict';\nvar classof = require('../internals/classof');\n\nvar $String = String;\n\nmodule.exports = function (argument) {\n  if (classof(argument) === 'Symbol') throw TypeError('Cannot convert a Symbol value to a string');\n  return $String(argument);\n};\n","'use strict';\nvar $String = String;\n\nmodule.exports = function (argument) {\n  try {\n    return $String(argument);\n  } catch (error) {\n    return 'Object';\n  }\n};\n","'use strict';\nvar uncurryThis = require('../internals/function-uncurry-this');\n\nvar id = 0;\nvar postfix = Math.random();\nvar toString = uncurryThis(1.0.toString);\n\nmodule.exports = function (key) {\n  return 'Symbol(' + (key === undefined ? '' : key) + ')_' + toString(++id + postfix, 36);\n};\n","'use strict';\n/* eslint-disable es/no-symbol -- required for testing */\nvar NATIVE_SYMBOL = require('../internals/symbol-constructor-detection');\n\nmodule.exports = NATIVE_SYMBOL\n  && !Symbol.sham\n  && typeof Symbol.iterator == 'symbol';\n","'use strict';\nvar DESCRIPTORS = require('../internals/descriptors');\nvar fails = require('../internals/fails');\n\n// V8 ~ Chrome 36-\n// https://bugs.chromium.org/p/v8/issues/detail?id=3334\nmodule.exports = DESCRIPTORS && fails(function () {\n  // eslint-disable-next-line es/no-object-defineproperty -- required for testing\n  return Object.defineProperty(function () { /* empty */ }, 'prototype', {\n    value: 42,\n    writable: false\n  }).prototype != 42;\n});\n","'use strict';\nvar global = require('../internals/global');\nvar isCallable = require('../internals/is-callable');\n\nvar WeakMap = global.WeakMap;\n\nmodule.exports = isCallable(WeakMap) && /native code/.test(String(WeakMap));\n","'use strict';\nvar path = require('../internals/path');\nvar hasOwn = require('../internals/has-own-property');\nvar wrappedWellKnownSymbolModule = require('../internals/well-known-symbol-wrapped');\nvar defineProperty = require('../internals/object-define-property').f;\n\nmodule.exports = function (NAME) {\n  var Symbol = path.Symbol || (path.Symbol = {});\n  if (!hasOwn(Symbol, NAME)) defineProperty(Symbol, NAME, {\n    value: wrappedWellKnownSymbolModule.f(NAME)\n  });\n};\n","'use strict';\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nexports.f = wellKnownSymbol;\n","'use strict';\nvar global = require('../internals/global');\nvar shared = require('../internals/shared');\nvar hasOwn = require('../internals/has-own-property');\nvar uid = require('../internals/uid');\nvar NATIVE_SYMBOL = require('../internals/symbol-constructor-detection');\nvar USE_SYMBOL_AS_UID = require('../internals/use-symbol-as-uid');\n\nvar Symbol = global.Symbol;\nvar WellKnownSymbolsStore = shared('wks');\nvar createWellKnownSymbol = USE_SYMBOL_AS_UID ? Symbol['for'] || Symbol : Symbol && Symbol.withoutSetter || uid;\n\nmodule.exports = function (name) {\n  if (!hasOwn(WellKnownSymbolsStore, name)) {\n    WellKnownSymbolsStore[name] = NATIVE_SYMBOL && hasOwn(Symbol, name)\n      ? Symbol[name]\n      : createWellKnownSymbol('Symbol.' + name);\n  } return WellKnownSymbolsStore[name];\n};\n","'use strict';\nvar $ = require('../internals/export');\nvar fails = require('../internals/fails');\nvar isArray = require('../internals/is-array');\nvar isObject = require('../internals/is-object');\nvar toObject = require('../internals/to-object');\nvar lengthOfArrayLike = require('../internals/length-of-array-like');\nvar doesNotExceedSafeInteger = require('../internals/does-not-exceed-safe-integer');\nvar createProperty = require('../internals/create-property');\nvar arraySpeciesCreate = require('../internals/array-species-create');\nvar arrayMethodHasSpeciesSupport = require('../internals/array-method-has-species-support');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar V8_VERSION = require('../internals/engine-v8-version');\n\nvar IS_CONCAT_SPREADABLE = wellKnownSymbol('isConcatSpreadable');\n\n// We can't use this feature detection in V8 since it causes\n// deoptimization and serious performance degradation\n// https://github.com/zloirock/core-js/issues/679\nvar IS_CONCAT_SPREADABLE_SUPPORT = V8_VERSION >= 51 || !fails(function () {\n  var array = [];\n  array[IS_CONCAT_SPREADABLE] = false;\n  return array.concat()[0] !== array;\n});\n\nvar isConcatSpreadable = function (O) {\n  if (!isObject(O)) return false;\n  var spreadable = O[IS_CONCAT_SPREADABLE];\n  return spreadable !== undefined ? !!spreadable : isArray(O);\n};\n\nvar FORCED = !IS_CONCAT_SPREADABLE_SUPPORT || !arrayMethodHasSpeciesSupport('concat');\n\n// `Array.prototype.concat` method\n// https://tc39.es/ecma262/#sec-array.prototype.concat\n// with adding support of @@isConcatSpreadable and @@species\n$({ target: 'Array', proto: true, arity: 1, forced: FORCED }, {\n  // eslint-disable-next-line no-unused-vars -- required for `.length`\n  concat: function concat(arg) {\n    var O = toObject(this);\n    var A = arraySpeciesCreate(O, 0);\n    var n = 0;\n    var i, k, length, len, E;\n    for (i = -1, length = arguments.length; i < length; i++) {\n      E = i === -1 ? O : arguments[i];\n      if (isConcatSpreadable(E)) {\n        len = lengthOfArrayLike(E);\n        doesNotExceedSafeInteger(n + len);\n        for (k = 0; k < len; k++, n++) if (k in E) createProperty(A, n, E[k]);\n      } else {\n        doesNotExceedSafeInteger(n + 1);\n        createProperty(A, n++, E);\n      }\n    }\n    A.length = n;\n    return A;\n  }\n});\n","'use strict';\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar addToUnscopables = require('../internals/add-to-unscopables');\nvar Iterators = require('../internals/iterators');\nvar InternalStateModule = require('../internals/internal-state');\nvar defineProperty = require('../internals/object-define-property').f;\nvar defineIterator = require('../internals/iterator-define');\nvar createIterResultObject = require('../internals/create-iter-result-object');\nvar IS_PURE = require('../internals/is-pure');\nvar DESCRIPTORS = require('../internals/descriptors');\n\nvar ARRAY_ITERATOR = 'Array Iterator';\nvar setInternalState = InternalStateModule.set;\nvar getInternalState = InternalStateModule.getterFor(ARRAY_ITERATOR);\n\n// `Array.prototype.entries` method\n// https://tc39.es/ecma262/#sec-array.prototype.entries\n// `Array.prototype.keys` method\n// https://tc39.es/ecma262/#sec-array.prototype.keys\n// `Array.prototype.values` method\n// https://tc39.es/ecma262/#sec-array.prototype.values\n// `Array.prototype[@@iterator]` method\n// https://tc39.es/ecma262/#sec-array.prototype-@@iterator\n// `CreateArrayIterator` internal method\n// https://tc39.es/ecma262/#sec-createarrayiterator\nmodule.exports = defineIterator(Array, 'Array', function (iterated, kind) {\n  setInternalState(this, {\n    type: ARRAY_ITERATOR,\n    target: toIndexedObject(iterated), // target\n    index: 0,                          // next index\n    kind: kind                         // kind\n  });\n// `%ArrayIteratorPrototype%.next` method\n// https://tc39.es/ecma262/#sec-%arrayiteratorprototype%.next\n}, function () {\n  var state = getInternalState(this);\n  var target = state.target;\n  var kind = state.kind;\n  var index = state.index++;\n  if (!target || index >= target.length) {\n    state.target = undefined;\n    return createIterResultObject(undefined, true);\n  }\n  if (kind == 'keys') return createIterResultObject(index, false);\n  if (kind == 'values') return createIterResultObject(target[index], false);\n  return createIterResultObject([index, target[index]], false);\n}, 'values');\n\n// argumentsList[@@iterator] is %ArrayProto_values%\n// https://tc39.es/ecma262/#sec-createunmappedargumentsobject\n// https://tc39.es/ecma262/#sec-createmappedargumentsobject\nvar values = Iterators.Arguments = Iterators.Array;\n\n// https://tc39.es/ecma262/#sec-array.prototype-@@unscopables\naddToUnscopables('keys');\naddToUnscopables('values');\naddToUnscopables('entries');\n\n// V8 ~ Chrome 45- bug\nif (!IS_PURE && DESCRIPTORS && values.name !== 'values') try {\n  defineProperty(values, 'name', { value: 'values' });\n} catch (error) { /* empty */ }\n","// empty\n","'use strict';\nvar $ = require('../internals/export');\nvar getBuiltIn = require('../internals/get-built-in');\nvar apply = require('../internals/function-apply');\nvar call = require('../internals/function-call');\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar fails = require('../internals/fails');\nvar isCallable = require('../internals/is-callable');\nvar isSymbol = require('../internals/is-symbol');\nvar arraySlice = require('../internals/array-slice');\nvar getReplacerFunction = require('../internals/get-json-replacer-function');\nvar NATIVE_SYMBOL = require('../internals/symbol-constructor-detection');\n\nvar $String = String;\nvar $stringify = getBuiltIn('JSON', 'stringify');\nvar exec = uncurryThis(/./.exec);\nvar charAt = uncurryThis(''.charAt);\nvar charCodeAt = uncurryThis(''.charCodeAt);\nvar replace = uncurryThis(''.replace);\nvar numberToString = uncurryThis(1.0.toString);\n\nvar tester = /[\\uD800-\\uDFFF]/g;\nvar low = /^[\\uD800-\\uDBFF]$/;\nvar hi = /^[\\uDC00-\\uDFFF]$/;\n\nvar WRONG_SYMBOLS_CONVERSION = !NATIVE_SYMBOL || fails(function () {\n  var symbol = getBuiltIn('Symbol')();\n  // MS Edge converts symbol values to JSON as {}\n  return $stringify([symbol]) != '[null]'\n    // WebKit converts symbol values to JSON as null\n    || $stringify({ a: symbol }) != '{}'\n    // V8 throws on boxed symbols\n    || $stringify(Object(symbol)) != '{}';\n});\n\n// https://github.com/tc39/proposal-well-formed-stringify\nvar ILL_FORMED_UNICODE = fails(function () {\n  return $stringify('\\uDF06\\uD834') !== '\"\\\\udf06\\\\ud834\"'\n    || $stringify('\\uDEAD') !== '\"\\\\udead\"';\n});\n\nvar stringifyWithSymbolsFix = function (it, replacer) {\n  var args = arraySlice(arguments);\n  var $replacer = getReplacerFunction(replacer);\n  if (!isCallable($replacer) && (it === undefined || isSymbol(it))) return; // IE8 returns string on undefined\n  args[1] = function (key, value) {\n    // some old implementations (like WebKit) could pass numbers as keys\n    if (isCallable($replacer)) value = call($replacer, this, $String(key), value);\n    if (!isSymbol(value)) return value;\n  };\n  return apply($stringify, null, args);\n};\n\nvar fixIllFormed = function (match, offset, string) {\n  var prev = charAt(string, offset - 1);\n  var next = charAt(string, offset + 1);\n  if ((exec(low, match) && !exec(hi, next)) || (exec(hi, match) && !exec(low, prev))) {\n    return '\\\\u' + numberToString(charCodeAt(match, 0), 16);\n  } return match;\n};\n\nif ($stringify) {\n  // `JSON.stringify` method\n  // https://tc39.es/ecma262/#sec-json.stringify\n  $({ target: 'JSON', stat: true, arity: 3, forced: WRONG_SYMBOLS_CONVERSION || ILL_FORMED_UNICODE }, {\n    // eslint-disable-next-line no-unused-vars -- required for `.length`\n    stringify: function stringify(it, replacer, space) {\n      var args = arraySlice(arguments);\n      var result = apply(WRONG_SYMBOLS_CONVERSION ? stringifyWithSymbolsFix : $stringify, null, args);\n      return ILL_FORMED_UNICODE && typeof result == 'string' ? replace(result, tester, fixIllFormed) : result;\n    }\n  });\n}\n","'use strict';\nvar global = require('../internals/global');\nvar setToStringTag = require('../internals/set-to-string-tag');\n\n// JSON[@@toStringTag] property\n// https://tc39.es/ecma262/#sec-json-@@tostringtag\nsetToStringTag(global.JSON, 'JSON', true);\n","// empty\n","'use strict';\nvar $ = require('../internals/export');\nvar DESCRIPTORS = require('../internals/descriptors');\nvar defineProperty = require('../internals/object-define-property').f;\n\n// `Object.defineProperty` method\n// https://tc39.es/ecma262/#sec-object.defineproperty\n// eslint-disable-next-line es/no-object-defineproperty -- safe\n$({ target: 'Object', stat: true, forced: Object.defineProperty !== defineProperty, sham: !DESCRIPTORS }, {\n  defineProperty: defineProperty\n});\n","'use strict';\nvar $ = require('../internals/export');\nvar NATIVE_SYMBOL = require('../internals/symbol-constructor-detection');\nvar fails = require('../internals/fails');\nvar getOwnPropertySymbolsModule = require('../internals/object-get-own-property-symbols');\nvar toObject = require('../internals/to-object');\n\n// V8 ~ Chrome 38 and 39 `Object.getOwnPropertySymbols` fails on primitives\n// https://bugs.chromium.org/p/v8/issues/detail?id=3443\nvar FORCED = !NATIVE_SYMBOL || fails(function () { getOwnPropertySymbolsModule.f(1); });\n\n// `Object.getOwnPropertySymbols` method\n// https://tc39.es/ecma262/#sec-object.getownpropertysymbols\n$({ target: 'Object', stat: true, forced: FORCED }, {\n  getOwnPropertySymbols: function getOwnPropertySymbols(it) {\n    var $getOwnPropertySymbols = getOwnPropertySymbolsModule.f;\n    return $getOwnPropertySymbols ? $getOwnPropertySymbols(toObject(it)) : [];\n  }\n});\n","// empty\n","// empty\n","// empty\n","'use strict';\nvar charAt = require('../internals/string-multibyte').charAt;\nvar toString = require('../internals/to-string');\nvar InternalStateModule = require('../internals/internal-state');\nvar defineIterator = require('../internals/iterator-define');\nvar createIterResultObject = require('../internals/create-iter-result-object');\n\nvar STRING_ITERATOR = 'String Iterator';\nvar setInternalState = InternalStateModule.set;\nvar getInternalState = InternalStateModule.getterFor(STRING_ITERATOR);\n\n// `String.prototype[@@iterator]` method\n// https://tc39.es/ecma262/#sec-string.prototype-@@iterator\ndefineIterator(String, 'String', function (iterated) {\n  setInternalState(this, {\n    type: STRING_ITERATOR,\n    string: toString(iterated),\n    index: 0\n  });\n// `%StringIteratorPrototype%.next` method\n// https://tc39.es/ecma262/#sec-%stringiteratorprototype%.next\n}, function next() {\n  var state = getInternalState(this);\n  var string = state.string;\n  var index = state.index;\n  var point;\n  if (index >= string.length) return createIterResultObject(undefined, true);\n  point = charAt(string, index);\n  state.index += point.length;\n  return createIterResultObject(point, false);\n});\n","'use strict';\nvar defineWellKnownSymbol = require('../internals/well-known-symbol-define');\n\n// `Symbol.asyncIterator` well-known symbol\n// https://tc39.es/ecma262/#sec-symbol.asynciterator\ndefineWellKnownSymbol('asyncIterator');\n","'use strict';\nvar $ = require('../internals/export');\nvar global = require('../internals/global');\nvar call = require('../internals/function-call');\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar IS_PURE = require('../internals/is-pure');\nvar DESCRIPTORS = require('../internals/descriptors');\nvar NATIVE_SYMBOL = require('../internals/symbol-constructor-detection');\nvar fails = require('../internals/fails');\nvar hasOwn = require('../internals/has-own-property');\nvar isPrototypeOf = require('../internals/object-is-prototype-of');\nvar anObject = require('../internals/an-object');\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar toPropertyKey = require('../internals/to-property-key');\nvar $toString = require('../internals/to-string');\nvar createPropertyDescriptor = require('../internals/create-property-descriptor');\nvar nativeObjectCreate = require('../internals/object-create');\nvar objectKeys = require('../internals/object-keys');\nvar getOwnPropertyNamesModule = require('../internals/object-get-own-property-names');\nvar getOwnPropertyNamesExternal = require('../internals/object-get-own-property-names-external');\nvar getOwnPropertySymbolsModule = require('../internals/object-get-own-property-symbols');\nvar getOwnPropertyDescriptorModule = require('../internals/object-get-own-property-descriptor');\nvar definePropertyModule = require('../internals/object-define-property');\nvar definePropertiesModule = require('../internals/object-define-properties');\nvar propertyIsEnumerableModule = require('../internals/object-property-is-enumerable');\nvar defineBuiltIn = require('../internals/define-built-in');\nvar defineBuiltInAccessor = require('../internals/define-built-in-accessor');\nvar shared = require('../internals/shared');\nvar sharedKey = require('../internals/shared-key');\nvar hiddenKeys = require('../internals/hidden-keys');\nvar uid = require('../internals/uid');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar wrappedWellKnownSymbolModule = require('../internals/well-known-symbol-wrapped');\nvar defineWellKnownSymbol = require('../internals/well-known-symbol-define');\nvar defineSymbolToPrimitive = require('../internals/symbol-define-to-primitive');\nvar setToStringTag = require('../internals/set-to-string-tag');\nvar InternalStateModule = require('../internals/internal-state');\nvar $forEach = require('../internals/array-iteration').forEach;\n\nvar HIDDEN = sharedKey('hidden');\nvar SYMBOL = 'Symbol';\nvar PROTOTYPE = 'prototype';\n\nvar setInternalState = InternalStateModule.set;\nvar getInternalState = InternalStateModule.getterFor(SYMBOL);\n\nvar ObjectPrototype = Object[PROTOTYPE];\nvar $Symbol = global.Symbol;\nvar SymbolPrototype = $Symbol && $Symbol[PROTOTYPE];\nvar TypeError = global.TypeError;\nvar QObject = global.QObject;\nvar nativeGetOwnPropertyDescriptor = getOwnPropertyDescriptorModule.f;\nvar nativeDefineProperty = definePropertyModule.f;\nvar nativeGetOwnPropertyNames = getOwnPropertyNamesExternal.f;\nvar nativePropertyIsEnumerable = propertyIsEnumerableModule.f;\nvar push = uncurryThis([].push);\n\nvar AllSymbols = shared('symbols');\nvar ObjectPrototypeSymbols = shared('op-symbols');\nvar WellKnownSymbolsStore = shared('wks');\n\n// Don't use setters in Qt Script, https://github.com/zloirock/core-js/issues/173\nvar USE_SETTER = !QObject || !QObject[PROTOTYPE] || !QObject[PROTOTYPE].findChild;\n\n// fallback for old Android, https://code.google.com/p/v8/issues/detail?id=687\nvar setSymbolDescriptor = DESCRIPTORS && fails(function () {\n  return nativeObjectCreate(nativeDefineProperty({}, 'a', {\n    get: function () { return nativeDefineProperty(this, 'a', { value: 7 }).a; }\n  })).a != 7;\n}) ? function (O, P, Attributes) {\n  var ObjectPrototypeDescriptor = nativeGetOwnPropertyDescriptor(ObjectPrototype, P);\n  if (ObjectPrototypeDescriptor) delete ObjectPrototype[P];\n  nativeDefineProperty(O, P, Attributes);\n  if (ObjectPrototypeDescriptor && O !== ObjectPrototype) {\n    nativeDefineProperty(ObjectPrototype, P, ObjectPrototypeDescriptor);\n  }\n} : nativeDefineProperty;\n\nvar wrap = function (tag, description) {\n  var symbol = AllSymbols[tag] = nativeObjectCreate(SymbolPrototype);\n  setInternalState(symbol, {\n    type: SYMBOL,\n    tag: tag,\n    description: description\n  });\n  if (!DESCRIPTORS) symbol.description = description;\n  return symbol;\n};\n\nvar $defineProperty = function defineProperty(O, P, Attributes) {\n  if (O === ObjectPrototype) $defineProperty(ObjectPrototypeSymbols, P, Attributes);\n  anObject(O);\n  var key = toPropertyKey(P);\n  anObject(Attributes);\n  if (hasOwn(AllSymbols, key)) {\n    if (!Attributes.enumerable) {\n      if (!hasOwn(O, HIDDEN)) nativeDefineProperty(O, HIDDEN, createPropertyDescriptor(1, {}));\n      O[HIDDEN][key] = true;\n    } else {\n      if (hasOwn(O, HIDDEN) && O[HIDDEN][key]) O[HIDDEN][key] = false;\n      Attributes = nativeObjectCreate(Attributes, { enumerable: createPropertyDescriptor(0, false) });\n    } return setSymbolDescriptor(O, key, Attributes);\n  } return nativeDefineProperty(O, key, Attributes);\n};\n\nvar $defineProperties = function defineProperties(O, Properties) {\n  anObject(O);\n  var properties = toIndexedObject(Properties);\n  var keys = objectKeys(properties).concat($getOwnPropertySymbols(properties));\n  $forEach(keys, function (key) {\n    if (!DESCRIPTORS || call($propertyIsEnumerable, properties, key)) $defineProperty(O, key, properties[key]);\n  });\n  return O;\n};\n\nvar $create = function create(O, Properties) {\n  return Properties === undefined ? nativeObjectCreate(O) : $defineProperties(nativeObjectCreate(O), Properties);\n};\n\nvar $propertyIsEnumerable = function propertyIsEnumerable(V) {\n  var P = toPropertyKey(V);\n  var enumerable = call(nativePropertyIsEnumerable, this, P);\n  if (this === ObjectPrototype && hasOwn(AllSymbols, P) && !hasOwn(ObjectPrototypeSymbols, P)) return false;\n  return enumerable || !hasOwn(this, P) || !hasOwn(AllSymbols, P) || hasOwn(this, HIDDEN) && this[HIDDEN][P]\n    ? enumerable : true;\n};\n\nvar $getOwnPropertyDescriptor = function getOwnPropertyDescriptor(O, P) {\n  var it = toIndexedObject(O);\n  var key = toPropertyKey(P);\n  if (it === ObjectPrototype && hasOwn(AllSymbols, key) && !hasOwn(ObjectPrototypeSymbols, key)) return;\n  var descriptor = nativeGetOwnPropertyDescriptor(it, key);\n  if (descriptor && hasOwn(AllSymbols, key) && !(hasOwn(it, HIDDEN) && it[HIDDEN][key])) {\n    descriptor.enumerable = true;\n  }\n  return descriptor;\n};\n\nvar $getOwnPropertyNames = function getOwnPropertyNames(O) {\n  var names = nativeGetOwnPropertyNames(toIndexedObject(O));\n  var result = [];\n  $forEach(names, function (key) {\n    if (!hasOwn(AllSymbols, key) && !hasOwn(hiddenKeys, key)) push(result, key);\n  });\n  return result;\n};\n\nvar $getOwnPropertySymbols = function (O) {\n  var IS_OBJECT_PROTOTYPE = O === ObjectPrototype;\n  var names = nativeGetOwnPropertyNames(IS_OBJECT_PROTOTYPE ? ObjectPrototypeSymbols : toIndexedObject(O));\n  var result = [];\n  $forEach(names, function (key) {\n    if (hasOwn(AllSymbols, key) && (!IS_OBJECT_PROTOTYPE || hasOwn(ObjectPrototype, key))) {\n      push(result, AllSymbols[key]);\n    }\n  });\n  return result;\n};\n\n// `Symbol` constructor\n// https://tc39.es/ecma262/#sec-symbol-constructor\nif (!NATIVE_SYMBOL) {\n  $Symbol = function Symbol() {\n    if (isPrototypeOf(SymbolPrototype, this)) throw TypeError('Symbol is not a constructor');\n    var description = !arguments.length || arguments[0] === undefined ? undefined : $toString(arguments[0]);\n    var tag = uid(description);\n    var setter = function (value) {\n      if (this === ObjectPrototype) call(setter, ObjectPrototypeSymbols, value);\n      if (hasOwn(this, HIDDEN) && hasOwn(this[HIDDEN], tag)) this[HIDDEN][tag] = false;\n      setSymbolDescriptor(this, tag, createPropertyDescriptor(1, value));\n    };\n    if (DESCRIPTORS && USE_SETTER) setSymbolDescriptor(ObjectPrototype, tag, { configurable: true, set: setter });\n    return wrap(tag, description);\n  };\n\n  SymbolPrototype = $Symbol[PROTOTYPE];\n\n  defineBuiltIn(SymbolPrototype, 'toString', function toString() {\n    return getInternalState(this).tag;\n  });\n\n  defineBuiltIn($Symbol, 'withoutSetter', function (description) {\n    return wrap(uid(description), description);\n  });\n\n  propertyIsEnumerableModule.f = $propertyIsEnumerable;\n  definePropertyModule.f = $defineProperty;\n  definePropertiesModule.f = $defineProperties;\n  getOwnPropertyDescriptorModule.f = $getOwnPropertyDescriptor;\n  getOwnPropertyNamesModule.f = getOwnPropertyNamesExternal.f = $getOwnPropertyNames;\n  getOwnPropertySymbolsModule.f = $getOwnPropertySymbols;\n\n  wrappedWellKnownSymbolModule.f = function (name) {\n    return wrap(wellKnownSymbol(name), name);\n  };\n\n  if (DESCRIPTORS) {\n    // https://github.com/tc39/proposal-Symbol-description\n    defineBuiltInAccessor(SymbolPrototype, 'description', {\n      configurable: true,\n      get: function description() {\n        return getInternalState(this).description;\n      }\n    });\n    if (!IS_PURE) {\n      defineBuiltIn(ObjectPrototype, 'propertyIsEnumerable', $propertyIsEnumerable, { unsafe: true });\n    }\n  }\n}\n\n$({ global: true, constructor: true, wrap: true, forced: !NATIVE_SYMBOL, sham: !NATIVE_SYMBOL }, {\n  Symbol: $Symbol\n});\n\n$forEach(objectKeys(WellKnownSymbolsStore), function (name) {\n  defineWellKnownSymbol(name);\n});\n\n$({ target: SYMBOL, stat: true, forced: !NATIVE_SYMBOL }, {\n  useSetter: function () { USE_SETTER = true; },\n  useSimple: function () { USE_SETTER = false; }\n});\n\n$({ target: 'Object', stat: true, forced: !NATIVE_SYMBOL, sham: !DESCRIPTORS }, {\n  // `Object.create` method\n  // https://tc39.es/ecma262/#sec-object.create\n  create: $create,\n  // `Object.defineProperty` method\n  // https://tc39.es/ecma262/#sec-object.defineproperty\n  defineProperty: $defineProperty,\n  // `Object.defineProperties` method\n  // https://tc39.es/ecma262/#sec-object.defineproperties\n  defineProperties: $defineProperties,\n  // `Object.getOwnPropertyDescriptor` method\n  // https://tc39.es/ecma262/#sec-object.getownpropertydescriptors\n  getOwnPropertyDescriptor: $getOwnPropertyDescriptor\n});\n\n$({ target: 'Object', stat: true, forced: !NATIVE_SYMBOL }, {\n  // `Object.getOwnPropertyNames` method\n  // https://tc39.es/ecma262/#sec-object.getownpropertynames\n  getOwnPropertyNames: $getOwnPropertyNames\n});\n\n// `Symbol.prototype[@@toPrimitive]` method\n// https://tc39.es/ecma262/#sec-symbol.prototype-@@toprimitive\ndefineSymbolToPrimitive();\n\n// `Symbol.prototype[@@toStringTag]` property\n// https://tc39.es/ecma262/#sec-symbol.prototype-@@tostringtag\nsetToStringTag($Symbol, SYMBOL);\n\nhiddenKeys[HIDDEN] = true;\n","// empty\n","'use strict';\nvar $ = require('../internals/export');\nvar getBuiltIn = require('../internals/get-built-in');\nvar hasOwn = require('../internals/has-own-property');\nvar toString = require('../internals/to-string');\nvar shared = require('../internals/shared');\nvar NATIVE_SYMBOL_REGISTRY = require('../internals/symbol-registry-detection');\n\nvar StringToSymbolRegistry = shared('string-to-symbol-registry');\nvar SymbolToStringRegistry = shared('symbol-to-string-registry');\n\n// `Symbol.for` method\n// https://tc39.es/ecma262/#sec-symbol.for\n$({ target: 'Symbol', stat: true, forced: !NATIVE_SYMBOL_REGISTRY }, {\n  'for': function (key) {\n    var string = toString(key);\n    if (hasOwn(StringToSymbolRegistry, string)) return StringToSymbolRegistry[string];\n    var symbol = getBuiltIn('Symbol')(string);\n    StringToSymbolRegistry[string] = symbol;\n    SymbolToStringRegistry[symbol] = string;\n    return symbol;\n  }\n});\n","'use strict';\nvar defineWellKnownSymbol = require('../internals/well-known-symbol-define');\n\n// `Symbol.hasInstance` well-known symbol\n// https://tc39.es/ecma262/#sec-symbol.hasinstance\ndefineWellKnownSymbol('hasInstance');\n","'use strict';\nvar defineWellKnownSymbol = require('../internals/well-known-symbol-define');\n\n// `Symbol.isConcatSpreadable` well-known symbol\n// https://tc39.es/ecma262/#sec-symbol.isconcatspreadable\ndefineWellKnownSymbol('isConcatSpreadable');\n","'use strict';\nvar defineWellKnownSymbol = require('../internals/well-known-symbol-define');\n\n// `Symbol.iterator` well-known symbol\n// https://tc39.es/ecma262/#sec-symbol.iterator\ndefineWellKnownSymbol('iterator');\n","'use strict';\n// TODO: Remove this module from `core-js@4` since it's split to modules listed below\nrequire('../modules/es.symbol.constructor');\nrequire('../modules/es.symbol.for');\nrequire('../modules/es.symbol.key-for');\nrequire('../modules/es.json.stringify');\nrequire('../modules/es.object.get-own-property-symbols');\n","'use strict';\nvar $ = require('../internals/export');\nvar hasOwn = require('../internals/has-own-property');\nvar isSymbol = require('../internals/is-symbol');\nvar tryToString = require('../internals/try-to-string');\nvar shared = require('../internals/shared');\nvar NATIVE_SYMBOL_REGISTRY = require('../internals/symbol-registry-detection');\n\nvar SymbolToStringRegistry = shared('symbol-to-string-registry');\n\n// `Symbol.keyFor` method\n// https://tc39.es/ecma262/#sec-symbol.keyfor\n$({ target: 'Symbol', stat: true, forced: !NATIVE_SYMBOL_REGISTRY }, {\n  keyFor: function keyFor(sym) {\n    if (!isSymbol(sym)) throw TypeError(tryToString(sym) + ' is not a symbol');\n    if (hasOwn(SymbolToStringRegistry, sym)) return SymbolToStringRegistry[sym];\n  }\n});\n","'use strict';\nvar defineWellKnownSymbol = require('../internals/well-known-symbol-define');\n\n// `Symbol.matchAll` well-known symbol\n// https://tc39.es/ecma262/#sec-symbol.matchall\ndefineWellKnownSymbol('matchAll');\n","'use strict';\nvar defineWellKnownSymbol = require('../internals/well-known-symbol-define');\n\n// `Symbol.match` well-known symbol\n// https://tc39.es/ecma262/#sec-symbol.match\ndefineWellKnownSymbol('match');\n","'use strict';\nvar defineWellKnownSymbol = require('../internals/well-known-symbol-define');\n\n// `Symbol.replace` well-known symbol\n// https://tc39.es/ecma262/#sec-symbol.replace\ndefineWellKnownSymbol('replace');\n","'use strict';\nvar defineWellKnownSymbol = require('../internals/well-known-symbol-define');\n\n// `Symbol.search` well-known symbol\n// https://tc39.es/ecma262/#sec-symbol.search\ndefineWellKnownSymbol('search');\n","'use strict';\nvar defineWellKnownSymbol = require('../internals/well-known-symbol-define');\n\n// `Symbol.species` well-known symbol\n// https://tc39.es/ecma262/#sec-symbol.species\ndefineWellKnownSymbol('species');\n","'use strict';\nvar defineWellKnownSymbol = require('../internals/well-known-symbol-define');\n\n// `Symbol.split` well-known symbol\n// https://tc39.es/ecma262/#sec-symbol.split\ndefineWellKnownSymbol('split');\n","'use strict';\nvar defineWellKnownSymbol = require('../internals/well-known-symbol-define');\nvar defineSymbolToPrimitive = require('../internals/symbol-define-to-primitive');\n\n// `Symbol.toPrimitive` well-known symbol\n// https://tc39.es/ecma262/#sec-symbol.toprimitive\ndefineWellKnownSymbol('toPrimitive');\n\n// `Symbol.prototype[@@toPrimitive]` method\n// https://tc39.es/ecma262/#sec-symbol.prototype-@@toprimitive\ndefineSymbolToPrimitive();\n","'use strict';\nvar getBuiltIn = require('../internals/get-built-in');\nvar defineWellKnownSymbol = require('../internals/well-known-symbol-define');\nvar setToStringTag = require('../internals/set-to-string-tag');\n\n// `Symbol.toStringTag` well-known symbol\n// https://tc39.es/ecma262/#sec-symbol.tostringtag\ndefineWellKnownSymbol('toStringTag');\n\n// `Symbol.prototype[@@toStringTag]` property\n// https://tc39.es/ecma262/#sec-symbol.prototype-@@tostringtag\nsetToStringTag(getBuiltIn('Symbol'), 'Symbol');\n","'use strict';\nvar defineWellKnownSymbol = require('../internals/well-known-symbol-define');\n\n// `Symbol.unscopables` well-known symbol\n// https://tc39.es/ecma262/#sec-symbol.unscopables\ndefineWellKnownSymbol('unscopables');\n","'use strict';\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar defineProperty = require('../internals/object-define-property').f;\n\nvar METADATA = wellKnownSymbol('metadata');\nvar FunctionPrototype = Function.prototype;\n\n// Function.prototype[@@metadata]\n// https://github.com/tc39/proposal-decorator-metadata\nif (FunctionPrototype[METADATA] === undefined) {\n  defineProperty(FunctionPrototype, METADATA, {\n    value: null\n  });\n}\n","'use strict';\nvar defineWellKnownSymbol = require('../internals/well-known-symbol-define');\n\n// `Symbol.asyncDispose` well-known symbol\n// https://github.com/tc39/proposal-async-explicit-resource-management\ndefineWellKnownSymbol('asyncDispose');\n","'use strict';\nvar defineWellKnownSymbol = require('../internals/well-known-symbol-define');\n\n// `Symbol.dispose` well-known symbol\n// https://github.com/tc39/proposal-explicit-resource-management\ndefineWellKnownSymbol('dispose');\n","'use strict';\nvar $ = require('../internals/export');\nvar isRegisteredSymbol = require('../internals/symbol-is-registered');\n\n// `Symbol.isRegisteredSymbol` method\n// https://tc39.es/proposal-symbol-predicates/#sec-symbol-isregisteredsymbol\n$({ target: 'Symbol', stat: true }, {\n  isRegisteredSymbol: isRegisteredSymbol\n});\n","'use strict';\nvar $ = require('../internals/export');\nvar isRegisteredSymbol = require('../internals/symbol-is-registered');\n\n// `Symbol.isRegistered` method\n// obsolete version of https://tc39.es/proposal-symbol-predicates/#sec-symbol-isregisteredsymbol\n$({ target: 'Symbol', stat: true, name: 'isRegisteredSymbol' }, {\n  isRegistered: isRegisteredSymbol\n});\n","'use strict';\nvar $ = require('../internals/export');\nvar isWellKnownSymbol = require('../internals/symbol-is-well-known');\n\n// `Symbol.isWellKnownSymbol` method\n// https://tc39.es/proposal-symbol-predicates/#sec-symbol-iswellknownsymbol\n// We should patch it for newly added well-known symbols. If it's not required, this module just will not be injected\n$({ target: 'Symbol', stat: true, forced: true }, {\n  isWellKnownSymbol: isWellKnownSymbol\n});\n","'use strict';\nvar $ = require('../internals/export');\nvar isWellKnownSymbol = require('../internals/symbol-is-well-known');\n\n// `Symbol.isWellKnown` method\n// obsolete version of https://tc39.es/proposal-symbol-predicates/#sec-symbol-iswellknownsymbol\n// We should patch it for newly added well-known symbols. If it's not required, this module just will not be injected\n$({ target: 'Symbol', stat: true, name: 'isWellKnownSymbol', forced: true }, {\n  isWellKnown: isWellKnownSymbol\n});\n","'use strict';\nvar defineWellKnownSymbol = require('../internals/well-known-symbol-define');\n\n// `Symbol.matcher` well-known symbol\n// https://github.com/tc39/proposal-pattern-matching\ndefineWellKnownSymbol('matcher');\n","'use strict';\nvar defineWellKnownSymbol = require('../internals/well-known-symbol-define');\n\n// `Symbol.metadataKey` well-known symbol\n// https://github.com/tc39/proposal-decorator-metadata\ndefineWellKnownSymbol('metadataKey');\n","'use strict';\n// TODO: Remove from `core-js@4`\nvar defineWellKnownSymbol = require('../internals/well-known-symbol-define');\n\n// `Symbol.metadata` well-known symbol\n// https://github.com/tc39/proposal-decorators\ndefineWellKnownSymbol('metadata');\n","'use strict';\nvar defineWellKnownSymbol = require('../internals/well-known-symbol-define');\n\n// `Symbol.observable` well-known symbol\n// https://github.com/tc39/proposal-observable\ndefineWellKnownSymbol('observable');\n","'use strict';\n// TODO: remove from `core-js@4`\nvar defineWellKnownSymbol = require('../internals/well-known-symbol-define');\n\n// `Symbol.patternMatch` well-known symbol\n// https://github.com/tc39/proposal-pattern-matching\ndefineWellKnownSymbol('patternMatch');\n","'use strict';\n// TODO: remove from `core-js@4`\nvar defineWellKnownSymbol = require('../internals/well-known-symbol-define');\n\ndefineWellKnownSymbol('replaceAll');\n","'use strict';\nrequire('../modules/es.array.iterator');\nvar DOMIterables = require('../internals/dom-iterables');\nvar global = require('../internals/global');\nvar classof = require('../internals/classof');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\nvar Iterators = require('../internals/iterators');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar TO_STRING_TAG = wellKnownSymbol('toStringTag');\n\nfor (var COLLECTION_NAME in DOMIterables) {\n  var Collection = global[COLLECTION_NAME];\n  var CollectionPrototype = Collection && Collection.prototype;\n  if (CollectionPrototype && classof(CollectionPrototype) !== TO_STRING_TAG) {\n    createNonEnumerableProperty(CollectionPrototype, TO_STRING_TAG, COLLECTION_NAME);\n  }\n  Iterators[COLLECTION_NAME] = Iterators.Array;\n}\n","'use strict';\nvar parent = require('../../es/instance/flags');\n\nmodule.exports = parent;\n","'use strict';\nvar parent = require('../../es/object/define-property');\n\nmodule.exports = parent;\n","'use strict';\nvar parent = require('../../es/symbol');\nrequire('../../modules/web.dom-collections.iterator');\n\nmodule.exports = parent;\n","'use strict';\nvar parent = require('../../es/symbol/iterator');\nrequire('../../modules/web.dom-collections.iterator');\n\nmodule.exports = parent;\n","'use strict';\nvar parent = require('../../es/symbol/to-primitive');\n\nmodule.exports = parent;\n","try {\n  var util = require('util');\n  /* istanbul ignore next */\n  if (typeof util.inherits !== 'function') throw '';\n  module.exports = util.inherits;\n} catch (e) {\n  /* istanbul ignore next */\n  module.exports = require('./inherits_browser.js');\n}\n","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      ctor.prototype = Object.create(superCtor.prototype, {\n        constructor: {\n          value: ctor,\n          enumerable: false,\n          writable: true,\n          configurable: true\n        }\n      })\n    }\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      var TempCtor = function () {}\n      TempCtor.prototype = superCtor.prototype\n      ctor.prototype = new TempCtor()\n      ctor.prototype.constructor = ctor\n    }\n  }\n}\n","/*! safe-buffer. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */\n/* eslint-disable node/no-deprecated-api */\nvar buffer = require('buffer')\nvar Buffer = buffer.Buffer\n\n// alternative to using Object.keys for old browsers\nfunction copyProps (src, dst) {\n  for (var key in src) {\n    dst[key] = src[key]\n  }\n}\nif (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {\n  module.exports = buffer\n} else {\n  // Copy properties from require('buffer')\n  copyProps(buffer, exports)\n  exports.Buffer = SafeBuffer\n}\n\nfunction SafeBuffer (arg, encodingOrOffset, length) {\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.prototype = Object.create(Buffer.prototype)\n\n// Copy static methods from Buffer\ncopyProps(Buffer, SafeBuffer)\n\nSafeBuffer.from = function (arg, encodingOrOffset, length) {\n  if (typeof arg === 'number') {\n    throw new TypeError('Argument must not be a number')\n  }\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.alloc = function (size, fill, encoding) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  var buf = Buffer(size)\n  if (fill !== undefined) {\n    if (typeof encoding === 'string') {\n      buf.fill(fill, encoding)\n    } else {\n      buf.fill(fill)\n    }\n  } else {\n    buf.fill(0)\n  }\n  return buf\n}\n\nSafeBuffer.allocUnsafe = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return Buffer(size)\n}\n\nSafeBuffer.allocUnsafeSlow = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return buffer.SlowBuffer(size)\n}\n","var Buffer = require('safe-buffer').Buffer\n\n// prototype class for hash functions\nfunction Hash (blockSize, finalSize) {\n  this._block = Buffer.alloc(blockSize)\n  this._finalSize = finalSize\n  this._blockSize = blockSize\n  this._len = 0\n}\n\nHash.prototype.update = function (data, enc) {\n  if (typeof data === 'string') {\n    enc = enc || 'utf8'\n    data = Buffer.from(data, enc)\n  }\n\n  var block = this._block\n  var blockSize = this._blockSize\n  var length = data.length\n  var accum = this._len\n\n  for (var offset = 0; offset < length;) {\n    var assigned = accum % blockSize\n    var remainder = Math.min(length - offset, blockSize - assigned)\n\n    for (var i = 0; i < remainder; i++) {\n      block[assigned + i] = data[offset + i]\n    }\n\n    accum += remainder\n    offset += remainder\n\n    if ((accum % blockSize) === 0) {\n      this._update(block)\n    }\n  }\n\n  this._len += length\n  return this\n}\n\nHash.prototype.digest = function (enc) {\n  var rem = this._len % this._blockSize\n\n  this._block[rem] = 0x80\n\n  // zero (rem + 1) trailing bits, where (rem + 1) is the smallest\n  // non-negative solution to the equation (length + 1 + (rem + 1)) === finalSize mod blockSize\n  this._block.fill(0, rem + 1)\n\n  if (rem >= this._finalSize) {\n    this._update(this._block)\n    this._block.fill(0)\n  }\n\n  var bits = this._len * 8\n\n  // uint32\n  if (bits <= 0xffffffff) {\n    this._block.writeUInt32BE(bits, this._blockSize - 4)\n\n  // uint64\n  } else {\n    var lowBits = (bits & 0xffffffff) >>> 0\n    var highBits = (bits - lowBits) / 0x100000000\n\n    this._block.writeUInt32BE(highBits, this._blockSize - 8)\n    this._block.writeUInt32BE(lowBits, this._blockSize - 4)\n  }\n\n  this._update(this._block)\n  var hash = this._hash()\n\n  return enc ? hash.toString(enc) : hash\n}\n\nHash.prototype._update = function () {\n  throw new Error('_update must be implemented by subclass')\n}\n\nmodule.exports = Hash\n","/**\n * A JavaScript implementation of the Secure Hash Algorithm, SHA-256, as defined\n * in FIPS 180-2\n * Version 2.2-beta Copyright Angel Marin, Paul Johnston 2000 - 2009.\n * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n *\n */\n\nvar inherits = require('inherits')\nvar Hash = require('./hash')\nvar Buffer = require('safe-buffer').Buffer\n\nvar K = [\n  0x428A2F98, 0x71374491, 0xB5C0FBCF, 0xE9B5DBA5,\n  0x3956C25B, 0x59F111F1, 0x923F82A4, 0xAB1C5ED5,\n  0xD807AA98, 0x12835B01, 0x243185BE, 0x550C7DC3,\n  0x72BE5D74, 0x80DEB1FE, 0x9BDC06A7, 0xC19BF174,\n  0xE49B69C1, 0xEFBE4786, 0x0FC19DC6, 0x240CA1CC,\n  0x2DE92C6F, 0x4A7484AA, 0x5CB0A9DC, 0x76F988DA,\n  0x983E5152, 0xA831C66D, 0xB00327C8, 0xBF597FC7,\n  0xC6E00BF3, 0xD5A79147, 0x06CA6351, 0x14292967,\n  0x27B70A85, 0x2E1B2138, 0x4D2C6DFC, 0x53380D13,\n  0x650A7354, 0x766A0ABB, 0x81C2C92E, 0x92722C85,\n  0xA2BFE8A1, 0xA81A664B, 0xC24B8B70, 0xC76C51A3,\n  0xD192E819, 0xD6990624, 0xF40E3585, 0x106AA070,\n  0x19A4C116, 0x1E376C08, 0x2748774C, 0x34B0BCB5,\n  0x391C0CB3, 0x4ED8AA4A, 0x5B9CCA4F, 0x682E6FF3,\n  0x748F82EE, 0x78A5636F, 0x84C87814, 0x8CC70208,\n  0x90BEFFFA, 0xA4506CEB, 0xBEF9A3F7, 0xC67178F2\n]\n\nvar W = new Array(64)\n\nfunction Sha256 () {\n  this.init()\n\n  this._w = W // new Array(64)\n\n  Hash.call(this, 64, 56)\n}\n\ninherits(Sha256, Hash)\n\nSha256.prototype.init = function () {\n  this._a = 0x6a09e667\n  this._b = 0xbb67ae85\n  this._c = 0x3c6ef372\n  this._d = 0xa54ff53a\n  this._e = 0x510e527f\n  this._f = 0x9b05688c\n  this._g = 0x1f83d9ab\n  this._h = 0x5be0cd19\n\n  return this\n}\n\nfunction ch (x, y, z) {\n  return z ^ (x & (y ^ z))\n}\n\nfunction maj (x, y, z) {\n  return (x & y) | (z & (x | y))\n}\n\nfunction sigma0 (x) {\n  return (x >>> 2 | x << 30) ^ (x >>> 13 | x << 19) ^ (x >>> 22 | x << 10)\n}\n\nfunction sigma1 (x) {\n  return (x >>> 6 | x << 26) ^ (x >>> 11 | x << 21) ^ (x >>> 25 | x << 7)\n}\n\nfunction gamma0 (x) {\n  return (x >>> 7 | x << 25) ^ (x >>> 18 | x << 14) ^ (x >>> 3)\n}\n\nfunction gamma1 (x) {\n  return (x >>> 17 | x << 15) ^ (x >>> 19 | x << 13) ^ (x >>> 10)\n}\n\nSha256.prototype._update = function (M) {\n  var W = this._w\n\n  var a = this._a | 0\n  var b = this._b | 0\n  var c = this._c | 0\n  var d = this._d | 0\n  var e = this._e | 0\n  var f = this._f | 0\n  var g = this._g | 0\n  var h = this._h | 0\n\n  for (var i = 0; i < 16; ++i) W[i] = M.readInt32BE(i * 4)\n  for (; i < 64; ++i) W[i] = (gamma1(W[i - 2]) + W[i - 7] + gamma0(W[i - 15]) + W[i - 16]) | 0\n\n  for (var j = 0; j < 64; ++j) {\n    var T1 = (h + sigma1(e) + ch(e, f, g) + K[j] + W[j]) | 0\n    var T2 = (sigma0(a) + maj(a, b, c)) | 0\n\n    h = g\n    g = f\n    f = e\n    e = (d + T1) | 0\n    d = c\n    c = b\n    b = a\n    a = (T1 + T2) | 0\n  }\n\n  this._a = (a + this._a) | 0\n  this._b = (b + this._b) | 0\n  this._c = (c + this._c) | 0\n  this._d = (d + this._d) | 0\n  this._e = (e + this._e) | 0\n  this._f = (f + this._f) | 0\n  this._g = (g + this._g) | 0\n  this._h = (h + this._h) | 0\n}\n\nSha256.prototype._hash = function () {\n  var H = Buffer.allocUnsafe(32)\n\n  H.writeInt32BE(this._a, 0)\n  H.writeInt32BE(this._b, 4)\n  H.writeInt32BE(this._c, 8)\n  H.writeInt32BE(this._d, 12)\n  H.writeInt32BE(this._e, 16)\n  H.writeInt32BE(this._f, 20)\n  H.writeInt32BE(this._g, 24)\n  H.writeInt32BE(this._h, 28)\n\n  return H\n}\n\nmodule.exports = Sha256\n","module.exports = require(\"url\");","module.exports = require(\"util\");","module.exports = __WEBPACK_EXTERNAL_MODULE__7946__;","module.exports = __WEBPACK_EXTERNAL_MODULE__7417__;","module.exports = __WEBPACK_EXTERNAL_MODULE__3983__;","module.exports = __WEBPACK_EXTERNAL_MODULE__4711__;","module.exports = __WEBPACK_EXTERNAL_MODULE__5039__;","module.exports = __WEBPACK_EXTERNAL_MODULE__8236__;","module.exports = __WEBPACK_EXTERNAL_MODULE__5192__;","module.exports = __WEBPACK_EXTERNAL_MODULE__1986__;","module.exports = __WEBPACK_EXTERNAL_MODULE__3783__;","module.exports = __WEBPACK_EXTERNAL_MODULE__9408__;","module.exports = __WEBPACK_EXTERNAL_MODULE__6667__;","module.exports = __WEBPACK_EXTERNAL_MODULE__3735__;","module.exports = __WEBPACK_EXTERNAL_MODULE__3153__;","module.exports = __WEBPACK_EXTERNAL_MODULE__2716__;","module.exports = __WEBPACK_EXTERNAL_MODULE__3485__;","module.exports = __WEBPACK_EXTERNAL_MODULE__79__;","module.exports = __WEBPACK_EXTERNAL_MODULE__9882__;","module.exports = __WEBPACK_EXTERNAL_MODULE__7480__;","module.exports = __WEBPACK_EXTERNAL_MODULE__8079__;","module.exports = require(\"core-js-pure/stable/instance/flags\");","function _classApplyDescriptorGet(receiver, descriptor) {\n  if (descriptor.get) {\n    return descriptor.get.call(receiver);\n  }\n  return descriptor.value;\n}\nmodule.exports = _classApplyDescriptorGet, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _classApplyDescriptorSet(receiver, descriptor, value) {\n  if (descriptor.set) {\n    descriptor.set.call(receiver, value);\n  } else {\n    if (!descriptor.writable) {\n      throw new TypeError(\"attempted to set read only private field\");\n    }\n    descriptor.value = value;\n  }\n}\nmodule.exports = _classApplyDescriptorSet, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _classExtractFieldDescriptor(receiver, privateMap, action) {\n  if (!privateMap.has(receiver)) {\n    throw new TypeError(\"attempted to \" + action + \" private field on non-instance\");\n  }\n  return privateMap.get(receiver);\n}\nmodule.exports = _classExtractFieldDescriptor, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var classApplyDescriptorGet = require(\"./classApplyDescriptorGet.js\");\nvar classExtractFieldDescriptor = require(\"./classExtractFieldDescriptor.js\");\nfunction _classPrivateFieldGet(receiver, privateMap) {\n  var descriptor = classExtractFieldDescriptor(receiver, privateMap, \"get\");\n  return classApplyDescriptorGet(receiver, descriptor);\n}\nmodule.exports = _classPrivateFieldGet, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var classApplyDescriptorSet = require(\"./classApplyDescriptorSet.js\");\nvar classExtractFieldDescriptor = require(\"./classExtractFieldDescriptor.js\");\nfunction _classPrivateFieldSet(receiver, privateMap, value) {\n  var descriptor = classExtractFieldDescriptor(receiver, privateMap, \"set\");\n  classApplyDescriptorSet(receiver, descriptor, value);\n  return value;\n}\nmodule.exports = _classPrivateFieldSet, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var _Object$defineProperty = require(\"core-js-pure/features/object/define-property.js\");\nvar toPropertyKey = require(\"./toPropertyKey.js\");\nfunction _defineProperty(obj, key, value) {\n  key = toPropertyKey(key);\n  if (key in obj) {\n    _Object$defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nmodule.exports = _defineProperty, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var _Symbol$toPrimitive = require(\"core-js-pure/features/symbol/to-primitive.js\");\nvar _typeof = require(\"./typeof.js\")[\"default\"];\nfunction _toPrimitive(input, hint) {\n  if (_typeof(input) !== \"object\" || input === null) return input;\n  var prim = input[_Symbol$toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (_typeof(res) !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}\nmodule.exports = _toPrimitive, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var _typeof = require(\"./typeof.js\")[\"default\"];\nvar toPrimitive = require(\"./toPrimitive.js\");\nfunction _toPropertyKey(arg) {\n  var key = toPrimitive(arg, \"string\");\n  return _typeof(key) === \"symbol\" ? key : String(key);\n}\nmodule.exports = _toPropertyKey, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var _Symbol = require(\"core-js-pure/features/symbol/index.js\");\nvar _Symbol$iterator = require(\"core-js-pure/features/symbol/iterator.js\");\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return (module.exports = _typeof = \"function\" == typeof _Symbol && \"symbol\" == typeof _Symbol$iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof _Symbol && obj.constructor === _Symbol && obj !== _Symbol.prototype ? \"symbol\" : typeof obj;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports), _typeof(obj);\n}\nmodule.exports = _typeof, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","/**\n * Big Number Helpers\n */\nimport BigNumber from 'bignumber.js';\n\n/**\n * Check if value is BigNumber, Number, BigInt or number string representation\n * @param number - number to check\n */\nexport const isBigNumber = (number: string | number | bigint | BigNumber): boolean => {\n  if (typeof number === 'bigint') return true;\n  return ['number', 'object', 'string'].includes(typeof number)\n    // eslint-disable-next-line no-restricted-globals\n    && (!isNaN(number as number) || Number.isInteger(number) || BigNumber.isBigNumber(number));\n};\n\n/**\n * BigNumber ceil operation\n */\nexport const ceil = (bigNumber: BigNumber): BigNumber => bigNumber\n  .integerValue(BigNumber.ROUND_CEIL);\n","// eslint-disable-next-line max-classes-per-file\nimport BigNumber from 'bignumber.js';\nimport { AensName, Int } from '../tx/builder/constants';\nimport * as Encoded from './encoder-types';\n\n/**\n * aepp-sdk originated error\n * @category exception\n */\nexport abstract class BaseError extends Error {\n  constructor(message: string) {\n    super(message);\n    this.name = 'BaseError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class AccountError extends BaseError {\n  constructor(message: string) {\n    super(message);\n    this.name = 'AccountError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class AensError extends BaseError {\n  constructor(message: string) {\n    super(message);\n    this.name = 'AensError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class AeppError extends BaseError {\n  constructor(message: string) {\n    super(message);\n    this.name = 'AeppError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class ChannelError extends BaseError {\n  constructor(message: string) {\n    super(message);\n    this.name = 'ChannelError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class CompilerError extends BaseError {\n  constructor(message: string) {\n    super(message);\n    this.name = 'CompilerError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class ContractError extends BaseError {\n  constructor(message: string) {\n    super(message);\n    this.name = 'ContractError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class CryptographyError extends BaseError {\n  constructor(message: string) {\n    super(message);\n    this.name = 'CryptographyError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class NodeError extends BaseError {\n  constructor(message: string) {\n    super(message);\n    this.name = 'NodeError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class TransactionError extends BaseError {\n  constructor(message: string) {\n    super(message);\n    this.name = 'TransactionError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class WalletError extends BaseError {\n  constructor(message: string) {\n    super(message);\n    this.name = 'WalletError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class ArgumentError extends BaseError {\n  constructor(argumentName: string, requirement: unknown, argumentValue: unknown) {\n    super(`${argumentName} should be ${requirement}, got ${argumentValue} instead`);\n    this.name = 'ArgumentError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class IllegalArgumentError extends CryptographyError {\n  constructor(message: string) {\n    super(message);\n    this.name = 'IllegalArgumentError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class ArgumentCountMismatchError extends BaseError {\n  constructor(functionName: string, requiredCount: number, providedCount: number) {\n    super(`${functionName} expects ${requiredCount} arguments, got ${providedCount} instead`);\n    this.name = 'ArgumentCountMismatchError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class InsufficientBalanceError extends BaseError {\n  constructor(message: string) {\n    super(message);\n    this.name = 'InsufficientBalanceError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class MissingParamError extends BaseError {\n  constructor(message: string) {\n    super(message);\n    this.name = 'MissingParamError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class NoSerializerFoundError extends BaseError {\n  constructor() {\n    super('Byte serialization not supported');\n    this.name = 'NoSerializerFoundError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class RequestTimedOutError extends BaseError {\n  constructor(height: number) {\n    super(`Giving up at height ${height}`);\n    this.name = 'RequestTimedOutError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class TxTimedOutError extends BaseError {\n  constructor(blocks: number, th: Encoded.TxHash) {\n    super([\n      `Giving up after ${blocks} blocks mined`,\n      `transaction hash: ${th}`,\n    ].join(', '));\n    this.name = 'TxTimedOutError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class TypeError extends BaseError {\n  constructor(message: string) {\n    super(message);\n    this.name = 'TypeError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class UnsupportedPlatformError extends BaseError {\n  constructor(message: string) {\n    super(message);\n    this.name = 'UnsupportedPlatformError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class UnsupportedProtocolError extends BaseError {\n  constructor(message: string) {\n    super(message);\n    this.name = 'UnsupportedProtocolError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class NotImplementedError extends BaseError {\n  constructor(message: string) {\n    super(message);\n    this.name = 'NotImplementedError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class UnsupportedVersionError extends BaseError {\n  constructor(dependency: string, version: string, geVersion: string, ltVersion: string) {\n    super(`Unsupported ${dependency} version ${version}. Supported: >= ${geVersion} < ${ltVersion}`);\n    this.name = 'UnsupportedVersionError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class InternalError extends BaseError {\n  constructor(message: string) {\n    super(message);\n    this.name = 'InternalError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class UnexpectedTsError extends InternalError {\n  constructor(message = 'Expected to not happen, required for TS') {\n    super(message);\n    this.name = 'UnexpectedTsError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class UnavailableAccountError extends AccountError {\n  constructor(address: Encoded.AccountAddress) {\n    super(`Account for ${address} not available`);\n    this.name = 'UnavailableAccountError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class AensPointerContextError extends AensError {\n  constructor(nameOrId: AensName | Encoded.Name, prefix: string) {\n    super(`Name ${nameOrId} don't have pointers for ${prefix}`);\n    this.name = 'AensPointerContextError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class InsufficientNameFeeError extends AensError {\n  constructor(nameFee: BigNumber, minNameFee: BigNumber) {\n    super(`the provided fee ${nameFee.toString()} is not enough to execute the claim, required: ${minNameFee.toString()}`);\n    this.name = 'InsufficientNameFeeError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class InvalidAensNameError extends AensError {\n  constructor(message: string) {\n    super(message);\n    this.name = 'InvalidAensNameError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class InvalidRpcMessageError extends AeppError {\n  constructor(message: string) {\n    super(`Received invalid message: ${message}`);\n    this.name = 'InvalidRpcMessageError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class MissingCallbackError extends AeppError {\n  constructor(id: number) {\n    super(`Can't find callback for this messageId ${id}`);\n    this.name = 'MissingCallbackError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class UnAuthorizedAccountError extends AeppError {\n  constructor(onAccount: Encoded.AccountAddress) {\n    super(`You do not have access to account ${onAccount}`);\n    this.name = 'UnAuthorizedAccountError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class UnknownRpcClientError extends AeppError {\n  constructor(id: string) {\n    super(`RpcClient with id ${id} do not exist`);\n    this.name = 'UnknownRpcClientError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class UnsubscribedAccountError extends AeppError {\n  constructor() {\n    super('You are not subscribed for an account.');\n    this.name = 'UnsubscribedAccountError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class ChannelCallError extends ChannelError {\n  constructor(message: string) {\n    super(message);\n    this.name = 'ChannelCallError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class ChannelConnectionError extends ChannelError {\n  constructor(message: string) {\n    super(message);\n    this.name = 'ChannelConnectionError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class ChannelPingTimedOutError extends ChannelError {\n  constructor() {\n    super('Server pong timed out');\n    this.name = 'ChannelPingTimedOutError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class UnexpectedChannelMessageError extends ChannelError {\n  constructor(message: string) {\n    super(message);\n    this.name = 'UnexpectedChannelMessageError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class ChannelIncomingMessageError extends ChannelError {\n  handlerError: Error;\n\n  incomingMessage: { [key: string]: any };\n\n  constructor(handlerError: Error, incomingMessage: { [key: string]: any }) {\n    super(handlerError.message);\n    this.handlerError = handlerError;\n    this.incomingMessage = incomingMessage;\n    this.name = 'ChannelIncomingMessageError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class UnknownChannelStateError extends ChannelError {\n  constructor() {\n    super('State Channels FSM entered unknown state');\n    this.name = 'UnknownChannelStateError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class InvalidAuthDataError extends CompilerError {\n  constructor(message: string) {\n    super(message);\n    this.name = 'InvalidAuthDataError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class BytecodeMismatchError extends ContractError {\n  constructor(source: 'source code' | 'bytecode') {\n    super(`Contract ${source} do not correspond to the bytecode deployed on the chain`);\n    this.name = 'BytecodeMismatchError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class DuplicateContractError extends ContractError {\n  constructor() {\n    super('Contract already deployed');\n    this.name = 'DuplicateContractError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class InactiveContractError extends ContractError {\n  constructor(contractAddress: Encoded.ContractAddress) {\n    super(`Contract with address ${contractAddress} not active`);\n    this.name = 'InactiveContractError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class InvalidMethodInvocationError extends ContractError {\n  constructor(message: string) {\n    super(message);\n    this.name = 'InvalidMethodInvocationError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class MissingContractAddressError extends ContractError {\n  constructor(message: string) {\n    super(message);\n    this.name = 'MissingContractAddressError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class MissingContractDefError extends ContractError {\n  constructor() {\n    super('Either ACI or sourceCode or sourceCodePath is required');\n    this.name = 'MissingContractDefError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class MissingFunctionNameError extends ContractError {\n  constructor() {\n    super('Function name is required');\n    this.name = 'MissingFunctionNameError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class NodeInvocationError extends ContractError {\n  transaction?: Encoded.Transaction;\n\n  constructor(message: string, transaction?: Encoded.Transaction) {\n    super(`Invocation failed${message == null ? '' : `: \"${message}\"`}`);\n    this.name = 'NodeInvocationError';\n    this.transaction = transaction;\n  }\n}\n\n/**\n * @category exception\n */\nexport class NoSuchContractFunctionError extends ContractError {\n  constructor(name: string) {\n    super(`Function ${name} doesn't exist in contract`);\n    this.name = 'NoSuchContractFunctionError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class NotPayableFunctionError extends ContractError {\n  constructor(amount: Int, fn: string) {\n    super(\n      `You try to pay \"${amount}\" to function \"${fn}\" which is not payable. `\n      + 'Only payable function can accept coins',\n    );\n    this.name = 'NotPayableFunctionError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class MissingEventDefinitionError extends ContractError {\n  constructor(eventNameHash: string, eventAddress: Encoded.ContractAddress) {\n    super(\n      `Can't find definition of ${eventNameHash} event emitted by ${eventAddress}`\n      + ' (use omitUnknown option to ignore events like this)',\n    );\n    this.name = 'MissingEventDefinitionError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class AmbiguousEventDefinitionError extends ContractError {\n  constructor(eventAddress: Encoded.ContractAddress, matchedEvents: Array<[string, string]>) {\n    super(\n      `Found multiple definitions of \"${matchedEvents[0][1]}\" event with different types emitted by`\n      + ` ${eventAddress} in ${matchedEvents.map(([name]) => `\"${name}\"`).join(', ')} contracts`\n      + ' (use contractAddressToName option to specify contract name corresponding to address)',\n    );\n    this.name = 'AmbiguousEventDefinitionError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class InvalidChecksumError extends CryptographyError {\n  constructor() {\n    super('Invalid checksum');\n    this.name = 'InvalidChecksumError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class InvalidPasswordError extends CryptographyError {\n  constructor() {\n    super('Invalid password or nonce');\n    this.name = 'InvalidPasswordError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class MerkleTreeHashMismatchError extends CryptographyError {\n  constructor() {\n    super('Node hash is not equal to provided one');\n    this.name = 'MerkleTreeHashMismatchError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class MissingNodeInTreeError extends CryptographyError {\n  constructor(message: string) {\n    super(message);\n    this.name = 'MissingNodeInTreeError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class UnknownNodeLengthError extends CryptographyError {\n  constructor(nodeLength: number) {\n    super(`Unknown node length: ${nodeLength}`);\n    this.name = 'UnknownNodeLengthError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class UnknownPathNibbleError extends CryptographyError {\n  constructor(nibble: number) {\n    super(`Unknown path nibble: ${nibble}`);\n    this.name = 'UnknownPathNibbleError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class DuplicateNodeError extends NodeError {\n  constructor(name: string) {\n    super(`Node with name ${name} already exist`);\n    this.name = 'DuplicateNodeError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class NodeNotFoundError extends NodeError {\n  constructor(message: string) {\n    super(message);\n    this.name = 'NodeNotFoundError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class DecodeError extends TransactionError {\n  constructor(message: string) {\n    super(message);\n    this.name = 'DecodeError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class PayloadLengthError extends TransactionError {\n  constructor(message: string) {\n    super(message);\n    this.name = 'PayloadLengthError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class DryRunError extends TransactionError {\n  constructor(message: string) {\n    super(message);\n    this.name = 'DryRunError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class IllegalBidFeeError extends TransactionError {\n  constructor(message: string) {\n    super(message);\n    this.name = 'IllegalBidFeeError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class InvalidSignatureError extends TransactionError {\n  constructor(message: string) {\n    super(message);\n    this.name = 'InvalidSignatureError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class PrefixNotFoundError extends TransactionError {\n  constructor(tag: number) {\n    super(`Prefix for id-tag ${tag} not found.`);\n    this.name = 'PrefixNotFoundError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class SchemaNotFoundError extends TransactionError {\n  constructor(key: string, version: number) {\n    super(`Transaction schema not implemented for tag ${key} version ${version}`);\n    this.name = 'SchemaNotFoundError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class TagNotFoundError extends TransactionError {\n  constructor(prefix: string) {\n    super(`Id tag for prefix ${prefix} not found.`);\n    this.name = 'DecodeError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class TxNotInChainError extends TransactionError {\n  constructor(txHash: Encoded.TxHash) {\n    super(`Transaction ${txHash} is removed from chain`);\n    this.name = 'TxNotInChainError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class AlreadyConnectedError extends WalletError {\n  constructor(message: string) {\n    super(message);\n    this.name = 'AlreadyConnectedError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class NoWalletConnectedError extends WalletError {\n  constructor(message: string) {\n    super(message);\n    this.name = 'NoWalletConnectedError';\n  }\n}\n\n/**\n * @category exception\n */\nexport class RpcConnectionError extends WalletError {\n  constructor(message: string) {\n    super(message);\n    this.name = 'RpcConnectionError';\n  }\n}\n","import BigNumber from 'bignumber.js';\nimport { isBigNumber } from './bignumber';\nimport { ArgumentError } from './errors';\n\nexport enum AE_AMOUNT_FORMATS {\n  AE = 'ae',\n  MILI_AE = 'miliAE',\n  MICRO_AE = 'microAE',\n  NANO_AE = 'nanoAE',\n  PICO_AE = 'picoAE',\n  FEMTO_AE = 'femtoAE',\n  AETTOS = 'aettos',\n}\n\n/**\n * DENOMINATION_MAGNITUDE\n */\nconst DENOMINATION_MAGNITUDE = {\n  [AE_AMOUNT_FORMATS.AE]: 0,\n  [AE_AMOUNT_FORMATS.MILI_AE]: -3,\n  [AE_AMOUNT_FORMATS.MICRO_AE]: -6,\n  [AE_AMOUNT_FORMATS.NANO_AE]: -9,\n  [AE_AMOUNT_FORMATS.PICO_AE]: -12,\n  [AE_AMOUNT_FORMATS.FEMTO_AE]: -15,\n  [AE_AMOUNT_FORMATS.AETTOS]: -18,\n} as const;\n\n/**\n * Convert amount from one to other denomination\n * @param value - amount to convert\n * @param options - options\n * @param options.denomination - denomination of amount, can be ['ae', 'aettos']\n * @param options.targetDenomination - target denomination,\n * can be ['ae', 'aettos']\n */\nexport const formatAmount = (\n  value: string | number | bigint | BigNumber,\n  { denomination = AE_AMOUNT_FORMATS.AETTOS, targetDenomination = AE_AMOUNT_FORMATS.AETTOS }:\n  { denomination?: AE_AMOUNT_FORMATS; targetDenomination?: AE_AMOUNT_FORMATS },\n): string => {\n  if (!isBigNumber(value)) throw new ArgumentError('value', 'a number', value);\n\n  return new BigNumber(typeof value === 'bigint' ? value.toString() : value)\n    .shiftedBy(DENOMINATION_MAGNITUDE[denomination] - DENOMINATION_MAGNITUDE[targetDenomination])\n    .toFixed();\n};\n\n/**\n * Convert amount to AE\n * @param value - amount to convert\n * @param options - options\n * @param options.denomination - denomination of amount, can be ['ae', 'aettos']\n */\nexport const toAe = (\n  value: string | number | BigNumber,\n  { denomination = AE_AMOUNT_FORMATS.AETTOS }: { denomination?: AE_AMOUNT_FORMATS } = {},\n): string => formatAmount(value, { denomination, targetDenomination: AE_AMOUNT_FORMATS.AE });\n\n/**\n * Convert amount to aettos\n * @param value - amount to convert\n * @param options - options\n * @param options.denomination - denomination of amount, can be ['ae', 'aettos']\n */\nexport const toAettos = (\n  value: string | number | BigNumber,\n  { denomination = AE_AMOUNT_FORMATS.AE }: { denomination?: AE_AMOUNT_FORMATS } = {},\n): string => formatAmount(value, { denomination });\n\ninterface Prefix {\n  name: string;\n  magnitude: number;\n}\n\nconst prefixes: Prefix[] = [\n  { name: 'exa', magnitude: 18 },\n  { name: 'giga', magnitude: 9 },\n  { name: '', magnitude: 0 },\n  { name: 'pico', magnitude: -12 },\n];\n\nconst getNearestPrefix = (exponent: number): Prefix => prefixes.reduce((p, n) => (\n  Math.abs(n.magnitude - exponent) < Math.abs(p.magnitude - exponent) ? n : p));\n\nconst getLowerBoundPrefix = (exponent: number): Prefix => prefixes\n  .find((p) => p.magnitude <= exponent) ?? prefixes[prefixes.length - 1];\n\nexport const prefixedAmount = (rawValue: string | number | BigNumber): string => {\n  const value: BigNumber = new BigNumber(rawValue);\n\n  const exp = value.e ?? 0;\n  const { name, magnitude } = (exp < 0 ? getNearestPrefix : getLowerBoundPrefix)(exp);\n  const v = value\n    .shiftedBy(-magnitude)\n    .precision(9 + Math.min(exp - magnitude, 0))\n    .toFixed();\n  return `${v}${name !== '' ? ' ' : ''}${name}`;\n};\n","import { RestError } from '@azure/core-rest-pipeline';\n\nexport const pause = async (duration: number): Promise<void> => new Promise((resolve) => {\n  setTimeout(resolve, duration);\n});\n\nexport const mapObject = <InputV, OutputV>(\n  object: { [k: string]: InputV },\n  fn: (\n    value: [string, InputV], index: number, array: Array<[string, InputV]>\n  ) => [number | string, OutputV],\n): { [k: string]: OutputV } => Object.fromEntries(Object.entries(object).map(fn));\n\n// remove after dropping webpack4 support\nconst isWebpack4Buffer = (() => {\n  try {\n    Buffer.concat([Uint8Array.from([])]);\n    return false;\n  } catch (error) {\n    return true;\n  }\n})();\n\nexport const concatBuffers = isWebpack4Buffer\n  ? (list: readonly Uint8Array[], totalLength?: number): Buffer => (\n    Buffer.concat(list.map((el) => Buffer.from(el)), totalLength)\n  )\n  : Buffer.concat;\n\n/**\n * Object key type guard\n * @param key - Maybe object key\n * @param object - Object\n */\nexport function isKeyOfObject<T extends object>(\n  key: string | number | symbol,\n  object: T,\n): key is keyof T {\n  return key in object;\n}\n\n/**\n * Array item type guard\n * @param item - Maybe array item\n * @param array - Array\n */\nexport function isItemOfArray<T>(item: any, array: readonly T[]): item is T {\n  return array.includes(item);\n}\n\nexport function isAccountNotFoundError(error: Error): boolean {\n  return error instanceof RestError && error.statusCode === 404\n    && error.message.includes('Account not found');\n}\n\n// based on https://stackoverflow.com/a/50375286/6176994\nexport type UnionToIntersection<Union> =\n  (Union extends any ? (k: Union) => void : never) extends ((k: infer Intersection) => void)\n    ? Intersection : never;\n\nexport function ensureError(error: unknown): asserts error is Error {\n  if (error instanceof Error) return;\n  throw error;\n}\n","/**\n * @category transaction builder\n * @see {@link https://github.com/aeternity/protocol/blob/master/node/api/api_encoding.md}\n * @see {@link https://github.com/aeternity/aeserialization/blob/eb68fe331bd476910394966b7f5ede7a74d37e35/src/aeser_api_encoder.erl#L205-L230}\n */\nexport enum Encoding {\n  KeyBlockHash = 'kh',\n  MicroBlockHash = 'mh',\n  BlockPofHash = 'bf',\n  BlockTxHash = 'bx',\n  BlockStateHash = 'bs',\n  Channel = 'ch',\n  ContractAddress = 'ct',\n  ContractBytearray = 'cb',\n  ContractStoreKey = 'ck',\n  ContractStoreValue = 'cv',\n  Transaction = 'tx',\n  TxHash = 'th',\n  OracleAddress = 'ok',\n  OracleQuery = 'ov',\n  OracleQueryId = 'oq',\n  OracleResponse = 'or',\n  AccountAddress = 'ak',\n  Signature = 'sg',\n  Commitment = 'cm',\n  PeerPubkey = 'pp',\n  Name = 'nm',\n  State = 'st',\n  Poi = 'pi',\n  StateTrees = 'ss',\n  CallStateTree = 'cs',\n  Bytearray = 'ba',\n}\n\nexport type KeyBlockHash = `${Encoding.KeyBlockHash}_${string}`;\nexport type MicroBlockHash = `${Encoding.MicroBlockHash}_${string}`;\nexport type BlockPofHash = `${Encoding.BlockPofHash}_${string}`;\nexport type BlockTxHash = `${Encoding.BlockTxHash}_${string}`;\nexport type BlockStateHash = `${Encoding.BlockStateHash}_${string}`;\nexport type Channel = `${Encoding.Channel}_${string}`;\nexport type ContractAddress = `${Encoding.ContractAddress}_${string}`;\nexport type ContractBytearray = `${Encoding.ContractBytearray}_${string}`;\nexport type ContractStoreKey = `${Encoding.ContractStoreKey}_${string}`;\nexport type ContractStoreValue = `${Encoding.ContractStoreValue}_${string}`;\nexport type Transaction = `${Encoding.Transaction}_${string}`;\nexport type TxHash = `${Encoding.TxHash}_${string}`;\nexport type OracleAddress = `${Encoding.OracleAddress}_${string}`;\nexport type OracleQuery = `${Encoding.OracleQuery}_${string}`;\nexport type OracleQueryId = `${Encoding.OracleQueryId}_${string}`;\nexport type OracleResponse = `${Encoding.OracleResponse}_${string}`;\nexport type AccountAddress = `${Encoding.AccountAddress}_${string}`;\nexport type Signature = `${Encoding.Signature}_${string}`;\nexport type Commitment = `${Encoding.Commitment}_${string}`;\nexport type PeerPubkey = `${Encoding.PeerPubkey}_${string}`;\nexport type Name = `${Encoding.Name}_${string}`;\nexport type State = `${Encoding.State}_${string}`;\nexport type Poi = `${Encoding.Poi}_${string}`;\nexport type StateTrees = `${Encoding.StateTrees}_${string}`;\nexport type CallStateTree = `${Encoding.CallStateTree}_${string}`;\nexport type Bytearray = `${Encoding.Bytearray}_${string}`;\n\nexport type Generic<Type extends Encoding> = `${Type}_${string}`;\nexport type Any = `${Encoding}_${string}`;\n","import { encode as bs58Encode, decode as bs58Decode } from 'bs58';\n// js extension is required for mjs build, not importing the whole package to reduce bundle size\n// eslint-disable-next-line import/extensions\nimport Sha256 from 'sha.js/sha256.js';\nimport {\n  DecodeError,\n  ArgumentError,\n  InvalidChecksumError,\n  PayloadLengthError,\n} from './errors';\nimport { concatBuffers, isKeyOfObject } from './other';\nimport * as Encoded from './encoder-types';\nimport { Encoding } from './encoder-types';\n\nexport { Encoded, Encoding };\n\n/**\n * Calculate SHA256 hash of `input`\n * @param input - Data to hash\n * @returns Hash\n */\nexport function sha256hash(input: Uint8Array | string): Buffer {\n  return new Sha256().update(input).digest();\n}\n\n/**\n * @see {@link https://github.com/aeternity/aeserialization/blob/eb68fe331bd476910394966b7f5ede7a74d37e35/src/aeser_api_encoder.erl#L177-L202}\n */\nconst base64Types = [\n  Encoding.ContractBytearray,\n  Encoding.ContractStoreKey,\n  Encoding.ContractStoreValue,\n  Encoding.Transaction,\n  Encoding.OracleQuery,\n  Encoding.OracleResponse,\n  Encoding.State,\n  Encoding.Poi,\n  Encoding.StateTrees,\n  Encoding.CallStateTree,\n  Encoding.Bytearray,\n] as const;\nconst base58Types = [\n  Encoding.KeyBlockHash,\n  Encoding.MicroBlockHash,\n  Encoding.BlockPofHash,\n  Encoding.BlockTxHash,\n  Encoding.BlockStateHash,\n  Encoding.Channel,\n  Encoding.ContractAddress,\n  Encoding.TxHash,\n  Encoding.OracleAddress,\n  Encoding.OracleQueryId,\n  Encoding.AccountAddress,\n  Encoding.Signature,\n  Encoding.Commitment,\n  Encoding.PeerPubkey,\n  Encoding.Name,\n] as const;\n\n/**\n * @see {@link https://github.com/aeternity/aeserialization/blob/eb68fe331bd476910394966b7f5ede7a74d37e35/src/aeser_api_encoder.erl#L261-L286}\n */\nconst byteSizeForType = {\n  [Encoding.KeyBlockHash]: 32,\n  [Encoding.MicroBlockHash]: 32,\n  [Encoding.BlockPofHash]: 32,\n  [Encoding.BlockTxHash]: 32,\n  [Encoding.BlockStateHash]: 32,\n  [Encoding.Channel]: 32,\n  [Encoding.ContractAddress]: 32,\n  [Encoding.TxHash]: 32,\n  [Encoding.OracleAddress]: 32,\n  [Encoding.OracleQueryId]: 32,\n  [Encoding.AccountAddress]: 32,\n  [Encoding.Signature]: 64,\n  [Encoding.Commitment]: 32,\n  [Encoding.PeerPubkey]: 32,\n  [Encoding.State]: 32,\n} as const;\n\nfunction ensureValidLength(data: Uint8Array, type: Encoding): void {\n  if (!isKeyOfObject(type, byteSizeForType)) return;\n  const reqLen = byteSizeForType[type];\n  if (reqLen == null || data.length === reqLen) return;\n  throw new PayloadLengthError(`Payload should be ${reqLen} bytes, got ${data.length} instead`);\n}\n\nconst getChecksum = (payload: Uint8Array): Buffer => sha256hash(sha256hash(payload)).slice(0, 4);\n\nconst addChecksum = (payload: Uint8Array): Buffer => concatBuffers([payload, getChecksum(payload)]);\n\nfunction getPayload(buffer: Buffer): Buffer {\n  const payload = buffer.slice(0, -4);\n  if (!getChecksum(payload).equals(buffer.slice(-4))) throw new InvalidChecksumError();\n  return payload;\n}\n\nconst base64 = {\n  encode: (buffer: Uint8Array) => addChecksum(buffer).toString('base64'),\n  decode: (string: string) => getPayload(Buffer.from(string, 'base64')),\n};\n\nconst base58 = {\n  encode: (buffer: Uint8Array) => bs58Encode(addChecksum(buffer)),\n  decode: (string: string) => getPayload(Buffer.from(bs58Decode(string))),\n};\n\nconst parseType = (maybeType: unknown): [Encoding, typeof base64] => {\n  const base64Type = base64Types.find((t) => t === maybeType);\n  if (base64Type != null) return [base64Type, base64];\n  const base58Type = base58Types.find((t) => t === maybeType);\n  if (base58Type != null) return [base58Type, base58];\n  throw new ArgumentError('prefix', `one of ${[...base58Types, ...base64Types].join(', ')}`, maybeType);\n};\n\n/**\n * Decode data using the default encoding/decoding algorithm\n * @param data - An Base58/64check encoded and prefixed string\n * (ex tx_..., sg_..., ak_....)\n * @returns Decoded data\n */\nexport function decode(data: Encoded.Any): Buffer {\n  const [prefix, encodedPayload, extra] = data.split('_');\n  if (encodedPayload == null) throw new DecodeError(`Encoded string missing payload: ${data}`);\n  if (extra != null) throw new DecodeError(`Encoded string have extra parts: ${data}`);\n  const [type, encoder] = parseType(prefix);\n  const payload = encoder.decode(encodedPayload);\n  ensureValidLength(payload, type);\n  return payload;\n}\n\n/**\n * Encode data using the default encoding/decoding algorithm\n * @param data - An decoded data\n * @param type - Prefix of Transaction\n * @returns Encoded string Base58check or Base64check data\n */\nexport function encode<Type extends Encoding>(\n  data: Uint8Array,\n  type: Type,\n): Encoded.Generic<Type> {\n  const [, encoder] = parseType(type);\n  ensureValidLength(data, type);\n  return `${type}_${encoder.encode(data)}`;\n}\n","import nacl, { SignKeyPair } from 'tweetnacl';\n// js extension is required for mjs build, not importing the whole package to reduce bundle size\n// eslint-disable-next-line import/extensions\nimport { blake2b } from 'blakejs/blake2b.js';\nimport { encode as varuintEncode } from 'varuint-bitcoin';\n\nimport { concatBuffers } from './other';\nimport {\n  decode, encode, Encoded, Encoding,\n} from './encoder';\nimport { ArgumentError } from './errors';\n\n/**\n * Generate address from secret key\n * @param secret - Private key as hex string\n * @returns Public key encoded as address\n */\nexport function getAddressFromPriv(secret: string | Uint8Array): Encoded.AccountAddress {\n  const secretBuffer = typeof secret === 'string' ? Buffer.from(secret, 'hex') : secret;\n  const keys = nacl.sign.keyPair.fromSecretKey(secretBuffer);\n  return encode(keys.publicKey, Encoding.AccountAddress);\n}\n\n/**\n * Check if address is valid\n * @param address - Address\n * @param prefix - Transaction prefix. Default: 'ak'\n * @returns is valid\n */\nexport function isAddressValid(\n  address: string,\n  prefix: Encoding = Encoding.AccountAddress,\n): boolean {\n  try {\n    decode(address as Encoded.Generic<typeof prefix>);\n    const actualPrefix = address.split('_')[0];\n    if (actualPrefix !== prefix) {\n      throw new ArgumentError('Encoded string type', prefix, actualPrefix);\n    }\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Generate a random salt (positive integer)\n * @returns random salt\n */\nexport function genSalt(): number {\n  const [random] = new BigUint64Array(nacl.randomBytes(8).buffer);\n  return Number(random % BigInt(Number.MAX_SAFE_INTEGER));\n}\n\n/**\n * Converts a positive integer to the smallest possible\n * representation in a binary digit representation\n * @param value - Value to encode\n * @returns Encoded number\n */\nexport function encodeUnsigned(value: number): Buffer {\n  const binary = Buffer.allocUnsafe(4);\n  binary.writeUInt32BE(value);\n  return binary.slice(binary.findIndex((i) => i !== 0));\n}\n\n/**\n * Calculate 256bits Blake2b hash of `input`\n * @param input - Data to hash\n * @returns Hash\n */\nexport function hash(input: string | Uint8Array): Buffer {\n  return Buffer.from(blake2b(input, undefined, 32)); // 256 bits\n}\n\n// Todo Duplicated in tx builder. remove\n/**\n * Compute contract address\n * @category contract\n * @param owner - Address of contract owner\n * @param nonce - Round when contract was created\n * @returns Contract address\n */\nexport function encodeContractAddress(\n  owner: Encoded.AccountAddress,\n  nonce: number,\n): Encoded.ContractAddress {\n  const publicKey = decode(owner);\n  const binary = concatBuffers([publicKey, encodeUnsigned(nonce)]);\n  return encode(hash(binary), Encoding.ContractAddress);\n}\n\n// KEY-PAIR HELPERS\n\n/**\n * Generate keyPair from secret key\n * @param secret - secret key\n * @returns Object with Private(privateKey) and Public(publicKey) keys\n */\nexport function generateKeyPairFromSecret(secret: Uint8Array): SignKeyPair {\n  return nacl.sign.keyPair.fromSecretKey(secret);\n}\n\n/**\n * Generate a random ED25519 keypair\n * @param raw - Whether to return raw (binary) keys\n * @returns Key pair\n */\nexport function generateKeyPair(raw: true): { publicKey: Buffer; secretKey: Buffer };\nexport function generateKeyPair(raw?: false): {\n  publicKey: Encoded.AccountAddress; secretKey: string;\n};\nexport function generateKeyPair(raw = false): {\n  publicKey: Encoded.AccountAddress | Buffer;\n  secretKey: string | Buffer;\n} {\n  const keyPair = nacl.sign.keyPair();\n  const publicBuffer = Buffer.from(keyPair.publicKey);\n  const secretBuffer = Buffer.from(keyPair.secretKey);\n\n  if (raw) {\n    return {\n      publicKey: publicBuffer,\n      secretKey: secretBuffer,\n    };\n  }\n  return {\n    publicKey: encode(publicBuffer, Encoding.AccountAddress),\n    secretKey: secretBuffer.toString('hex'),\n  };\n}\n\n// SIGNATURES\n\n/**\n * Generate signature\n * @param data - Data to sign\n * @param privateKey - Key to sign with\n * @returns Signature\n */\nexport function sign(data: string | Uint8Array, privateKey: string | Uint8Array): Uint8Array {\n  return nacl.sign.detached(Buffer.from(data), Buffer.from(privateKey));\n}\n\n/**\n * Verify that signature was signed by public key\n * @param data - Data that was signed\n * @param signature - Signature of data\n * @param address - Address to verify against\n * @returns is data was signed by address\n */\nexport function verify(\n  data: Uint8Array,\n  signature: Uint8Array,\n  address: Encoded.AccountAddress,\n): boolean {\n  return nacl.sign.detached.verify(data, signature, decode(address));\n}\n\nconst messagePrefix = Buffer.from('aeternity Signed Message:\\n', 'utf8');\nexport const messagePrefixLength = varuintEncode(messagePrefix.length);\n\n// TODO: consider rename to hashMessage\nexport function messageToHash(message: string): Buffer {\n  const msg = Buffer.from(message, 'utf8');\n  return hash(concatBuffers([messagePrefixLength, messagePrefix, varuintEncode(msg.length), msg]));\n}\n\nexport function signMessage(message: string, privateKey: string | Buffer): Uint8Array {\n  return sign(messageToHash(message), privateKey);\n}\n\n/**\n * Verify that message was signed by address\n * @param message - Message that was signed\n * @param signature - Signature of message\n * @param address - Address to verify against\n * @returns is data was signed by address\n */\n// TODO: deprecate in favour of `verify(messageToHash(message), ...`, also the name is confusing\n// it should contain \"signature\"\nexport function verifyMessage(\n  message: string,\n  signature: Uint8Array,\n  address: Encoded.AccountAddress,\n): boolean {\n  return verify(messageToHash(message), signature, address);\n}\n\n/**\n * Check key pair for validity\n *\n * Signs a message, and then verifies that signature\n * @param privateKey - Private key to verify\n * @param publicKey - Public key to verify as hex string\n * @returns Valid?\n */\nexport function isValidKeypair(\n  privateKey: string | Uint8Array,\n  publicKey: string | Uint8Array,\n): boolean {\n  const message = Buffer.from('TheMessage');\n  const signature = sign(message, privateKey);\n  const publicKeyBuffer = typeof publicKey === 'string' ? Buffer.from(publicKey, 'hex') : publicKey;\n  return verify(message, signature, encode(publicKeyBuffer, Encoding.AccountAddress));\n}\n","import BigNumber from 'bignumber.js';\nimport { mapObject } from '../../utils/other';\n\nexport const MAX_AUTH_FUN_GAS = 50000;\nexport type Int = number | string | BigNumber;\n// # AENS\nexport type AensName = `${string}.chain`;\nexport const NAME_TTL = 180000;\n// # max number of block into the future that the name is going to be available\n// # https://github.com/aeternity/protocol/blob/epoch-v0.22.0/AENS.md#update\n// # https://github.com/aeternity/protocol/blob/44a93d3aab957ca820183c3520b9daf6b0fedff4/AENS.md#aens-entry\nexport const NAME_MAX_TTL = 36000;\nexport const NAME_MAX_CLIENT_TTL = 84600;\nexport const CLIENT_TTL = NAME_MAX_CLIENT_TTL;\nexport const MIN_GAS_PRICE = 1e9;\n// # see https://github.com/aeternity/aeternity/blob/72e440b8731422e335f879a31ecbbee7ac23a1cf/apps/aecore/src/aec_governance.erl#L67\nexport const NAME_FEE_MULTIPLIER = 1e14; // 100000000000000\nexport const NAME_FEE_BID_INCREMENT = 0.05; // # the increment is in percentage\n// # see https://github.com/aeternity/aeternity/blob/72e440b8731422e335f879a31ecbbee7ac23a1cf/apps/aecore/src/aec_governance.erl#L272\nexport const NAME_BID_TIMEOUT_BLOCKS = 480; // # ~1 day\n// # this is the max length for a domain that requires a base fee to be paid\nexport const NAME_MAX_LENGTH_FEE = 31;\n// # https://github.com/aeternity/aeternity/blob/72e440b8731422e335f879a31ecbbee7ac23a1cf/apps/aecore/src/aec_governance.erl#L290\n// # https://github.com/aeternity/protocol/blob/master/AENS.md#protocol-fees-and-protection-times\n// # bid ranges:\nexport const NAME_BID_RANGES = mapObject({\n  31: 3,\n  30: 5,\n  29: 8,\n  28: 13,\n  27: 21,\n  26: 34,\n  25: 55,\n  24: 89,\n  23: 144,\n  22: 233,\n  21: 377,\n  20: 610,\n  19: 987,\n  18: 1597,\n  17: 2584,\n  16: 4181,\n  15: 6765,\n  14: 10946,\n  13: 17711,\n  12: 28657,\n  11: 46368,\n  10: 75025,\n  9: 121393,\n  8: 196418,\n  7: 317811,\n  6: 514229,\n  5: 832040,\n  4: 1346269,\n  3: 2178309,\n  2: 3524578,\n  1: 5702887,\n}, ([key, value]) => [key, new BigNumber(value).times(NAME_FEE_MULTIPLIER)]);\n\nexport enum ConsensusProtocolVersion {\n  Iris = 5,\n  Ceres = 6,\n}\n\n/**\n * @category transaction builder\n * @see {@link https://github.com/aeternity/protocol/blob/0f6dee3d9d1e8e2469816798f5c7587a6c918f94/contracts/contract_vms.md#virtual-machines-on-the-%C3%A6ternity-blockchain}\n */\nexport enum VmVersion {\n  NoVm = 0,\n  Sophia = 1,\n  SophiaImprovementsMinerva = 3,\n  SophiaImprovementsFortuna = 4,\n  Fate = 5,\n  SophiaImprovementsLima = 6,\n  Fate2 = 7,\n  Fate3 = 8,\n}\n\n/**\n * @category transaction builder\n * @see {@link https://github.com/aeternity/protocol/blob/0f6dee3d9d1e8e2469816798f5c7587a6c918f94/contracts/contract_vms.md#virtual-machines-on-the-%C3%A6ternity-blockchain}\n */\nexport enum AbiVersion {\n  NoAbi = 0,\n  Sophia = 1,\n  Fate = 3,\n}\n\n/**\n * Enum with tag types\n * @category transaction builder\n * @see {@link https://github.com/aeternity/protocol/blob/0f6dee3d9d1e8e2469816798f5c7587a6c918f94/serializations.md#binary-serialization}\n * @see {@link https://github.com/aeternity/aeserialization/blob/eb68fe331bd476910394966b7f5ede7a74d37e35/src/aeser_chain_objects.erl#L39-L97}\n */\n// TODO: implement serialisation for commented-out tags\nexport enum Tag {\n  Account = 10,\n  SignedTx = 11,\n  SpendTx = 12,\n  Oracle = 20,\n  // OracleQuery = 21,\n  OracleRegisterTx = 22,\n  OracleQueryTx = 23,\n  OracleResponseTx = 24,\n  OracleExtendTx = 25,\n  Name = 30,\n  // NameCommitment = 31,\n  NameClaimTx = 32,\n  NamePreclaimTx = 33,\n  NameUpdateTx = 34,\n  NameRevokeTx = 35,\n  NameTransferTx = 36,\n  // NameAuction = 37,\n  Contract = 40,\n  ContractCall = 41,\n  ContractCreateTx = 42,\n  ContractCallTx = 43,\n  ChannelCreateTx = 50,\n  // ChannelSetDelegatesTx = 501,\n  ChannelDepositTx = 51,\n  ChannelWithdrawTx = 52,\n  ChannelForceProgressTx = 521,\n  ChannelCloseMutualTx = 53,\n  ChannelCloseSoloTx = 54,\n  ChannelSlashTx = 55,\n  ChannelSettleTx = 56,\n  ChannelOffChainTx = 57,\n  ChannelOffChainUpdateTransfer = 570,\n  ChannelOffChainUpdateDeposit = 571,\n  ChannelOffChainUpdateWithdraw = 572,\n  ChannelOffChainUpdateCreateContract = 573,\n  ChannelOffChainUpdateCallContract = 574,\n  // ChannelOffChainUpdateMeta = 576,\n  ChannelClientReconnectTx = 575,\n  Channel = 58,\n  ChannelSnapshotSoloTx = 59,\n  TreesPoi = 60,\n  // TreesDb = 61,\n  StateTrees = 62,\n  Mtree = 63,\n  MtreeValue = 64,\n  ContractsMtree = 621,\n  CallsMtree = 622,\n  ChannelsMtree = 623,\n  NameserviceMtree = 624,\n  OraclesMtree = 625,\n  AccountsMtree = 626,\n  // CompilerSophia = 70,\n  GaAttachTx = 80,\n  GaMetaTx = 81,\n  PayingForTx = 82,\n  GaMetaTxAuthData = 810,\n  // KeyBlock = 100,\n  // MicroBlock = 101,\n  // LightMicroBlock = 102,\n  // Pof = 200,\n}\n","import { ConsensusProtocolVersion, VmVersion, AbiVersion } from '../constants';\nimport Node from '../../../Node';\n\n/*\n * First abi/vm by default\n * @see {@link https://github.com/aeternity/protocol/blob/71cf111/contracts/contract_vms.md#virtual-machines-on-the-æternity-blockchain}\n */\nexport const ProtocolToVmAbi = {\n  [ConsensusProtocolVersion.Iris]: {\n    'contract-create': {\n      vmVersion: [VmVersion.Fate2], abiVersion: [AbiVersion.Fate],\n    },\n    'contract-call': {\n      vmVersion: [], abiVersion: [AbiVersion.Fate, AbiVersion.Sophia],\n    },\n    'oracle-call': {\n      vmVersion: [], abiVersion: [AbiVersion.NoAbi, AbiVersion.Fate],\n    },\n  },\n  [ConsensusProtocolVersion.Ceres]: {\n    'contract-create': {\n      vmVersion: [VmVersion.Fate3], abiVersion: [AbiVersion.Fate],\n    },\n    'contract-call': {\n      vmVersion: [], abiVersion: [AbiVersion.Fate],\n    },\n    'oracle-call': {\n      vmVersion: [], abiVersion: [AbiVersion.NoAbi, AbiVersion.Fate],\n    },\n  },\n} as const;\n\nexport interface CtVersion {\n  vmVersion: VmVersion;\n  abiVersion: AbiVersion;\n}\n\nexport function getProtocolDetails(\n  protocolVersion: ConsensusProtocolVersion,\n  type: 'contract-create' | 'contract-call' | 'oracle-call',\n): CtVersion {\n  const protocol = ProtocolToVmAbi[protocolVersion][type];\n  return {\n    vmVersion: protocol.vmVersion[0] ?? VmVersion.Fate2,\n    abiVersion: protocol.abiVersion[0],\n  };\n}\n\nexport default {\n  serialize(\n    value: CtVersion | undefined,\n    params: {},\n    { consensusProtocolVersion = ConsensusProtocolVersion.Iris }:\n    { consensusProtocolVersion?: ConsensusProtocolVersion },\n  ): Buffer {\n    value ??= getProtocolDetails(consensusProtocolVersion, 'contract-create');\n\n    return Buffer.from([value.vmVersion, 0, value.abiVersion]);\n  },\n\n  async prepare(\n    value: CtVersion | undefined,\n    params: {},\n    // TODO: { consensusProtocolVersion: ConsensusProtocolVersion } | { onNode: Node } | {}\n    options: { consensusProtocolVersion?: ConsensusProtocolVersion; onNode?: Node },\n  ): Promise<CtVersion | undefined> {\n    if (value != null) return value;\n    if (options.consensusProtocolVersion != null) return undefined;\n    if (Object.keys(ConsensusProtocolVersion).length === 2) return undefined;\n    if (options.onNode != null) {\n      return getProtocolDetails(\n        (await options.onNode.getNodeInfo()).consensusProtocolVersion,\n        'contract-create',\n      );\n    }\n    return undefined;\n  },\n\n  deserialize(buffer: Buffer): CtVersion {\n    const [vm, , abi] = buffer;\n    return { vmVersion: +vm, abiVersion: +abi };\n  },\n};\n","import {\n  decode, encode, Encoded, Encoding,\n} from '../../../utils/encoder';\nimport { Tag } from '../constants';\nimport { ArgumentError } from '../../../utils/errors';\nimport type { unpackTx as unpackTxType, buildTx as buildTxType } from '../index';\n\nexport default function genEntryField<T extends Tag = Tag>(tag?: T): {\n  serialize: (\n    // TODO: replace with `TxParams & { tag: T }`,\n    //  but fix TS2502 value is referenced directly or indirectly in its own type annotation\n    value: any,\n    options: { buildTx: typeof buildTxType },\n  ) => Buffer;\n  deserialize: (\n    value: Buffer, options: { unpackTx: typeof unpackTxType },\n    // TODO: replace with `TxUnpacked & { tag: T }`,\n    //  TS2577 Return type annotation circularly references itself\n  ) => any;\n} {\n  return {\n    serialize(txParams, { buildTx }) {\n      if (ArrayBuffer.isView(txParams)) return Buffer.from(txParams as any);\n      if (typeof txParams === 'string' && txParams.startsWith('tx_')) {\n        return decode(txParams as Encoded.Transaction);\n      }\n      return decode(buildTx({ ...txParams, ...tag != null && { tag } }));\n    },\n\n    deserialize(buf, { unpackTx }) {\n      const tx = unpackTx(encode(buf, Encoding.Transaction));\n      if (tag != null && tx.tag !== tag) throw new ArgumentError('Tag', Tag[tag], Tag[tx.tag]);\n      return tx;\n    },\n  };\n}\n","export default function genArrayField<Input, Output, Binary>(\n  itemHandler: {\n    serialize: (value: Input, params: unknown) => Binary;\n    deserialize: (value: Binary, params: unknown) => Output;\n  },\n): {\n    serialize: (value: readonly Input[], params: unknown) => Binary[];\n    deserialize: (value: Binary[], params: unknown) => Output[];\n  } {\n  return {\n    serialize(items, params) {\n      return items.map((item) => itemHandler.serialize(item, params));\n    },\n\n    deserialize(buffers, params) {\n      return buffers.map((buffer) => itemHandler.deserialize(buffer, params));\n    },\n  };\n}\n","import { Tag } from '../constants';\nimport {\n  encode, Encoding, Encoded, decode,\n} from '../../../utils/encoder';\nimport type { unpackTx as unpackTxType, buildTx as buildTxType } from '../index';\n\nexport default function genMapField<E extends Encoding, T extends Tag>(encoding: E, tag: T): {\n  serialize: (\n    // TODO: replace with `TxParams & { tag: T }`,\n    //  but fix TS2502 value is referenced directly or indirectly in its own type annotation\n    value: Record<Encoded.Generic<E>, any>, options: { buildTx: typeof buildTxType }\n  ) => Buffer;\n  deserialize: (\n    value: Buffer, options: { unpackTx: typeof unpackTxType },\n    // TODO: replace with `TxUnpacked & { tag: T }`,\n    //  TS2577 Return type annotation circularly references itself\n  ) => Record<Encoded.Generic<E>, any>;\n  recursiveType: true;\n} {\n  return {\n    serialize(object, { buildTx }) {\n      return decode(buildTx({\n        tag: Tag.Mtree,\n        values: Object.entries(object).map(([key, value]) => ({\n          tag: Tag.MtreeValue,\n          key: decode(key as Encoded.Generic<E>),\n          value: decode(buildTx({ ...value as any, tag })),\n        })),\n      }));\n    },\n\n    deserialize(buffer, { unpackTx }) {\n      const { values } = unpackTx(encode(buffer, Encoding.Transaction), Tag.Mtree);\n      return Object.fromEntries(values\n        // TODO: remove after resolving https://github.com/aeternity/aeternity/issues/4066\n        .filter(({ key }) => encoding !== Encoding.ContractAddress || key.length === 32)\n        .map(({ key, value }) => [\n          encode(key, encoding),\n          unpackTx(encode(value, Encoding.Transaction), tag),\n        ])) as Record<Encoded.Generic<E>, any>;\n    },\n\n    recursiveType: true,\n  };\n}\n","import BigNumber from 'bignumber.js';\nimport { NoSerializerFoundError, TypeError } from './errors';\n\n/**\n * Convert string, number, or BigNumber to byte array\n * @param val - value to convert\n * @param big - enables force conversion to BigNumber\n * @returns Buffer\n */\n// eslint-disable-next-line import/prefer-default-export\nexport function toBytes(val?: null | string | number | BigNumber, big = false): Buffer {\n  // Encode a value to bytes.\n  // If the value is an int it will be encoded as bytes big endian\n  // Raises ValueError if the input is not an int or string\n\n  if (val == null) return Buffer.from([]);\n  if (Number.isInteger(val) || BigNumber.isBigNumber(val) || big) {\n    if (!BigNumber.isBigNumber(val)) val = new BigNumber(val);\n    if (!val.isInteger()) throw new TypeError(`Unexpected not integer value: ${val.toFixed()}`);\n    let hexString = val.toString(16);\n    if (hexString.length % 2 === 1) hexString = `0${hexString}`;\n    return Buffer.from(hexString, 'hex');\n  }\n  if (typeof val === 'string') {\n    return Buffer.from(val);\n  }\n  throw new NoSerializerFoundError();\n}\n","import BigNumber from 'bignumber.js';\nimport { genSalt, hash } from '../../utils/crypto';\nimport {\n  decode, encode, Encoded, Encoding,\n} from '../../utils/encoder';\nimport { toBytes } from '../../utils/bytes';\nimport { concatBuffers } from '../../utils/other';\nimport {\n  AensName,\n  NAME_BID_RANGES,\n  NAME_BID_TIMEOUT_BLOCKS,\n  NAME_FEE_BID_INCREMENT,\n  NAME_MAX_LENGTH_FEE,\n} from './constants';\nimport { ceil } from '../../utils/bignumber';\nimport { ArgumentError, IllegalBidFeeError } from '../../utils/errors';\n\n/**\n * JavaScript-based Transaction builder helper function's\n */\n\n/**\n * Build a contract public key\n * @category contract\n * @param ownerId - The public key of the owner account\n * @param nonce - the nonce of the transaction\n * @returns Contract public key\n */\nexport function buildContractId(\n  ownerId: Encoded.AccountAddress,\n  nonce: number | BigNumber,\n): Encoded.ContractAddress {\n  const ownerIdAndNonce = Buffer.from([...decode(ownerId), ...toBytes(nonce)]);\n  const b2bHash = hash(ownerIdAndNonce);\n  return encode(b2bHash, Encoding.ContractAddress);\n}\n\n/**\n * Build a oracle query id\n * @category oracle\n * @param senderId - The public key of the sender account\n * @param nonce - the nonce of the transaction\n * @param oracleId - The oracle public key\n * @returns Contract public key\n */\nexport function oracleQueryId(\n  senderId: Encoded.AccountAddress,\n  nonce: number | BigNumber | string,\n  oracleId: Encoded.OracleAddress,\n): Encoded.OracleQueryId {\n  function _int32(val: number | string | BigNumber): Buffer {\n    const nonceBE = toBytes(val, true);\n    return concatBuffers([Buffer.alloc(32 - nonceBE.length), nonceBE]);\n  }\n\n  const b2bHash = hash(\n    Buffer.from([...decode(senderId), ..._int32(nonce), ...decode(oracleId)]),\n  );\n  return encode(b2bHash, Encoding.OracleQueryId);\n}\n\nconst AENS_SUFFIX = '.chain';\n\nexport function nameToPunycode(maybeName: string): AensName {\n  const [name, suffix, ...other] = maybeName.split('.');\n  if (other.length !== 0) throw new ArgumentError('aens name', 'including only one dot', maybeName);\n  if (suffix !== AENS_SUFFIX.slice(1)) {\n    throw new ArgumentError('aens name', `suffixed with ${AENS_SUFFIX}`, maybeName);\n  }\n  if (/\\p{Emoji_Presentation}/u.test(name)) {\n    throw new ArgumentError('aens name', 'not containing emoji', maybeName);\n  }\n  let punycode;\n  try {\n    const u = new URL(`http://${name}.${suffix}`);\n    if (u.username + u.password + u.port + u.search + u.hash !== '' || u.pathname !== '/') {\n      throw new ArgumentError('aens name', 'valid', maybeName);\n    }\n    punycode = u.host;\n  } catch (error) {\n    if (error instanceof TypeError && error.message.includes('Invalid URL')) {\n      throw new ArgumentError('aens name', 'valid', maybeName);\n    }\n    throw error;\n  }\n  if (!/^[a-z0-9.-]+$/i.test(punycode)) {\n    throw new ArgumentError('aens name', 'without illegal chars', maybeName);\n  }\n  if (punycode.length > 63 + AENS_SUFFIX.length) {\n    throw new ArgumentError('aens name', 'not too long', maybeName);\n  }\n  return punycode as AensName;\n}\n\n/**\n * Encode an AENS name\n * @category AENS\n * @param name - Name to encode\n * @returns `nm_` prefixed encoded AENS name\n */\nexport function produceNameId(name: AensName): Encoded.Name {\n  return encode(hash(nameToPunycode(name)), Encoding.Name);\n}\n\n/**\n * Generate the commitment hash by hashing the salt and\n * name, base 58 encoding the result and prepending 'cm_'\n * @category transaction builder\n * @param name - Name to be registered\n * @param salt - Random number\n * @returns Commitment hash\n */\nexport function commitmentHash(\n  name: AensName,\n  salt: number = genSalt(),\n): Encoded.Commitment {\n  return encode(\n    hash(concatBuffers([\n      Buffer.from(nameToPunycode(name)),\n      Buffer.from(salt.toString(16).padStart(64, '0'), 'hex'),\n    ])),\n    Encoding.Commitment,\n  );\n}\n\n/**\n * Utility function to convert bytes to int\n * @category transaction builder\n * @param buf - Value\n * @returns Buffer Buffer from number(BigEndian)\n */\nexport function readInt(buf: Buffer = Buffer.from([])): string {\n  return new BigNumber(Buffer.from(buf).toString('hex'), 16).toString(10);\n}\n\n/**\n * Ensure that name is valid AENS name, would throw an exception otherwise\n * @category AENS\n * @param name - AENS name\n */\nexport function ensureName(maybeName: string): asserts maybeName is AensName {\n  nameToPunycode(maybeName);\n}\n\n/**\n * Is AENS name valid\n * @category AENS\n * @param name - AENS name\n */\n// TODO: consider renaming to isName\nexport function isNameValid(maybeName: string): maybeName is AensName {\n  try {\n    ensureName(maybeName);\n    return true;\n  } catch (error) {\n    return false;\n  }\n}\n\nconst encodingToPointerKey = [\n  [Encoding.AccountAddress, 'account_pubkey'],\n  [Encoding.OracleAddress, 'oracle_pubkey'],\n  [Encoding.ContractAddress, 'contract_pubkey'],\n  [Encoding.Channel, 'channel'],\n] as const;\n\n/**\n * @category AENS\n * @param identifier - account/oracle/contract address, or channel\n * @returns default AENS pointer key\n */\nexport function getDefaultPointerKey(\n  identifier: Encoded.Generic<typeof encodingToPointerKey[number][0]>,\n): typeof encodingToPointerKey[number][1] {\n  decode(identifier);\n  const encoding = identifier.substring(0, 2);\n  const result = encodingToPointerKey.find(([e]) => e === encoding)?.[1];\n  if (result != null) return result;\n  throw new ArgumentError(\n    'identifier',\n    `prefixed with one of ${encodingToPointerKey.map(([e]) => `${e}_`).join(', ')}`,\n    identifier,\n  );\n}\n\n/**\n * Get the minimum AENS name fee\n * @category AENS\n * @param name - the AENS name to get the fee for\n * @returns the minimum fee for the AENS name auction\n */\nexport function getMinimumNameFee(name: AensName): BigNumber {\n  const nameLength = nameToPunycode(name).length - AENS_SUFFIX.length;\n  return NAME_BID_RANGES[Math.min(nameLength, NAME_MAX_LENGTH_FEE)];\n}\n\n/**\n * Compute bid fee for AENS auction\n * @category AENS\n * @param name - the AENS name to get the fee for\n * @param options - Options\n * @param options.startFee - Auction start fee\n * @param options.increment - Bid multiplier(In percentage, must be between 0 and 1)\n * @returns Bid fee\n */\nexport function computeBidFee(\n  name: AensName,\n  { startFee, increment = NAME_FEE_BID_INCREMENT }:\n  { startFee?: number | string | BigNumber; increment?: number } = {},\n): BigNumber {\n  if (!(Number(increment) === increment && increment % 1 !== 0)) throw new IllegalBidFeeError(`Increment must be float. Current increment ${increment}`);\n  if (increment < NAME_FEE_BID_INCREMENT) throw new IllegalBidFeeError(`minimum increment percentage is ${NAME_FEE_BID_INCREMENT}`);\n  // FIXME: increment should be used somehow here\n  return ceil(\n    new BigNumber(startFee ?? getMinimumNameFee(name))\n      .times(new BigNumber(NAME_FEE_BID_INCREMENT).plus(1)),\n  );\n}\n\n/**\n * Compute auction end height\n * @category AENS\n * @param name - Name to compute auction end for\n * @param claimHeight - Auction starting height\n * @see {@link https://github.com/aeternity/aeternity/blob/72e440b8731422e335f879a31ecbbee7ac23a1cf/apps/aecore/src/aec_governance.erl#L273}\n * @returns Auction end height\n */\nexport function computeAuctionEndBlock(name: AensName, claimHeight: number): number {\n  const length = nameToPunycode(name).length - AENS_SUFFIX.length;\n  const h = (length <= 4 ? 62 * NAME_BID_TIMEOUT_BLOCKS : null)\n    ?? (length <= 8 ? 31 * NAME_BID_TIMEOUT_BLOCKS : null)\n    ?? (length <= 12 ? NAME_BID_TIMEOUT_BLOCKS : null)\n    ?? 0;\n  return h + claimHeight;\n}\n\n/**\n * Is name accept going to auction\n * @category AENS\n */\nexport function isAuctionName(name: AensName): boolean {\n  return nameToPunycode(name).length < 13 + AENS_SUFFIX.length;\n}\n","import { readInt } from '../helpers';\nimport { Int } from '../constants';\nimport { ArgumentError } from '../../../utils/errors';\nimport { toBytes } from '../../../utils/bytes';\n\nexport default {\n  serialize(value: Int): Buffer {\n    if (Number(value) < 0) throw new ArgumentError('value', 'greater or equal to 0', value);\n    return toBytes(value, true);\n  },\n\n  deserialize(value: Buffer): string {\n    return readInt(value);\n  },\n};\n","import uInt from './u-int';\n\nexport default {\n  serialize(value: number): Buffer {\n    return uInt.serialize(value);\n  },\n\n  deserialize(value: Buffer): number {\n    return +uInt.deserialize(value);\n  },\n};\n","import { ArgumentError } from '../../../utils/errors';\nimport shortUInt from './short-u-int';\n\nexport default function genShortUIntConstField<\n  Value extends number, Optional extends boolean = false,\n>(constValue: Value, optional?: Optional): {\n  serialize: Optional extends true ? (value?: Value) => Buffer : (value: Value) => Buffer;\n  deserialize: (value: Buffer) => Value;\n  constValue: Value;\n  constValueOptional: boolean;\n} {\n  return {\n    serialize(value?: Value) {\n      if ((optional !== true || value != null) && value !== constValue) {\n        throw new ArgumentError('ShortUIntConst', constValue, value);\n      }\n      return shortUInt.serialize(constValue);\n    },\n\n    deserialize(buf) {\n      const value = shortUInt.deserialize(buf);\n      if (value !== constValue) throw new ArgumentError('ShortUIntConst', constValue, value);\n      return constValue;\n    },\n\n    constValue,\n\n    constValueOptional: optional === true,\n  };\n}\n","import { ArgumentError, PrefixNotFoundError, TagNotFoundError } from '../../../utils/errors';\nimport { toBytes } from '../../../utils/bytes';\nimport {\n  decode, encode, Encoded, Encoding,\n} from '../../../utils/encoder';\nimport { isItemOfArray } from '../../../utils/other';\n\n/**\n * Map of prefix to ID tag constant\n * @see {@link https://github.com/aeternity/protocol/blob/master/serializations.md#the-id-type}\n * @see {@link https://github.com/aeternity/aeserialization/blob/eb68fe331bd476910394966b7f5ede7a74d37e35/src/aeser_id.erl#L97-L102}\n * @see {@link https://github.com/aeternity/aeserialization/blob/eb68fe331bd476910394966b7f5ede7a74d37e35/src/aeser_api_encoder.erl#L163-L168}\n */\nexport const idTagToEncoding = [\n  Encoding.AccountAddress,\n  Encoding.Name,\n  Encoding.Commitment,\n  Encoding.OracleAddress,\n  Encoding.ContractAddress,\n  Encoding.Channel,\n] as const;\n\nexport type AddressEncodings = typeof idTagToEncoding[number];\n\nexport default function genAddressField<Encoding extends AddressEncodings>(\n  ...encodings: Encoding[]\n): {\n    serialize: (value: Encoded.Generic<Encoding>) => Buffer;\n    deserialize: (value: Buffer) => Encoded.Generic<Encoding>;\n  } {\n  return {\n    /**\n     * Utility function to create and _id type\n     * @param hashId - Encoded hash\n     * @returns Buffer Buffer with ID tag and decoded HASh\n     */\n    serialize(hashId) {\n      const enc = hashId.slice(0, 2);\n      if (!isItemOfArray(enc, idTagToEncoding)) throw new TagNotFoundError(enc);\n      if (!isItemOfArray(enc, encodings)) {\n        throw new ArgumentError('Address encoding', encodings.join(', '), enc);\n      }\n      const idTag = idTagToEncoding.indexOf(enc) + 1;\n      return Buffer.from([...toBytes(idTag), ...decode(hashId)]);\n    },\n\n    /**\n     * Utility function to read and _id type\n     * @param buf - Data\n     * @returns Encoded hash string with prefix\n     */\n    deserialize(buf) {\n      const idTag = Buffer.from(buf).readUIntBE(0, 1);\n      const enc = idTagToEncoding[idTag - 1];\n      if (enc == null) throw new PrefixNotFoundError(idTag);\n      if (!isItemOfArray(enc, encodings)) {\n        throw new ArgumentError('Address encoding', encodings.join(', '), enc);\n      }\n      return encode(buf.subarray(1), enc) as Encoded.Generic<Encoding>;\n    },\n  };\n}\n","import {\n  decode, encode, Encoded, Encoding,\n} from '../../../utils/encoder';\nimport { ArgumentError } from '../../../utils/errors';\n\nexport default function genEncodedField<E extends Encoding, Optional extends boolean = false>(\n  encoding: E,\n  optional?: Optional,\n): {\n    serialize: Optional extends true\n      ? (value?: Encoded.Generic<E>) => Buffer : (value: Encoded.Generic<E>) => Buffer;\n    deserialize: (value: Buffer) => Encoded.Generic<E>;\n  } {\n  return {\n    serialize(encodedData?: Encoded.Generic<E>) {\n      if (encodedData == null) {\n        if (optional === true) return Buffer.from([]);\n        throw new ArgumentError('Encoded data', 'provided', encodedData);\n      }\n      return decode(encodedData);\n    },\n\n    deserialize(buffer) {\n      return encode(buffer, encoding);\n    },\n  };\n}\n","export default {\n  serialize(buffer: Uint8Array): Buffer {\n    return Buffer.from(buffer);\n  },\n\n  deserialize(buffer: Buffer): Buffer {\n    return buffer;\n  },\n};\n","import uInt from './u-int';\nimport { Int } from '../constants';\nimport { AE_AMOUNT_FORMATS, formatAmount } from '../../../utils/amount-formatter';\n\nexport default {\n  ...uInt,\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  serializeAettos(value: string | undefined, params: {}): string {\n    return value ?? '0';\n  },\n\n  serialize(\n    value: Int | undefined,\n    params: {},\n    { denomination = AE_AMOUNT_FORMATS.AETTOS }: { denomination?: AE_AMOUNT_FORMATS },\n  ): Buffer {\n    return uInt.serialize(\n      this.serializeAettos(\n        value != null ? formatAmount(value, { denomination }) : value,\n        params,\n      ),\n    );\n  },\n};\n","import BigNumber from 'bignumber.js';\nimport { IllegalArgumentError } from '../../../utils/errors';\nimport { MIN_GAS_PRICE, Tag } from '../constants';\nimport coinAmount from './coin-amount';\nimport { isKeyOfObject } from '../../../utils/other';\nimport { decode, Encoded } from '../../../utils/encoder';\nimport type { unpackTx as unpackTxType, buildTx as buildTxType } from '../index';\n\nconst BASE_GAS = 15000;\nconst GAS_PER_BYTE = 20;\nconst KEY_BLOCK_INTERVAL = 3;\n\n/**\n * Calculate the Base fee gas\n * @see {@link https://github.com/aeternity/protocol/blob/master/consensus/README.md#gas}\n * @param txType - The transaction type\n * @returns The base fee\n * @example\n * ```js\n * TX_FEE_BASE('channelForceProgress') => new BigNumber(30 * 15000)\n * ```\n */\nconst TX_FEE_BASE_GAS = (txType: Tag): BigNumber => {\n  const feeFactors = {\n    [Tag.ChannelForceProgressTx]: 30,\n    [Tag.ChannelOffChainTx]: 0,\n    [Tag.ChannelOffChainUpdateCallContract]: 0,\n    [Tag.ChannelOffChainUpdateCreateContract]: 0,\n    [Tag.ChannelOffChainUpdateDeposit]: 0,\n    [Tag.ChannelOffChainUpdateWithdraw]: 0,\n    [Tag.ChannelOffChainUpdateTransfer]: 0,\n    [Tag.ContractCreateTx]: 5,\n    [Tag.ContractCallTx]: 12,\n    [Tag.GaAttachTx]: 5,\n    [Tag.GaMetaTx]: 5,\n    [Tag.PayingForTx]: 1 / 5,\n  } as const;\n  const factor = feeFactors[txType as keyof typeof feeFactors] ?? 1;\n  return new BigNumber(factor * BASE_GAS);\n};\n\n/**\n * Calculate fee for Other types of transactions\n * @see {@link https://github.com/aeternity/protocol/blob/master/consensus/README.md#gas}\n * @param txType - The transaction type\n * @param txSize - The transaction size\n * @returns parameters - The transaction parameters\n * @returns parameters.relativeTtl - The relative ttl\n * @returns parameters.innerTxSize - The size of the inner transaction\n * @returns The Other fee\n * @example\n * ```js\n * TX_FEE_OTHER_GAS('oracleResponse',10, { relativeTtl: 10, innerTxSize: 10 })\n *  => new BigNumber(10).times(20).plus(Math.ceil(32000 * 10 / Math.floor(60 * 24 * 365 / 2)))\n * ```\n */\nconst TX_FEE_OTHER_GAS = (\n  txType: Tag,\n  txSize: number,\n  { relativeTtl, innerTxSize }: { relativeTtl: number; innerTxSize: number },\n): BigNumber => {\n  switch (txType) {\n    case Tag.OracleRegisterTx:\n    case Tag.OracleExtendTx:\n    case Tag.OracleQueryTx:\n    case Tag.OracleResponseTx:\n      return new BigNumber(txSize)\n        .times(GAS_PER_BYTE)\n        .plus(\n          Math.ceil((32000 * relativeTtl) / Math.floor((60 * 24 * 365) / KEY_BLOCK_INTERVAL)),\n        );\n    case Tag.GaMetaTx:\n    case Tag.PayingForTx:\n      return new BigNumber(txSize).minus(innerTxSize).times(GAS_PER_BYTE);\n    default:\n      return new BigNumber(txSize).times(GAS_PER_BYTE);\n  }\n};\n\nfunction getOracleRelativeTtl(params: any): number {\n  const ttlKeys = {\n    [Tag.OracleRegisterTx]: 'oracleTtlValue',\n    [Tag.OracleExtendTx]: 'oracleTtlValue',\n    [Tag.OracleQueryTx]: 'queryTtlValue',\n    [Tag.OracleResponseTx]: 'responseTtlValue',\n  } as const;\n\n  const { tag } = params;\n  if (!isKeyOfObject(tag, ttlKeys)) return 1;\n  return params[ttlKeys[tag]];\n}\n\n/**\n * Calculate fee based on tx type and params\n */\nexport function buildFee(\n  builtTx: Encoded.Transaction,\n  unpackTx: typeof unpackTxType,\n  buildTx: typeof buildTxType,\n): BigNumber {\n  const { length } = decode(builtTx);\n  const txObject = unpackTx(builtTx);\n\n  let innerTxSize = 0;\n  if (txObject.tag === Tag.GaMetaTx || txObject.tag === Tag.PayingForTx) {\n    innerTxSize = decode(buildTx(txObject.tx.encodedTx)).length;\n  }\n\n  return TX_FEE_BASE_GAS(txObject.tag)\n    .plus(TX_FEE_OTHER_GAS(txObject.tag, length, {\n      relativeTtl: getOracleRelativeTtl(txObject), innerTxSize,\n    }))\n    .times(MIN_GAS_PRICE);\n}\n\n/**\n * Calculate min fee\n * @category transaction builder\n * @param rebuildTx - Callback to get built transaction with specific fee\n */\nfunction calculateMinFee(\n  rebuildTx: (value: BigNumber) => Encoded.Transaction,\n  unpackTx: typeof unpackTxType,\n  buildTx: typeof buildTxType,\n): BigNumber {\n  let fee = new BigNumber(0);\n  let previousFee;\n  do {\n    previousFee = fee;\n    fee = buildFee(rebuildTx(fee), unpackTx, buildTx);\n  } while (!fee.eq(previousFee));\n  return fee;\n}\n\nexport default {\n  ...coinAmount,\n\n  serializeAettos(\n    _value: string | undefined,\n    {\n      rebuildTx, unpackTx, buildTx, _computingMinFee, _pickBiggerFee,\n    }: {\n      rebuildTx: (params: any) => Encoded.Transaction;\n      unpackTx: typeof unpackTxType;\n      buildTx: typeof buildTxType;\n      _computingMinFee?: BigNumber;\n      _pickBiggerFee?: boolean;\n    },\n  ): string {\n    if (_computingMinFee != null) return _computingMinFee.toFixed();\n    const minFee = calculateMinFee(\n      (fee) => rebuildTx({ _computingMinFee: fee }),\n      unpackTx,\n      buildTx,\n    );\n    const value = new BigNumber(_value ?? minFee);\n    if (minFee.gt(value)) {\n      if (_pickBiggerFee === true) return minFee.toFixed();\n      throw new IllegalArgumentError(`Fee ${value.toString()} must be bigger than ${minFee}`);\n    }\n    return value.toFixed();\n  },\n};\n","import shortUInt from './short-u-int';\nimport Node from '../../../Node';\nimport { ArgumentError } from '../../../utils/errors';\n\nexport default {\n  ...shortUInt,\n\n  serialize(value: number | undefined): Buffer {\n    return shortUInt.serialize(value ?? 0);\n  },\n\n  async prepare(\n    value: number | undefined,\n    params: {},\n    // TODO: { absoluteTtl: true } | { absoluteTtl: false, onNode: Node }\n    { onNode, absoluteTtl }: { onNode?: Node; absoluteTtl?: boolean },\n  ) {\n    if (absoluteTtl !== true && value !== 0 && value != null) {\n      if (onNode == null) throw new ArgumentError('onNode', 'provided', onNode);\n      value += (await onNode.getCurrentKeyBlock()).height;\n    }\n    return value;\n  },\n};\n","import { isAccountNotFoundError } from '../../../utils/other';\nimport shortUInt from './short-u-int';\nimport Node from '../../../Node';\nimport { ArgumentError } from '../../../utils/errors';\nimport { NextNonceStrategy } from '../../../apis/node';\n\nexport default function genNonceField<SenderKey extends string>(senderKey: SenderKey): {\n  serialize: (value: number) => Buffer;\n  // TODO: (value: number) => Promise<number> | (value: undefined, ...) => Promise<number>\n  prepare: (\n    value: number | undefined,\n    params: {},\n    // TODO: replace `string` with AddressEncodings\n    options: { [key in SenderKey]: string } & { strategy?: NextNonceStrategy; onNode?: Node },\n  ) => Promise<number>;\n  deserialize: (value: Buffer) => number;\n  senderKey: string;\n} {\n  return {\n    ...shortUInt,\n\n    async prepare(value, params, options) {\n      if (value != null) return value;\n      const { onNode, strategy } = options;\n      const senderId = options[senderKey];\n      const requirement = 'provided (or provide `nonce` instead)';\n      if (onNode == null) throw new ArgumentError('onNode', requirement, onNode);\n      if (senderId == null) throw new ArgumentError('senderId', requirement, senderId);\n      return (\n        await onNode.getAccountNextNonce(senderId.replace(/^ok_/, 'ak_'), { strategy })\n          .catch((error) => {\n            if (!isAccountNotFoundError(error)) throw error;\n            return { nextNonce: 1 };\n          })\n      ).nextNonce;\n    },\n\n    senderKey,\n  };\n}\n","import { NamePointer as NamePointerString } from '../../../apis/node';\nimport { toBytes } from '../../../utils/bytes';\nimport { Encoded } from '../../../utils/encoder';\nimport { IllegalArgumentError } from '../../../utils/errors';\nimport address, { AddressEncodings, idTagToEncoding } from './address';\n\nconst addressAny = address(...idTagToEncoding);\n\n// TODO: remove after fixing node types\ntype NamePointer = NamePointerString & {\n  id: Encoded.Generic<AddressEncodings>;\n};\n\nexport default {\n  /**\n   * Helper function to build pointers for name update TX\n   * @param pointers - Array of pointers\n   * `([ { key: 'account_pubkey', id: 'ak_32klj5j23k23j5423l434l2j3423'} ])`\n   * @returns Serialized pointers array\n   */\n  serialize(pointers: NamePointer[]): Buffer[][] {\n    if (pointers.length > 32) {\n      throw new IllegalArgumentError(`Expected 32 pointers or less, got ${pointers.length} instead`);\n    }\n\n    return pointers.map(\n      (pointer) => [toBytes(pointer.key), addressAny.serialize(pointer.id)],\n    );\n  },\n\n  /**\n   * Helper function to read pointers from name update TX\n   * @param pointers - Array of pointers\n   * @returns Deserialize pointer array\n   */\n  deserialize(pointers: Array<[key: Buffer, id: Buffer]>): NamePointer[] {\n    return pointers.map(\n      ([key, id]) => ({ key: key.toString(), id: addressAny.deserialize(id) }),\n    );\n  },\n};\n","export default {\n  serialize(value: string): Buffer {\n    return Buffer.from(value);\n  },\n\n  deserialize(value: Buffer): string {\n    return value.toString();\n  },\n};\n","import field from './field';\nimport { AensName } from '../constants';\n\nexport default {\n  /**\n   * @param value - AENS name\n   */\n  serialize(value: AensName): Buffer {\n    return field.serialize(value);\n  },\n\n  /**\n   * @param value - AENS name\n   */\n  deserialize(value: Buffer): AensName {\n    return field.deserialize(value) as AensName;\n  },\n};\n","import BigNumber from 'bignumber.js';\nimport { getMinimumNameFee } from '../helpers';\nimport { InsufficientNameFeeError } from '../../../utils/errors';\nimport coinAmount from './coin-amount';\nimport { AensName, Int } from '../constants';\n\nexport default {\n  ...coinAmount,\n\n  serializeAettos(\n    _value: string | undefined,\n    txFields: { name: AensName },\n  ): string {\n    const minNameFee = getMinimumNameFee(txFields.name);\n    const value = new BigNumber(_value ?? minNameFee);\n    if (minNameFee.gt(value)) throw new InsufficientNameFeeError(value, minNameFee);\n    return value.toFixed();\n  },\n\n  /**\n   * @param value - AENS name fee Buffer\n   * @param txFields - Transaction fields\n   * @param txFields.name - AENS Name in transaction\n   */\n  serialize(\n    value: Int | undefined,\n    txFields: { name: AensName } & Parameters<typeof coinAmount['serialize']>[1],\n    parameters: Parameters<typeof coinAmount['serialize']>[2],\n  ): Buffer {\n    return coinAmount.serialize.call(this, value, txFields, parameters);\n  },\n};\n","import { AensName } from '../constants';\nimport { produceNameId, isNameValid } from '../helpers';\nimport address from './address';\nimport { Encoded, Encoding } from '../../../utils/encoder';\n\nconst addressName = address(Encoding.Name);\n\nexport default {\n  ...addressName,\n\n  /**\n   * @param value - AENS name ID\n   */\n  serialize(value: AensName | Encoded.Name): Buffer {\n    return addressName.serialize(isNameValid(value) ? produceNameId(value) : value);\n  },\n};\n","export default {\n  serialize(value: boolean): Buffer {\n    return Buffer.from([value ? 1 : 0]);\n  },\n\n  deserialize(buffer: Buffer): boolean {\n    return buffer[0] === 1;\n  },\n};\n","import coinAmount from './coin-amount';\nimport { Int } from '../constants';\nimport { IllegalArgumentError } from '../../../utils/errors';\n\nexport default {\n  ...coinAmount,\n\n  /**\n   * @param value - Deposit value in string format. Should be equal to '0'.\n   * @param options - Options\n   * @param parameters - Parameters\n   * @returns Deposit value Buffer.\n   */\n  serialize(\n    value: Int | undefined,\n    options: Parameters<typeof coinAmount['serialize']>[1],\n    parameters: Parameters<typeof coinAmount['serialize']>[2],\n  ): Buffer {\n    value ??= 0;\n    if (+value !== 0) throw new IllegalArgumentError(`Contract deposit is not refundable, so it should be equal 0, got ${value.toString()} instead`);\n    return coinAmount.serialize(value, options, parameters);\n  },\n};\n","import { IllegalArgumentError } from '../../../utils/errors';\nimport { MIN_GAS_PRICE, Tag, MAX_AUTH_FUN_GAS } from '../constants';\nimport shortUInt from './short-u-int';\nimport { buildFee } from './fee';\nimport type { unpackTx as unpackTxType, buildTx as buildTxType } from '../index';\n\nfunction calculateGasLimitMax(\n  gasMax: number,\n  rebuildTx: (value: number) => any,\n  unpackTx: typeof unpackTxType,\n  buildTx: typeof buildTxType,\n): number {\n  return gasMax - +buildFee(rebuildTx(gasMax), unpackTx, buildTx).dividedBy(MIN_GAS_PRICE);\n}\n\nexport default {\n  ...shortUInt,\n\n  serialize(\n    _value: number | undefined,\n    {\n      tag, rebuildTx, unpackTx, buildTx, _computingGasLimit,\n    }: {\n      tag: Tag;\n      rebuildTx: (params: any) => any;\n      unpackTx: typeof unpackTxType;\n      buildTx: typeof buildTxType;\n      _computingGasLimit?: number;\n    },\n    { gasMax = 6e6 }: { gasMax?: number },\n  ): Buffer {\n    if (_computingGasLimit != null) return shortUInt.serialize(_computingGasLimit);\n\n    const gasLimitMax = tag === Tag.GaMetaTx ? MAX_AUTH_FUN_GAS : calculateGasLimitMax(\n      gasMax,\n      (gasLimit) => rebuildTx({ _computingGasLimit: gasLimit, _pickBiggerFee: true }),\n      unpackTx,\n      buildTx,\n    );\n    const value = _value ?? gasLimitMax;\n    if (value > gasLimitMax) {\n      throw new IllegalArgumentError(`Gas limit ${value} must be less or equal to ${gasLimitMax}`);\n    }\n    return shortUInt.serialize(value);\n  },\n};\n","import coinAmount from './coin-amount';\nimport { IllegalArgumentError } from '../../../utils/errors';\nimport { MIN_GAS_PRICE } from '../constants';\n\nexport default {\n  ...coinAmount,\n\n  serializeAettos(value: string | undefined = MIN_GAS_PRICE.toString()): string {\n    if (+value < MIN_GAS_PRICE) {\n      throw new IllegalArgumentError(`Gas price ${value.toString()} must be bigger than ${MIN_GAS_PRICE}`);\n    }\n    return value;\n  },\n};\n","import { Tag, ConsensusProtocolVersion, AbiVersion } from '../constants';\nimport { getProtocolDetails } from './ct-version';\nimport Node from '../../../Node';\n\nexport default {\n  _getProtocolDetails(c: ConsensusProtocolVersion, tag: Tag): AbiVersion {\n    const kind = Tag.ContractCallTx === tag || Tag.GaMetaTx === tag\n      ? 'contract-call' : 'oracle-call';\n    return getProtocolDetails(c, kind).abiVersion;\n  },\n\n  serialize(\n    value: AbiVersion | undefined,\n    { tag }: { tag: Tag },\n    { consensusProtocolVersion = ConsensusProtocolVersion.Iris }:\n    { consensusProtocolVersion?: ConsensusProtocolVersion },\n  ): Buffer {\n    const result = value ?? this._getProtocolDetails(consensusProtocolVersion, tag);\n\n    return Buffer.from([result]);\n  },\n\n  async prepare(\n    value: AbiVersion | undefined,\n    { tag }: { tag: Tag },\n    // TODO: { consensusProtocolVersion: ConsensusProtocolVersion } | { onNode: Node } | {}\n    options: { consensusProtocolVersion?: ConsensusProtocolVersion; onNode?: Node },\n  ): Promise<AbiVersion | undefined> {\n    if (value != null) return value;\n    if (options.consensusProtocolVersion != null) return undefined;\n    if (Object.keys(ConsensusProtocolVersion).length === 2) return undefined;\n    if (options.onNode != null) {\n      return this._getProtocolDetails(\n        (await options.onNode.getNodeInfo()).consensusProtocolVersion,\n        tag,\n      );\n    }\n    return undefined;\n  },\n\n  deserialize(buffer: Buffer): AbiVersion {\n    return buffer[0];\n  },\n};\n","import { ArgumentError } from '../../../utils/errors';\nimport { isItemOfArray } from '../../../utils/other';\n\nexport default function genEnumerationField<\n  Enum extends { [key: string]: number | string },\n>(enm: Enum): {\n  serialize: (value: Enum[keyof Enum]) => Buffer;\n  deserialize: (value: Buffer) => Enum[keyof Enum];\n} {\n  const values = Object.values(enm).filter((v) => typeof v === 'number');\n  return {\n    serialize(value) {\n      if (typeof value !== 'number') throw new ArgumentError('value', 'to be a number', value);\n      if (value > 0xff) throw new ArgumentError('value', 'to be less than 256', value);\n      if (!isItemOfArray(value, values)) {\n        throw new ArgumentError('value', 'to be a value of Enum', value);\n      }\n      return Buffer.from([value]);\n    },\n\n    deserialize(buffer) {\n      if (buffer.length !== 1) {\n        throw new ArgumentError('buffer', 'to have single element', buffer.length);\n      }\n      const value = buffer[0];\n      if (!isItemOfArray(value, values)) {\n        throw new ArgumentError('value', 'to be a value of Enum', value);\n      }\n      return value as Enum[keyof Enum];\n    },\n  };\n}\n","import { toBytes } from '../../../utils/bytes';\n\nexport default {\n  serialize(string: string): Buffer {\n    return toBytes(string);\n  },\n\n  deserialize(buffer: Buffer): string {\n    return buffer.toString();\n  },\n};\n","import { encode as rlpEncode, Input } from 'rlp';\nimport { Tag } from '../constants';\nimport { hash } from '../../../utils/crypto';\nimport {\n  MerkleTreeHashMismatchError,\n  MissingNodeInTreeError,\n  UnknownPathNibbleError,\n  UnexpectedTsError,\n  UnknownNodeLengthError,\n  InternalError,\n} from '../../../utils/errors';\nimport {\n  decode, encode, Encoded, Encoding,\n} from '../../../utils/encoder';\nimport type { unpackTx } from '..';\nimport type { TxUnpacked } from '../schema.generated';\n\nenum NodeType {\n  Branch,\n  Extension,\n  Leaf,\n}\n\ntype MPTreeBinary = [Buffer, Array<[Buffer, Buffer[]]>];\n\nclass MPTree<E extends Encoding, T extends Tag> {\n  readonly #rootHash: string;\n\n  #isComplete = true;\n\n  get isComplete(): boolean {\n    return this.#isComplete;\n  }\n\n  readonly #nodes: { [key: string]: Buffer[] };\n\n  readonly #encoding: E;\n\n  readonly #tag: T;\n\n  readonly #unpackTx: typeof unpackTx;\n\n  static #nodeHash(node: Input): string {\n    return Buffer.from(hash(rlpEncode(node))).toString('hex');\n  }\n\n  /**\n   * Deserialize Merkle Patricia Tree\n   * @param binary - Binary\n   * @param tag - Tag to use to decode value\n   * @param unpTx - Implementation of unpackTx use to decode values\n   * @returns Merkle Patricia Tree\n   */\n  constructor(binary: MPTreeBinary, encoding: E, tag: T, unpTx: typeof unpackTx) {\n    this.#encoding = encoding;\n    this.#tag = tag;\n    this.#unpackTx = unpTx;\n    this.#rootHash = binary[0].toString('hex');\n    this.#nodes = Object.fromEntries(\n      binary[1].map((node) => [node[0].toString('hex'), node[1]]),\n    );\n\n    if (this.#nodes[this.#rootHash] == null) {\n      if (Object.keys(this.#nodes).length !== 0) {\n        throw new MissingNodeInTreeError('Can\\'t find a node by root hash');\n      }\n      this.#isComplete = false;\n      return;\n    }\n    Object.entries(this.#nodes).forEach(([key, node]) => {\n      if (MPTree.#nodeHash(node) !== key) throw new MerkleTreeHashMismatchError();\n      const { type } = MPTree.#parseNode(node);\n      switch (type) {\n        case NodeType.Branch:\n          node\n            .slice(0, 16)\n            .filter((n) => n.length)\n            .forEach((n) => {\n              // TODO: enable after resolving https://github.com/aeternity/aeternity/issues/4066\n              // if (n.length !== 32) {\n              //   throw new ArgumentError('MPTree branch item length', 32, n.length);\n              // }\n              if (this.#nodes[n.toString('hex')] == null) this.#isComplete = false;\n            });\n          break;\n        case NodeType.Extension:\n          if (this.#nodes[node[1].toString('hex')] == null) {\n            throw new MissingNodeInTreeError('Can\\'t find a node by hash in extension node');\n          }\n          break;\n        case NodeType.Leaf:\n          break;\n        default:\n          throw new InternalError(`Unknown MPTree node type: ${type}`);\n      }\n    });\n  }\n\n  isEqual(tree: MPTree<E, T>): boolean {\n    return this.#rootHash === tree.#rootHash;\n  }\n\n  static #parseNode(node: Buffer[]): { type: NodeType; value?: Buffer; path?: string } {\n    switch (node.length) {\n      case 17:\n        return {\n          type: NodeType.Branch,\n          ...node[16].length !== 0 && { value: node[16] },\n        };\n      case 2: {\n        const nibble = node[0][0] >> 4; // eslint-disable-line no-bitwise\n        if (nibble > 3) throw new UnknownPathNibbleError(nibble);\n        const type = nibble <= 1 ? NodeType.Extension : NodeType.Leaf;\n        const slice = [0, 2].includes(nibble) ? 2 : 1;\n        return {\n          type,\n          ...type === NodeType.Leaf && { value: node[1] },\n          path: node[0].toString('hex').slice(slice),\n        };\n      }\n      default:\n        throw new UnknownNodeLengthError(node.length);\n    }\n  }\n\n  /**\n   * Serialize Merkle Patricia Tree\n   * @returns Binary\n   */\n  serialize(): MPTreeBinary {\n    return [\n      Buffer.from(this.#rootHash, 'hex'),\n      Object.entries(this.#nodes).map(([mptHash, value]) => ([\n        Buffer.from(mptHash, 'hex'),\n        value,\n      ])),\n    ];\n  }\n\n  /**\n   * Retrieve value from Merkle Patricia Tree\n   * @param _key - The key of the element to retrieve\n   * @returns Value associated to the specified key\n   */\n  #getRaw(_key: string): Buffer | undefined {\n    let searchFrom = this.#rootHash;\n    let key = _key;\n    while (true) { // eslint-disable-line no-constant-condition\n      const node = this.#nodes[searchFrom];\n      if (node == null) {\n        if (!this.isComplete) return undefined;\n        throw new InternalError('Can\\'t find node in complete tree');\n      }\n      const { type, value, path } = MPTree.#parseNode(node);\n      switch (type) {\n        case NodeType.Branch:\n          if (key.length === 0) return value;\n          searchFrom = node[+`0x${key[0]}`].toString('hex');\n          key = key.substring(1);\n          break;\n        case NodeType.Extension:\n          if (key.substring(0, path?.length) !== path) return undefined;\n          searchFrom = node[1].toString('hex');\n          key = key.substring(path.length);\n          break;\n        case NodeType.Leaf:\n          if (path !== key) return undefined;\n          return value;\n        default:\n          throw new InternalError(`Unknown MPTree node type: ${type}`);\n      }\n    }\n  }\n\n  /**\n   * Retrieve value from Merkle Patricia Tree\n   * @param key - The key of the element to retrieve\n   * @returns Value associated to the specified key\n   */\n  get(key: Encoded.Generic<E>): TxUnpacked & { tag: T } | undefined {\n    const d = this.#getRaw(decode(key).toString('hex'));\n    if (d == null) return d;\n    return this.#unpackTx(encode(d, Encoding.Transaction), this.#tag);\n  }\n\n  #entriesRaw(): Array<[string, Buffer]> {\n    const entries: Array<[string, Buffer]> = [];\n    const rec = (searchFrom: string, key: string): void => {\n      const node = this.#nodes[searchFrom];\n      if (node == null) {\n        if (!this.isComplete) return;\n        throw new InternalError('Can\\'t find node in complete tree');\n      }\n      const { type, value, path } = MPTree.#parseNode(node);\n      switch (type) {\n        case NodeType.Branch:\n          node\n            .slice(0, 16)\n            .map((t, idx): [typeof t, number] => [t, idx])\n            .filter(([t]) => t.length)\n            .forEach(([t, idx]) => rec(t.toString('hex'), key + idx.toString(16)));\n          if (value != null) entries.push([key, value]);\n          break;\n        case NodeType.Extension:\n          rec(node[1].toString('hex'), key + path);\n          break;\n        case NodeType.Leaf:\n          if (value == null) throw new UnexpectedTsError();\n          entries.push([key + path, value]);\n          break;\n        default:\n          throw new InternalError(`Unknown MPTree node type: ${type}`);\n      }\n    };\n    rec(this.#rootHash, '');\n    return entries;\n  }\n\n  toObject(): Record<Encoded.Generic<E>, TxUnpacked & { tag: T }> {\n    return Object.fromEntries(this.#entriesRaw()\n      // TODO: remove after resolving https://github.com/aeternity/aeternity/issues/4066\n      .filter(([k]) => this.#encoding !== Encoding.ContractAddress || k.length !== 66)\n      .map(([k, v]) => [\n        encode(Buffer.from(k, 'hex'), this.#encoding),\n        this.#unpackTx(encode(v, Encoding.Transaction), this.#tag),\n      ])) as Record<Encoded.Generic<E>, TxUnpacked & { tag: T }>;\n  }\n}\n\nexport default function genMPTreeField<E extends Encoding, T extends Tag>(encoding: E, tag: T): {\n  serialize: (value: MPTree<E, T>) => MPTreeBinary;\n  deserialize: (value: MPTreeBinary, o: { unpackTx: typeof unpackTx }) => MPTree<E, T>;\n} {\n  return {\n    serialize(value) {\n      return value.serialize();\n    },\n\n    deserialize(value, { unpackTx }) {\n      return new MPTree(value, encoding, tag, unpackTx);\n    },\n  };\n}\n","import { Tag } from '../constants';\nimport { encode, Encoding, decode } from '../../../utils/encoder';\nimport type { unpackTx as unpackTxType, buildTx as buildTxType } from '../index';\n\ntype TagWrapping = Tag.AccountsMtree | Tag.CallsMtree | Tag.ChannelsMtree | Tag.ContractsMtree\n| Tag.NameserviceMtree | Tag.OraclesMtree;\n\nexport default function genWrappedField<T extends TagWrapping>(tag: T): {\n  serialize: (\n    // TODO: replace with `(TxParams & { tag: T })['payload']`,\n    //  but fix TS2502 value is referenced directly or indirectly in its own type annotation\n    value: any, options: { buildTx: typeof buildTxType }\n  ) => Buffer;\n  deserialize: (\n    value: Buffer, options: { unpackTx: typeof unpackTxType },\n    // TODO: replace with `(TxUnpacked & { tag: T })['payload']`,\n    //  TS2577 Return type annotation circularly references itself\n  ) => any;\n  recursiveType: true;\n} {\n  return {\n    serialize(payload, { buildTx }) {\n      return decode(buildTx({ tag, payload }));\n    },\n\n    deserialize(buffer, { unpackTx }) {\n      return unpackTx<TagWrapping>(encode(buffer, Encoding.Transaction), tag).payload;\n    },\n\n    recursiveType: true,\n  };\n}\n","/**\n * Transaction Schema for TxBuilder\n */\n// # RLP version number\n// # https://github.com/aeternity/protocol/blob/master/serializations.md#binary-serialization\n\nimport { Tag } from './constants';\nimport SchemaTypes from './SchemaTypes';\nimport {\n  uInt, shortUInt, coinAmount, name, nameId, nameFee, deposit, gasLimit, gasPrice, fee,\n  address, pointers, entry, enumeration, mptree, shortUIntConst, string, encoded, raw,\n  array, boolean, ctVersion, abiVersion, ttl, nonce, map, wrapped,\n} from './field-types';\nimport { Encoded, Encoding } from '../../utils/encoder';\nimport { idTagToEncoding } from './field-types/address';\n\nexport enum ORACLE_TTL_TYPES {\n  delta = 0,\n  block = 1,\n}\n\n// # ORACLE\nexport const ORACLE_TTL = { type: ORACLE_TTL_TYPES.delta, value: 500 };\nexport const QUERY_TTL = { type: ORACLE_TTL_TYPES.delta, value: 10 };\nexport const RESPONSE_TTL = { type: ORACLE_TTL_TYPES.delta, value: 10 };\n// # CONTRACT\nexport const DRY_RUN_ACCOUNT = {\n  pub: 'ak_11111111111111111111111111111111273Yts',\n  amount: 100000000000000000000000000000000000n,\n} as const;\n\nexport enum CallReturnType {\n  Ok = 0,\n  Error = 1,\n  Revert = 2,\n}\n\n// TODO: figure out how to omit overriding types of recursive fields\ninterface EntryAny {\n  serialize: (value: TxParams | Uint8Array | Encoded.Transaction) => Buffer;\n  deserialize: (value: Buffer) => TxUnpacked;\n  recursiveType: true;\n}\n\nconst entryAny = entry() as unknown as EntryAny;\n\ninterface EntrySignedTx {\n  serialize: (value: TxParams & { tag: Tag.SignedTx } | Uint8Array | Encoded.Transaction) => Buffer;\n  deserialize: (value: Buffer) => TxUnpacked & { tag: Tag.SignedTx };\n  recursiveType: true;\n}\n\nconst entrySignedTx = entry(Tag.SignedTx) as unknown as EntrySignedTx;\n\ninterface EntryMtreeValueArray {\n  serialize: (\n    value: Array<TxParams & { tag: Tag.MtreeValue } | Uint8Array | Encoded.Transaction>,\n  ) => Buffer[];\n  deserialize: (value: Buffer[]) => Array<TxUnpacked & { tag: Tag.MtreeValue }>;\n  recursiveType: true;\n}\n\nconst entryMtreeValueArray = array(entry(Tag.MtreeValue)) as unknown as EntryMtreeValueArray;\n\ninterface EntryTreesPoi {\n  serialize: (value: TxParams & { tag: Tag.TreesPoi } | Uint8Array | Encoded.Transaction) => Buffer;\n  deserialize: (value: Buffer) => TxUnpacked & { tag: Tag.TreesPoi };\n  recursiveType: true;\n}\n\nconst entryTreesPoi = entry(Tag.TreesPoi) as unknown as EntryTreesPoi;\n\ninterface MapContracts {\n  serialize: (\n    value: Record<Encoded.ContractAddress, TxParams & { tag: Tag.Contract }>,\n  ) => Buffer;\n  deserialize: (\n    value: Buffer,\n  ) => Record<Encoded.ContractAddress, TxUnpacked & { tag: Tag.Contract }>;\n  recursiveType: true;\n}\n\nconst mapContracts = map(Encoding.ContractAddress, Tag.Contract) as unknown as MapContracts;\n\ninterface MapAccounts {\n  serialize: (\n    value: Record<Encoded.AccountAddress, TxParams & { tag: Tag.Account }>,\n  ) => Buffer;\n  deserialize: (value: Buffer) => Record<Encoded.AccountAddress, TxUnpacked & { tag: Tag.Account }>;\n  recursiveType: true;\n}\n\nconst mapAccounts = map(Encoding.AccountAddress, Tag.Account) as unknown as MapAccounts;\n\ninterface MapCalls {\n  serialize: (\n    value: Record<Encoded.Bytearray, TxParams & { tag: Tag.ContractCall }>,\n  ) => Buffer;\n  deserialize: (value: Buffer) => Record<Encoded.Bytearray, TxUnpacked & { tag: Tag.ContractCall }>;\n  recursiveType: true;\n}\n\nconst mapCalls = map(Encoding.Bytearray, Tag.ContractCall) as unknown as MapCalls;\n\ninterface MapChannels {\n  serialize: (\n    value: Record<Encoded.Channel, TxParams & { tag: Tag.Channel }>,\n  ) => Buffer;\n  deserialize: (value: Buffer) => Record<Encoded.Channel, TxUnpacked & { tag: Tag.Channel }>;\n  recursiveType: true;\n}\n\nconst mapChannels = map(Encoding.Channel, Tag.Channel) as unknown as MapChannels;\n\ninterface MapNames {\n  serialize: (\n    value: Record<Encoded.Name, TxParams & { tag: Tag.Name }>,\n  ) => Buffer;\n  deserialize: (value: Buffer) => Record<Encoded.Name, TxUnpacked & { tag: Tag.Name }>;\n  recursiveType: true;\n}\n\nconst mapNames = map(Encoding.Name, Tag.Name) as unknown as MapNames;\n\ninterface MapOracles {\n  serialize: (\n    value: Record<Encoded.OracleAddress, TxParams & { tag: Tag.Oracle }>,\n  ) => Buffer;\n  deserialize: (value: Buffer) => Record<Encoded.OracleAddress, TxUnpacked & { tag: Tag.Oracle }>;\n  recursiveType: true;\n}\n\nconst mapOracles = map(Encoding.OracleAddress, Tag.Oracle) as unknown as MapOracles;\n\n/**\n * @see {@link https://github.com/aeternity/protocol/blob/c007deeac4a01e401238412801ac7084ac72d60e/serializations.md#accounts-version-1-basic-accounts}\n */\nexport const txSchema = [{\n  tag: shortUIntConst(Tag.Account),\n  version: shortUIntConst(1),\n  nonce: shortUInt,\n  balance: uInt,\n}, {\n  tag: shortUIntConst(Tag.Account),\n  version: shortUIntConst(2, true),\n  flags: uInt,\n  nonce: shortUInt,\n  balance: uInt,\n  gaContract: address(Encoding.ContractAddress, Encoding.Name),\n  gaAuthFun: encoded(Encoding.ContractBytearray),\n}, {\n  tag: shortUIntConst(Tag.SignedTx),\n  version: shortUIntConst(1, true),\n  signatures: array(raw),\n  encodedTx: entryAny,\n}, {\n  tag: shortUIntConst(Tag.SpendTx),\n  version: shortUIntConst(1, true),\n  senderId: address(Encoding.AccountAddress),\n  recipientId: address(Encoding.AccountAddress, Encoding.Name),\n  amount: coinAmount,\n  fee,\n  ttl,\n  nonce: nonce('senderId'),\n  payload: encoded(Encoding.Bytearray, true),\n}, {\n  tag: shortUIntConst(Tag.Name),\n  version: shortUIntConst(1, true),\n  accountId: address(Encoding.AccountAddress),\n  nameTtl: shortUInt,\n  status: raw,\n  clientTtl: shortUInt,\n  pointers,\n}, {\n  tag: shortUIntConst(Tag.NamePreclaimTx),\n  version: shortUIntConst(1, true),\n  accountId: address(Encoding.AccountAddress),\n  nonce: nonce('accountId'),\n  commitmentId: address(Encoding.Commitment),\n  fee,\n  ttl,\n}, {\n  tag: shortUIntConst(Tag.NameClaimTx),\n  version: shortUIntConst(2, true),\n  accountId: address(Encoding.AccountAddress),\n  nonce: nonce('accountId'),\n  name,\n  nameSalt: uInt,\n  nameFee,\n  fee,\n  ttl,\n}, {\n  tag: shortUIntConst(Tag.NameUpdateTx),\n  version: shortUIntConst(1, true),\n  accountId: address(Encoding.AccountAddress),\n  nonce: nonce('accountId'),\n  nameId,\n  nameTtl: shortUInt,\n  pointers,\n  clientTtl: shortUInt,\n  fee,\n  ttl,\n}, {\n  tag: shortUIntConst(Tag.NameTransferTx),\n  version: shortUIntConst(1, true),\n  accountId: address(Encoding.AccountAddress),\n  nonce: nonce('accountId'),\n  nameId,\n  recipientId: address(Encoding.AccountAddress, Encoding.Name),\n  fee,\n  ttl,\n}, {\n  tag: shortUIntConst(Tag.NameRevokeTx),\n  version: shortUIntConst(1, true),\n  accountId: address(Encoding.AccountAddress),\n  nonce: nonce('accountId'),\n  nameId,\n  fee,\n  ttl,\n}, {\n  tag: shortUIntConst(Tag.Contract),\n  version: shortUIntConst(1, true),\n  owner: address(Encoding.AccountAddress),\n  ctVersion,\n  code: encoded(Encoding.ContractBytearray),\n  log: encoded(Encoding.ContractBytearray),\n  active: boolean,\n  referers: array(address(Encoding.AccountAddress)),\n  deposit,\n}, {\n  tag: shortUIntConst(Tag.ContractCreateTx),\n  version: shortUIntConst(1, true),\n  ownerId: address(Encoding.AccountAddress),\n  nonce: nonce('ownerId'),\n  code: encoded(Encoding.ContractBytearray),\n  ctVersion,\n  fee,\n  ttl,\n  deposit,\n  amount: coinAmount,\n  gasLimit,\n  gasPrice,\n  callData: encoded(Encoding.ContractBytearray),\n}, {\n  tag: shortUIntConst(Tag.ContractCallTx),\n  version: shortUIntConst(1, true),\n  callerId: address(Encoding.AccountAddress),\n  nonce: nonce('callerId'),\n  contractId: address(Encoding.ContractAddress, Encoding.Name),\n  abiVersion,\n  fee,\n  ttl,\n  amount: coinAmount,\n  gasLimit,\n  gasPrice,\n  callData: encoded(Encoding.ContractBytearray),\n}, {\n  tag: shortUIntConst(Tag.ContractCall),\n  version: shortUIntConst(2, true),\n  callerId: address(Encoding.AccountAddress),\n  callerNonce: shortUInt,\n  height: shortUInt,\n  contractId: address(Encoding.ContractAddress),\n  // TODO: rename after resolving https://github.com/aeternity/protocol/issues/506\n  gasPrice: uInt,\n  gasUsed: shortUInt,\n  returnValue: encoded(Encoding.ContractBytearray),\n  returnType: enumeration(CallReturnType),\n  // TODO: add serialization for\n  //  <log> :: [ { <address> :: id, [ <topics> :: binary() }, <data> :: binary() } ]\n  log: array(raw),\n}, {\n  tag: shortUIntConst(Tag.Oracle),\n  version: shortUIntConst(1, true),\n  accountId: address(Encoding.AccountAddress),\n  queryFormat: string,\n  responseFormat: string,\n  queryFee: coinAmount,\n  oracleTtlValue: shortUInt,\n  abiVersion,\n}, {\n  tag: shortUIntConst(Tag.OracleRegisterTx),\n  version: shortUIntConst(1, true),\n  accountId: address(Encoding.AccountAddress),\n  nonce: nonce('accountId'),\n  queryFormat: string,\n  responseFormat: string,\n  queryFee: coinAmount,\n  oracleTtlType: enumeration(ORACLE_TTL_TYPES),\n  oracleTtlValue: shortUInt,\n  fee,\n  ttl,\n  abiVersion,\n}, {\n  tag: shortUIntConst(Tag.OracleExtendTx),\n  version: shortUIntConst(1, true),\n  oracleId: address(Encoding.OracleAddress, Encoding.Name),\n  nonce: nonce('oracleId'),\n  oracleTtlType: enumeration(ORACLE_TTL_TYPES),\n  oracleTtlValue: shortUInt,\n  fee,\n  ttl,\n}, {\n  tag: shortUIntConst(Tag.OracleQueryTx),\n  version: shortUIntConst(1, true),\n  senderId: address(Encoding.AccountAddress),\n  nonce: nonce('senderId'),\n  oracleId: address(Encoding.OracleAddress, Encoding.Name),\n  query: string,\n  queryFee: coinAmount,\n  queryTtlType: enumeration(ORACLE_TTL_TYPES),\n  queryTtlValue: shortUInt,\n  responseTtlType: enumeration(ORACLE_TTL_TYPES),\n  responseTtlValue: shortUInt,\n  fee,\n  ttl,\n}, {\n  tag: shortUIntConst(Tag.OracleResponseTx),\n  version: shortUIntConst(1, true),\n  oracleId: address(Encoding.OracleAddress),\n  nonce: nonce('oracleId'),\n  queryId: encoded(Encoding.OracleQueryId),\n  response: string,\n  responseTtlType: enumeration(ORACLE_TTL_TYPES),\n  responseTtlValue: shortUInt,\n  fee,\n  ttl,\n}, {\n  tag: shortUIntConst(Tag.ChannelCreateTx),\n  version: shortUIntConst(2, true),\n  initiator: address(Encoding.AccountAddress),\n  initiatorAmount: uInt,\n  responder: address(Encoding.AccountAddress),\n  responderAmount: uInt,\n  channelReserve: uInt,\n  lockPeriod: uInt,\n  ttl,\n  fee,\n  initiatorDelegateIds: array(address(...idTagToEncoding)),\n  responderDelegateIds: array(address(...idTagToEncoding)),\n  stateHash: encoded(Encoding.State),\n  nonce: nonce('initiator'),\n}, {\n  tag: shortUIntConst(Tag.ChannelCloseMutualTx),\n  version: shortUIntConst(1, true),\n  channelId: address(Encoding.Channel),\n  fromId: address(Encoding.AccountAddress),\n  initiatorAmountFinal: uInt,\n  responderAmountFinal: uInt,\n  ttl,\n  fee,\n  nonce: nonce('fromId'),\n}, {\n  tag: shortUIntConst(Tag.ChannelCloseSoloTx),\n  version: shortUIntConst(1, true),\n  channelId: address(Encoding.Channel),\n  fromId: address(Encoding.AccountAddress),\n  payload: encoded(Encoding.Transaction),\n  poi: entryTreesPoi,\n  ttl,\n  fee,\n  nonce: nonce('fromId'),\n}, {\n  tag: shortUIntConst(Tag.ChannelSlashTx),\n  version: shortUIntConst(1, true),\n  channelId: address(Encoding.Channel),\n  fromId: address(Encoding.AccountAddress),\n  payload: encoded(Encoding.Transaction),\n  poi: entryTreesPoi,\n  ttl,\n  fee,\n  nonce: nonce('fromId'),\n}, {\n  tag: shortUIntConst(Tag.ChannelDepositTx),\n  version: shortUIntConst(1, true),\n  channelId: address(Encoding.Channel),\n  fromId: address(Encoding.AccountAddress),\n  amount: uInt,\n  ttl,\n  fee,\n  stateHash: encoded(Encoding.State),\n  round: shortUInt,\n  nonce: nonce('fromId'),\n}, {\n  tag: shortUIntConst(Tag.ChannelWithdrawTx),\n  version: shortUIntConst(1, true),\n  channelId: address(Encoding.Channel),\n  toId: address(Encoding.AccountAddress),\n  amount: uInt,\n  ttl,\n  fee,\n  stateHash: encoded(Encoding.State),\n  round: shortUInt,\n  nonce: nonce('fromId'),\n}, {\n  tag: shortUIntConst(Tag.ChannelSettleTx),\n  version: shortUIntConst(1, true),\n  channelId: address(Encoding.Channel),\n  fromId: address(Encoding.AccountAddress),\n  initiatorAmountFinal: uInt,\n  responderAmountFinal: uInt,\n  ttl,\n  fee,\n  nonce: nonce('fromId'),\n}, {\n  tag: shortUIntConst(Tag.ChannelForceProgressTx),\n  version: shortUIntConst(1, true),\n  channelId: address(Encoding.Channel),\n  fromId: address(Encoding.AccountAddress),\n  payload: encoded(Encoding.Transaction),\n  round: shortUInt,\n  update: encoded(Encoding.ContractBytearray),\n  stateHash: encoded(Encoding.State),\n  offChainTrees: encoded(Encoding.StateTrees),\n  ttl,\n  fee,\n  nonce: nonce('fromId'),\n}, {\n  tag: shortUIntConst(Tag.ChannelOffChainTx),\n  version: shortUIntConst(2, true),\n  channelId: address(Encoding.Channel),\n  round: shortUInt,\n  stateHash: encoded(Encoding.State),\n}, {\n  tag: shortUIntConst(Tag.Channel),\n  version: shortUIntConst(3, true),\n  initiator: address(Encoding.AccountAddress),\n  responder: address(Encoding.AccountAddress),\n  channelAmount: uInt,\n  initiatorAmount: uInt,\n  responderAmount: uInt,\n  channelReserve: uInt,\n  initiatorDelegateIds: array(address(...idTagToEncoding)),\n  responderDelegateIds: array(address(...idTagToEncoding)),\n  stateHash: encoded(Encoding.State),\n  round: shortUInt,\n  soloRound: uInt,\n  lockPeriod: uInt,\n  lockedUntil: uInt,\n  initiatorAuth: encoded(Encoding.ContractBytearray),\n  responderAuth: encoded(Encoding.ContractBytearray),\n}, {\n  tag: shortUIntConst(Tag.ChannelSnapshotSoloTx),\n  version: shortUIntConst(1, true),\n  channelId: address(Encoding.Channel),\n  fromId: address(Encoding.AccountAddress),\n  payload: encoded(Encoding.Transaction),\n  ttl,\n  fee,\n  nonce: nonce('fromId'),\n}, {\n  tag: shortUIntConst(Tag.ChannelOffChainUpdateTransfer),\n  version: shortUIntConst(1, true),\n  from: address(Encoding.AccountAddress),\n  to: address(Encoding.AccountAddress),\n  amount: uInt,\n}, {\n  tag: shortUIntConst(Tag.ChannelOffChainUpdateDeposit),\n  version: shortUIntConst(1, true),\n  from: address(Encoding.AccountAddress),\n  amount: uInt,\n}, {\n  tag: shortUIntConst(Tag.ChannelOffChainUpdateWithdraw),\n  version: shortUIntConst(1, true),\n  from: address(Encoding.AccountAddress),\n  amount: uInt,\n}, {\n  tag: shortUIntConst(Tag.ChannelOffChainUpdateCreateContract),\n  version: shortUIntConst(1, true),\n  owner: address(Encoding.AccountAddress),\n  ctVersion,\n  code: encoded(Encoding.ContractBytearray),\n  deposit: uInt,\n  callData: encoded(Encoding.ContractBytearray),\n}, {\n  tag: shortUIntConst(Tag.ChannelOffChainUpdateCallContract),\n  version: shortUIntConst(1, true),\n  caller: address(Encoding.AccountAddress),\n  contract: address(Encoding.ContractAddress),\n  abiVersion,\n  amount: uInt,\n  callData: encoded(Encoding.ContractBytearray),\n  callStack: raw,\n  gasPrice,\n  gasLimit,\n}, {\n  tag: shortUIntConst(Tag.ChannelClientReconnectTx),\n  version: shortUIntConst(1, true),\n  channelId: address(Encoding.Channel),\n  round: shortUInt,\n  role: string,\n  pubkey: address(Encoding.AccountAddress),\n}, {\n  tag: shortUIntConst(Tag.TreesPoi),\n  version: shortUIntConst(1, true),\n  // TODO: inline an extra wrapping array after resolving https://github.com/aeternity/protocol/issues/505\n  accounts: array(mptree(Encoding.AccountAddress, Tag.Account)),\n  calls: array(mptree(Encoding.Bytearray, Tag.ContractCall)),\n  channels: array(mptree(Encoding.Channel, Tag.Channel)),\n  contracts: array(mptree(Encoding.ContractAddress, Tag.Contract)),\n  ns: array(mptree(Encoding.Name, Tag.Name)),\n  oracles: array(mptree(Encoding.OracleAddress, Tag.Oracle)),\n}, {\n  tag: shortUIntConst(Tag.StateTrees),\n  version: shortUIntConst(0, true),\n  contracts: wrapped(Tag.ContractsMtree) as unknown as MapContracts,\n  calls: wrapped(Tag.CallsMtree) as unknown as MapCalls,\n  channels: wrapped(Tag.ChannelsMtree) as unknown as MapChannels,\n  ns: wrapped(Tag.NameserviceMtree) as unknown as MapNames,\n  oracles: wrapped(Tag.OraclesMtree) as unknown as MapOracles,\n  accounts: wrapped(Tag.AccountsMtree) as unknown as MapAccounts,\n}, {\n  tag: shortUIntConst(Tag.Mtree),\n  version: shortUIntConst(1, true),\n  values: entryMtreeValueArray,\n}, {\n  tag: shortUIntConst(Tag.MtreeValue),\n  version: shortUIntConst(1, true),\n  key: raw,\n  value: raw,\n}, {\n  tag: shortUIntConst(Tag.ContractsMtree),\n  version: shortUIntConst(1, true),\n  payload: mapContracts,\n}, {\n  tag: shortUIntConst(Tag.CallsMtree),\n  version: shortUIntConst(1, true),\n  payload: mapCalls,\n}, {\n  tag: shortUIntConst(Tag.ChannelsMtree),\n  version: shortUIntConst(1, true),\n  payload: mapChannels,\n}, {\n  tag: shortUIntConst(Tag.NameserviceMtree),\n  version: shortUIntConst(1, true),\n  payload: mapNames,\n}, {\n  tag: shortUIntConst(Tag.OraclesMtree),\n  version: shortUIntConst(1, true),\n  payload: mapOracles,\n}, {\n  tag: shortUIntConst(Tag.AccountsMtree),\n  version: shortUIntConst(1, true),\n  payload: mapAccounts,\n}, {\n  tag: shortUIntConst(Tag.GaAttachTx),\n  version: shortUIntConst(1, true),\n  ownerId: address(Encoding.AccountAddress),\n  nonce: nonce('ownerId'),\n  code: encoded(Encoding.ContractBytearray),\n  authFun: raw,\n  ctVersion,\n  fee,\n  ttl,\n  gasLimit,\n  gasPrice,\n  callData: encoded(Encoding.ContractBytearray),\n}, {\n  tag: shortUIntConst(Tag.GaMetaTx),\n  version: shortUIntConst(2, true),\n  gaId: address(Encoding.AccountAddress),\n  authData: encoded(Encoding.ContractBytearray),\n  abiVersion,\n  fee,\n  gasLimit,\n  gasPrice,\n  tx: entrySignedTx,\n}, {\n  tag: shortUIntConst(Tag.PayingForTx),\n  version: shortUIntConst(1, true),\n  payerId: address(Encoding.AccountAddress),\n  nonce: nonce('payerId'),\n  fee,\n  tx: entrySignedTx,\n}, {\n  tag: shortUIntConst(Tag.GaMetaTxAuthData),\n  version: shortUIntConst(1, true),\n  fee: coinAmount,\n  gasPrice,\n  txHash: encoded(Encoding.TxHash),\n}] as const;\n\ntype TxSchema = SchemaTypes<typeof txSchema>;\nexport type TxParams = TxSchema['TxParams'];\nexport type TxParamsAsync = TxSchema['TxParamsAsync'];\nexport type TxUnpacked = TxSchema['TxUnpacked'];\n","import { decode as rlpDecode, encode as rlpEncode } from 'rlp';\nimport {\n  decode, encode, Encoded, Encoding,\n} from '../../utils/encoder';\nimport { hash } from '../../utils/crypto';\nimport { BinaryData, Field } from './field-types';\nimport { txSchema } from './schema';\nimport { TxUnpacked, TxParams, TxParamsAsync } from './schema.generated';\nimport { Tag } from './constants';\nimport { buildContractId, readInt } from './helpers';\nimport { ArgumentError, DecodeError, SchemaNotFoundError } from '../../utils/errors';\n\n/**\n * JavaScript-based Transaction builder\n */\n\nexport function getSchema(tag: Tag, version?: number): Array<[string, Field]> {\n  const schemas = txSchema.filter((s) => s.tag.constValue === tag);\n  if (schemas.length === 0) throw new SchemaNotFoundError(`${Tag[tag]} (${tag})`, 0);\n  version ??= Math.max(...schemas.map((schema) => schema.version.constValue));\n  const schema = schemas.find((s) => s.version.constValue === version);\n  if (schema == null) throw new SchemaNotFoundError(`${Tag[tag]} (${tag})`, version);\n  return Object.entries(schema);\n}\n\ntype TxEncoding = Encoding.Transaction | Encoding.Poi | Encoding.StateTrees\n| Encoding.CallStateTree;\n\n/**\n * Build transaction hash\n * @category transaction builder\n * @param params - Object with tx params\n * @param options - options\n * @param options.prefix - Prefix of transaction\n * @returns object Base64Check transaction hash with 'tx_' prefix\n */\nexport function buildTx<E extends TxEncoding = Encoding.Transaction>(\n  params: TxParams,\n  { prefix }: { prefix?: E } = {},\n): Encoded.Generic<E> {\n  const schema = getSchema(params.tag, params.version);\n\n  const binary = schema.map(([key, field]) => (\n    field.serialize(\n      // @ts-expect-error the type of `params[key]` can't be determined accurately\n      params[key],\n      {\n        ...params,\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        unpackTx,\n        buildTx,\n        rebuildTx: (overrideParams: any) => buildTx(\n          { ...params, ...overrideParams },\n        ),\n      },\n      params,\n    )\n  ));\n\n  // @ts-expect-error looks like a TypeScript edge case\n  return encode(rlpEncode(binary), prefix ?? Encoding.Transaction);\n}\n\nexport type BuildTxOptions <TxType extends Tag, OmitFields extends string> =\n  Omit<TxParamsAsync & { tag: TxType }, 'tag' | OmitFields>;\n\n/**\n * @category transaction builder\n */\nexport async function buildTxAsync(params: TxParamsAsync): Promise<Encoded.Transaction> {\n  await Promise.all(\n    getSchema(params.tag, params.version)\n      .map(async ([key, field]) => {\n        if (field.prepare == null) return;\n        // @ts-expect-error the type of `params[key]` can't be determined accurately\n        params[key] = await field.prepare(params[key], params, params);\n      }),\n  );\n\n  // @ts-expect-error after preparation properties should be compatible with sync tx builder\n  return buildTx(params);\n}\n\n/**\n * Unpack transaction encoded as string\n * @category transaction builder\n * @param encodedTx - Transaction to unpack\n * @param txType - Expected transaction type\n * @returns Object with transaction param's\n */\nexport function unpackTx<TxType extends Tag>(\n  encodedTx: Encoded.Generic<TxEncoding>,\n  txType?: TxType,\n): TxUnpacked & { tag: TxType } {\n  const binary = rlpDecode(decode(encodedTx));\n  const tag = +readInt(binary[0] as Buffer);\n  const version = +readInt(binary[1] as Buffer);\n  const schema = getSchema(tag, version);\n  if (txType != null && txType !== tag) throw new DecodeError(`Expected transaction to have ${Tag[txType]} tag, got ${Tag[tag]} instead`);\n  if (binary.length !== schema.length) {\n    throw new ArgumentError('Transaction RLP length', schema.length, binary.length);\n  }\n  return schema.reduce<any>(\n    (acc, [name, field], index) => {\n      // eslint-disable-next-line @typescript-eslint/no-use-before-define\n      const deserialized = field.deserialize(binary[index] as BinaryData, { unpackTx });\n      return { ...acc, [name]: deserialized };\n    },\n    {},\n  ) as any;\n}\n\n/**\n * Build a transaction hash\n * @category transaction builder\n * @param rawTx - base64 or rlp encoded transaction\n * @returns Transaction hash\n */\nexport function buildTxHash(rawTx: Encoded.Transaction | Uint8Array): Encoded.TxHash {\n  const data = typeof rawTx === 'string' && rawTx.startsWith('tx_')\n    ? decode(rawTx)\n    : rawTx;\n  return encode(hash(data), Encoding.TxHash);\n}\n\n/**\n * Build a contract public key by contractCreateTx or gaAttach\n * @category contract\n * @param contractTx - Transaction\n * @returns Contract public key\n */\nexport function buildContractIdByContractTx(\n  contractTx: Encoded.Transaction,\n): Encoded.ContractAddress {\n  const params = unpackTx(contractTx);\n  if (Tag.ContractCreateTx !== params.tag && Tag.GaAttachTx !== params.tag) {\n    throw new ArgumentError('contractTx', 'a contractCreateTx or gaAttach', params.tag);\n  }\n  return buildContractId(params.ownerId, params.nonce);\n}\n","export default function semverSatisfies(\n  version: string,\n  geVersion: string,\n  ltVersion: string,\n): boolean {\n  const getComponents = (v: string): number[] => v\n    .split(/[-+]/)[0].split('.').map((i) => +i);\n\n  const versionComponents = getComponents(version);\n  const geComponents = getComponents(geVersion);\n  const ltComponents = getComponents(ltVersion);\n\n  const base = Math.max(...versionComponents, ...geComponents, ...ltComponents) + 1;\n  const componentsToNumber = (components: number[]): number => components.reverse()\n    .reduce((acc, n, idx) => acc + n * base ** idx, 0);\n\n  const vNumber = componentsToNumber(versionComponents);\n  const geNumber = componentsToNumber(geComponents);\n  const ltNumber = componentsToNumber(ltComponents);\n  return vNumber >= geNumber && vNumber < ltNumber;\n}\n","import { RestError, PipelineResponse, PipelinePolicy } from '@azure/core-rest-pipeline';\nimport { AdditionalPolicyConfig } from '@azure/core-client';\nimport { pause } from './other';\nimport semverSatisfies from './semver-satisfies';\nimport { UnsupportedVersionError } from './errors';\n\nexport const genRequestQueuesPolicy = (): AdditionalPolicyConfig => {\n  const requestQueues = new Map<string, Promise<unknown>>();\n\n  return {\n    policy: {\n      name: 'request-queues',\n      async sendRequest(request, next) {\n        const key = request.headers.get('__queue');\n        request.headers.delete('__queue');\n        const getResponse = async (): Promise<PipelineResponse> => next(request);\n        if (key == null) return getResponse();\n        const req = (requestQueues.get(key) ?? Promise.resolve()).then(getResponse);\n        // TODO: remove pause after fixing https://github.com/aeternity/aeternity/issues/3803\n        // gap to ensure that node won't reject the nonce\n        requestQueues.set(key, req.then(async () => pause(750), () => {}));\n        return req;\n      },\n    },\n    position: 'perCall',\n  };\n};\n\nexport const genCombineGetRequestsPolicy = (): AdditionalPolicyConfig => {\n  const pendingGetRequests = new Map<string, Promise<PipelineResponse>>();\n\n  return {\n    policy: {\n      name: 'combine-get-requests',\n      async sendRequest(request, next) {\n        if (request.method !== 'GET') return next(request);\n        const key = JSON.stringify([request.url, request.body]);\n        const response = pendingGetRequests.get(key) ?? next(request);\n        pendingGetRequests.set(key, response);\n        try {\n          return await response;\n        } finally {\n          pendingGetRequests.delete(key);\n        }\n      },\n    },\n    position: 'perCall',\n  };\n};\n\nexport const genAggressiveCacheGetResponsesPolicy = (): AdditionalPolicyConfig => {\n  const getRequests = new Map<string, Promise<PipelineResponse>>();\n\n  return {\n    policy: {\n      name: 'aggressive-cache-get-responses',\n      async sendRequest(request, next) {\n        if (request.method !== 'GET') return next(request);\n        const key = JSON.stringify([request.url, request.body]);\n        const response = getRequests.get(key) ?? next(request);\n        getRequests.set(key, response);\n        return response;\n      },\n    },\n    position: 'perCall',\n  };\n};\n\nexport const genErrorFormatterPolicy = (\n  getMessage: (b: any) => string,\n): AdditionalPolicyConfig => ({\n  policy: {\n    name: 'error-formatter',\n    async sendRequest(request, next) {\n      try {\n        return await next(request);\n      } catch (error) {\n        if (!(error instanceof RestError) || error.request == null) throw error;\n        if (error.response?.bodyAsText == null) throw error;\n\n        let body;\n        try {\n          body = JSON.parse(error.response.bodyAsText);\n        } catch (e) {\n          throw error;\n        }\n        error.message = `${new URL(error.request.url).pathname.slice(1)} error`;\n        const message = getMessage(body);\n        if (message !== '') error.message += `:${message}`;\n        throw error;\n      }\n    },\n  },\n  position: 'perCall',\n});\n\nexport const genVersionCheckPolicy = (\n  name: string,\n  ignorePath: string,\n  versionPromise: Promise<string | Error>,\n  geVersion: string,\n  ltVersion: string,\n): PipelinePolicy => ({\n  name: 'version-check',\n  async sendRequest(request, next) {\n    if (new URL(request.url).pathname === ignorePath) return next(request);\n    const version = await versionPromise;\n    if (version instanceof Error) throw version;\n    const args = [version, geVersion, ltVersion] as const;\n    if (!semverSatisfies(...args)) throw new UnsupportedVersionError(name, ...args);\n    return next(request);\n  },\n});\n\nexport const genRetryOnFailurePolicy = (\n  retryCount: number,\n  retryOverallDelay: number,\n): AdditionalPolicyConfig => ({\n  policy: {\n    name: 'retry-on-failure',\n    async sendRequest(request, next) {\n      const statusesToNotRetry = [200, 400, 403, 500];\n\n      const intervals = new Array(retryCount).fill(0)\n        .map((_, idx) => ((idx + 1) / retryCount) ** 2);\n      const intervalSum = intervals.reduce((a, b) => a + b);\n      const intervalsInMs = intervals.map((el) => (el / intervalSum) * retryOverallDelay);\n\n      let error = new RestError('Not expected to be thrown');\n      for (let attempt = 0; attempt <= retryCount; attempt += 1) {\n        if (attempt !== 0) await pause(intervalsInMs[attempt - 1]);\n        try {\n          return await next(request);\n        } catch (e) {\n          if (!(e instanceof RestError)) throw e;\n          if (statusesToNotRetry.includes(e.response?.status ?? 0)) throw e;\n          error = e;\n        }\n      }\n      throw error;\n    },\n  },\n  position: 'perCall',\n});\n","import * as coreClient from \"@azure/core-client\";\n\nexport const Header: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Header\",\n    modelProperties: {\n      hash: {\n        serializedName: \"hash\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      height: {\n        serializedName: \"height\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      prevHash: {\n        serializedName: \"prev_hash\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      prevKeyHash: {\n        serializedName: \"prev_key_hash\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      stateHash: {\n        serializedName: \"state_hash\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      miner: {\n        serializedName: \"miner\",\n        type: {\n          name: \"String\"\n        }\n      },\n      beneficiary: {\n        serializedName: \"beneficiary\",\n        type: {\n          name: \"String\"\n        }\n      },\n      target: {\n        serializedName: \"target\",\n        type: {\n          name: \"String\"\n        }\n      },\n      pow: {\n        constraints: {\n          MinItems: 42,\n          MaxItems: 42\n        },\n        serializedName: \"pow\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      nonce: {\n        serializedName: \"nonce\",\n        type: {\n          name: \"String\"\n        }\n      },\n      time: {\n        serializedName: \"time\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"version\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      info: {\n        serializedName: \"info\",\n        type: {\n          name: \"String\"\n        }\n      },\n      pofHash: {\n        serializedName: \"pof_hash\",\n        type: {\n          name: \"String\"\n        }\n      },\n      txsHash: {\n        serializedName: \"txs_hash\",\n        type: {\n          name: \"String\"\n        }\n      },\n      signature: {\n        serializedName: \"signature\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ErrorModel: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ErrorModel\",\n    modelProperties: {\n      reason: {\n        serializedName: \"reason\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const KeyBlock: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"KeyBlock\",\n    modelProperties: {\n      hash: {\n        serializedName: \"hash\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      height: {\n        serializedName: \"height\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      prevHash: {\n        serializedName: \"prev_hash\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      prevKeyHash: {\n        serializedName: \"prev_key_hash\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      stateHash: {\n        serializedName: \"state_hash\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      miner: {\n        serializedName: \"miner\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      beneficiary: {\n        serializedName: \"beneficiary\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      target: {\n        serializedName: \"target\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      pow: {\n        constraints: {\n          MinItems: 42,\n          MaxItems: 42\n        },\n        serializedName: \"pow\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      nonce: {\n        serializedName: \"nonce\",\n        type: {\n          name: \"String\"\n        }\n      },\n      time: {\n        serializedName: \"time\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"version\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      info: {\n        serializedName: \"info\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const HashResponse: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"HashResponse\",\n    modelProperties: {\n      hash: {\n        serializedName: \"hash\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const HeightResponse: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"HeightResponse\",\n    modelProperties: {\n      height: {\n        serializedName: \"height\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const MicroBlockHeader: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"MicroBlockHeader\",\n    modelProperties: {\n      hash: {\n        serializedName: \"hash\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      height: {\n        serializedName: \"height\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      pofHash: {\n        serializedName: \"pof_hash\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      prevHash: {\n        serializedName: \"prev_hash\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      prevKeyHash: {\n        serializedName: \"prev_key_hash\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      stateHash: {\n        serializedName: \"state_hash\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      txsHash: {\n        serializedName: \"txs_hash\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      signature: {\n        serializedName: \"signature\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      time: {\n        serializedName: \"time\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"version\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const SignedTxs: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SignedTxs\",\n    modelProperties: {\n      transactions: {\n        serializedName: \"transactions\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"SignedTx\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const SignedTx: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SignedTx\",\n    modelProperties: {\n      tx: {\n        serializedName: \"tx\",\n        type: {\n          name: \"Composite\",\n          className: \"Tx\"\n        }\n      },\n      blockHeight: {\n        serializedName: \"block_height\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      blockHash: {\n        serializedName: \"block_hash\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      hash: {\n        serializedName: \"hash\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      signatures: {\n        serializedName: \"signatures\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const Tx: coreClient.CompositeMapper = {\n  serializedName: \"Tx\",\n  type: {\n    name: \"Composite\",\n    className: \"Tx\",\n    uberParent: \"Tx\",\n    polymorphicDiscriminator: {\n      serializedName: \"type\",\n      clientName: \"type\"\n    },\n    modelProperties: {\n      recipientId: {\n        serializedName: \"recipient_id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      amount: {\n        serializedName: \"amount\",\n        type: {\n          name: \"String\"\n        }\n      },\n      fee: {\n        serializedName: \"fee\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      ttl: {\n        serializedName: \"ttl\",\n        type: {\n          name: \"String\"\n        }\n      },\n      senderId: {\n        serializedName: \"sender_id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      nonce: {\n        serializedName: \"nonce\",\n        type: {\n          name: \"String\"\n        }\n      },\n      payload: {\n        serializedName: \"payload\",\n        type: {\n          name: \"String\"\n        }\n      },\n      initiatorId: {\n        serializedName: \"initiator_id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      initiatorAmount: {\n        serializedName: \"initiator_amount\",\n        type: {\n          name: \"String\"\n        }\n      },\n      responderId: {\n        serializedName: \"responder_id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      responderAmount: {\n        serializedName: \"responder_amount\",\n        type: {\n          name: \"String\"\n        }\n      },\n      channelReserve: {\n        serializedName: \"channel_reserve\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lockPeriod: {\n        serializedName: \"lock_period\",\n        type: {\n          name: \"String\"\n        }\n      },\n      stateHash: {\n        serializedName: \"state_hash\",\n        type: {\n          name: \"String\"\n        }\n      },\n      delegateIds: {\n        serializedName: \"delegate_ids\",\n        type: {\n          name: \"Composite\",\n          className: \"Delegates\"\n        }\n      },\n      channelId: {\n        serializedName: \"channel_id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      fromId: {\n        serializedName: \"from_id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      round: {\n        serializedName: \"round\",\n        type: {\n          name: \"String\"\n        }\n      },\n      toId: {\n        serializedName: \"to_id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      update: {\n        serializedName: \"update\",\n        type: {\n          name: \"Composite\",\n          className: \"OffChainUpdate\"\n        }\n      },\n      offchainTrees: {\n        serializedName: \"offchain_trees\",\n        type: {\n          name: \"String\"\n        }\n      },\n      initiatorAmountFinal: {\n        serializedName: \"initiator_amount_final\",\n        type: {\n          name: \"String\"\n        }\n      },\n      responderAmountFinal: {\n        serializedName: \"responder_amount_final\",\n        type: {\n          name: \"String\"\n        }\n      },\n      poi: {\n        serializedName: \"poi\",\n        type: {\n          name: \"String\"\n        }\n      },\n      initiatorDelegateIds: {\n        serializedName: \"initiator_delegate_ids\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      responderDelegateIds: {\n        serializedName: \"responder_delegate_ids\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      queryFormat: {\n        serializedName: \"query_format\",\n        type: {\n          name: \"String\"\n        }\n      },\n      responseFormat: {\n        serializedName: \"response_format\",\n        type: {\n          name: \"String\"\n        }\n      },\n      queryFee: {\n        serializedName: \"query_fee\",\n        type: {\n          name: \"String\"\n        }\n      },\n      oracleTtl: {\n        serializedName: \"oracle_ttl\",\n        type: {\n          name: \"Composite\",\n          className: \"RelativeTTL\"\n        }\n      },\n      accountId: {\n        serializedName: \"account_id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      abiVersion: {\n        serializedName: \"abi_version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      oracleId: {\n        serializedName: \"oracle_id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      query: {\n        serializedName: \"query\",\n        type: {\n          name: \"String\"\n        }\n      },\n      queryTtl: {\n        serializedName: \"query_ttl\",\n        type: {\n          name: \"Composite\",\n          className: \"Ttl\"\n        }\n      },\n      responseTtl: {\n        serializedName: \"response_ttl\",\n        type: {\n          name: \"Composite\",\n          className: \"RelativeTTL\"\n        }\n      },\n      queryId: {\n        serializedName: \"query_id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      response: {\n        serializedName: \"response\",\n        type: {\n          name: \"String\"\n        }\n      },\n      commitmentId: {\n        serializedName: \"commitment_id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      name: {\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      nameSalt: {\n        serializedName: \"name_salt\",\n        type: {\n          name: \"String\"\n        }\n      },\n      nameFee: {\n        serializedName: \"name_fee\",\n        type: {\n          name: \"String\"\n        }\n      },\n      nameId: {\n        serializedName: \"name_id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      nameTtl: {\n        serializedName: \"name_ttl\",\n        type: {\n          name: \"String\"\n        }\n      },\n      pointers: {\n        serializedName: \"pointers\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"NamePointer\"\n            }\n          }\n        }\n      },\n      clientTtl: {\n        serializedName: \"client_ttl\",\n        type: {\n          name: \"String\"\n        }\n      },\n      ownerId: {\n        serializedName: \"owner_id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      code: {\n        serializedName: \"code\",\n        type: {\n          name: \"String\"\n        }\n      },\n      vmVersion: {\n        serializedName: \"vm_version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      deposit: {\n        serializedName: \"deposit\",\n        type: {\n          name: \"String\"\n        }\n      },\n      gas: {\n        serializedName: \"gas\",\n        type: {\n          name: \"String\"\n        }\n      },\n      gasPrice: {\n        serializedName: \"gas_price\",\n        type: {\n          name: \"String\"\n        }\n      },\n      callData: {\n        serializedName: \"call_data\",\n        type: {\n          name: \"String\"\n        }\n      },\n      callerId: {\n        serializedName: \"caller_id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      contractId: {\n        serializedName: \"contract_id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      authFun: {\n        constraints: {\n          Pattern: new RegExp(\"^(0x|0X)?[a-fA-F0-9]+$\")\n        },\n        serializedName: \"auth_fun\",\n        type: {\n          name: \"String\"\n        }\n      },\n      gaId: {\n        serializedName: \"ga_id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      authData: {\n        serializedName: \"auth_data\",\n        type: {\n          name: \"String\"\n        }\n      },\n      tx: {\n        serializedName: \"tx\",\n        type: {\n          name: \"Composite\",\n          className: \"SignedTx\"\n        }\n      },\n      payerId: {\n        serializedName: \"payer_id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"version\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      type: {\n        serializedName: \"type\",\n        required: true,\n        type: {\n          name: \"Enum\",\n          allowedValues: [\n            \"SpendTx\",\n            \"ChannelCreateTx\",\n            \"ChannelDepositTx\",\n            \"ChannelWithdrawTx\",\n            \"ChannelForceProgressTx\",\n            \"ChannelCloseMutualTx\",\n            \"ChannelCloseSoloTx\",\n            \"ChannelSlashTx\",\n            \"ChannelSettleTx\",\n            \"ChannelSnapshotSoloTx\",\n            \"ChannelSetDelegatesTx\",\n            \"OracleRegisterTx\",\n            \"OracleExtendTx\",\n            \"OracleQueryTx\",\n            \"OracleRespondTx\",\n            \"NamePreclaimTx\",\n            \"NameClaimTx\",\n            \"NameUpdateTx\",\n            \"NameTransferTx\",\n            \"NameRevokeTx\",\n            \"ContractCreateTx\",\n            \"ContractCallTx\",\n            \"GAAttachTx\",\n            \"GAMetaTx\",\n            \"PayingForTx\"\n          ]\n        }\n      }\n    }\n  }\n};\n\nexport const Delegates: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Delegates\",\n    modelProperties: {\n      initiator: {\n        serializedName: \"initiator\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      responder: {\n        serializedName: \"responder\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const OffChainUpdate: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"OffChainUpdate\",\n    uberParent: \"OffChainUpdate\",\n    polymorphicDiscriminator: {\n      serializedName: \"op\",\n      clientName: \"op\"\n    },\n    modelProperties: {\n      op: {\n        serializedName: \"op\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const RelativeTTL: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"RelativeTTL\",\n    modelProperties: {\n      type: {\n        defaultValue: \"delta\",\n        isConstant: true,\n        serializedName: \"type\",\n        type: {\n          name: \"String\"\n        }\n      },\n      value: {\n        serializedName: \"value\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const Ttl: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Ttl\",\n    modelProperties: {\n      type: {\n        serializedName: \"type\",\n        required: true,\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"delta\", \"block\"]\n        }\n      },\n      value: {\n        serializedName: \"value\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const NamePointer: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"NamePointer\",\n    modelProperties: {\n      key: {\n        serializedName: \"key\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      id: {\n        serializedName: \"id\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const CountResponse: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CountResponse\",\n    modelProperties: {\n      count: {\n        serializedName: \"count\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const Generation: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Generation\",\n    modelProperties: {\n      keyBlock: {\n        serializedName: \"key_block\",\n        type: {\n          name: \"Composite\",\n          className: \"KeyBlock\"\n        }\n      },\n      microBlocks: {\n        serializedName: \"micro_blocks\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const Account: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Account\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      balance: {\n        serializedName: \"balance\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      nonce: {\n        serializedName: \"nonce\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      payable: {\n        serializedName: \"payable\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      kind: {\n        serializedName: \"kind\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"basic\", \"generalized\"]\n        }\n      },\n      contractId: {\n        serializedName: \"contract_id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      authFun: {\n        serializedName: \"auth_fun\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const NextNonceResponse: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"NextNonceResponse\",\n    modelProperties: {\n      nextNonce: {\n        serializedName: \"next_nonce\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const DryRunInput: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DryRunInput\",\n    modelProperties: {\n      top: {\n        serializedName: \"top\",\n        type: {\n          name: \"String\"\n        }\n      },\n      accounts: {\n        serializedName: \"accounts\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"DryRunAccount\"\n            }\n          }\n        }\n      },\n      txs: {\n        serializedName: \"txs\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"DryRunInputItem\"\n            }\n          }\n        }\n      },\n      txEvents: {\n        defaultValue: false,\n        serializedName: \"tx_events\",\n        type: {\n          name: \"Boolean\"\n        }\n      }\n    }\n  }\n};\n\nexport const DryRunAccount: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DryRunAccount\",\n    modelProperties: {\n      pubKey: {\n        serializedName: \"pub_key\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      amount: {\n        serializedName: \"amount\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const DryRunInputItem: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DryRunInputItem\",\n    modelProperties: {\n      tx: {\n        serializedName: \"tx\",\n        type: {\n          name: \"String\"\n        }\n      },\n      callReq: {\n        serializedName: \"call_req\",\n        type: {\n          name: \"Composite\",\n          className: \"DryRunCallReq\"\n        }\n      }\n    }\n  }\n};\n\nexport const DryRunCallReq: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DryRunCallReq\",\n    modelProperties: {\n      calldata: {\n        serializedName: \"calldata\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      contract: {\n        serializedName: \"contract\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      amount: {\n        serializedName: \"amount\",\n        type: {\n          name: \"String\"\n        }\n      },\n      gas: {\n        serializedName: \"gas\",\n        type: {\n          name: \"String\"\n        }\n      },\n      caller: {\n        serializedName: \"caller\",\n        type: {\n          name: \"String\"\n        }\n      },\n      nonce: {\n        serializedName: \"nonce\",\n        type: {\n          name: \"String\"\n        }\n      },\n      abiVersion: {\n        serializedName: \"abi_version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      context: {\n        serializedName: \"context\",\n        type: {\n          name: \"Composite\",\n          className: \"DryRunCallContext\"\n        }\n      }\n    }\n  }\n};\n\nexport const DryRunCallContext: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DryRunCallContext\",\n    modelProperties: {\n      tx: {\n        serializedName: \"tx\",\n        type: {\n          name: \"String\"\n        }\n      },\n      txHash: {\n        serializedName: \"tx_hash\",\n        type: {\n          name: \"String\"\n        }\n      },\n      stateful: {\n        serializedName: \"stateful\",\n        type: {\n          name: \"Boolean\"\n        }\n      }\n    }\n  }\n};\n\nexport const DryRunResults: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DryRunResults\",\n    modelProperties: {\n      results: {\n        serializedName: \"results\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"DryRunResult\"\n            }\n          }\n        }\n      },\n      txEvents: {\n        serializedName: \"tx_events\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Dictionary\",\n              value: { type: { name: \"any\" } }\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const DryRunResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DryRunResult\",\n    modelProperties: {\n      type: {\n        serializedName: \"type\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      result: {\n        serializedName: \"result\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      reason: {\n        serializedName: \"reason\",\n        type: {\n          name: \"String\"\n        }\n      },\n      callObj: {\n        serializedName: \"call_obj\",\n        type: {\n          name: \"Composite\",\n          className: \"ContractCallObject\"\n        }\n      }\n    }\n  }\n};\n\nexport const ContractCallObject: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ContractCallObject\",\n    modelProperties: {\n      callerId: {\n        serializedName: \"caller_id\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      callerNonce: {\n        serializedName: \"caller_nonce\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      height: {\n        serializedName: \"height\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      contractId: {\n        serializedName: \"contract_id\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      gasPrice: {\n        serializedName: \"gas_price\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      gasUsed: {\n        serializedName: \"gas_used\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      log: {\n        serializedName: \"log\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Event\"\n            }\n          }\n        }\n      },\n      returnValue: {\n        serializedName: \"return_value\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      returnType: {\n        serializedName: \"return_type\",\n        required: true,\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"ok\", \"error\", \"revert\"]\n        }\n      }\n    }\n  }\n};\n\nexport const Event: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Event\",\n    modelProperties: {\n      address: {\n        serializedName: \"address\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      topics: {\n        serializedName: \"topics\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      data: {\n        serializedName: \"data\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const TxInfoObject: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"TxInfoObject\",\n    modelProperties: {\n      callInfo: {\n        serializedName: \"call_info\",\n        type: {\n          name: \"Composite\",\n          className: \"ContractCallObject\"\n        }\n      },\n      gaInfo: {\n        serializedName: \"ga_info\",\n        type: {\n          name: \"Composite\",\n          className: \"GAObject\"\n        }\n      },\n      txInfo: {\n        serializedName: \"tx_info\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const GAObject: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"GAObject\",\n    modelProperties: {\n      callerId: {\n        serializedName: \"caller_id\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      height: {\n        serializedName: \"height\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      gasPrice: {\n        serializedName: \"gas_price\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      gasUsed: {\n        serializedName: \"gas_used\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      returnValue: {\n        serializedName: \"return_value\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      returnType: {\n        serializedName: \"return_type\",\n        required: true,\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"ok\", \"error\"]\n        }\n      },\n      innerObject: {\n        serializedName: \"inner_object\",\n        type: {\n          name: \"Composite\",\n          className: \"TxInfoObject\"\n        }\n      }\n    }\n  }\n};\n\nexport const EncodedTx: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"EncodedTx\",\n    modelProperties: {\n      tx: {\n        serializedName: \"tx\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const PostTxResponse: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"PostTxResponse\",\n    modelProperties: {\n      txHash: {\n        serializedName: \"tx_hash\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ContractObject: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ContractObject\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      ownerId: {\n        serializedName: \"owner_id\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      vmVersion: {\n        serializedName: \"vm_version\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      abiVersion: {\n        serializedName: \"abi_version\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      active: {\n        serializedName: \"active\",\n        required: true,\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      referrerIds: {\n        serializedName: \"referrer_ids\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      deposit: {\n        serializedName: \"deposit\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ByteCode: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ByteCode\",\n    modelProperties: {\n      bytecode: {\n        serializedName: \"bytecode\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const PoI: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"PoI\",\n    modelProperties: {\n      poi: {\n        serializedName: \"poi\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const RegisteredOracle: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"RegisteredOracle\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      queryFormat: {\n        serializedName: \"query_format\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      responseFormat: {\n        serializedName: \"response_format\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      queryFee: {\n        serializedName: \"query_fee\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      ttl: {\n        serializedName: \"ttl\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      abiVersion: {\n        serializedName: \"abi_version\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const OracleQueries: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"OracleQueries\",\n    modelProperties: {\n      oracleQueries: {\n        serializedName: \"oracle_queries\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"OracleQuery\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const OracleQuery: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"OracleQuery\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      senderId: {\n        serializedName: \"sender_id\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      senderNonce: {\n        serializedName: \"sender_nonce\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      oracleId: {\n        serializedName: \"oracle_id\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      query: {\n        serializedName: \"query\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      response: {\n        serializedName: \"response\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      ttl: {\n        serializedName: \"ttl\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      responseTtl: {\n        serializedName: \"response_ttl\",\n        type: {\n          name: \"Composite\",\n          className: \"Ttl\"\n        }\n      },\n      fee: {\n        serializedName: \"fee\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const NameEntry: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"NameEntry\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      owner: {\n        serializedName: \"owner\",\n        type: {\n          name: \"String\"\n        }\n      },\n      ttl: {\n        serializedName: \"ttl\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      pointers: {\n        serializedName: \"pointers\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"NamePointer\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const Channel: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Channel\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      initiatorId: {\n        serializedName: \"initiator_id\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      responderId: {\n        serializedName: \"responder_id\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      channelAmount: {\n        serializedName: \"channel_amount\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      initiatorAmount: {\n        serializedName: \"initiator_amount\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      responderAmount: {\n        serializedName: \"responder_amount\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      channelReserve: {\n        serializedName: \"channel_reserve\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      delegateIds: {\n        serializedName: \"delegate_ids\",\n        type: {\n          name: \"Composite\",\n          className: \"Delegates\"\n        }\n      },\n      stateHash: {\n        serializedName: \"state_hash\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      round: {\n        serializedName: \"round\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      soloRound: {\n        serializedName: \"solo_round\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      lockPeriod: {\n        serializedName: \"lock_period\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      lockedUntil: {\n        serializedName: \"locked_until\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const PeerPubKey: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"PeerPubKey\",\n    modelProperties: {\n      pubkey: {\n        serializedName: \"pubkey\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const Status: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Status\",\n    modelProperties: {\n      genesisKeyBlockHash: {\n        serializedName: \"genesis_key_block_hash\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      solutions: {\n        serializedName: \"solutions\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      difficulty: {\n        serializedName: \"difficulty\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      syncing: {\n        serializedName: \"syncing\",\n        required: true,\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      syncProgress: {\n        constraints: {\n          InclusiveMaximum: 100,\n          InclusiveMinimum: 0\n        },\n        serializedName: \"sync_progress\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      listening: {\n        serializedName: \"listening\",\n        required: true,\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      protocols: {\n        serializedName: \"protocols\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Protocol\"\n            }\n          }\n        }\n      },\n      nodeVersion: {\n        serializedName: \"node_version\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      nodeRevision: {\n        serializedName: \"node_revision\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      peerCount: {\n        serializedName: \"peer_count\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      peerConnections: {\n        serializedName: \"peer_connections\",\n        type: {\n          name: \"Composite\",\n          className: \"PeerConnections\"\n        }\n      },\n      pendingTransactionsCount: {\n        serializedName: \"pending_transactions_count\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      networkId: {\n        serializedName: \"network_id\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      peerPubkey: {\n        serializedName: \"peer_pubkey\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      topKeyBlockHash: {\n        serializedName: \"top_key_block_hash\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      topBlockHeight: {\n        serializedName: \"top_block_height\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const Protocol: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Protocol\",\n    modelProperties: {\n      version: {\n        serializedName: \"version\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      effectiveAtHeight: {\n        serializedName: \"effective_at_height\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const PeerConnections: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"PeerConnections\",\n    modelProperties: {\n      inbound: {\n        serializedName: \"inbound\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      outbound: {\n        serializedName: \"outbound\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const SpendTx: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SpendTx\",\n    modelProperties: {\n      recipientId: {\n        serializedName: \"recipient_id\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      amount: {\n        serializedName: \"amount\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      fee: {\n        serializedName: \"fee\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      ttl: {\n        serializedName: \"ttl\",\n        type: {\n          name: \"String\"\n        }\n      },\n      senderId: {\n        serializedName: \"sender_id\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      nonce: {\n        serializedName: \"nonce\",\n        type: {\n          name: \"String\"\n        }\n      },\n      payload: {\n        serializedName: \"payload\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const OracleRegisterTx: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"OracleRegisterTx\",\n    modelProperties: {\n      queryFormat: {\n        serializedName: \"query_format\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      responseFormat: {\n        serializedName: \"response_format\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      queryFee: {\n        serializedName: \"query_fee\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      oracleTtl: {\n        serializedName: \"oracle_ttl\",\n        type: {\n          name: \"Composite\",\n          className: \"Ttl\"\n        }\n      },\n      accountId: {\n        serializedName: \"account_id\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      nonce: {\n        serializedName: \"nonce\",\n        type: {\n          name: \"String\"\n        }\n      },\n      fee: {\n        serializedName: \"fee\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      ttl: {\n        serializedName: \"ttl\",\n        type: {\n          name: \"String\"\n        }\n      },\n      abiVersion: {\n        serializedName: \"abi_version\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const OracleExtendTx: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"OracleExtendTx\",\n    modelProperties: {\n      fee: {\n        serializedName: \"fee\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      oracleTtl: {\n        serializedName: \"oracle_ttl\",\n        type: {\n          name: \"Composite\",\n          className: \"RelativeTTL\"\n        }\n      },\n      oracleId: {\n        serializedName: \"oracle_id\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      nonce: {\n        serializedName: \"nonce\",\n        type: {\n          name: \"String\"\n        }\n      },\n      ttl: {\n        serializedName: \"ttl\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const OracleQueryTx: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"OracleQueryTx\",\n    modelProperties: {\n      oracleId: {\n        serializedName: \"oracle_id\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      query: {\n        serializedName: \"query\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      queryFee: {\n        serializedName: \"query_fee\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      queryTtl: {\n        serializedName: \"query_ttl\",\n        type: {\n          name: \"Composite\",\n          className: \"Ttl\"\n        }\n      },\n      responseTtl: {\n        serializedName: \"response_ttl\",\n        type: {\n          name: \"Composite\",\n          className: \"RelativeTTL\"\n        }\n      },\n      fee: {\n        serializedName: \"fee\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      ttl: {\n        serializedName: \"ttl\",\n        type: {\n          name: \"String\"\n        }\n      },\n      senderId: {\n        serializedName: \"sender_id\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      nonce: {\n        serializedName: \"nonce\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const OracleRespondTx: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"OracleRespondTx\",\n    modelProperties: {\n      queryId: {\n        serializedName: \"query_id\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      response: {\n        serializedName: \"response\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      responseTtl: {\n        serializedName: \"response_ttl\",\n        type: {\n          name: \"Composite\",\n          className: \"RelativeTTL\"\n        }\n      },\n      fee: {\n        serializedName: \"fee\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      ttl: {\n        serializedName: \"ttl\",\n        type: {\n          name: \"String\"\n        }\n      },\n      oracleId: {\n        serializedName: \"oracle_id\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      nonce: {\n        serializedName: \"nonce\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const NamePreclaimTx: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"NamePreclaimTx\",\n    modelProperties: {\n      commitmentId: {\n        serializedName: \"commitment_id\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      fee: {\n        serializedName: \"fee\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      ttl: {\n        serializedName: \"ttl\",\n        type: {\n          name: \"String\"\n        }\n      },\n      accountId: {\n        serializedName: \"account_id\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      nonce: {\n        serializedName: \"nonce\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const NameClaimTx: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"NameClaimTx\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      nameSalt: {\n        serializedName: \"name_salt\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      nameFee: {\n        serializedName: \"name_fee\",\n        type: {\n          name: \"String\"\n        }\n      },\n      fee: {\n        serializedName: \"fee\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      ttl: {\n        serializedName: \"ttl\",\n        type: {\n          name: \"String\"\n        }\n      },\n      accountId: {\n        serializedName: \"account_id\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      nonce: {\n        serializedName: \"nonce\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const NameUpdateTx: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"NameUpdateTx\",\n    modelProperties: {\n      nameId: {\n        serializedName: \"name_id\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      nameTtl: {\n        serializedName: \"name_ttl\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      pointers: {\n        serializedName: \"pointers\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"NamePointer\"\n            }\n          }\n        }\n      },\n      clientTtl: {\n        serializedName: \"client_ttl\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      fee: {\n        serializedName: \"fee\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      ttl: {\n        serializedName: \"ttl\",\n        type: {\n          name: \"String\"\n        }\n      },\n      accountId: {\n        serializedName: \"account_id\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      nonce: {\n        serializedName: \"nonce\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const NameTransferTx: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"NameTransferTx\",\n    modelProperties: {\n      nameId: {\n        serializedName: \"name_id\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      recipientId: {\n        serializedName: \"recipient_id\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      fee: {\n        serializedName: \"fee\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      ttl: {\n        serializedName: \"ttl\",\n        type: {\n          name: \"String\"\n        }\n      },\n      accountId: {\n        serializedName: \"account_id\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      nonce: {\n        serializedName: \"nonce\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const NameRevokeTx: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"NameRevokeTx\",\n    modelProperties: {\n      nameId: {\n        serializedName: \"name_id\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      fee: {\n        serializedName: \"fee\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      ttl: {\n        serializedName: \"ttl\",\n        type: {\n          name: \"String\"\n        }\n      },\n      accountId: {\n        serializedName: \"account_id\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      nonce: {\n        serializedName: \"nonce\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const CommitmentId: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CommitmentId\",\n    modelProperties: {\n      commitmentId: {\n        serializedName: \"commitment_id\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const NameHash: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"NameHash\",\n    modelProperties: {\n      nameId: {\n        serializedName: \"name_id\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ChannelCreateTx: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ChannelCreateTx\",\n    modelProperties: {\n      initiatorId: {\n        serializedName: \"initiator_id\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      initiatorAmount: {\n        serializedName: \"initiator_amount\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      responderId: {\n        serializedName: \"responder_id\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      responderAmount: {\n        serializedName: \"responder_amount\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      channelReserve: {\n        serializedName: \"channel_reserve\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      lockPeriod: {\n        serializedName: \"lock_period\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      ttl: {\n        serializedName: \"ttl\",\n        type: {\n          name: \"String\"\n        }\n      },\n      fee: {\n        serializedName: \"fee\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      nonce: {\n        serializedName: \"nonce\",\n        type: {\n          name: \"String\"\n        }\n      },\n      stateHash: {\n        serializedName: \"state_hash\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      delegateIds: {\n        serializedName: \"delegate_ids\",\n        type: {\n          name: \"Composite\",\n          className: \"Delegates\"\n        }\n      }\n    }\n  }\n};\n\nexport const ChannelDepositTx: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ChannelDepositTx\",\n    modelProperties: {\n      channelId: {\n        serializedName: \"channel_id\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      fromId: {\n        serializedName: \"from_id\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      amount: {\n        serializedName: \"amount\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      ttl: {\n        serializedName: \"ttl\",\n        type: {\n          name: \"String\"\n        }\n      },\n      fee: {\n        serializedName: \"fee\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      nonce: {\n        serializedName: \"nonce\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      stateHash: {\n        serializedName: \"state_hash\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      round: {\n        serializedName: \"round\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ChannelWithdrawTx: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ChannelWithdrawTx\",\n    modelProperties: {\n      channelId: {\n        serializedName: \"channel_id\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      toId: {\n        serializedName: \"to_id\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      amount: {\n        serializedName: \"amount\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      ttl: {\n        serializedName: \"ttl\",\n        type: {\n          name: \"String\"\n        }\n      },\n      fee: {\n        serializedName: \"fee\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      nonce: {\n        serializedName: \"nonce\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      stateHash: {\n        serializedName: \"state_hash\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      round: {\n        serializedName: \"round\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ChannelForceProgressTx: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ChannelForceProgressTx\",\n    modelProperties: {\n      channelId: {\n        serializedName: \"channel_id\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      fromId: {\n        serializedName: \"from_id\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      payload: {\n        serializedName: \"payload\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      round: {\n        serializedName: \"round\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      update: {\n        serializedName: \"update\",\n        type: {\n          name: \"Composite\",\n          className: \"OffChainUpdate\"\n        }\n      },\n      stateHash: {\n        serializedName: \"state_hash\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      ttl: {\n        serializedName: \"ttl\",\n        type: {\n          name: \"String\"\n        }\n      },\n      fee: {\n        serializedName: \"fee\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      nonce: {\n        serializedName: \"nonce\",\n        type: {\n          name: \"String\"\n        }\n      },\n      offchainTrees: {\n        serializedName: \"offchain_trees\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ChannelCloseMutualTx: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ChannelCloseMutualTx\",\n    modelProperties: {\n      channelId: {\n        serializedName: \"channel_id\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      fromId: {\n        serializedName: \"from_id\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      initiatorAmountFinal: {\n        serializedName: \"initiator_amount_final\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      responderAmountFinal: {\n        serializedName: \"responder_amount_final\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      ttl: {\n        serializedName: \"ttl\",\n        type: {\n          name: \"String\"\n        }\n      },\n      fee: {\n        serializedName: \"fee\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      nonce: {\n        serializedName: \"nonce\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ChannelCloseSoloTx: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ChannelCloseSoloTx\",\n    modelProperties: {\n      channelId: {\n        serializedName: \"channel_id\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      fromId: {\n        serializedName: \"from_id\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      payload: {\n        serializedName: \"payload\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      ttl: {\n        serializedName: \"ttl\",\n        type: {\n          name: \"String\"\n        }\n      },\n      fee: {\n        serializedName: \"fee\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      nonce: {\n        serializedName: \"nonce\",\n        type: {\n          name: \"String\"\n        }\n      },\n      poi: {\n        serializedName: \"poi\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ChannelSlashTx: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ChannelSlashTx\",\n    modelProperties: {\n      channelId: {\n        serializedName: \"channel_id\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      fromId: {\n        serializedName: \"from_id\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      payload: {\n        serializedName: \"payload\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      ttl: {\n        serializedName: \"ttl\",\n        type: {\n          name: \"String\"\n        }\n      },\n      fee: {\n        serializedName: \"fee\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      nonce: {\n        serializedName: \"nonce\",\n        type: {\n          name: \"String\"\n        }\n      },\n      poi: {\n        serializedName: \"poi\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ChannelSettleTx: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ChannelSettleTx\",\n    modelProperties: {\n      channelId: {\n        serializedName: \"channel_id\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      fromId: {\n        serializedName: \"from_id\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      initiatorAmountFinal: {\n        serializedName: \"initiator_amount_final\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      responderAmountFinal: {\n        serializedName: \"responder_amount_final\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      ttl: {\n        serializedName: \"ttl\",\n        type: {\n          name: \"String\"\n        }\n      },\n      fee: {\n        serializedName: \"fee\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      nonce: {\n        serializedName: \"nonce\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ChannelSnapshotSoloTx: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ChannelSnapshotSoloTx\",\n    modelProperties: {\n      channelId: {\n        serializedName: \"channel_id\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      fromId: {\n        serializedName: \"from_id\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      payload: {\n        serializedName: \"payload\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      ttl: {\n        serializedName: \"ttl\",\n        type: {\n          name: \"String\"\n        }\n      },\n      fee: {\n        serializedName: \"fee\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      nonce: {\n        serializedName: \"nonce\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ChannelSetDelegatesTx: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ChannelSetDelegatesTx\",\n    modelProperties: {\n      channelId: {\n        serializedName: \"channel_id\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      fromId: {\n        serializedName: \"from_id\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      initiatorDelegateIds: {\n        serializedName: \"initiator_delegate_ids\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      responderDelegateIds: {\n        serializedName: \"responder_delegate_ids\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      stateHash: {\n        serializedName: \"state_hash\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      round: {\n        serializedName: \"round\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      payload: {\n        serializedName: \"payload\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      ttl: {\n        serializedName: \"ttl\",\n        type: {\n          name: \"String\"\n        }\n      },\n      fee: {\n        serializedName: \"fee\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      nonce: {\n        serializedName: \"nonce\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const PubKey: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"PubKey\",\n    modelProperties: {\n      pubKey: {\n        serializedName: \"pub_key\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const PeerDetails: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"PeerDetails\",\n    modelProperties: {\n      host: {\n        serializedName: \"host\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      port: {\n        serializedName: \"port\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      firstSeen: {\n        serializedName: \"first_seen\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      lastSeen: {\n        serializedName: \"last_seen\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      genesisHash: {\n        serializedName: \"genesis_hash\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      topHash: {\n        serializedName: \"top_hash\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      topDifficulty: {\n        serializedName: \"top_difficulty\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      networkId: {\n        serializedName: \"network_id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      nodeVersion: {\n        serializedName: \"node_version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      nodeRevision: {\n        serializedName: \"node_revision\",\n        type: {\n          name: \"String\"\n        }\n      },\n      nodeVendor: {\n        serializedName: \"node_vendor\",\n        type: {\n          name: \"String\"\n        }\n      },\n      nodeOs: {\n        serializedName: \"node_os\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const Peers: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Peers\",\n    modelProperties: {\n      peers: {\n        serializedName: \"peers\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      blocked: {\n        serializedName: \"blocked\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const PeerCount: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"PeerCount\",\n    modelProperties: {\n      connected: {\n        serializedName: \"connected\",\n        type: {\n          name: \"Composite\",\n          className: \"PeerCountConnected\"\n        }\n      },\n      available: {\n        serializedName: \"available\",\n        type: {\n          name: \"Composite\",\n          className: \"PeerCountAvailable\"\n        }\n      },\n      blocked: {\n        serializedName: \"blocked\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const PeerCountConnected: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"PeerCountConnected\",\n    modelProperties: {\n      inbound: {\n        serializedName: \"inbound\",\n        type: {\n          name: \"String\"\n        }\n      },\n      outbound: {\n        serializedName: \"outbound\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const PeerCountAvailable: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"PeerCountAvailable\",\n    modelProperties: {\n      verified: {\n        serializedName: \"verified\",\n        type: {\n          name: \"String\"\n        }\n      },\n      unverified: {\n        serializedName: \"unverified\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ContractCreateTx: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ContractCreateTx\",\n    modelProperties: {\n      ownerId: {\n        serializedName: \"owner_id\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      nonce: {\n        serializedName: \"nonce\",\n        type: {\n          name: \"String\"\n        }\n      },\n      code: {\n        serializedName: \"code\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      vmVersion: {\n        serializedName: \"vm_version\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      abiVersion: {\n        serializedName: \"abi_version\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      deposit: {\n        serializedName: \"deposit\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      amount: {\n        serializedName: \"amount\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      gas: {\n        serializedName: \"gas\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      gasPrice: {\n        serializedName: \"gas_price\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      fee: {\n        serializedName: \"fee\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      ttl: {\n        serializedName: \"ttl\",\n        type: {\n          name: \"String\"\n        }\n      },\n      callData: {\n        serializedName: \"call_data\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ContractCallTx: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ContractCallTx\",\n    modelProperties: {\n      callerId: {\n        serializedName: \"caller_id\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      nonce: {\n        serializedName: \"nonce\",\n        type: {\n          name: \"String\"\n        }\n      },\n      contractId: {\n        serializedName: \"contract_id\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      abiVersion: {\n        serializedName: \"abi_version\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      fee: {\n        serializedName: \"fee\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      ttl: {\n        serializedName: \"ttl\",\n        type: {\n          name: \"String\"\n        }\n      },\n      amount: {\n        serializedName: \"amount\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      gas: {\n        serializedName: \"gas\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      gasPrice: {\n        serializedName: \"gas_price\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      callData: {\n        serializedName: \"call_data\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const UnsignedTx: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"UnsignedTx\",\n    modelProperties: {\n      tx: {\n        serializedName: \"tx\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const TokenSupply: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"TokenSupply\",\n    modelProperties: {\n      accounts: {\n        serializedName: \"accounts\",\n        type: {\n          name: \"String\"\n        }\n      },\n      contracts: {\n        serializedName: \"contracts\",\n        type: {\n          name: \"String\"\n        }\n      },\n      contractOracles: {\n        serializedName: \"contract_oracles\",\n        type: {\n          name: \"String\"\n        }\n      },\n      locked: {\n        serializedName: \"locked\",\n        type: {\n          name: \"String\"\n        }\n      },\n      oracles: {\n        serializedName: \"oracles\",\n        type: {\n          name: \"String\"\n        }\n      },\n      oracleQueries: {\n        serializedName: \"oracle_queries\",\n        type: {\n          name: \"String\"\n        }\n      },\n      pendingRewards: {\n        serializedName: \"pending_rewards\",\n        type: {\n          name: \"String\"\n        }\n      },\n      total: {\n        serializedName: \"total\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const GAAttachTx: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"GAAttachTx\",\n    modelProperties: {\n      ownerId: {\n        serializedName: \"owner_id\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      nonce: {\n        serializedName: \"nonce\",\n        type: {\n          name: \"String\"\n        }\n      },\n      code: {\n        serializedName: \"code\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      vmVersion: {\n        serializedName: \"vm_version\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      abiVersion: {\n        serializedName: \"abi_version\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      gas: {\n        serializedName: \"gas\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      gasPrice: {\n        serializedName: \"gas_price\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      fee: {\n        serializedName: \"fee\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      ttl: {\n        serializedName: \"ttl\",\n        type: {\n          name: \"String\"\n        }\n      },\n      callData: {\n        serializedName: \"call_data\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      authFun: {\n        constraints: {\n          Pattern: new RegExp(\"^(0x|0X)?[a-fA-F0-9]+$\")\n        },\n        serializedName: \"auth_fun\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const GAMetaTx: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"GAMetaTx\",\n    modelProperties: {\n      gaId: {\n        serializedName: \"ga_id\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      abiVersion: {\n        serializedName: \"abi_version\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      gas: {\n        serializedName: \"gas\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      gasPrice: {\n        serializedName: \"gas_price\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      fee: {\n        serializedName: \"fee\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      ttl: {\n        serializedName: \"ttl\",\n        type: {\n          name: \"String\"\n        }\n      },\n      authData: {\n        serializedName: \"auth_data\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      tx: {\n        serializedName: \"tx\",\n        type: {\n          name: \"Composite\",\n          className: \"SignedTx\"\n        }\n      }\n    }\n  }\n};\n\nexport const PayingForTx: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"PayingForTx\",\n    modelProperties: {\n      payerId: {\n        serializedName: \"payer_id\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      fee: {\n        serializedName: \"fee\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      nonce: {\n        serializedName: \"nonce\",\n        type: {\n          name: \"String\"\n        }\n      },\n      tx: {\n        serializedName: \"tx\",\n        type: {\n          name: \"Composite\",\n          className: \"SignedTx\"\n        }\n      }\n    }\n  }\n};\n\nexport const CheckTxInPoolResponse: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CheckTxInPoolResponse\",\n    modelProperties: {\n      status: {\n        serializedName: \"status\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const OffChainTransfer: coreClient.CompositeMapper = {\n  serializedName: \"OffChainTransfer\",\n  type: {\n    name: \"Composite\",\n    className: \"OffChainTransfer\",\n    uberParent: \"OffChainUpdate\",\n    polymorphicDiscriminator: OffChainUpdate.type.polymorphicDiscriminator,\n    modelProperties: {\n      ...OffChainUpdate.type.modelProperties,\n      from: {\n        serializedName: \"from\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      to: {\n        serializedName: \"to\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      amount: {\n        serializedName: \"amount\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const OffChainWithdrawal: coreClient.CompositeMapper = {\n  serializedName: \"OffChainWithdrawal\",\n  type: {\n    name: \"Composite\",\n    className: \"OffChainWithdrawal\",\n    uberParent: \"OffChainUpdate\",\n    polymorphicDiscriminator: OffChainUpdate.type.polymorphicDiscriminator,\n    modelProperties: {\n      ...OffChainUpdate.type.modelProperties,\n      to: {\n        serializedName: \"to\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      amount: {\n        serializedName: \"amount\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const OffChainDeposit: coreClient.CompositeMapper = {\n  serializedName: \"OffChainDeposit\",\n  type: {\n    name: \"Composite\",\n    className: \"OffChainDeposit\",\n    uberParent: \"OffChainUpdate\",\n    polymorphicDiscriminator: OffChainUpdate.type.polymorphicDiscriminator,\n    modelProperties: {\n      ...OffChainUpdate.type.modelProperties,\n      from: {\n        serializedName: \"from\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      amount: {\n        serializedName: \"amount\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const OffChainNewContract: coreClient.CompositeMapper = {\n  serializedName: \"OffChainNewContract\",\n  type: {\n    name: \"Composite\",\n    className: \"OffChainNewContract\",\n    uberParent: \"OffChainUpdate\",\n    polymorphicDiscriminator: OffChainUpdate.type.polymorphicDiscriminator,\n    modelProperties: {\n      ...OffChainUpdate.type.modelProperties,\n      owner: {\n        serializedName: \"owner\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      vmVersion: {\n        serializedName: \"vm_version\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      abiVersion: {\n        serializedName: \"abi_version\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      code: {\n        serializedName: \"code\",\n        type: {\n          name: \"Composite\",\n          className: \"ByteCode\"\n        }\n      },\n      deposit: {\n        serializedName: \"deposit\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      callData: {\n        serializedName: \"call_data\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const OffChainCallContract: coreClient.CompositeMapper = {\n  serializedName: \"OffChainCallContract\",\n  type: {\n    name: \"Composite\",\n    className: \"OffChainCallContract\",\n    uberParent: \"OffChainUpdate\",\n    polymorphicDiscriminator: OffChainUpdate.type.polymorphicDiscriminator,\n    modelProperties: {\n      ...OffChainUpdate.type.modelProperties,\n      caller: {\n        serializedName: \"caller\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      contract: {\n        serializedName: \"contract\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      abiVersion: {\n        serializedName: \"abi_version\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      amount: {\n        serializedName: \"amount\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      gas: {\n        serializedName: \"gas\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      gasPrice: {\n        serializedName: \"gas_price\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      callData: {\n        serializedName: \"call_data\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const CreateContractUnsignedTx: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CreateContractUnsignedTx\",\n    modelProperties: {\n      ...UnsignedTx.type.modelProperties,\n      contractId: {\n        serializedName: \"contract_id\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport let discriminators = {\n  \"Tx.Tx\": Tx,\n  OffChainUpdate: OffChainUpdate,\n  \"OffChainUpdate.OffChainTransfer\": OffChainTransfer,\n  \"OffChainUpdate.OffChainWithdrawal\": OffChainWithdrawal,\n  \"OffChainUpdate.OffChainDeposit\": OffChainDeposit,\n  \"OffChainUpdate.OffChainNewContract\": OffChainNewContract,\n  \"OffChainUpdate.OffChainCallContract\": OffChainCallContract\n};\n","import {\n  OperationParameter,\n  OperationURLParameter,\n  OperationQueryParameter\n} from \"@azure/core-client\";\nimport {\n  DryRunInput as DryRunInputMapper,\n  EncodedTx as EncodedTxMapper\n} from \"../models/mappers\";\n\nexport const accept: OperationParameter = {\n  parameterPath: \"accept\",\n  mapper: {\n    defaultValue: \"application/json\",\n    isConstant: true,\n    serializedName: \"Accept\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const $host: OperationURLParameter = {\n  parameterPath: \"$host\",\n  mapper: {\n    serializedName: \"$host\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  },\n  skipEncoding: true\n};\n\nexport const intAsString: OperationQueryParameter = {\n  parameterPath: \"intAsString\",\n  mapper: {\n    defaultValue: false,\n    serializedName: \"int-as-string\",\n    type: {\n      name: \"Boolean\"\n    }\n  }\n};\n\nexport const hash: OperationURLParameter = {\n  parameterPath: \"hash\",\n  mapper: {\n    serializedName: \"hash\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const height: OperationURLParameter = {\n  parameterPath: \"height\",\n  mapper: {\n    constraints: {\n      InclusiveMaximum: 18446744073709552000,\n      InclusiveMinimum: 0\n    },\n    serializedName: \"height\",\n    required: true,\n    type: {\n      name: \"Number\"\n    }\n  }\n};\n\nexport const index: OperationURLParameter = {\n  parameterPath: \"index\",\n  mapper: {\n    constraints: {\n      InclusiveMinimum: 1\n    },\n    serializedName: \"index\",\n    required: true,\n    type: {\n      name: \"Number\"\n    }\n  }\n};\n\nexport const pubkey: OperationURLParameter = {\n  parameterPath: \"pubkey\",\n  mapper: {\n    serializedName: \"pubkey\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const strategy: OperationQueryParameter = {\n  parameterPath: [\"options\", \"strategy\"],\n  mapper: {\n    defaultValue: \"max\",\n    serializedName: \"strategy\",\n    type: {\n      name: \"Enum\",\n      allowedValues: [\"max\", \"continuity\"]\n    }\n  }\n};\n\nexport const contentType: OperationParameter = {\n  parameterPath: [\"options\", \"contentType\"],\n  mapper: {\n    defaultValue: \"application/json\",\n    isConstant: true,\n    serializedName: \"Content-Type\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const body: OperationParameter = {\n  parameterPath: \"body\",\n  mapper: DryRunInputMapper\n};\n\nexport const body1: OperationParameter = {\n  parameterPath: \"body\",\n  mapper: EncodedTxMapper\n};\n\nexport const from: OperationQueryParameter = {\n  parameterPath: [\"options\", \"from\"],\n  mapper: {\n    serializedName: \"from\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const limit: OperationQueryParameter = {\n  parameterPath: [\"options\", \"limit\"],\n  mapper: {\n    defaultValue: 20,\n    constraints: {\n      InclusiveMaximum: 1000,\n      InclusiveMinimum: 1\n    },\n    serializedName: \"limit\",\n    type: {\n      name: \"Number\"\n    }\n  }\n};\n\nexport const type: OperationQueryParameter = {\n  parameterPath: [\"options\", \"type\"],\n  mapper: {\n    defaultValue: \"all\",\n    serializedName: \"type\",\n    type: {\n      name: \"Enum\",\n      allowedValues: [\"open\", \"closed\", \"all\"]\n    }\n  }\n};\n\nexport const queryId: OperationURLParameter = {\n  parameterPath: \"queryId\",\n  mapper: {\n    serializedName: \"query-id\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const name: OperationURLParameter = {\n  parameterPath: \"name\",\n  mapper: {\n    serializedName: \"name\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n","import * as coreClient from \"@azure/core-client\";\nimport * as Parameters from \"./models/parameters\";\nimport * as Mappers from \"./models/mappers\";\nimport {\n  NodeOptionalParams,\n  GetTopHeaderOptionalParams,\n  GetTopHeaderResponse,\n  GetCurrentKeyBlockOptionalParams,\n  GetCurrentKeyBlockResponse,\n  GetCurrentKeyBlockHashOptionalParams,\n  GetCurrentKeyBlockHashResponse,\n  GetCurrentKeyBlockHeightOptionalParams,\n  GetCurrentKeyBlockHeightResponse,\n  GetPendingKeyBlockOptionalParams,\n  GetPendingKeyBlockResponse,\n  GetKeyBlockByHashOptionalParams,\n  GetKeyBlockByHashResponse,\n  GetKeyBlockByHeightOptionalParams,\n  GetKeyBlockByHeightResponse,\n  GetMicroBlockHeaderByHashOptionalParams,\n  GetMicroBlockHeaderByHashResponse,\n  GetMicroBlockTransactionsByHashOptionalParams,\n  GetMicroBlockTransactionsByHashResponse,\n  GetMicroBlockTransactionByHashAndIndexOptionalParams,\n  GetMicroBlockTransactionByHashAndIndexResponse,\n  GetMicroBlockTransactionsCountByHashOptionalParams,\n  GetMicroBlockTransactionsCountByHashResponse,\n  GetCurrentGenerationOptionalParams,\n  GetCurrentGenerationResponse,\n  GetGenerationByHashOptionalParams,\n  GetGenerationByHashResponse,\n  GetGenerationByHeightOptionalParams,\n  GetGenerationByHeightResponse,\n  GetAccountByPubkeyOptionalParams,\n  GetAccountByPubkeyResponse,\n  GetAccountByPubkeyAndHeightOptionalParams,\n  GetAccountByPubkeyAndHeightResponse,\n  GetAccountByPubkeyAndHashOptionalParams,\n  GetAccountByPubkeyAndHashResponse,\n  GetPendingAccountTransactionsByPubkeyOptionalParams,\n  GetPendingAccountTransactionsByPubkeyResponse,\n  GetAccountNextNonceOptionalParams,\n  GetAccountNextNonceResponse,\n  DryRunInput,\n  ProtectedDryRunTxsOptionalParams,\n  ProtectedDryRunTxsResponse,\n  GetTransactionByHashOptionalParams,\n  GetTransactionByHashResponse,\n  GetTransactionInfoByHashOptionalParams,\n  GetTransactionInfoByHashResponse,\n  EncodedTx,\n  PostTransactionOptionalParams,\n  PostTransactionResponse,\n  GetContractOptionalParams,\n  GetContractResponse,\n  GetContractCodeOptionalParams,\n  GetContractCodeResponse,\n  GetContractPoIOptionalParams,\n  GetContractPoIResponse,\n  GetOracleByPubkeyOptionalParams,\n  GetOracleByPubkeyResponse,\n  GetOracleQueriesByPubkeyOptionalParams,\n  GetOracleQueriesByPubkeyResponse,\n  GetOracleQueryByPubkeyAndQueryIdOptionalParams,\n  GetOracleQueryByPubkeyAndQueryIdResponse,\n  GetNameEntryByNameOptionalParams,\n  GetNameEntryByNameResponse,\n  GetChannelByPubkeyOptionalParams,\n  GetChannelByPubkeyResponse,\n  GetPeerPubkeyOptionalParams,\n  GetPeerPubkeyResponse,\n  GetStatusOptionalParams,\n  GetStatusResponse,\n  GetChainEndsOptionalParams,\n  GetChainEndsResponse\n} from \"./models\";\n\nexport class Node extends coreClient.ServiceClient {\n  $host: string;\n  intAsString?: boolean;\n\n  /**\n   * Initializes a new instance of the Node class.\n   * @param $host server parameter\n   * @param options The parameter options\n   */\n  constructor($host: string, options?: NodeOptionalParams) {\n    if ($host === undefined) {\n      throw new Error(\"'$host' cannot be null\");\n    }\n\n    // Initializing default values for options\n    if (!options) {\n      options = {};\n    }\n    const defaults: NodeOptionalParams = {\n      requestContentType: \"application/json; charset=utf-8\"\n    };\n\n    const packageDetails = `azsdk-js-node/1.0.0-beta.1`;\n    const userAgentPrefix =\n      options.userAgentOptions && options.userAgentOptions.userAgentPrefix\n        ? `${options.userAgentOptions.userAgentPrefix} ${packageDetails}`\n        : `${packageDetails}`;\n\n    const optionsWithDefaults = {\n      ...defaults,\n      ...options,\n      userAgentOptions: {\n        userAgentPrefix\n      },\n      endpoint: options.endpoint ?? options.baseUri ?? \"{$host}\"\n    };\n    super(optionsWithDefaults);\n    // Parameter assignments\n    this.$host = $host;\n  }\n\n  /**\n   * Get the top header (either key or micro block)\n   * @param options The options parameters.\n   */\n  getTopHeader(\n    options?: GetTopHeaderOptionalParams\n  ): Promise<GetTopHeaderResponse> {\n    return this.sendOperationRequest({ options }, getTopHeaderOperationSpec);\n  }\n\n  /**\n   * Get the current key block\n   * @param options The options parameters.\n   */\n  getCurrentKeyBlock(\n    options?: GetCurrentKeyBlockOptionalParams\n  ): Promise<GetCurrentKeyBlockResponse> {\n    return this.sendOperationRequest(\n      { options },\n      getCurrentKeyBlockOperationSpec\n    );\n  }\n\n  /**\n   * Get the hash of the current key block\n   * @param options The options parameters.\n   */\n  getCurrentKeyBlockHash(\n    options?: GetCurrentKeyBlockHashOptionalParams\n  ): Promise<GetCurrentKeyBlockHashResponse> {\n    return this.sendOperationRequest(\n      { options },\n      getCurrentKeyBlockHashOperationSpec\n    );\n  }\n\n  /**\n   * Get the height of the current key block\n   * @param options The options parameters.\n   */\n  getCurrentKeyBlockHeight(\n    options?: GetCurrentKeyBlockHeightOptionalParams\n  ): Promise<GetCurrentKeyBlockHeightResponse> {\n    return this.sendOperationRequest(\n      { options },\n      getCurrentKeyBlockHeightOperationSpec\n    );\n  }\n\n  /**\n   * Get the pending key block\n   * @param options The options parameters.\n   */\n  getPendingKeyBlock(\n    options?: GetPendingKeyBlockOptionalParams\n  ): Promise<GetPendingKeyBlockResponse> {\n    return this.sendOperationRequest(\n      { options },\n      getPendingKeyBlockOperationSpec\n    );\n  }\n\n  /**\n   * Get a key block by hash\n   * @param hash The hash of the block - either a keyblock or a microblock\n   * @param options The options parameters.\n   */\n  getKeyBlockByHash(\n    hash: string,\n    options?: GetKeyBlockByHashOptionalParams\n  ): Promise<GetKeyBlockByHashResponse> {\n    return this.sendOperationRequest(\n      { hash, options },\n      getKeyBlockByHashOperationSpec\n    );\n  }\n\n  /**\n   * Get a key block by height\n   * @param height The height\n   * @param options The options parameters.\n   */\n  getKeyBlockByHeight(\n    height: number,\n    options?: GetKeyBlockByHeightOptionalParams\n  ): Promise<GetKeyBlockByHeightResponse> {\n    return this.sendOperationRequest(\n      { height, options },\n      getKeyBlockByHeightOperationSpec\n    );\n  }\n\n  /**\n   * Get a micro block header by hash\n   * @param hash The hash of the block - either a keyblock or a microblock\n   * @param options The options parameters.\n   */\n  getMicroBlockHeaderByHash(\n    hash: string,\n    options?: GetMicroBlockHeaderByHashOptionalParams\n  ): Promise<GetMicroBlockHeaderByHashResponse> {\n    return this.sendOperationRequest(\n      { hash, options },\n      getMicroBlockHeaderByHashOperationSpec\n    );\n  }\n\n  /**\n   * Get micro block transactions by hash\n   * @param hash The hash of the micro block\n   * @param options The options parameters.\n   */\n  getMicroBlockTransactionsByHash(\n    hash: string,\n    options?: GetMicroBlockTransactionsByHashOptionalParams\n  ): Promise<GetMicroBlockTransactionsByHashResponse> {\n    return this.sendOperationRequest(\n      { hash, options },\n      getMicroBlockTransactionsByHashOperationSpec\n    );\n  }\n\n  /**\n   * Get a micro block transaction by hash and index\n   * @param hash The hash of the micro block\n   * @param index The index of the transaction in a block\n   * @param options The options parameters.\n   */\n  getMicroBlockTransactionByHashAndIndex(\n    hash: string,\n    index: number,\n    options?: GetMicroBlockTransactionByHashAndIndexOptionalParams\n  ): Promise<GetMicroBlockTransactionByHashAndIndexResponse> {\n    return this.sendOperationRequest(\n      { hash, index, options },\n      getMicroBlockTransactionByHashAndIndexOperationSpec\n    );\n  }\n\n  /**\n   * Get micro block transaction count by hash\n   * @param hash The hash of the micro block\n   * @param options The options parameters.\n   */\n  getMicroBlockTransactionsCountByHash(\n    hash: string,\n    options?: GetMicroBlockTransactionsCountByHashOptionalParams\n  ): Promise<GetMicroBlockTransactionsCountByHashResponse> {\n    return this.sendOperationRequest(\n      { hash, options },\n      getMicroBlockTransactionsCountByHashOperationSpec\n    );\n  }\n\n  /**\n   * Get the current generation\n   * @param options The options parameters.\n   */\n  getCurrentGeneration(\n    options?: GetCurrentGenerationOptionalParams\n  ): Promise<GetCurrentGenerationResponse> {\n    return this.sendOperationRequest(\n      { options },\n      getCurrentGenerationOperationSpec\n    );\n  }\n\n  /**\n   * Get a generation by hash\n   * @param hash The hash of the key block\n   * @param options The options parameters.\n   */\n  getGenerationByHash(\n    hash: string,\n    options?: GetGenerationByHashOptionalParams\n  ): Promise<GetGenerationByHashResponse> {\n    return this.sendOperationRequest(\n      { hash, options },\n      getGenerationByHashOperationSpec\n    );\n  }\n\n  /**\n   * Get a generation by height\n   * @param height The height\n   * @param options The options parameters.\n   */\n  getGenerationByHeight(\n    height: number,\n    options?: GetGenerationByHeightOptionalParams\n  ): Promise<GetGenerationByHeightResponse> {\n    return this.sendOperationRequest(\n      { height, options },\n      getGenerationByHeightOperationSpec\n    );\n  }\n\n  /**\n   * Get an account by public key\n   * @param pubkey The public key of the account\n   * @param options The options parameters.\n   */\n  getAccountByPubkey(\n    pubkey: string,\n    options?: GetAccountByPubkeyOptionalParams\n  ): Promise<GetAccountByPubkeyResponse> {\n    return this.sendOperationRequest(\n      { pubkey, options },\n      getAccountByPubkeyOperationSpec\n    );\n  }\n\n  /**\n   * Get an account by public key after the opening key block of the generation at height\n   * @param pubkey The public key of the account\n   * @param height The height\n   * @param options The options parameters.\n   */\n  getAccountByPubkeyAndHeight(\n    pubkey: string,\n    height: number,\n    options?: GetAccountByPubkeyAndHeightOptionalParams\n  ): Promise<GetAccountByPubkeyAndHeightResponse> {\n    return this.sendOperationRequest(\n      { pubkey, height, options },\n      getAccountByPubkeyAndHeightOperationSpec\n    );\n  }\n\n  /**\n   * Get an account by public key after the block indicated by hash. Can be either a micro block or a\n   * keyblock hash\n   * @param pubkey The public key of the account\n   * @param hash The hash of the block - either a keyblock or a microblock\n   * @param options The options parameters.\n   */\n  getAccountByPubkeyAndHash(\n    pubkey: string,\n    hash: string,\n    options?: GetAccountByPubkeyAndHashOptionalParams\n  ): Promise<GetAccountByPubkeyAndHashResponse> {\n    return this.sendOperationRequest(\n      { pubkey, hash, options },\n      getAccountByPubkeyAndHashOperationSpec\n    );\n  }\n\n  /**\n   * Get pending account transactions by public key\n   * @param pubkey The public key of the account\n   * @param options The options parameters.\n   */\n  getPendingAccountTransactionsByPubkey(\n    pubkey: string,\n    options?: GetPendingAccountTransactionsByPubkeyOptionalParams\n  ): Promise<GetPendingAccountTransactionsByPubkeyResponse> {\n    return this.sendOperationRequest(\n      { pubkey, options },\n      getPendingAccountTransactionsByPubkeyOperationSpec\n    );\n  }\n\n  /**\n   * Get an account's next nonce; This is computed according to whatever is the current account nonce and\n   * what transactions are currently present in the transaction pool\n   * @param pubkey The public key of the account\n   * @param options The options parameters.\n   */\n  getAccountNextNonce(\n    pubkey: string,\n    options?: GetAccountNextNonceOptionalParams\n  ): Promise<GetAccountNextNonceResponse> {\n    return this.sendOperationRequest(\n      { pubkey, options },\n      getAccountNextNonceOperationSpec\n    );\n  }\n\n  /**\n   * Dry-run transactions on top of a given block. Supports all TXs except GAMetaTx, PayingForTx and\n   * OffchainTx. The maximum gas limit of all calls is capped. The maximum gas limit per request is a\n   * global node setting. Since DryRunCallReq object do not have a mandatory gas field, if not set a\n   * default value of 1000000 is being used instead.\n   * @param body transactions\n   * @param options The options parameters.\n   */\n  protectedDryRunTxs(\n    body: DryRunInput,\n    options?: ProtectedDryRunTxsOptionalParams\n  ): Promise<ProtectedDryRunTxsResponse> {\n    return this.sendOperationRequest(\n      { body, options },\n      protectedDryRunTxsOperationSpec\n    );\n  }\n\n  /**\n   * Get a transaction by hash\n   * @param hash The hash of the transaction\n   * @param options The options parameters.\n   */\n  getTransactionByHash(\n    hash: string,\n    options?: GetTransactionByHashOptionalParams\n  ): Promise<GetTransactionByHashResponse> {\n    return this.sendOperationRequest(\n      { hash, options },\n      getTransactionByHashOperationSpec\n    );\n  }\n\n  /**\n   * @param hash The hash of the transaction\n   * @param options The options parameters.\n   */\n  getTransactionInfoByHash(\n    hash: string,\n    options?: GetTransactionInfoByHashOptionalParams\n  ): Promise<GetTransactionInfoByHashResponse> {\n    return this.sendOperationRequest(\n      { hash, options },\n      getTransactionInfoByHashOperationSpec\n    );\n  }\n\n  /**\n   * Post a new transaction\n   * @param body The new transaction\n   * @param options The options parameters.\n   */\n  postTransaction(\n    body: EncodedTx,\n    options?: PostTransactionOptionalParams\n  ): Promise<PostTransactionResponse> {\n    return this.sendOperationRequest(\n      { body, options },\n      postTransactionOperationSpec\n    );\n  }\n\n  /**\n   * Get a contract by pubkey\n   * @param pubkey Contract pubkey to get proof for\n   * @param options The options parameters.\n   */\n  getContract(\n    pubkey: string,\n    options?: GetContractOptionalParams\n  ): Promise<GetContractResponse> {\n    return this.sendOperationRequest(\n      { pubkey, options },\n      getContractOperationSpec\n    );\n  }\n\n  /**\n   * Get contract code by pubkey\n   * @param pubkey Contract pubkey to get proof for\n   * @param options The options parameters.\n   */\n  getContractCode(\n    pubkey: string,\n    options?: GetContractCodeOptionalParams\n  ): Promise<GetContractCodeResponse> {\n    return this.sendOperationRequest(\n      { pubkey, options },\n      getContractCodeOperationSpec\n    );\n  }\n\n  /**\n   * Get a proof of inclusion for a contract\n   * @param pubkey Contract pubkey to get proof for\n   * @param options The options parameters.\n   */\n  getContractPoI(\n    pubkey: string,\n    options?: GetContractPoIOptionalParams\n  ): Promise<GetContractPoIResponse> {\n    return this.sendOperationRequest(\n      { pubkey, options },\n      getContractPoIOperationSpec\n    );\n  }\n\n  /**\n   * Get an oracle by public key\n   * @param pubkey The public key of the oracle\n   * @param options The options parameters.\n   */\n  getOracleByPubkey(\n    pubkey: string,\n    options?: GetOracleByPubkeyOptionalParams\n  ): Promise<GetOracleByPubkeyResponse> {\n    return this.sendOperationRequest(\n      { pubkey, options },\n      getOracleByPubkeyOperationSpec\n    );\n  }\n\n  /**\n   * Get oracle queries by public key\n   * @param pubkey The public key of the oracle\n   * @param options The options parameters.\n   */\n  getOracleQueriesByPubkey(\n    pubkey: string,\n    options?: GetOracleQueriesByPubkeyOptionalParams\n  ): Promise<GetOracleQueriesByPubkeyResponse> {\n    return this.sendOperationRequest(\n      { pubkey, options },\n      getOracleQueriesByPubkeyOperationSpec\n    );\n  }\n\n  /**\n   * Get an oracle query by public key and query ID\n   * @param pubkey The public key of the oracle\n   * @param queryId The ID of the query\n   * @param options The options parameters.\n   */\n  getOracleQueryByPubkeyAndQueryId(\n    pubkey: string,\n    queryId: string,\n    options?: GetOracleQueryByPubkeyAndQueryIdOptionalParams\n  ): Promise<GetOracleQueryByPubkeyAndQueryIdResponse> {\n    return this.sendOperationRequest(\n      { pubkey, queryId, options },\n      getOracleQueryByPubkeyAndQueryIdOperationSpec\n    );\n  }\n\n  /**\n   * Get name entry from naming system\n   * @param name The name key of the name entry\n   * @param options The options parameters.\n   */\n  getNameEntryByName(\n    name: string,\n    options?: GetNameEntryByNameOptionalParams\n  ): Promise<GetNameEntryByNameResponse> {\n    return this.sendOperationRequest(\n      { name, options },\n      getNameEntryByNameOperationSpec\n    );\n  }\n\n  /**\n   * Get channel by public key\n   * @param pubkey The pubkey of the channel\n   * @param options The options parameters.\n   */\n  getChannelByPubkey(\n    pubkey: string,\n    options?: GetChannelByPubkeyOptionalParams\n  ): Promise<GetChannelByPubkeyResponse> {\n    return this.sendOperationRequest(\n      { pubkey, options },\n      getChannelByPubkeyOperationSpec\n    );\n  }\n\n  /**\n   * Get peer public key\n   * @param options The options parameters.\n   */\n  getPeerPubkey(\n    options?: GetPeerPubkeyOptionalParams\n  ): Promise<GetPeerPubkeyResponse> {\n    return this.sendOperationRequest({ options }, getPeerPubkeyOperationSpec);\n  }\n\n  /**\n   * Get the status of a node\n   * @param options The options parameters.\n   */\n  getStatus(options?: GetStatusOptionalParams): Promise<GetStatusResponse> {\n    return this.sendOperationRequest({ options }, getStatusOperationSpec);\n  }\n\n  /**\n   * Get oldest keyblock hashes counting from genesis including orphans\n   * @param options The options parameters.\n   */\n  getChainEnds(\n    options?: GetChainEndsOptionalParams\n  ): Promise<GetChainEndsResponse> {\n    return this.sendOperationRequest({ options }, getChainEndsOperationSpec);\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst getTopHeaderOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/headers/top\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Header\n    },\n    404: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true\n    }\n  },\n  queryParameters: [Parameters.intAsString],\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getCurrentKeyBlockOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/key-blocks/current\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.KeyBlock\n    },\n    404: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true\n    }\n  },\n  queryParameters: [Parameters.intAsString],\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getCurrentKeyBlockHashOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/key-blocks/current/hash\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.HashResponse\n    },\n    404: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true\n    }\n  },\n  queryParameters: [Parameters.intAsString],\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getCurrentKeyBlockHeightOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/key-blocks/current/height\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.HeightResponse\n    },\n    404: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true\n    }\n  },\n  queryParameters: [Parameters.intAsString],\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getPendingKeyBlockOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/key-blocks/pending\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.KeyBlock\n    },\n    400: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true\n    },\n    404: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true\n    }\n  },\n  queryParameters: [Parameters.intAsString],\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getKeyBlockByHashOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/key-blocks/hash/{hash}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.KeyBlock\n    },\n    400: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true\n    },\n    404: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true\n    }\n  },\n  queryParameters: [Parameters.intAsString],\n  urlParameters: [Parameters.$host, Parameters.hash],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getKeyBlockByHeightOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/key-blocks/height/{height}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.KeyBlock\n    },\n    404: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true\n    }\n  },\n  queryParameters: [Parameters.intAsString],\n  urlParameters: [Parameters.$host, Parameters.height],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getMicroBlockHeaderByHashOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/micro-blocks/hash/{hash}/header\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.MicroBlockHeader\n    },\n    400: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true\n    },\n    404: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true\n    }\n  },\n  queryParameters: [Parameters.intAsString],\n  urlParameters: [Parameters.$host, Parameters.hash],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getMicroBlockTransactionsByHashOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/micro-blocks/hash/{hash}/transactions\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SignedTxs\n    },\n    400: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true\n    },\n    404: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true\n    }\n  },\n  queryParameters: [Parameters.intAsString],\n  urlParameters: [Parameters.$host, Parameters.hash],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getMicroBlockTransactionByHashAndIndexOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/micro-blocks/hash/{hash}/transactions/index/{index}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SignedTx\n    },\n    400: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true\n    },\n    404: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true\n    }\n  },\n  queryParameters: [Parameters.intAsString],\n  urlParameters: [Parameters.$host, Parameters.hash, Parameters.index],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getMicroBlockTransactionsCountByHashOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/micro-blocks/hash/{hash}/transactions/count\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.CountResponse\n    },\n    400: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true\n    },\n    404: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true\n    }\n  },\n  queryParameters: [Parameters.intAsString],\n  urlParameters: [Parameters.$host, Parameters.hash],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getCurrentGenerationOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/generations/current\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Generation\n    },\n    404: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true\n    }\n  },\n  queryParameters: [Parameters.intAsString],\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getGenerationByHashOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/generations/hash/{hash}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Generation\n    },\n    400: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true\n    },\n    404: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true\n    }\n  },\n  queryParameters: [Parameters.intAsString],\n  urlParameters: [Parameters.$host, Parameters.hash],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getGenerationByHeightOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/generations/height/{height}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Generation\n    },\n    404: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true\n    }\n  },\n  queryParameters: [Parameters.intAsString],\n  urlParameters: [Parameters.$host, Parameters.height],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getAccountByPubkeyOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/accounts/{pubkey}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Account\n    },\n    400: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true\n    },\n    404: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true\n    }\n  },\n  queryParameters: [Parameters.intAsString],\n  urlParameters: [Parameters.$host, Parameters.pubkey],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getAccountByPubkeyAndHeightOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/accounts/{pubkey}/height/{height}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Account\n    },\n    400: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true\n    },\n    404: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true\n    }\n  },\n  queryParameters: [Parameters.intAsString],\n  urlParameters: [Parameters.$host, Parameters.height, Parameters.pubkey],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getAccountByPubkeyAndHashOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/accounts/{pubkey}/hash/{hash}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Account\n    },\n    400: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true\n    },\n    404: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true\n    }\n  },\n  queryParameters: [Parameters.intAsString],\n  urlParameters: [Parameters.$host, Parameters.hash, Parameters.pubkey],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getPendingAccountTransactionsByPubkeyOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/accounts/{pubkey}/transactions/pending\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SignedTxs\n    },\n    400: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true\n    },\n    404: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true\n    }\n  },\n  queryParameters: [Parameters.intAsString],\n  urlParameters: [Parameters.$host, Parameters.pubkey],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getAccountNextNonceOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/accounts/{pubkey}/next-nonce\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.NextNonceResponse\n    },\n    400: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true\n    },\n    404: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true\n    }\n  },\n  queryParameters: [Parameters.intAsString, Parameters.strategy],\n  urlParameters: [Parameters.$host, Parameters.pubkey],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst protectedDryRunTxsOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/dry-run\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DryRunResults\n    },\n    403: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true\n    }\n  },\n  requestBody: Parameters.body,\n  queryParameters: [Parameters.intAsString],\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst getTransactionByHashOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/transactions/{hash}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SignedTx\n    },\n    400: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true\n    },\n    404: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true\n    }\n  },\n  queryParameters: [Parameters.intAsString],\n  urlParameters: [Parameters.$host, Parameters.hash],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getTransactionInfoByHashOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/transactions/{hash}/info\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.TxInfoObject\n    },\n    400: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true\n    },\n    404: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true\n    }\n  },\n  queryParameters: [Parameters.intAsString],\n  urlParameters: [Parameters.$host, Parameters.hash],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst postTransactionOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/transactions\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.PostTxResponse\n    },\n    400: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true\n    }\n  },\n  requestBody: Parameters.body1,\n  queryParameters: [Parameters.intAsString],\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst getContractOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/contracts/{pubkey}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ContractObject\n    },\n    400: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true\n    },\n    404: {\n      isError: true\n    }\n  },\n  queryParameters: [Parameters.intAsString],\n  urlParameters: [Parameters.$host, Parameters.pubkey],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getContractCodeOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/contracts/{pubkey}/code\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ByteCode\n    },\n    400: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true\n    },\n    404: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true\n    }\n  },\n  queryParameters: [Parameters.intAsString],\n  urlParameters: [Parameters.$host, Parameters.pubkey],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getContractPoIOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/contracts/{pubkey}/poi\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.PoI\n    },\n    400: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true\n    },\n    404: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true\n    }\n  },\n  queryParameters: [Parameters.intAsString],\n  urlParameters: [Parameters.$host, Parameters.pubkey],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getOracleByPubkeyOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/oracles/{pubkey}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.RegisteredOracle\n    },\n    400: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true\n    },\n    404: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true\n    }\n  },\n  queryParameters: [Parameters.intAsString],\n  urlParameters: [Parameters.$host, Parameters.pubkey],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getOracleQueriesByPubkeyOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/oracles/{pubkey}/queries\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.OracleQueries\n    },\n    400: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true\n    },\n    404: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true\n    }\n  },\n  queryParameters: [\n    Parameters.intAsString,\n    Parameters.from,\n    Parameters.limit,\n    Parameters.type\n  ],\n  urlParameters: [Parameters.$host, Parameters.pubkey],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getOracleQueryByPubkeyAndQueryIdOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/oracles/{pubkey}/queries/{query-id}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.OracleQuery\n    },\n    400: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true\n    },\n    404: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true\n    }\n  },\n  queryParameters: [Parameters.intAsString],\n  urlParameters: [Parameters.$host, Parameters.pubkey, Parameters.queryId],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getNameEntryByNameOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/names/{name}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.NameEntry\n    },\n    400: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true\n    },\n    404: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true\n    }\n  },\n  queryParameters: [Parameters.intAsString],\n  urlParameters: [Parameters.$host, Parameters.name],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getChannelByPubkeyOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/channels/{pubkey}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Channel\n    },\n    400: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true\n    },\n    404: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true\n    }\n  },\n  queryParameters: [Parameters.intAsString],\n  urlParameters: [Parameters.$host, Parameters.pubkey],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getPeerPubkeyOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/peers/pubkey\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.PeerPubKey\n    }\n  },\n  queryParameters: [Parameters.intAsString],\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getStatusOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/status\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Status\n    }\n  },\n  queryParameters: [Parameters.intAsString],\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getChainEndsOperationSpec: coreClient.OperationSpec = {\n  path: \"/v3/status/chain-ends\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: {\n        type: { name: \"Sequence\", element: { type: { name: \"String\" } } }\n      }\n    }\n  },\n  queryParameters: [Parameters.intAsString],\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","// eslint-disable-next-line max-classes-per-file\nimport BigNumber from 'bignumber.js';\nimport { OperationArguments, OperationSpec } from '@azure/core-client';\nimport {\n  genRequestQueuesPolicy, genCombineGetRequestsPolicy, genErrorFormatterPolicy,\n  genVersionCheckPolicy, genRetryOnFailurePolicy,\n} from './utils/autorest';\nimport { Node as NodeApi, NodeOptionalParams, ErrorModel } from './apis/node';\nimport { mapObject } from './utils/other';\nimport { UnsupportedVersionError } from './utils/errors';\nimport { Encoded } from './utils/encoder';\nimport { ConsensusProtocolVersion } from './tx/builder/constants';\n\nconst bigIntPropertyNames = [\n  'balance', 'queryFee', 'fee', 'amount', 'nameFee', 'channelAmount',\n  'initiatorAmount', 'responderAmount', 'channelReserve', 'initiatorAmountFinal',\n  'responderAmountFinal', 'gasPrice', 'deposit',\n] as const;\n\nconst numberPropertyNames = [\n  'time', 'gas', 'gasUsed', 'nameSalt',\n  'nonce', 'nextNonce', 'height', 'blockHeight', 'topBlockHeight',\n  'ttl', 'nameTtl', 'clientTtl',\n  'inbound', 'outbound', 'peerCount', 'pendingTransactionsCount', 'effectiveAtHeight',\n  'version', 'solutions', 'round',\n] as const;\n\nclass NodeTransformed extends NodeApi {\n  override async sendOperationRequest(\n    operationArguments: OperationArguments,\n    operationSpec: OperationSpec,\n  ): Promise<any> {\n    const args = mapObject(\n      operationArguments,\n      ([key, value]) => [key, this.#encodeArg(value)],\n    ) as OperationArguments;\n    return this.#decodeRes(await super.sendOperationRequest(args, operationSpec));\n  }\n\n  #mapData(data: any, transform: {\n    bigInt: (v: any) => any;\n    number: (v: any) => any;\n  }): unknown {\n    if (Array.isArray(data)) return data.map((d) => this.#mapData(d, transform));\n    if (data != null && typeof data === 'object') {\n      return mapObject(data, ([key, value]) => {\n        if (value == null) return [key, value];\n        if (bigIntPropertyNames.some((k) => k === key)) return [key, transform.bigInt(value)];\n        if (numberPropertyNames.some((k) => k === key)) return [key, transform.number(value)];\n        return [key, this.#mapData(value, transform)];\n      });\n    }\n    return data;\n  }\n\n  #encodeArg(data: any): any {\n    return this.#mapData(data, {\n      bigInt: (value) => {\n        if (value instanceof BigNumber) return value.toFixed();\n        return value.toString();\n      },\n      number: (value) => value.toString(),\n    });\n  }\n\n  #decodeRes(data: any): any {\n    return this.#mapData(data, {\n      bigInt: (value) => BigInt(value),\n      number: (value) => +value,\n    });\n  }\n}\n\ntype BigIntPropertyNames = typeof bigIntPropertyNames[number];\ntype NumberPropertyNames = typeof numberPropertyNames[number];\ntype PreserveOptional<NewType, OrigType> =\n  OrigType extends undefined ? NewType | undefined : NewType;\nexport type TransformNodeType<Type> =\n  Type extends (...args: infer Args) => infer Ret\n    ? (...args: TransformNodeType<Args>) => TransformNodeType<Ret>\n    : Type extends [infer Item, ...infer Rest]\n      ? [TransformNodeType<Item>, ...TransformNodeType<Rest>]\n      : Type extends Array<infer Item>\n        ? Array<TransformNodeType<Item>>\n        : Type extends Promise<infer T>\n          ? Promise<TransformNodeType<T>>\n          : Type extends { [P in any]: any }\n            ? {\n              [Property in keyof Type]:\n              Property extends BigIntPropertyNames\n                ? PreserveOptional<bigint, Type[Property]>\n                : Property extends NumberPropertyNames\n                  ? PreserveOptional<number, Type[Property]>\n                  : Property extends 'txHash'\n                    ? PreserveOptional<Encoded.TxHash, Type[Property]>\n                    : Property extends 'bytecode'\n                      ? PreserveOptional<Encoded.ContractBytearray, Type[Property]>\n                      : TransformNodeType<Type[Property]>\n            }\n            : Type;\ntype NodeTransformedApi = new (...args: ConstructorParameters<typeof NodeApi>) => {\n  [Name in keyof InstanceType<typeof NodeApi>]:\n  Name extends 'pipeline' | 'sendRequest' | 'sendOperationRequest'\n    ? NodeApi[Name] : TransformNodeType<NodeApi[Name]>\n};\n\ninterface NodeInfo {\n  url: string;\n  nodeNetworkId: string;\n  version: string;\n  consensusProtocolVersion: ConsensusProtocolVersion;\n}\n\nexport default class Node extends (NodeTransformed as unknown as NodeTransformedApi) {\n  #networkIdPromise?: Promise<string | Error>;\n\n  /**\n   * @param url - Url for node API\n   * @param options - Options\n   * @param options.ignoreVersion - Don't ensure that the node is supported\n   * @param options.retryCount - Amount of extra requests to do in case of failure\n   * @param options.retryOverallDelay - Time in ms to wait between all retries\n   */\n  constructor(\n    url: string,\n    {\n      ignoreVersion = false, retryCount = 3, retryOverallDelay = 800, ...options\n    }: NodeOptionalParams & {\n      ignoreVersion?: boolean;\n      retryCount?: number;\n      retryOverallDelay?: number;\n    } = {},\n  ) {\n    // eslint-disable-next-line constructor-super\n    super(url, {\n      allowInsecureConnection: true,\n      additionalPolicies: [\n        genRequestQueuesPolicy(),\n        genCombineGetRequestsPolicy(),\n        genRetryOnFailurePolicy(retryCount, retryOverallDelay),\n        genErrorFormatterPolicy((body: ErrorModel) => ` ${body.reason}`),\n      ],\n      ...options,\n    });\n    if (!ignoreVersion) {\n      const statusPromise = this.getStatus();\n      const versionPromise = statusPromise.then(({ nodeVersion }) => nodeVersion, (error) => error);\n      this.#networkIdPromise = statusPromise.then(({ networkId }) => networkId, (error) => error);\n      this.pipeline.addPolicy(\n        genVersionCheckPolicy('node', '/v3/status', versionPromise, '6.2.0', '7.0.0'),\n      );\n    }\n    this.intAsString = true;\n  }\n\n  async getNetworkId(): Promise<string> {\n    this.#networkIdPromise ??= this.getStatus().then(({ networkId }) => networkId);\n    const networkId = await this.#networkIdPromise;\n    if (networkId instanceof Error) throw networkId;\n    return networkId;\n  }\n\n  async getNodeInfo(): Promise<NodeInfo> {\n    const {\n      nodeVersion,\n      networkId: nodeNetworkId,\n      protocols,\n      topBlockHeight,\n    } = await this.getStatus();\n\n    const consensusProtocolVersion = protocols\n      .filter(({ effectiveAtHeight }) => topBlockHeight >= effectiveAtHeight)\n      .reduce(\n        (acc, p) => (p.effectiveAtHeight > acc.effectiveAtHeight ? p : acc),\n        { effectiveAtHeight: -1, version: 0 },\n      )\n      .version;\n    if (ConsensusProtocolVersion[consensusProtocolVersion] == null) {\n      const version = consensusProtocolVersion.toString();\n      const versions = Object.values(ConsensusProtocolVersion)\n        .filter((el) => typeof el === 'number').map((el) => +el);\n      const geVersion = Math.min(...versions).toString();\n      const ltVersion = (Math.max(...versions) + 1).toString();\n      throw new UnsupportedVersionError('consensus protocol', version, geVersion, ltVersion);\n    }\n\n    return {\n      url: this.$host,\n      nodeNetworkId,\n      version: nodeVersion,\n      consensusProtocolVersion,\n    };\n  }\n}\n","import { Encoded } from '../utils/encoder';\nimport { buildTx, getSchema, unpackTx } from './builder';\nimport { Tag } from './builder/constants';\nimport { TransactionError, UnexpectedTsError } from '../utils/errors';\n\n/**\n * Returns account address that signed a transaction\n * @param transaction - transaction to get a signer of\n */\nexport default function getTransactionSignerAddress(\n  transaction: Encoded.Transaction,\n): Encoded.AccountAddress {\n  const params = unpackTx(transaction);\n  switch (params.tag) {\n    case Tag.SignedTx:\n      return getTransactionSignerAddress(buildTx(params.encodedTx));\n    case Tag.GaMetaTx:\n      return params.gaId;\n    default:\n  }\n\n  const nonce = getSchema(params.tag, params.version).find(([name]) => name === 'nonce')?.[1];\n  if (nonce == null) throw new TransactionError(`Transaction doesn't have nonce: ${Tag[params.tag]}`);\n  if (!('senderKey' in nonce)) throw new UnexpectedTsError();\n  const address = params[nonce.senderKey as keyof typeof params] as unknown as string;\n  return address.replace(/^ok_/, 'ak_') as Encoded.AccountAddress;\n}\n","import { Encoded } from '../utils/encoder';\nimport Node from '../Node';\nimport CompilerBase from '../contract/compiler/Base';\nimport { AensName, Int } from '../tx/builder/constants';\nimport { AciValue, Domain } from '../utils/typed-data';\nimport { NotImplementedError } from '../utils/errors';\n\ninterface AuthData {\n  fee?: Int;\n  gasLimit?: number;\n  gasPrice?: Int;\n  callData?: Encoded.ContractBytearray;\n  sourceCode?: string;\n  args?: any[];\n}\n\n/**\n * Account is one of the three basic building blocks of an\n * {@link AeSdk} and provides access to a signing key pair.\n */\nexport default abstract class AccountBase {\n  /**\n   * Sign encoded transaction\n   * @param tx - Transaction to sign\n   * @param options - Options\n   * @param options.innerTx - Sign as inner transaction for PayingFor\n   * @param options.authData - Object with gaMeta params\n   * @returns Signed transaction\n   */\n  abstract signTransaction(\n    tx: Encoded.Transaction,\n    options: {\n      innerTx?: boolean;\n      networkId?: string;\n      authData?: AuthData | ((tx: Encoded.Transaction) => Promise<AuthData>);\n      onNode?: Node;\n      onCompiler?: CompilerBase;\n      aeppOrigin?: string;\n      aeppRpcClientId?: string;\n    },\n  ): Promise<Encoded.Transaction>;\n\n  /**\n   * Sign message\n   * @param message - Message to sign\n   * @param options - Options\n   * @returns Signature\n   */\n  abstract signMessage(\n    message: string,\n    options?: {\n      aeppOrigin?: string;\n      aeppRpcClientId?: string;\n    },\n  ): Promise<Uint8Array>;\n\n  /**\n   * Sign typed data\n   * @param type - Type of data to sign\n   * @param data - Encoded data to sign\n   * @param options - Options\n   * @returns Signature\n   */\n  // TODO: make abstract in the next major release\n  // eslint-disable-next-line class-methods-use-this\n  async signTypedData(\n    /* eslint-disable @typescript-eslint/no-unused-vars */\n    data: Encoded.ContractBytearray,\n    aci: AciValue,\n    options?: Domain & {\n      aeppOrigin?: string;\n      aeppRpcClientId?: string;\n    },\n    /* eslint-enable @typescript-eslint/no-unused-vars */\n  ): Promise<Encoded.Signature> {\n    throw new NotImplementedError('signTypedData method');\n  }\n\n  /**\n   * Sign delegation of AENS, oracle operations to a contract\n   * @param contractAddress - Address of a contract to delegate permissions to\n   * @param options - Options\n   * @returns Signature\n   */\n  // TODO: make abstract in the next major release\n  // eslint-disable-next-line class-methods-use-this\n  async signDelegationToContract(\n    /* eslint-disable @typescript-eslint/no-unused-vars */\n    contractAddress: Encoded.ContractAddress,\n    options?: {\n      networkId?: string;\n      aeppOrigin?: string;\n      aeppRpcClientId?: string;\n    },\n    /* eslint-enable @typescript-eslint/no-unused-vars */\n  ): Promise<Encoded.Signature> {\n    throw new NotImplementedError('signDelegationToContract method');\n  }\n\n  /**\n   * Sign delegation of an AENS name to a contract\n   * @param contractAddress - Address of a contract to delegate permissions to\n   * @param name - AENS name to manage by a contract\n   * @param options - Options\n   * @returns Signature\n   */\n  // TODO: make abstract in the next major release\n  // eslint-disable-next-line class-methods-use-this\n  async signNameDelegationToContract(\n    /* eslint-disable @typescript-eslint/no-unused-vars */\n    contractAddress: Encoded.ContractAddress,\n    name: AensName,\n    options?: {\n      networkId?: string;\n      aeppOrigin?: string;\n      aeppRpcClientId?: string;\n    },\n    /* eslint-enable @typescript-eslint/no-unused-vars */\n  ): Promise<Encoded.Signature> {\n    throw new NotImplementedError('signNameDelegationToContract method');\n  }\n\n  /**\n   * Sign delegation of oracle query to a contract\n   *\n   * Warning! Implementations needs to ensure that decoded oracle query id is not equal to decoded\n   * current account address unless https://github.com/aeternity/aesophia/issues/475 is fixed.\n   *\n   * Warning! Implementations needs to ensure that oracle query and contract exists unless\n   * https://github.com/aeternity/aesophia/issues/474 is fixed.\n   *\n   * @param contractAddress - Address of a contract to delegate permissions to\n   * @param oracleQueryId - Oracle query ID to reply by a contract\n   * @param options - Options\n   * @returns Signature\n   */\n  // TODO: make abstract in the next major release\n  // eslint-disable-next-line class-methods-use-this\n  async signOracleQueryDelegationToContract(\n    /* eslint-disable @typescript-eslint/no-unused-vars */\n    contractAddress: Encoded.ContractAddress,\n    oracleQueryId: Encoded.OracleQueryId,\n    options?: {\n      networkId?: string;\n      aeppOrigin?: string;\n      aeppRpcClientId?: string;\n    },\n    /* eslint-enable @typescript-eslint/no-unused-vars */\n  ): Promise<Encoded.Signature> {\n    throw new NotImplementedError('signOracleQueryDelegationToContract method');\n  }\n\n  /**\n   * Sign data blob\n   * @param data - Data blob to sign\n   * @param options - Options\n   * @returns Signature\n   */\n  abstract sign(data: string | Uint8Array, options?: any): Promise<Uint8Array>;\n\n  /**\n   * Account address\n   */\n  readonly address!: Encoded.AccountAddress;\n}\n","import { TypeResolver, ContractByteArrayEncoder } from '@aeternity/aepp-calldata';\nimport canonicalize from 'canonicalize';\nimport { Encoded, decode } from './encoder';\nimport { hash, messagePrefixLength } from './crypto';\nimport { concatBuffers } from './other';\n\n/**\n * Hashes arbitrary object, can be used to inline the aci hash to contract source code\n */\nexport function hashJson(data: unknown): Buffer {\n  return hash(canonicalize(data) ?? '');\n}\n\n// TODO: move this type to calldata library https://github.com/aeternity/aepp-calldata-js/issues/215\n// based on https://github.com/aeternity/aepp-calldata-js/blob/82b5a98f9b308482627da8d7484d213e9cf87151/src/AciTypeResolver.js#L129\nexport type AciValue = 'void' | 'unit' | 'int' | 'bool' | 'string' | 'bits' | 'hash' | 'signature'\n| 'address' | 'contract_pubkey' | 'Chain.ttl' | 'Chain.ga_meta_tx' | 'Chain.paying_for_tx'\n| 'Chain.base_tx' | 'AENS.pointee' | 'AENS.name' | 'MCL_BLS12_381.fr' | 'MCL_BLS12_381.fp'\n| { 'Set.set': readonly [AciValue] }\n| { bytes: number }\n| { list: readonly [AciValue] }\n| { map: readonly [AciValue, AciValue] }\n| { tuple: readonly AciValue[] }\n| { record: ReadonlyArray<{ name: string; type: AciValue }> }\n| { variant: ReadonlyArray<{ [key: string]: readonly AciValue[] }> }\n| { option: readonly [AciValue] }\n| { oracle: readonly [AciValue, AciValue] }\n| { oracle_query: readonly [AciValue, AciValue] };\n\nexport interface Domain {\n  name?: string;\n  version?: number;\n  networkId?: string;\n  contractAddress?: Encoded.ContractAddress;\n}\n\n/**\n * Hashes domain object, can be used to inline domain hash to contract source code\n */\nexport function hashDomain(domain: Domain): Buffer {\n  const domainAci = {\n    record: [{\n      name: 'name',\n      type: { option: ['string'] },\n    }, {\n      name: 'version',\n      type: { option: ['int'] },\n    }, {\n      name: 'networkId',\n      type: { option: ['string'] },\n    }, {\n      name: 'contractAddress',\n      type: { option: ['contract_pubkey'] },\n    }],\n  } as const;\n  const domainType = new TypeResolver().resolveType(domainAci, {});\n  const fateValue = new ContractByteArrayEncoder().encodeWithType(domain, domainType);\n  return hash(decode(fateValue));\n}\n\nexport function hashTypedData(\n  data: Encoded.ContractBytearray,\n  aci: AciValue,\n  domain: Domain,\n): Buffer {\n  return hash(concatBuffers([\n    messagePrefixLength, new Uint8Array([0]), hashDomain(domain), hashJson(aci), hash(decode(data)),\n  ]));\n}\n","import AccountBase from './Base';\nimport {\n  generateKeyPairFromSecret, sign, generateKeyPair, hash, messageToHash,\n} from '../utils/crypto';\nimport { ArgumentError } from '../utils/errors';\nimport {\n  decode, encode, Encoded, Encoding,\n} from '../utils/encoder';\nimport { concatBuffers } from '../utils/other';\nimport { hashTypedData, AciValue } from '../utils/typed-data';\nimport { buildTx } from '../tx/builder';\nimport { Tag, AensName } from '../tx/builder/constants';\nimport { produceNameId } from '../tx/builder/helpers';\n\nconst secretKeys = new WeakMap();\n\nexport function getBufferToSign(\n  transaction: Encoded.Transaction,\n  networkId: string,\n  innerTx: boolean,\n): Uint8Array {\n  const prefixes = [networkId];\n  if (innerTx) prefixes.push('inner_tx');\n  const rlpBinaryTx = decode(transaction);\n  return concatBuffers([Buffer.from(prefixes.join('-')), hash(rlpBinaryTx)]);\n}\n\n/**\n * In-memory account class\n */\nexport default class AccountMemory extends AccountBase {\n  override readonly address: Encoded.AccountAddress;\n\n  /**\n   * @param secretKey - Secret key\n   */\n  constructor(secretKey: string | Uint8Array) {\n    super();\n    secretKey = typeof secretKey === 'string' ? Buffer.from(secretKey, 'hex') : secretKey;\n    if (secretKey.length !== 64) {\n      throw new ArgumentError('secretKey', '64 bytes', secretKey.length);\n    }\n    secretKeys.set(this, secretKey);\n    this.address = encode(\n      generateKeyPairFromSecret(secretKeys.get(this)).publicKey,\n      Encoding.AccountAddress,\n    );\n  }\n\n  /**\n   * Generates a new AccountMemory using a random secret key\n   */\n  static generate(): AccountMemory {\n    return new AccountMemory(generateKeyPair().secretKey);\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  override async sign(data: string | Uint8Array, options?: any): Promise<Uint8Array> {\n    return sign(data, secretKeys.get(this));\n  }\n\n  override async signTransaction(\n    transaction: Encoded.Transaction,\n    { innerTx, networkId, ...options }: { innerTx?: boolean; networkId?: string } = {},\n  ): Promise<Encoded.Transaction> {\n    if (networkId == null) {\n      throw new ArgumentError('networkId', 'provided', networkId);\n    }\n    const rlpBinaryTx = decode(transaction);\n    const txWithNetworkId = getBufferToSign(transaction, networkId, innerTx === true);\n\n    const signatures = [await this.sign(txWithNetworkId, options)];\n    return buildTx({ tag: Tag.SignedTx, encodedTx: rlpBinaryTx, signatures });\n  }\n\n  override async signMessage(message: string, options?: any): Promise<Uint8Array> {\n    return this.sign(messageToHash(message), options);\n  }\n\n  override async signTypedData(\n    data: Encoded.ContractBytearray,\n    aci: AciValue,\n    {\n      name, version, networkId, contractAddress, ...options\n    }: Parameters<AccountBase['signTypedData']>[2] = {},\n  ): Promise<Encoded.Signature> {\n    const dHash = hashTypedData(data, aci, {\n      name, version, networkId, contractAddress,\n    });\n    const signature = await this.sign(dHash, options);\n    return encode(signature, Encoding.Signature);\n  }\n\n  override async signDelegationToContract(\n    contractAddress: Encoded.ContractAddress,\n    { networkId }: { networkId?: string } = {},\n  ): Promise<Encoded.Signature> {\n    if (networkId == null) throw new ArgumentError('networkId', 'provided', networkId);\n    const payload = concatBuffers([\n      Buffer.from(networkId),\n      decode(this.address),\n      decode(contractAddress),\n    ]);\n    const signature = await this.sign(payload);\n    return encode(signature, Encoding.Signature);\n  }\n\n  override async signNameDelegationToContract(\n    contractAddress: Encoded.ContractAddress,\n    name: AensName,\n    { networkId }: { networkId?: string } = {},\n  ): Promise<Encoded.Signature> {\n    if (networkId == null) throw new ArgumentError('networkId', 'provided', networkId);\n    const payload = concatBuffers([\n      Buffer.from(networkId),\n      decode(this.address),\n      decode(produceNameId(name)),\n      decode(contractAddress),\n    ]);\n    const signature = await this.sign(payload);\n    return encode(signature, Encoding.Signature);\n  }\n\n  override async signOracleQueryDelegationToContract(\n    contractAddress: Encoded.ContractAddress,\n    oracleQueryId: Encoded.OracleQueryId,\n    { networkId }: { networkId?: string } = {},\n  ): Promise<Encoded.Signature> {\n    const oracleQueryIdDecoded = decode(oracleQueryId);\n    const addressDecoded = decode(this.address);\n    // TODO: remove after fixing https://github.com/aeternity/aesophia/issues/475\n    if (oracleQueryIdDecoded.compare(addressDecoded) === 0) {\n      throw new ArgumentError('oracleQueryId', 'not equal to account address', oracleQueryId);\n    }\n    if (networkId == null) throw new ArgumentError('networkId', 'provided', networkId);\n    const payload = concatBuffers([\n      Buffer.from(networkId),\n      oracleQueryIdDecoded,\n      decode(contractAddress),\n    ]);\n    const signature = await this.sign(payload);\n    return encode(signature, Encoding.Signature);\n  }\n}\n","import { Encoded } from '../utils/encoder';\nimport { buildTx, buildTxHash, unpackTx } from './builder';\nimport { Tag } from './builder/constants';\nimport { verify } from '../utils/crypto';\nimport { getBufferToSign } from '../account/Memory';\nimport { IllegalArgumentError, InternalError, TransactionError } from '../utils/errors';\nimport Node from '../Node';\nimport getTransactionSignerAddress from './transaction-signer';\n\n/**\n * Calculates the cost of transaction execution\n * Provides an upper cost of contract-call-related transactions because of `gasLimit`.\n * Also assumes that oracle query fee is 0 unless it is provided in options.\n *\n * The idea is that if you need to show transaction details with some accuracy you can define\n * expense fields that you want to show separately. And to show `getExecutionCost` result as a fee,\n * subtracting all fields shown separately.\n *\n * @example\n * ```vue\n * <template>\n * Amount: {{ txUnpacked.amount }}\n * Name fee: {{ txUnpacked.nameFee }}\n * Other fees: {{ getExecutionCost(txEncoded) - txUnpacked.amount - txUnpacked.nameFee }}\n * </template>\n * ```\n *\n * Doing this way you won't worry to show wrong fee for a transaction you may not support. Because\n * the SDK calculates the overall price of any transaction on its side.\n *\n * @param transaction - Transaction to calculate the cost of\n * @param innerTx - Should be provided if transaction wrapped with Tag.PayingForTx\n * @param gasUsed - Amount of gas actually used to make calculation more accurate\n * @param queryFee - Oracle query fee\n * @param isInitiator - Is transaction signer an initiator of state channel\n */\nexport function getExecutionCost(\n  transaction: Encoded.Transaction,\n  {\n    innerTx, gasUsed, queryFee, isInitiator,\n  }: {\n    innerTx?: 'fee-payer' | 'freeloader';\n    gasUsed?: number;\n    queryFee?: string;\n    isInitiator?: boolean;\n  } = {},\n): bigint {\n  const params = unpackTx(transaction);\n  if (params.tag === Tag.SignedTx) {\n    throw new IllegalArgumentError('Transaction shouldn\\'t be a SignedTx, use `getExecutionCostBySignedTx` instead');\n  }\n\n  let res = 0n;\n  if ('fee' in params && innerTx !== 'freeloader') {\n    res += BigInt(params.fee);\n  }\n  if (params.tag === Tag.NameClaimTx) {\n    res += BigInt(params.nameFee);\n  }\n  if (params.tag === Tag.OracleQueryTx) {\n    res += BigInt(params.queryFee);\n  }\n  if (params.tag === Tag.OracleResponseTx) {\n    res -= BigInt(queryFee ?? 0);\n  }\n  if (params.tag === Tag.ChannelSettleTx) {\n    if (isInitiator === true) res -= BigInt(params.initiatorAmountFinal);\n    if (isInitiator === false) res -= BigInt(params.responderAmountFinal);\n  }\n  if (\n    ((params.tag === Tag.SpendTx && params.senderId !== params.recipientId)\n    || params.tag === Tag.ContractCreateTx || params.tag === Tag.ContractCallTx\n    || params.tag === Tag.ChannelDepositTx) && innerTx !== 'fee-payer'\n  ) {\n    res += BigInt(params.amount);\n  }\n  if (params.tag === Tag.ContractCreateTx) res += BigInt(params.deposit);\n  if (\n    (params.tag === Tag.ContractCreateTx || params.tag === Tag.ContractCallTx\n      || params.tag === Tag.GaAttachTx || params.tag === Tag.GaMetaTx)\n    && innerTx !== 'freeloader'\n  ) {\n    res += BigInt(params.gasPrice) * BigInt(gasUsed ?? params.gasLimit);\n  }\n  if (params.tag === Tag.GaMetaTx || params.tag === Tag.PayingForTx) {\n    res += getExecutionCost(\n      buildTx(params.tx.encodedTx),\n      params.tag === Tag.PayingForTx ? { innerTx: 'fee-payer' } : {},\n    );\n  }\n  return res;\n}\n\n/**\n * Calculates the cost of signed transaction execution\n * @param transaction - Transaction to calculate the cost of\n * @param networkId - Network id used to sign the transaction\n * @param options - Options\n */\nexport function getExecutionCostBySignedTx(\n  transaction: Encoded.Transaction,\n  networkId: string,\n  options?: Omit<Parameters<typeof getExecutionCost>[1], 'innerTx'>,\n): bigint {\n  const params = unpackTx(transaction, Tag.SignedTx);\n  if (params.encodedTx.tag === Tag.GaMetaTx) {\n    return getExecutionCost(buildTx(params.encodedTx), options);\n  }\n\n  const tx = buildTx(params.encodedTx);\n  const address = getTransactionSignerAddress(tx);\n  const [isInnerTx, isNotInnerTx] = [true, false]\n    .map((f) => verify(getBufferToSign(tx, networkId, f), params.signatures[0], address));\n  if (!isInnerTx && !isNotInnerTx) throw new TransactionError('Can\\'t verify signature');\n  return getExecutionCost(\n    buildTx(params.encodedTx),\n    { ...isInnerTx && { innerTx: 'freeloader' }, ...options },\n  );\n}\n\n/**\n * Calculates the cost of signed and not signed transaction execution using node\n * @param transaction - Transaction to calculate the cost of\n * @param node - Node to use\n * @param isMined - Is transaction already mined or not\n * @param options - Options\n */\nexport async function getExecutionCostUsingNode(\n  transaction: Encoded.Transaction,\n  node: Node,\n  { isMined, ...options }: { isMined?: boolean } & Parameters<typeof getExecutionCost>[1] = {},\n): Promise<bigint> {\n  let params = unpackTx(transaction);\n  const isSignedTx = params.tag === Tag.SignedTx;\n  const txHash = isSignedTx && isMined === true && buildTxHash(transaction);\n  if (params.tag === Tag.SignedTx) params = params.encodedTx;\n\n  // TODO: set gasUsed for PayingForTx after solving https://github.com/aeternity/aeternity/issues/4087\n  if (\n    options.gasUsed == null && txHash !== false\n    && [Tag.ContractCreateTx, Tag.ContractCallTx, Tag.GaAttachTx, Tag.GaMetaTx].includes(params.tag)\n  ) {\n    const { callInfo, gaInfo } = await node.getTransactionInfoByHash(txHash);\n    const combinedInfo = callInfo ?? gaInfo;\n    if (combinedInfo == null) {\n      throw new InternalError(`callInfo and gaInfo is not available for transaction ${txHash}`);\n    }\n    options.gasUsed = combinedInfo.gasUsed;\n  }\n\n  if (options.queryFee == null && Tag.OracleResponseTx === params.tag) {\n    options.queryFee = (await node.getOracleByPubkey(params.oracleId)).queryFee.toString();\n  }\n\n  if (options.isInitiator == null && Tag.ChannelSettleTx === params.tag && isMined !== true) {\n    const { initiatorId } = await node.getChannelByPubkey(params.channelId);\n    options.isInitiator = params.fromId === initiatorId;\n  }\n\n  return isSignedTx\n    ? getExecutionCostBySignedTx(transaction, await node.getNetworkId(), options)\n    : getExecutionCost(transaction, options);\n}\n","import { RestError } from '@azure/core-rest-pipeline';\nimport { hash, verify } from '../utils/crypto';\nimport { TxUnpacked } from './builder/schema.generated';\nimport { CtVersion, ProtocolToVmAbi } from './builder/field-types/ct-version';\nimport { Tag, ConsensusProtocolVersion } from './builder/constants';\nimport { buildTx, unpackTx } from './builder';\nimport { concatBuffers, isAccountNotFoundError } from '../utils/other';\nimport { Encoded, decode } from '../utils/encoder';\nimport Node, { TransformNodeType } from '../Node';\nimport { Account } from '../apis/node';\nimport { genAggressiveCacheGetResponsesPolicy } from '../utils/autorest';\nimport { UnexpectedTsError } from '../utils/errors';\nimport getTransactionSignerAddress from './transaction-signer';\nimport { getExecutionCostUsingNode } from './execution-cost';\n\nexport interface ValidatorResult {\n  message: string;\n  key: string;\n  checkedKeys: string[];\n}\n\ntype Validator = (\n  tx: TxUnpacked,\n  options: {\n    // TODO: remove after fixing node types\n    account: TransformNodeType<Account> & { id: Encoded.AccountAddress };\n    nodeNetworkId: string;\n    parentTxTypes: Tag[];\n    node: Node;\n    height: number;\n    consensusProtocolVersion: ConsensusProtocolVersion;\n  }\n) => ValidatorResult[] | Promise<ValidatorResult[]>;\n\nconst validators: Validator[] = [];\n\nasync function verifyTransactionInternal(\n  tx: TxUnpacked,\n  node: Node,\n  parentTxTypes: Tag[],\n): Promise<ValidatorResult[]> {\n  const address = getTransactionSignerAddress(buildTx(tx));\n  const [account, { height }, { consensusProtocolVersion, nodeNetworkId }] = await Promise.all([\n    node.getAccountByPubkey(address)\n      .catch((error) => {\n        if (!isAccountNotFoundError(error)) throw error;\n        return { id: address, balance: 0n, nonce: 0 };\n      })\n      // TODO: remove after fixing https://github.com/aeternity/aepp-sdk-js/issues/1537\n      .then((acc) => ({ ...acc, id: acc.id as Encoded.AccountAddress })),\n    node.getCurrentKeyBlockHeight(),\n    node.getNodeInfo(),\n  ]);\n\n  return (await Promise.all(\n    validators.map(async (v) => v(\n      tx,\n      {\n        node, account, height, consensusProtocolVersion, nodeNetworkId, parentTxTypes,\n      },\n    )),\n  )).flat();\n}\n\n/**\n * Transaction Validator\n * This function validates some transaction properties,\n * to make sure it can be posted it to the chain\n * @category transaction builder\n * @param transaction - Base64Check-encoded transaction\n * @param nodeNotCached - Node to validate transaction against\n * @returns Array with verification errors\n * @example const errors = await verifyTransaction(transaction, node)\n */\nexport default async function verifyTransaction(\n  transaction: Parameters<typeof unpackTx>[0],\n  nodeNotCached: Node,\n): Promise<ValidatorResult[]> {\n  const node = new Node(nodeNotCached.$host, {\n    ignoreVersion: true,\n    pipeline: nodeNotCached.pipeline.clone(),\n    additionalPolicies: [genAggressiveCacheGetResponsesPolicy()],\n  });\n  return verifyTransactionInternal(unpackTx(transaction), node, []);\n}\n\nvalidators.push(\n  (tx, { account, nodeNetworkId, parentTxTypes }) => {\n    if (tx.tag !== Tag.SignedTx) return [];\n    const { encodedTx, signatures } = tx;\n    if ((encodedTx ?? signatures) == null) return [];\n    if (signatures.length !== 1) return []; // TODO: Support multisignature like in state channels\n    const prefix = Buffer.from([\n      nodeNetworkId,\n      ...parentTxTypes.includes(Tag.PayingForTx) ? ['inner_tx'] : [],\n    ].join('-'));\n    const txBinary = decode(buildTx(encodedTx));\n    const txWithNetworkId = concatBuffers([prefix, txBinary]);\n    const txHashWithNetworkId = concatBuffers([prefix, hash(txBinary)]);\n    if (verify(txWithNetworkId, signatures[0], account.id)\n      || verify(txHashWithNetworkId, signatures[0], account.id)) return [];\n    return [{\n      message: 'Signature cannot be verified, please ensure that you transaction have'\n        + ' the correct prefix and the correct private key for the sender address',\n      key: 'InvalidSignature',\n      checkedKeys: ['encodedTx', 'signatures'],\n    }];\n  },\n  async (tx, { node, parentTxTypes }) => {\n    let nestedTx;\n    if ('encodedTx' in tx) nestedTx = tx.encodedTx;\n    if ('tx' in tx) nestedTx = tx.tx;\n    if (nestedTx == null) return [];\n    return verifyTransactionInternal(nestedTx, node, [...parentTxTypes, tx.tag]);\n  },\n  (tx, { height }) => {\n    if (!('ttl' in tx)) return [];\n    if (tx.ttl === 0 || tx.ttl >= height) return [];\n    return [{\n      message: `TTL ${tx.ttl} is already expired, current height is ${height}`,\n      key: 'ExpiredTTL',\n      checkedKeys: ['ttl'],\n    }];\n  },\n  async (tx, { account, parentTxTypes, node }) => {\n    if (parentTxTypes.length !== 0) return [];\n    const cost = await getExecutionCostUsingNode(buildTx(tx), node).catch(() => 0n);\n    if (cost <= account.balance) return [];\n    return [{\n      message: `Account balance ${account.balance} is not enough to execute the transaction that costs ${cost}`,\n      key: 'InsufficientBalance',\n      checkedKeys: ['amount', 'fee', 'nameFee', 'gasLimit', 'gasPrice'],\n    }];\n  },\n  (tx, { account }) => {\n    let message;\n    if (tx.tag === Tag.SignedTx && account.kind === 'generalized' && tx.signatures.length !== 0) {\n      message = 'Generalized account can\\'t be used to generate SignedTx with signatures';\n    }\n    if (tx.tag === Tag.GaMetaTx && account.kind === 'basic') {\n      message = 'Basic account can\\'t be used to generate GaMetaTx';\n    }\n    if (message == null) return [];\n    return [{ message, key: 'InvalidAccountType', checkedKeys: ['tag'] }];\n  },\n  // TODO: revert nonce check\n  // TODO: ensure nonce valid when paying for own tx\n  (tx, { consensusProtocolVersion }) => {\n    const oracleCall = Tag.Oracle === tx.tag || Tag.OracleRegisterTx === tx.tag;\n    const contractCreate = Tag.ContractCreateTx === tx.tag || Tag.GaAttachTx === tx.tag;\n    const contractCall = Tag.ContractCallTx === tx.tag || Tag.GaMetaTx === tx.tag;\n    const type = (oracleCall ? 'oracle-call' : null)\n      ?? (contractCreate ? 'contract-create' : null)\n      ?? (contractCall ? 'contract-call' : null);\n    if (type == null) return [];\n    const protocol = ProtocolToVmAbi[consensusProtocolVersion][type] as {\n      abiVersion: readonly any[];\n      vmVersion: readonly any[];\n    };\n\n    let ctVersion: Partial<CtVersion> | undefined;\n    if ('abiVersion' in tx) ctVersion = { abiVersion: tx.abiVersion };\n    if ('ctVersion' in tx) ctVersion = tx.ctVersion;\n    if (ctVersion == null) throw new UnexpectedTsError();\n    if (\n      !protocol.abiVersion.includes(ctVersion.abiVersion)\n      || (contractCreate && !protocol.vmVersion.includes(ctVersion.vmVersion))\n    ) {\n      return [{\n        message: `ABI/VM version ${JSON.stringify(ctVersion)} is wrong, supported is: ${JSON.stringify(protocol)}`,\n        key: 'VmAndAbiVersionMismatch',\n        checkedKeys: ['ctVersion', 'abiVersion'],\n      }];\n    }\n    return [];\n  },\n  async (tx, { node }) => {\n    if (Tag.ContractCallTx !== tx.tag) return [];\n    try {\n      const { active } = await node.getContract(tx.contractId);\n      if (active) return [];\n      return [{\n        message: `Contract ${tx.contractId} is not active`,\n        key: 'ContractNotActive',\n        checkedKeys: ['contractId'],\n      }];\n    } catch (error) {\n      if (!(error instanceof RestError) || error.response?.bodyAsText == null) throw error;\n      return [{\n        message: JSON.parse(error.response.bodyAsText).reason, // TODO: use parsedBody instead\n        key: 'ContractNotFound',\n        checkedKeys: ['contractId'],\n      }];\n    }\n  },\n);\n","import { AE_AMOUNT_FORMATS, formatAmount } from './utils/amount-formatter';\nimport verifyTransaction, { ValidatorResult } from './tx/validator';\nimport { ensureError, isAccountNotFoundError, pause } from './utils/other';\nimport { isNameValid, produceNameId } from './tx/builder/helpers';\nimport { DRY_RUN_ACCOUNT } from './tx/builder/schema';\nimport { AensName } from './tx/builder/constants';\nimport {\n  AensPointerContextError, DryRunError, InvalidAensNameError, TransactionError,\n  TxTimedOutError, TxNotInChainError, InternalError,\n} from './utils/errors';\nimport Node, { TransformNodeType } from './Node';\nimport {\n  Account as AccountNode, ByteCode, ContractObject, DryRunResult, DryRunResults,\n  Generation, KeyBlock, MicroBlockHeader, NameEntry, SignedTx,\n} from './apis/node';\nimport {\n  decode, encode, Encoded, Encoding,\n} from './utils/encoder';\nimport AccountBase from './account/Base';\nimport { buildTxHash } from './tx/builder';\n\n/**\n * @category chain\n */\nexport function _getPollInterval(\n  type: 'block' | 'microblock', // TODO: rename to 'key-block' | 'micro-block'\n  { _expectedMineRate = 180000, _microBlockCycle = 3000, _maxPollInterval = 5000 }:\n  { _expectedMineRate?: number; _microBlockCycle?: number; _maxPollInterval?: number },\n): number {\n  const base = {\n    block: _expectedMineRate,\n    microblock: _microBlockCycle,\n  }[type];\n  return Math.min(base / 3, _maxPollInterval);\n}\n\n/**\n * @category exception\n */\nexport class InvalidTxError extends TransactionError {\n  validation: ValidatorResult[];\n\n  transaction: Encoded.Transaction;\n\n  constructor(\n    message: string,\n    validation: ValidatorResult[],\n    transaction: Encoded.Transaction,\n  ) {\n    super(message);\n    this.name = 'InvalidTxError';\n    this.validation = validation;\n    this.transaction = transaction;\n  }\n}\n\n/**\n * Obtain current height of the chain\n * @category chain\n * @returns Current chain height\n */\nexport async function getHeight({ onNode }: { onNode: Node }): Promise<number> {\n  return (await onNode.getCurrentKeyBlockHeight()).height;\n}\n\n/**\n * Wait for a transaction to be mined\n * @category chain\n * @param th - The hash of transaction to poll\n * @param options - Options\n * @param options.interval - Interval (in ms) at which to poll the chain\n * @param options.blocks - Number of blocks mined after which to fail\n * @param options.onNode - Node to use\n * @returns The transaction as it was mined\n */\nexport async function poll(\n  th: Encoded.TxHash,\n  {\n    blocks = 5, interval, onNode, ...options\n  }:\n  { blocks?: number; interval?: number; onNode: Node } & Parameters<typeof _getPollInterval>[1],\n): Promise<TransformNodeType<SignedTx>> {\n  interval ??= _getPollInterval('microblock', options);\n  const max = await getHeight({ onNode }) + blocks;\n  do {\n    const tx = await onNode.getTransactionByHash(th);\n    if (tx.blockHeight !== -1) return tx;\n    await pause(interval);\n  } while (await getHeight({ onNode }) < max);\n  throw new TxTimedOutError(blocks, th);\n}\n\n/**\n * Wait for the chain to reach a specific height\n * @category chain\n * @param height - Height to wait for\n * @param options - Options\n * @param options.interval - Interval (in ms) at which to poll the chain\n * @param options.onNode - Node to use\n * @returns Current chain height\n */\nexport async function awaitHeight(\n  height: number,\n  { interval, onNode, ...options }:\n  { interval?: number; onNode: Node } & Parameters<typeof _getPollInterval>[1],\n): Promise<number> {\n  interval ??= _getPollInterval('block', options);\n  let currentHeight;\n  do {\n    if (currentHeight != null) await pause(interval);\n    currentHeight = (await onNode.getCurrentKeyBlockHeight()).height;\n  } while (currentHeight < height);\n  return currentHeight;\n}\n\n/**\n * Wait for transaction confirmation\n * @category chain\n * @param txHash - Transaction hash\n * @param options - Options\n * @param options.confirm - Number of micro blocks to wait for transaction confirmation\n * @param options.onNode - Node to use\n * @returns Current Height\n */\nexport async function waitForTxConfirm(\n  txHash: Encoded.TxHash,\n  { confirm = 3, onNode, ...options }:\n  { confirm?: number; onNode: Node } & Parameters<typeof awaitHeight>[1],\n): Promise<number> {\n  const { blockHeight } = await onNode.getTransactionByHash(txHash);\n  const height = await awaitHeight(blockHeight + confirm, { onNode, ...options });\n  const { blockHeight: newBlockHeight } = await onNode.getTransactionByHash(txHash);\n  switch (newBlockHeight) {\n    case -1:\n      throw new TxNotInChainError(txHash);\n    case blockHeight:\n      return height;\n    default:\n      return waitForTxConfirm(txHash, { onNode, confirm, ...options });\n  }\n}\n\n/**\n * Signs and submits transaction for mining\n * @category chain\n * @param txUnsigned - Transaction to sign and submit\n * @param options - Options\n * @param options.onNode - Node to use\n * @param options.onAccount - Account to use\n * @param options.verify - Verify transaction before broadcast, throw error if not\n * @param options.waitMined - Ensure that transaction get into block\n * @param options.confirm - Number of micro blocks that should be mined after tx get included\n * @returns Transaction details\n */\nexport async function sendTransaction(\n  txUnsigned: Encoded.Transaction,\n  {\n    onNode, onAccount, verify = true, waitMined = true, confirm, innerTx, ...options\n  }:\n  SendTransactionOptions,\n): Promise<SendTransactionReturnType> {\n  const tx = await onAccount.signTransaction(txUnsigned, {\n    ...options,\n    onNode,\n    innerTx,\n    networkId: await onNode.getNetworkId(),\n  });\n\n  if (innerTx === true) return { hash: buildTxHash(tx), rawTx: tx };\n\n  if (verify) {\n    const validation = await verifyTransaction(tx, onNode);\n    if (validation.length > 0) {\n      const message = `Transaction verification errors: ${\n        validation.map((v: { message: string }) => v.message).join(', ')}`;\n      throw new InvalidTxError(message, validation, tx);\n    }\n  }\n\n  try {\n    let __queue;\n    try {\n      __queue = onAccount != null ? `tx-${onAccount.address}` : null;\n    } catch (error) {\n      __queue = null;\n    }\n    const { txHash } = await onNode.postTransaction(\n      { tx },\n      __queue != null ? { requestOptions: { customHeaders: { __queue } } } : {},\n    );\n\n    if (waitMined) {\n      const pollResult = await poll(txHash, { onNode, ...options });\n      const txData = {\n        ...pollResult,\n        hash: pollResult.hash as Encoded.TxHash,\n        rawTx: tx,\n      };\n      // wait for transaction confirmation\n      if (confirm != null && +confirm > 0) {\n        const c = typeof confirm === 'boolean' ? undefined : confirm;\n        return {\n          ...txData,\n          confirmationHeight: await waitForTxConfirm(txHash, { onNode, confirm: c, ...options }),\n        };\n      }\n      return txData;\n    }\n    return { hash: txHash, rawTx: tx };\n  } catch (error) {\n    ensureError(error);\n    throw Object.assign(error, {\n      rawTx: tx,\n      verifyTx: async () => verifyTransaction(tx, onNode),\n    });\n  }\n}\n\ntype SendTransactionOptionsType = {\n  onNode: Node;\n  onAccount: AccountBase;\n  verify?: boolean;\n  waitMined?: boolean;\n  confirm?: boolean | number;\n} & Parameters<typeof poll>[1] & Omit<Parameters<typeof waitForTxConfirm>[1], 'confirm'>\n& Parameters<AccountBase['signTransaction']>[1];\nexport interface SendTransactionOptions extends SendTransactionOptionsType {}\ninterface SendTransactionReturnType extends Partial<TransformNodeType<SignedTx>> {\n  hash: Encoded.TxHash;\n  rawTx: Encoded.Transaction;\n  confirmationHeight?: number;\n}\n\n/**\n * Get account by account public key\n * @category chain\n * @param address - Account address (public key)\n * @param options - Options\n * @param options.height - Get account on specific block by block height\n * @param options.hash - Get account on specific block by micro block hash or key block hash\n * @param options.onNode - Node to use\n */\nexport async function getAccount(\n  address: Encoded.AccountAddress | Encoded.ContractAddress,\n  { height, hash, onNode }:\n  { height?: number; hash?: Encoded.KeyBlockHash | Encoded.MicroBlockHash; onNode: Node },\n): Promise<TransformNodeType<AccountNode>> {\n  if (height != null) return onNode.getAccountByPubkeyAndHeight(address, height);\n  if (hash != null) return onNode.getAccountByPubkeyAndHash(address, hash);\n  return onNode.getAccountByPubkey(address);\n}\n\n/**\n * Request the balance of specified account\n * @category chain\n * @param address - The public account address to obtain the balance for\n * @param options - Options\n * @param options.format\n * @param options.height - The chain height at which to obtain the balance for\n * (default: top of chain)\n * @param options.hash - The block hash on which to obtain the balance for (default: top of chain)\n */\nexport async function getBalance(\n  address: Encoded.AccountAddress | Encoded.ContractAddress | Encoded.OracleAddress,\n  { format = AE_AMOUNT_FORMATS.AETTOS, ...options }:\n  { format?: AE_AMOUNT_FORMATS } & Parameters<typeof getAccount>[1],\n): Promise<string> {\n  const addr = address.startsWith('ok_')\n    ? encode(decode(address), Encoding.AccountAddress)\n    : address as Encoded.AccountAddress | Encoded.ContractAddress;\n\n  const { balance } = await getAccount(addr, options).catch((error) => {\n    if (!isAccountNotFoundError(error)) throw error;\n    return { balance: 0n };\n  });\n\n  return formatAmount(balance, { targetDenomination: format });\n}\n\n/**\n * Obtain current generation\n * @category chain\n * @param options - Options\n * @param options.onNode - Node to use\n * @returns Current Generation\n */\nexport async function getCurrentGeneration(\n  { onNode }: { onNode: Node },\n): Promise<TransformNodeType<Generation>> {\n  return onNode.getCurrentGeneration();\n}\n\n/**\n * Get generation by hash or height\n * @category chain\n * @param hashOrHeight - Generation hash or height\n * @param options - Options\n * @param options.onNode - Node to use\n * @returns Generation\n */\nexport async function getGeneration(\n  hashOrHeight: Encoded.KeyBlockHash | number,\n  { onNode }: { onNode: Node },\n): Promise<TransformNodeType<Generation>> {\n  if (typeof hashOrHeight === 'number') return onNode.getGenerationByHeight(hashOrHeight);\n  return onNode.getGenerationByHash(hashOrHeight);\n}\n\n/**\n * Get micro block transactions\n * @category chain\n * @param hash - Micro block hash\n * @param options - Options\n * @param options.onNode - Node to use\n * @returns Transactions\n */\nexport async function getMicroBlockTransactions(\n  hash: Encoded.MicroBlockHash,\n  { onNode }: { onNode: Node },\n): Promise<TransformNodeType<SignedTx[]>> {\n  return (await onNode.getMicroBlockTransactionsByHash(hash)).transactions;\n}\n\n/**\n * Get key block\n * @category chain\n * @param hashOrHeight - Key block hash or height\n * @param options - Options\n * @param options.onNode - Node to use\n * @returns Key Block\n */\nexport async function getKeyBlock(\n  hashOrHeight: Encoded.KeyBlockHash | number,\n  { onNode }: { onNode: Node },\n): Promise<TransformNodeType<KeyBlock>> {\n  if (typeof hashOrHeight === 'number') return onNode.getKeyBlockByHeight(hashOrHeight);\n  return onNode.getKeyBlockByHash(hashOrHeight);\n}\n\n/**\n * Get micro block header\n * @category chain\n * @param hash - Micro block hash\n * @param options - Options\n * @param options.onNode - Node to use\n * @returns Micro block header\n */\nexport async function getMicroBlockHeader(\n  hash: Encoded.MicroBlockHash,\n  { onNode }: { onNode: Node },\n): Promise<TransformNodeType<MicroBlockHeader>> {\n  return onNode.getMicroBlockHeaderByHash(hash);\n}\n\ninterface TxDryRunArguments {\n  tx: Encoded.Transaction;\n  accountAddress: Encoded.AccountAddress;\n  top?: number | Encoded.KeyBlockHash | Encoded.MicroBlockHash;\n  txEvents?: any;\n  resolve: Function;\n  reject: Function;\n}\nconst txDryRunRequests: Map<string, TxDryRunArguments[] & { timeout?: NodeJS.Timeout }> = new Map();\n\nasync function txDryRunHandler(key: string, onNode: Node): Promise<void> {\n  const rs = txDryRunRequests.get(key);\n  txDryRunRequests.delete(key);\n  if (rs == null) throw new InternalError('Can\\'t get dry-run request');\n\n  let dryRunRes;\n  try {\n    const top = typeof rs[0].top === 'number'\n      ? (await getKeyBlock(rs[0].top, { onNode })).hash : rs[0].top;\n    dryRunRes = await onNode.protectedDryRunTxs({\n      top,\n      txEvents: rs[0].txEvents,\n      txs: rs.map((req) => ({ tx: req.tx })),\n      accounts: Array.from(new Set(rs.map((req) => req.accountAddress)))\n        .map((pubKey) => ({ pubKey, amount: DRY_RUN_ACCOUNT.amount })),\n    });\n  } catch (error) {\n    rs.forEach(({ reject }) => reject(error));\n    return;\n  }\n\n  const { results, txEvents } = dryRunRes;\n  results.forEach(({ result, reason, ...resultPayload }, idx) => {\n    const {\n      resolve, reject, tx, accountAddress,\n    } = rs[idx];\n    if (result === 'ok') resolve({ ...resultPayload, txEvents });\n    else reject(Object.assign(new DryRunError(reason as string), { tx, accountAddress }));\n  });\n}\n\n/**\n * Transaction dry-run\n * @category chain\n * @param tx - transaction to execute\n * @param accountAddress - address that will be used to execute transaction\n * @param options - Options\n * @param options.top - hash of block on which to make dry-run\n * @param options.txEvents - collect and return on-chain tx events that would result from the call\n * @param options.combine - Enables combining of similar requests to a single dry-run call\n * @param options.onNode - Node to use\n */\nexport async function txDryRun(\n  tx: Encoded.Transaction,\n  accountAddress: Encoded.AccountAddress,\n  {\n    top, txEvents, combine, onNode,\n  }:\n  { top?: TxDryRunArguments['top']; txEvents?: boolean; combine?: boolean; onNode: Node },\n): Promise<{\n    txEvents?: TransformNodeType<DryRunResults['txEvents']>;\n  } & TransformNodeType<DryRunResult>> {\n  const key = combine === true ? [top, txEvents].join() : 'immediate';\n  const requests = txDryRunRequests.get(key) ?? [];\n  txDryRunRequests.set(key, requests);\n  return new Promise((resolve, reject) => {\n    requests.push({\n      tx, accountAddress, top, txEvents, resolve, reject,\n    });\n    if (combine !== true) {\n      void txDryRunHandler(key, onNode);\n      return;\n    }\n    requests.timeout ??= setTimeout(() => { void txDryRunHandler(key, onNode); });\n  });\n}\n\n/**\n * Get contract byte code\n * @category contract\n * @param contractId - Contract address\n * @param options - Options\n * @param options.onNode - Node to use\n */\nexport async function getContractByteCode(\n  contractId: Encoded.ContractAddress,\n  { onNode }: { onNode: Node },\n): Promise<TransformNodeType<ByteCode>> {\n  return onNode.getContractCode(contractId);\n}\n\n/**\n * Get contract entry\n * @category contract\n * @param contractId - Contract address\n * @param options - Options\n * @param options.onNode - Node to use\n */\nexport async function getContract(\n  contractId: Encoded.ContractAddress,\n  { onNode }: { onNode: Node },\n): Promise<TransformNodeType<ContractObject>> {\n  return onNode.getContract(contractId);\n}\n\n/**\n * Get name entry\n * @category AENS\n * @param name - AENS name\n * @param options - Options\n * @param options.onNode - Node to use\n */\nexport async function getName(\n  name: AensName,\n  { onNode }: { onNode: Node },\n): Promise<TransformNodeType<NameEntry>> {\n  return onNode.getNameEntryByName(name);\n}\n\n/**\n * Resolve AENS name and return name hash\n * @category AENS\n * @param nameOrId - AENS name or address\n * @param key - in AENS pointers record\n * @param options - Options\n * @param options.verify - To ensure that name exist and have a corresponding pointer\n * // TODO: avoid that to don't trust to current api gateway\n * @param options.resolveByNode - Enables pointer resolving using node\n * @param options.onNode - Node to use\n * @returns Address or AENS name hash\n */\nexport async function resolveName <\n  Type extends Encoding.AccountAddress | Encoding.ContractAddress,\n>(\n  nameOrId: AensName | Encoded.Generic<Type>,\n  key: string,\n  { verify = true, resolveByNode = false, onNode }:\n  { verify?: boolean; resolveByNode?: boolean; onNode: Node },\n): Promise<Encoded.Generic<Type | Encoding.Name>> {\n  if (isNameValid(nameOrId)) {\n    if (verify || resolveByNode) {\n      const name = await onNode.getNameEntryByName(nameOrId);\n      const pointer = name.pointers.find((p) => p.key === key);\n      if (pointer == null) throw new AensPointerContextError(nameOrId, key);\n      if (resolveByNode) return pointer.id as Encoded.Generic<Type>;\n    }\n    return produceNameId(nameOrId);\n  }\n  try {\n    decode(nameOrId);\n    return nameOrId;\n  } catch (error) {\n    throw new InvalidAensNameError(`Invalid name or address: ${nameOrId}`);\n  }\n}\n","import nacl from 'tweetnacl';\nimport { v4 as uuid } from '@aeternity/uuid';\nimport { hash, argon2id } from '@aeternity/argon2';\nimport { getAddressFromPriv } from './crypto';\nimport { InvalidPasswordError } from './errors';\n\nconst DERIVED_KEY_FUNCTIONS = {\n  async argon2id(\n    pass: string | Uint8Array,\n    salt: string | Uint8Array,\n    params: Partial<Keystore['crypto']['kdf_params']>,\n  ): Promise<Uint8Array> {\n    const { memlimit_kib: memoryCost, opslimit: timeCost } = params;\n\n    return hash(pass, {\n      hashLength: 32,\n      salt,\n      timeCost,\n      memoryCost,\n      type: argon2id,\n    });\n  },\n};\n\nconst CRYPTO_FUNCTIONS = {\n  'xsalsa20-poly1305': {\n    encrypt: nacl.secretbox,\n    decrypt(...args: Parameters<typeof nacl.secretbox.open>): Uint8Array {\n      const res = nacl.secretbox.open(...args);\n      if (res == null) throw new InvalidPasswordError();\n      return res;\n    },\n  },\n};\n\nexport interface Keystore {\n  name: string;\n  version: 1;\n  public_key: string;\n  id: string;\n  crypto: {\n    secret_type: 'ed25519';\n    symmetric_alg: keyof typeof CRYPTO_FUNCTIONS;\n    ciphertext: string;\n    cipher_params: {\n      nonce: string;\n    };\n    kdf: keyof typeof DERIVED_KEY_FUNCTIONS;\n    kdf_params: {\n      memlimit_kib: number;\n      opslimit: number;\n      parallelism: number;\n      salt: string;\n    };\n  };\n}\n\nconst CRYPTO_DEFAULTS = {\n  secret_type: 'ed25519',\n  symmetric_alg: 'xsalsa20-poly1305',\n  kdf: 'argon2id',\n  kdf_params: {\n    memlimit_kib: 65536,\n    opslimit: 3,\n    parallelism: 1,\n  },\n} as const;\n\n/**\n * Symmetric private key encryption using secret (derived) key.\n * @category keystore\n * @param plaintext - Data to be encrypted.\n * @param key - Secret key.\n * @param nonce - Randomly generated nonce.\n * @param algo - Encryption algorithm.\n * @returns Encrypted data.\n */\nfunction encrypt(\n  plaintext: Uint8Array,\n  key: Uint8Array,\n  nonce: Uint8Array,\n  algo: keyof typeof CRYPTO_FUNCTIONS = CRYPTO_DEFAULTS.symmetric_alg,\n): Uint8Array {\n  return CRYPTO_FUNCTIONS[algo].encrypt(plaintext, nonce, key);\n}\n\n/**\n * Symmetric private key decryption using secret (derived) key.\n * @category keystore\n * @param ciphertext - Data to be decrypted.\n * @param key - Secret key.\n * @param nonce - Nonce from key-object.\n * @param algo - Encryption algorithm.\n * @returns Decrypted data.\n */\nfunction decrypt(\n  ciphertext: Uint8Array,\n  key: Uint8Array,\n  nonce: Uint8Array,\n  algo: keyof typeof CRYPTO_FUNCTIONS = CRYPTO_DEFAULTS.symmetric_alg,\n): Uint8Array {\n  return CRYPTO_FUNCTIONS[algo].decrypt(ciphertext, nonce, key);\n}\n\n/**\n * Derive secret key from password with key derivation function.\n * @category keystore\n * @param password - User-supplied password.\n * @param nonce - Randomly generated nonce.\n * @param kdf - Key derivation function.\n * @param kdfParams - KDF parameters.\n * @returns Secret key derived from password.\n */\nasync function deriveKey(\n  password: string | Uint8Array,\n  nonce: string | Uint8Array,\n  kdf: Keystore['crypto']['kdf'],\n  kdfParams: Omit<Keystore['crypto']['kdf_params'], 'salt'>,\n): Promise<Uint8Array> {\n  return DERIVED_KEY_FUNCTIONS[kdf](password, nonce, kdfParams);\n}\n\n/**\n * Recover plaintext private key from secret-storage key object.\n * @category keystore\n * @param password - Keystore object password.\n * @param keystore - Keystore object.\n * @returns Plaintext private key.\n */\nexport async function recover(\n  password: string | Uint8Array,\n  { crypto }: Keystore,\n): Promise<string> {\n  const salt = Buffer.from(crypto.kdf_params.salt, 'hex');\n  return Buffer.from(decrypt(\n    Buffer.from(crypto.ciphertext, 'hex'),\n    await deriveKey(password, salt, crypto.kdf, crypto.kdf_params),\n    Buffer.from(crypto.cipher_params.nonce, 'hex'),\n    crypto.symmetric_alg,\n  )).toString('hex');\n}\n\n/**\n * Export private key to keystore secret-storage format.\n * @category keystore\n * @param name - Key name.\n * @param password - User-supplied password.\n * @param privateKey - Private key as hex-string or a Buffer.\n * @param nonce - Randomly generated 24byte nonce.\n * @param salt - Randomly generated 16byte salt.\n * @param options - Encryption parameters.\n * @param options.kdf - Key derivation function.\n * @param options.kdf_params - KDF parameters.\n */\nexport async function dump(\n  name: string,\n  password: string | Uint8Array,\n  privateKey: string | Uint8Array,\n  nonce: Uint8Array = nacl.randomBytes(24),\n  salt: Uint8Array = nacl.randomBytes(16),\n  options?: Partial<Keystore['crypto']>,\n): Promise<Keystore> {\n  const opt = { ...CRYPTO_DEFAULTS, ...options };\n  const derivedKey = await deriveKey(password, salt, opt.kdf, opt.kdf_params);\n  const payload = typeof privateKey === 'string' ? Buffer.from(privateKey, 'hex') : privateKey;\n  return {\n    name,\n    version: 1,\n    public_key: getAddressFromPriv(payload),\n    id: uuid(),\n    crypto: {\n      secret_type: opt.secret_type,\n      symmetric_alg: opt.symmetric_alg,\n      ciphertext: Buffer.from(\n        encrypt(payload, derivedKey, nonce, opt.symmetric_alg),\n      ).toString('hex'),\n      cipher_params: { nonce: Buffer.from(nonce).toString('hex') },\n      kdf: opt.kdf,\n      kdf_params: {\n        ...opt.kdf_params,\n        salt: Buffer.from(salt).toString('hex'),\n      },\n    },\n  };\n}\n","import nacl from 'tweetnacl';\nimport { full as hmac } from 'tweetnacl-auth';\nimport { fromString } from 'bip32-path';\nimport aesjs from 'aes-js';\nimport { sha256hash, encode, Encoding } from './encoder';\nimport { CryptographyError } from './errors';\nimport { concatBuffers } from './other';\n\nconst Ecb = aesjs.ModeOfOperation.ecb;\n\n// TODO: use mnemonic encryption instead of AES\n/**\n * Encrypt given data using `password`\n * @param password - Password to encrypt with\n * @param binaryData - Data to encrypt\n * @returns Encrypted data\n */\nfunction encryptKey(password: string, binaryData: Uint8Array): Uint8Array {\n  const hashedPasswordBytes = sha256hash(password);\n  const aesEcb = new Ecb(hashedPasswordBytes);\n  return aesEcb.encrypt(binaryData);\n}\n\n/**\n * Decrypt given data using `password`\n * @param password - Password to decrypt with\n * @param encrypted - Data to decrypt\n * @returns Decrypted data\n */\nfunction decryptKey(password: string, encrypted: Uint8Array): Uint8Array {\n  const encryptedBytes = Buffer.from(encrypted);\n  const hashedPasswordBytes = sha256hash(password);\n  const aesEcb = new Ecb(hashedPasswordBytes);\n  return aesEcb.decrypt(encryptedBytes);\n}\n\n/**\n * @category exception\n */\nexport class DerivationError extends CryptographyError {\n  constructor(message: string) {\n    super(message);\n    this.name = 'DerivationError';\n  }\n}\n\nconst ED25519_CURVE = Buffer.from('ed25519 seed');\nconst HARDENED_OFFSET = 0x80000000;\n\ninterface KeyTreeNode {\n  secretKey: Uint8Array;\n  chainCode: Uint8Array;\n}\n\ninterface HDWallet {\n  secretKey: string;\n  chainCode: string;\n}\n\ninterface Account {\n  secretKey: string;\n  publicKey: string;\n}\n\ntype Dec<N extends number> = [-1, 0, 1, 2, 3, 4][N];\ntype Bip32PathT<MaxLen extends number, H extends 'H' | 'h' | '\\''> = MaxLen extends -1\n  ? `${number}${H}`\n  : Bip32PathT<Dec<MaxLen>, H> | `${Bip32PathT<Dec<MaxLen>, H>}/${number}${H}`;\ntype Bip32Path<MaxLen extends number> =\n  '' | Bip32PathT<MaxLen, 'H'> | Bip32PathT<MaxLen, 'h'> | Bip32PathT<MaxLen, '\\''>;\n\n/**\n * @category hd-wallet\n */\nexport function deriveChild({ secretKey, chainCode }: KeyTreeNode, index: number): KeyTreeNode {\n  if (index < HARDENED_OFFSET) {\n    throw new DerivationError(`Segment ${index} is not hardened`);\n  }\n  const indexBuffer = Buffer.allocUnsafe(4);\n  indexBuffer.writeUInt32BE(index, 0);\n\n  const data = concatBuffers([Buffer.alloc(1, 0), secretKey, indexBuffer]);\n\n  const I = hmac(data, chainCode);\n  const IL = I.slice(0, 32);\n  const IR = I.slice(32);\n  return {\n    secretKey: IL,\n    chainCode: IR,\n  };\n}\n\n/**\n * @category hd-wallet\n */\nexport function derivePathFromKey(path: Bip32Path<5>, key: KeyTreeNode): KeyTreeNode {\n  const segments = path === '' ? [] : fromString(path).toPathArray();\n  segments.forEach((segment, i) => {\n    if (segment < HARDENED_OFFSET) {\n      throw new DerivationError(`Segment #${i + 1} is not hardened`);\n    }\n  });\n\n  return segments.reduce((parentKey, segment) => deriveChild(parentKey, segment), key);\n}\n\n/**\n * @category hd-wallet\n */\nexport function getMasterKeyFromSeed(seed: Uint8Array): KeyTreeNode {\n  const I = hmac(seed, ED25519_CURVE);\n  const IL = I.slice(0, 32);\n  const IR = I.slice(32);\n  return {\n    secretKey: IL,\n    chainCode: IR,\n  };\n}\n\n/**\n * @category hd-wallet\n */\nexport function derivePathFromSeed(path: 'm' | `m/${Bip32Path<5>}`, seed: Uint8Array): KeyTreeNode {\n  if (!['m', 'm/'].includes(path.slice(0, 2))) {\n    throw new DerivationError('Root element is required');\n  }\n  const masterKey = getMasterKeyFromSeed(seed);\n  return derivePathFromKey(path.slice(2) as Bip32Path<5>, masterKey);\n}\n\nfunction formatAccount(keys: nacl.SignKeyPair): Account {\n  const { secretKey, publicKey } = keys;\n  return {\n    secretKey: Buffer.from(secretKey).toString('hex'),\n    publicKey: encode(publicKey, Encoding.AccountAddress),\n  };\n}\n\n/**\n * @category hd-wallet\n */\nexport function getKeyPair(secretKey: Uint8Array): nacl.SignKeyPair {\n  return nacl.sign.keyPair.fromSeed(secretKey);\n}\n\n/**\n * @category hd-wallet\n */\nexport function generateSaveHDWalletFromSeed(seed: Uint8Array, password: string): HDWallet {\n  const walletKey = derivePathFromSeed('m/44h/457h', seed);\n  return {\n    secretKey: Buffer.from(encryptKey(password, walletKey.secretKey)).toString('hex'),\n    chainCode: Buffer.from(encryptKey(password, walletKey.chainCode)).toString('hex'),\n  };\n}\n\n/**\n * @category hd-wallet\n */\nexport function getSaveHDWalletAccounts(\n  saveHDWallet: HDWallet,\n  password: string,\n  accountCount: number,\n): Account[] {\n  const walletKey = {\n    secretKey: decryptKey(password, Buffer.from(saveHDWallet.secretKey, 'hex')),\n    chainCode: decryptKey(password, Buffer.from(saveHDWallet.chainCode, 'hex')),\n  };\n  return (new Array(accountCount)).fill(undefined)\n    .map((_, idx) => formatAccount(getKeyPair(derivePathFromKey(`${idx}h/0h/0h`, walletKey).secretKey)));\n}\n\n/**\n * @category hd-wallet\n */\nexport const getHdWalletAccountFromSeed = (\n  seed: Uint8Array,\n  accountIdx: number,\n): Account & { idx: number } => {\n  const walletKey = derivePathFromSeed('m/44h/457h', seed);\n  const derived = derivePathFromKey(`${accountIdx}h/0h/0h`, walletKey);\n  const keyPair = getKeyPair(derived.secretKey);\n  return {\n    ...formatAccount(keyPair),\n    idx: accountIdx,\n  };\n};\n","/**\n * Aens methods - routines to interact with the æternity naming system\n *\n * The high-level description of the naming system is\n * https://github.com/aeternity/protocol/blob/master/AENS.md in the protocol\n * repository.\n */\n\nimport BigNumber from 'bignumber.js';\nimport { genSalt } from './utils/crypto';\nimport { commitmentHash, isAuctionName } from './tx/builder/helpers';\nimport {\n  CLIENT_TTL, NAME_TTL, Tag, AensName,\n} from './tx/builder/constants';\nimport { ArgumentError } from './utils/errors';\nimport { Encoded } from './utils/encoder';\nimport { sendTransaction, SendTransactionOptions, getName } from './chain';\nimport { buildTxAsync, BuildTxOptions } from './tx/builder';\nimport { TransformNodeType } from './Node';\nimport { NameEntry, NamePointer } from './apis/node';\nimport AccountBase from './account/Base';\nimport { AddressEncodings } from './tx/builder/field-types/address';\n\ninterface KeyPointers {\n  [key: string]: Encoded.Generic<AddressEncodings>;\n}\n\n/**\n * Revoke a name\n * @category AENS\n * @param name - Name hash\n * @param options - Options\n * @param options.onAccount - Make operation on specific account from sdk (you pass\n * publickKey) or using provided KeyPair(Can be keypair object or MemoryAccount)\n * @param options.fee - fee\n * @param options.ttl - ttl\n * @param options.nonce - nonce\n * @returns Transaction result\n * @example\n * ```js\n * const name = 'test.chain'\n * const nameObject = await sdkInstance.aensQuery(name)\n *\n * await sdkInstance.aensRevoke(name, { fee, ttl , nonce })\n * // or\n * await nameObject.revoke({ fee, ttl, nonce })\n * ```\n */\nexport async function aensRevoke(\n  name: AensName,\n  options: AensRevokeOptions,\n): ReturnType<typeof sendTransaction> {\n  const nameRevokeTx = await buildTxAsync({\n    ...options,\n    tag: Tag.NameRevokeTx,\n    nameId: name,\n    accountId: options.onAccount.address,\n  });\n  return sendTransaction(nameRevokeTx, options);\n}\n\ninterface AensRevokeOptions extends\n  BuildTxOptions<Tag.NameRevokeTx, 'nameId' | 'accountId' | 'onNode'>,\n  SendTransactionOptions {}\n\n/**\n * Update a name\n * @category AENS\n * @param name - AENS name\n * @param pointers - Map of pointer keys to corresponding addresses\n * @param options - Options\n * @param options.extendPointers - Get the pointers from the node and merge with provided\n * ones. Pointers with the same type will be overwritten\n * @param options.onAccount - Make operation on specific account from sdk (you\n * pass publickKey) or using provided KeyPair(Can be keypair object or MemoryAccount)\n * @param options.fee - fee\n * @param options.ttl - ttl\n * @param options.nonce - nonce\n * @param options.nameTtl - Name ttl represented in number of\n * blocks (Max value is 50000 blocks)\n * @param options.clientTtl=84600 a suggestion as to how long any\n * clients should cache this information\n * @throws Invalid pointer array error\n * @example\n * ```js\n * const name = 'test.chain'\n * const pointersArray = ['ak_asd23dasdas...,' 'ct_asdf34fasdasd...']\n * const nameObject = await sdkInstance.aensQuery(name)\n *\n * await sdkInstance.aensUpdate(name, pointersArray, { nameTtl, ttl, fee, nonce, clientTtl })\n * // or\n * await nameObject.update(pointers, { nameTtl, ttl, fee, nonce, clientTtl })\n * ```\n */\nexport async function aensUpdate(\n  name: AensName,\n  pointers: KeyPointers,\n  { extendPointers, ...options }: AensUpdateOptions,\n): ReturnType<typeof sendTransaction> {\n  const allPointers = {\n    ...extendPointers === true && Object.fromEntries(\n      (await getName(name, options)).pointers.map(({ key, id }) => [key, id]),\n    ),\n    ...pointers,\n  };\n\n  const nameUpdateTx = await buildTxAsync({\n    clientTtl: CLIENT_TTL,\n    nameTtl: NAME_TTL,\n    ...options,\n    tag: Tag.NameUpdateTx,\n    nameId: name,\n    accountId: options.onAccount.address,\n    pointers: Object.entries(allPointers)\n      .map(([key, id]: [string, Encoded.Generic<AddressEncodings>]) => ({ key, id })),\n  });\n\n  return sendTransaction(nameUpdateTx, options);\n}\n\ninterface AensUpdateOptions extends\n  BuildTxOptions<Tag.NameUpdateTx, 'nameId' | 'accountId' | 'pointers' | 'clientTtl' | 'nameTtl' | 'onNode'>,\n  SendTransactionOptions {\n  extendPointers?: boolean;\n  clientTtl?: number;\n  nameTtl?: number;\n}\n\n/**\n * Transfer a domain to another account\n * @category AENS\n * @param name - AENS name\n * @param account - Recipient account publick key\n * @param options - Options\n * @param options.onAccount - Make operation on specific account from sdk (you pass\n * publickKey) or using provided KeyPair(Can be keypair object or MemoryAccount)\n * @param options.fee - fee\n * @param options.ttl - ttl\n * @param options.nonce - nonce\n * @returns Transaction result\n * @example\n * ```js\n * const name = 'test.chain'\n * const recipientPub = 'ak_asd23dasdas...'\n * const nameObject = await sdkInstance.aensQuery(name)\n *\n * await sdkInstance.aensTransfer(name, recipientPub, { ttl, fee, nonce })\n * // or\n * await nameObject.transfer(recipientPub, { ttl, fee, nonce })\n * ```\n */\nexport async function aensTransfer(\n  name: AensName,\n  account: Encoded.AccountAddress,\n  options: AensTransferOptions,\n): ReturnType<typeof sendTransaction> {\n  const nameTransferTx = await buildTxAsync({\n    ...options,\n    tag: Tag.NameTransferTx,\n    nameId: name,\n    accountId: options.onAccount.address,\n    recipientId: account,\n  });\n\n  return sendTransaction(nameTransferTx, options);\n}\n\ninterface AensTransferOptions extends\n  BuildTxOptions<Tag.NameTransferTx, 'nameId' | 'accountId' | 'recipientId' | 'onNode'>,\n  SendTransactionOptions {}\n\n/**\n * Query the AENS name info from the node\n * and return the object with info and predefined functions for manipulating name\n * @category AENS\n * @param name - AENS name\n * @param opt - Options\n * @returns\n * @example\n * ```js\n * const nameObject = sdkInstance.aensQuery('test.chain')\n * console.log(nameObject)\n * {\n *  id, // name hash\n *  pointers, // array of pointers\n *  update, // Update name function\n *  extendTtl, // Extend Ttl name function\n *  transfer, // Transfer name function\n *  revoke // Revoke name function\n * }\n * ```\n */\nexport async function aensQuery(\n  name: AensName,\n  opt: Parameters<typeof getName>[1] & Parameters<typeof aensUpdate>[2]\n  & Parameters<typeof aensTransfer>[2],\n): Promise<Readonly<\n  TransformNodeType<NameEntry> & {\n    id: Encoded.Name;\n    owner: Encoded.AccountAddress;\n    pointers: KeyPointers | NamePointer[];\n    ttl: number;\n    update: (\n      pointers: KeyPointers,\n      options?: Omit<Parameters<typeof aensQuery>[1], 'onNode' | 'onCompiler' | 'onAccount'> & {\n        onAccount?: AccountBase;\n      }\n    ) => ReturnType<typeof aensUpdate> & ReturnType<typeof aensQuery>;\n    transfer: (\n      account: Encoded.AccountAddress,\n      options?: Parameters<typeof aensQuery>[1]\n    ) => ReturnType<typeof aensUpdate> & ReturnType<typeof aensQuery>;\n    revoke: (options?: Omit<Parameters<typeof aensRevoke>[1], 'onNode' | 'onCompiler' | 'onAccount'> & {\n      onAccount?: AccountBase;\n    }\n    ) => ReturnType<typeof aensRevoke>;\n    extendTtl: (\n      nameTtl: number,\n      options?: Omit<Parameters<typeof aensQuery>[1], 'onNode' | 'onCompiler' | 'onAccount'>\n    ) => ReturnType<typeof aensUpdate> & ReturnType<typeof aensQuery>;\n  }\n  >> {\n  const nameEntry = await getName(name, opt);\n  return Object.freeze({\n    ...nameEntry,\n    id: nameEntry.id as Encoded.Name,\n    owner: nameEntry.owner as Encoded.AccountAddress,\n    async update(pointers, options) {\n      return {\n        ...await aensUpdate(name, pointers, { ...opt, ...options }),\n        ...await aensQuery(name, { ...opt, ...options }),\n      };\n    },\n    async transfer(account, options) {\n      return {\n        ...await aensTransfer(name, account, { ...opt, ...options }),\n        ...await aensQuery(name, { ...opt, ...options }),\n      };\n    },\n    async revoke(options) {\n      return aensRevoke(name, { ...opt, ...options });\n    },\n    async extendTtl(nameTtl = NAME_TTL, options = {}) {\n      if (nameTtl > NAME_TTL || nameTtl <= 0) {\n        throw new ArgumentError('nameTtl', `a number between 1 and ${NAME_TTL} blocks`, nameTtl);\n      }\n\n      return {\n        ...await aensUpdate(name, {}, {\n          ...opt, ...options, nameTtl, extendPointers: true,\n        }),\n        ...await aensQuery(name, { ...opt, ...options }),\n      };\n    },\n  });\n}\n\n/**\n * Claim a previously preclaimed registration. This can only be done after the\n * preclaim step\n * @category AENS\n * @param name - AENS name\n * @param salt - Salt from pre-claim, or 0 if it's a bid\n * @param options - options\n * @param options.onAccount - Make operation on specific account from sdk (you pass\n * publickKey) or using provided KeyPair(Can be keypair object or MemoryAccount)\n * @param options.fee - fee\n * @param options.ttl - ttl\n * @param options.nonce - nonce\n * @param options.nameFee - Name Fee (By default calculated by sdk)\n * @returns the result of the claim\n * @example\n * ```js\n * const name = 'test.chain'\n * const salt = preclaimResult.salt // salt from pre-claim transaction\n *\n * await sdkInstance.aensClaim(name, salt, { ttl, fee, nonce, nameFee })\n * ```\n */\nexport async function aensClaim(\n  name: AensName,\n  salt: number,\n  options: AensClaimOptions,\n): Promise<AensClaimReturnType> {\n  const claimTx = await buildTxAsync({\n    ...options,\n    tag: Tag.NameClaimTx,\n    accountId: options.onAccount.address,\n    nameSalt: salt,\n    name,\n  });\n\n  const result = await sendTransaction(claimTx, options);\n  if (!isAuctionName(name)) {\n    const nameInter = result.blockHeight != null && result.blockHeight > 0\n      ? await aensQuery(name, options)\n      : {};\n    return Object.assign(result, nameInter);\n  }\n  return result;\n}\n\ntype AensClaimOptionsType = BuildTxOptions<Tag.NameClaimTx, 'accountId' | 'nameSalt' | 'name'>\n& SendTransactionOptions & Parameters<typeof aensQuery>[1];\ninterface AensClaimOptions extends AensClaimOptionsType {}\ninterface AensClaimReturnType extends\n  Awaited<ReturnType<typeof sendTransaction>>,\n  Partial<Awaited<ReturnType<typeof aensQuery>>> {}\n\n/**\n * Preclaim a name. Sends a hash of the name and a random salt to the node\n * @category AENS\n * @param name - AENS name\n * @param options - Options\n * @param options.onAccount - Make operation on specific account from sdk (you pass\n * publickKey) or using provided KeyPair(Can be keypair object or MemoryAccount)\n * @param options.fee - fee\n * @param options.ttl - ttl\n * @param options.nonce - nonce\n * @example\n * ```js\n * const name = 'test.chain'\n * const salt = preclaimResult.salt // salt from pre-claim transaction\n *\n * await sdkInstance.aensPreclaim(name, { ttl, fee, nonce })\n * {\n *   ...transactionResult,\n *   claim, // Claim function (options={}) => claimTransactionResult\n *   salt,\n *   commitmentId\n * }\n * ```\n */\nexport async function aensPreclaim(name: AensName, options: AensPreclaimOptions): Promise<Readonly<\nAwaited<ReturnType<typeof sendTransaction>> & {\n  salt: number;\n  commitmentId: string;\n  claim: (opts?: Parameters<typeof aensClaim>[2]) => ReturnType<typeof aensClaim>;\n}\n>> {\n  const salt = genSalt();\n  const commitmentId = commitmentHash(name, salt);\n\n  const preclaimTx = await buildTxAsync({\n    ...options,\n    tag: Tag.NamePreclaimTx,\n    accountId: options.onAccount.address,\n    commitmentId,\n  });\n\n  return Object.freeze({\n    ...await sendTransaction(preclaimTx, options),\n    salt,\n    commitmentId,\n    async claim(opts?: Parameters<typeof aensClaim>[2]) {\n      const { version, ...otherOptions } = options;\n      return aensClaim(name, salt, { ...otherOptions, ...opts });\n    },\n  });\n}\n\ninterface AensPreclaimOptions extends\n  BuildTxOptions<Tag.NamePreclaimTx, 'accountId' | 'commitmentId' | 'onNode'>,\n  SendTransactionOptions,\n  Omit<AensClaimOptions, 'version'> {}\n\n/**\n * Bid to name auction\n * @category AENS\n * @param name - Domain name\n * @param nameFee - Name fee (bid fee)\n * @param options - Options\n * @param options.onAccount - Make operation on specific account from sdk (you pass\n * publickKey) or using provided KeyPair(Can be keypair object or MemoryAccount)\n * @param options.fee - fee\n * @param options.ttl - ttl\n * @param options.nonce - nonce\n * @returns Transaction result\n * @example\n * ```js\n * const name = 'test.chain'\n * const bidFee = computeBidFee(name, { startFee, increment: 0.42 })\n *\n * await sdkInstance.aensBid(name, 213109412839123, { ttl, fee, nonce })\n * ```\n */\nexport async function aensBid(\n  name: AensName,\n  nameFee: number | string | BigNumber,\n  options: Omit<Parameters<typeof aensClaim>[2], 'nameFee'>,\n): ReturnType<typeof aensClaim> {\n  return aensClaim(name, 0, { ...options, nameFee });\n}\n","/**\n * Contract module - routines to interact with the æternity contract\n *\n * High level documentation of the contracts are available at\n * https://github.com/aeternity/protocol/tree/master/contracts and\n */\n\nimport { Encoder as Calldata } from '@aeternity/aepp-calldata';\nimport { DRY_RUN_ACCOUNT } from '../tx/builder/schema';\nimport { Tag, AensName } from '../tx/builder/constants';\nimport {\n  buildContractIdByContractTx, unpackTx, buildTxAsync, BuildTxOptions, buildTxHash,\n} from '../tx/builder';\nimport { decode, Encoded } from '../utils/encoder';\nimport {\n  MissingContractDefError,\n  MissingContractAddressError,\n  InactiveContractError,\n  BytecodeMismatchError,\n  DuplicateContractError,\n  MissingFunctionNameError,\n  InvalidMethodInvocationError,\n  NotPayableFunctionError,\n  TypeError,\n  NodeInvocationError,\n  IllegalArgumentError,\n  NoSuchContractFunctionError,\n  MissingEventDefinitionError,\n  AmbiguousEventDefinitionError,\n  UnexpectedTsError,\n  InternalError,\n  NoWalletConnectedError,\n  ContractError,\n} from '../utils/errors';\nimport { hash as calcHash } from '../utils/crypto';\nimport {\n  ContractCallObject as NodeContractCallObject, Event as NodeEvent,\n} from '../apis/node';\nimport CompilerBase, { Aci } from './compiler/Base';\nimport Node, { TransformNodeType } from '../Node';\nimport {\n  getAccount, getContract, getContractByteCode, resolveName, txDryRun, sendTransaction,\n  SendTransactionOptions,\n} from '../chain';\nimport AccountBase from '../account/Base';\nimport { TxUnpacked } from '../tx/builder/schema.generated';\nimport { isAccountNotFoundError } from '../utils/other';\n\ntype ContractAci = NonNullable<Aci[0]['contract']>;\ntype FunctionAci = ContractAci['functions'][0];\n\ninterface Event extends NodeEvent {\n  address: Encoded.ContractAddress;\n  data: Encoded.ContractBytearray;\n}\n\nexport interface ContractCallObject extends TransformNodeType<NodeContractCallObject> {\n  returnValue: Encoded.ContractBytearray;\n  log: Event[];\n}\n\ninterface DecodedEvent {\n  name: string;\n  args: unknown[];\n  contract: {\n    name: string;\n    address: Encoded.ContractAddress;\n  };\n}\n\ntype TxData = Awaited<ReturnType<typeof sendTransaction>>;\n\ninterface SendAndProcessReturnType {\n  result?: ContractCallObject;\n  hash: TxData['hash'];\n  tx: TxUnpacked & { tag: Tag.SignedTx | Tag.ContractCallTx | Tag.ContractCreateTx };\n  txData: TxData;\n  rawTx: Encoded.Transaction;\n}\n\nexport interface ContractMethodsBase { [key: string]: (...args: any[]) => any }\n\ntype MethodsToContractApi<M extends ContractMethodsBase> = {\n  [Name in keyof M]:\n  M[Name] extends (...args: infer Args) => any\n    ? (...args: [\n      ...Args,\n      ...[] | [Name extends 'init'\n        ? Parameters<Contract<M>['$deploy']>[1] : Parameters<Contract<M>['$call']>[2]],\n    ]) => ReturnType<Contract<M>['$call']>\n    : never\n};\n\ntype ContractWithMethods<M extends ContractMethodsBase> = Contract<M> & MethodsToContractApi<M>;\n\ntype MethodNames<M extends ContractMethodsBase> = keyof M & string | 'init';\n\ntype MethodParameters<M extends ContractMethodsBase, Fn extends MethodNames<M>> =\n  Fn extends 'init'\n    ? M extends { init: any } ? Parameters<M['init']> : []\n    : Parameters<M[Fn]>;\n\ninterface GetContractNameByEventOptions {\n  contractAddressToName?: { [key: Encoded.ContractAddress]: string };\n}\n\ninterface GetCallResultByHashReturnType<M extends ContractMethodsBase, Fn extends MethodNames<M>> {\n  decodedResult: ReturnType<M[Fn]>;\n  decodedEvents?: ReturnType<Contract<M>['$decodeEvents']>;\n}\n\n/**\n * Generate contract ACI object with predefined js methods for contract usage - can be used for\n * creating a reference to already deployed contracts\n * @category contract\n * @param options - Options object\n * @returns JS Contract API\n * @example\n * ```js\n * const contractIns = await aeSdk.initializeContract({ sourceCode })\n * await contractIns.$deploy([321]) or await contractIns.init(321)\n * const callResult = await contractIns.$call('setState', [123])\n * const staticCallResult = await contractIns.$call('setState', [123], { callStatic: true })\n * ```\n * Also you can call contract like: `await contractIns.setState(123, options)`\n * Then sdk decide to make on-chain or static call (dry-run API) transaction based on function is\n * stateful or not\n */\nclass Contract<M extends ContractMethodsBase> {\n  /**\n   * Compile contract\n   * @returns bytecode\n   */\n  async $compile(): Promise<Encoded.ContractBytearray> {\n    if (this.$options.bytecode != null) return this.$options.bytecode;\n    if (this.$options.onCompiler == null) throw new IllegalArgumentError('Can\\'t compile without compiler');\n    if (this.$options.sourceCode != null) {\n      const { bytecode } = await this.$options.onCompiler\n        .compileBySourceCode(this.$options.sourceCode, this.$options.fileSystem);\n      this.$options.bytecode = bytecode;\n    }\n    if (this.$options.sourceCodePath != null) {\n      const { bytecode } = await this.$options.onCompiler.compile(this.$options.sourceCodePath);\n      this.$options.bytecode = bytecode;\n    }\n    if (this.$options.bytecode == null) {\n      throw new IllegalArgumentError('Can\\'t compile without sourceCode and sourceCodePath');\n    }\n    return this.$options.bytecode;\n  }\n\n  #getCallResult<Fn extends MethodNames<M>>(\n    { returnType, returnValue, log }: ContractCallObject,\n    fnName: Fn,\n    transaction: Encoded.Transaction | undefined,\n    options: Parameters<Contract<M>['$decodeEvents']>[1],\n  ): GetCallResultByHashReturnType<M, Fn> {\n    let message: string;\n    switch (returnType) {\n      case 'ok': {\n        const fnAci = this.#getFunctionAci(fnName);\n        return {\n          decodedResult: this._calldata.decode(this._name, fnAci.name, returnValue),\n          decodedEvents: this.$decodeEvents(log, options),\n        };\n      }\n      case 'revert':\n        message = this._calldata.decodeFateString(returnValue);\n        break;\n      case 'error':\n        message = decode(returnValue).toString();\n        break;\n      default:\n        throw new InternalError(`Unknown return type: ${returnType}`);\n    }\n    throw new NodeInvocationError(message, transaction);\n  }\n\n  async #sendAndProcess<Fn extends MethodNames<M>>(\n    tx: Encoded.Transaction,\n    fnName: Fn,\n    options: SendTransactionOptions & Parameters<Contract<M>['$getCallResultByTxHash']>[2],\n  ): Promise<SendAndProcessReturnType & Partial<GetCallResultByHashReturnType<M, Fn>>> {\n    const txData = await sendTransaction(tx, { ...this.$options, ...options });\n    return {\n      hash: txData.hash,\n      tx: unpackTx<Tag.ContractCallTx | Tag.ContractCreateTx>(txData.rawTx),\n      txData,\n      rawTx: txData.rawTx,\n      ...txData.blockHeight != null && (\n        await this.$getCallResultByTxHash(txData.hash, fnName, options)\n      ),\n    };\n  }\n\n  async $getCallResultByTxHash<Fn extends MethodNames<M>>(\n    hash: Encoded.TxHash,\n    fnName: Fn,\n    options?: Parameters<Contract<M>['$decodeEvents']>[1],\n  ): Promise<GetCallResultByHashReturnType<M, Fn> & { result: ContractCallObject }> {\n    const { callInfo } = await this.$options.onNode.getTransactionInfoByHash(hash);\n    if (callInfo == null) {\n      throw new ContractError(`callInfo is not available for transaction ${hash}`);\n    }\n    const callInfoTyped = callInfo as ContractCallObject;\n    return {\n      ...this.#getCallResult(callInfoTyped, fnName, undefined, options),\n      result: callInfoTyped,\n    };\n  }\n\n  async _estimateGas<Fn extends MethodNames<M>>(\n    name: Fn,\n    params: MethodParameters<M, Fn>,\n    options: Omit<Parameters<Contract<M>['$call']>[2], 'callStatic'> = {},\n  ): Promise<number> {\n    const { result } = await this.$call(name, params, { ...options, callStatic: true });\n    if (result == null) throw new UnexpectedTsError();\n    const { gasUsed } = result;\n    // taken from https://github.com/aeternity/aepp-sdk-js/issues/1286#issuecomment-977814771\n    return Math.floor(gasUsed * 1.25);\n  }\n\n  /**\n   * Deploy contract\n   * @param params - Contract init function arguments array\n   * @param options - Options\n   * @returns deploy info\n   */\n  async $deploy(\n    params: MethodParameters<M, 'init'>,\n    options?: Parameters<Contract<M>['$call']>[2]\n    & Partial<BuildTxOptions<Tag.ContractCreateTx, 'ownerId' | 'code' | 'callData'>>,\n  ): Promise<Omit<SendAndProcessReturnType, 'hash'> & {\n      transaction?: Encoded.TxHash;\n      owner?: Encoded.AccountAddress;\n      address?: Encoded.ContractAddress;\n      decodedEvents?: ReturnType<Contract<M>['$decodeEvents']>;\n    }> {\n    const { callStatic, ...opt } = { ...this.$options, ...options };\n    if (this.$options.bytecode == null) await this.$compile();\n    if (callStatic === true) return this.$call('init', params, { ...opt, callStatic });\n    if (this.$options.address != null) throw new DuplicateContractError();\n\n    if (opt.onAccount == null) throw new IllegalArgumentError('Can\\'t deploy without account');\n    const ownerId = opt.onAccount.address;\n    if (this.$options.bytecode == null) throw new IllegalArgumentError('Can\\'t deploy without bytecode');\n    const tx = await buildTxAsync({\n      ...opt,\n      tag: Tag.ContractCreateTx,\n      gasLimit: opt.gasLimit ?? await this._estimateGas('init', params, opt),\n      callData: this._calldata.encode(this._name, 'init', params),\n      code: this.$options.bytecode,\n      ownerId,\n    });\n    const { hash, ...other } = await this.#sendAndProcess(\n      tx,\n      'init',\n      { ...opt, onAccount: opt.onAccount },\n    );\n    this.$options.address = buildContractIdByContractTx(tx);\n    return {\n      ...other,\n      ...other.result?.log != null && {\n        decodedEvents: this.$decodeEvents(other.result.log, opt),\n      },\n      owner: ownerId,\n      transaction: hash,\n      address: this.$options.address,\n    };\n  }\n\n  /**\n   * Get function schema from contract ACI object\n   * @param name - Function name\n   * @returns function ACI\n   */\n  #getFunctionAci(name: string): FunctionAci {\n    const fn = this.#aciContract.functions.find(\n      (f: { name: string }) => f.name === name,\n    );\n    if (fn != null) {\n      return fn;\n    }\n    if (name === 'init') {\n      return {\n        arguments: [], name: 'init', payable: false, returns: 'unit', stateful: true,\n      };\n    }\n    throw new NoSuchContractFunctionError(`Function ${name} doesn't exist in contract`);\n  }\n\n  /**\n   * Call contract function\n   * @param fn - Function name\n   * @param params - Array of function arguments\n   * @param options - Array of function arguments\n   * @returns CallResult\n   */\n  async $call<Fn extends MethodNames<M>>(\n    fn: Fn,\n    params: MethodParameters<M, Fn>,\n    options: Partial<BuildTxOptions<Tag.ContractCallTx, 'callerId' | 'contractId' | 'callData'>>\n    & Parameters<Contract<M>['$decodeEvents']>[1]\n    & Omit<SendTransactionOptions, 'onAccount' | 'onNode'>\n    & Omit<Parameters<typeof txDryRun>[2], 'onNode'>\n    & { onAccount?: AccountBase; onNode?: Node; callStatic?: boolean } = {},\n  ): Promise<SendAndProcessReturnType & Partial<GetCallResultByHashReturnType<M, Fn>>> {\n    const { callStatic, top, ...opt } = { ...this.$options, ...options };\n    const fnAci = this.#getFunctionAci(fn);\n    const contractId = this.$options.address;\n    const { onNode } = opt;\n\n    if (fn == null) throw new MissingFunctionNameError();\n    if (fn === 'init' && callStatic !== true) throw new InvalidMethodInvocationError('\"init\" can be called only via dryRun');\n    if (fn !== 'init' && opt.amount != null && Number(opt.amount) > 0 && !fnAci.payable) {\n      throw new NotPayableFunctionError(opt.amount, fn);\n    }\n\n    let callerId;\n    try {\n      if (opt.onAccount == null) throw new InternalError('Use fallback account');\n      callerId = opt.onAccount.address;\n    } catch (error) {\n      const useFallbackAccount = callStatic === true && (\n        (error instanceof TypeError && error.message === 'Account should be an address (ak-prefixed string), or instance of AccountBase, got undefined instead')\n        || (error instanceof NoWalletConnectedError)\n        || (error instanceof InternalError && error.message === 'Use fallback account')\n      );\n      if (!useFallbackAccount) throw error;\n      callerId = DRY_RUN_ACCOUNT.pub;\n    }\n    const callData = this._calldata.encode(this._name, fn, params);\n\n    if (callStatic === true) {\n      if (opt.nonce == null) {\n        const topOption = top != null && { [typeof top === 'number' ? 'height' : 'hash']: top };\n        const account = await getAccount(callerId, { ...topOption, onNode }).catch((error) => {\n          if (!isAccountNotFoundError(error)) throw error;\n          return { kind: 'basic', nonce: 0 };\n        });\n        opt.nonce = account.kind === 'generalized' ? 0 : account.nonce + 1;\n      }\n\n      const txOpt = { ...opt, onNode, callData };\n      let tx;\n      if (fn === 'init') {\n        if (this.$options.bytecode == null) throw new IllegalArgumentError('Can\\'t dry-run \"init\" without bytecode');\n        tx = await buildTxAsync({\n          ...txOpt, tag: Tag.ContractCreateTx, code: this.$options.bytecode, ownerId: callerId,\n        });\n      } else {\n        if (contractId == null) throw new MissingContractAddressError('Can\\'t dry-run contract without address');\n        tx = await buildTxAsync({\n          ...txOpt, tag: Tag.ContractCallTx, callerId, contractId,\n        });\n      }\n\n      const { callObj, ...dryRunOther } = await txDryRun(tx, callerId, { ...opt, top });\n      if (callObj == null) {\n        throw new InternalError(`callObj is not available for transaction ${tx}`);\n      }\n      const callInfoTyped = callObj as ContractCallObject;\n      return {\n        ...dryRunOther,\n        ...this.#getCallResult(callInfoTyped, fn, tx, opt),\n        tx: unpackTx(tx),\n        result: callInfoTyped,\n        rawTx: tx,\n        hash: buildTxHash(tx),\n        txData: undefined as any,\n      };\n    }\n\n    if (top != null) throw new IllegalArgumentError('Can\\'t handle `top` option in on-chain contract call');\n    if (contractId == null) throw new MissingContractAddressError('Can\\'t call contract without address');\n    const tx = await buildTxAsync({\n      ...opt,\n      tag: Tag.ContractCallTx,\n      gasLimit: opt.gasLimit ?? await this._estimateGas(fn, params, opt),\n      callerId,\n      contractId,\n      callData,\n    });\n    if (opt.onAccount == null) throw new IllegalArgumentError('Can\\'t call contract on chain without account');\n    return this.#sendAndProcess(tx, fn, { ...opt, onAccount: opt.onAccount });\n  }\n\n  /**\n   * @param ctAddress - Contract address that emitted event\n   * @param nameHash - Hash of emitted event name\n   * @param options - Options\n   * @returns Contract name\n   * @throws {@link MissingEventDefinitionError}\n   * @throws {@link AmbiguousEventDefinitionError}\n   */\n  #getContractNameByEvent(\n    ctAddress: Encoded.ContractAddress,\n    nameHash: BigInt,\n    { contractAddressToName }: GetContractNameByEventOptions,\n  ): string {\n    const addressToName = { ...this.$options.contractAddressToName, ...contractAddressToName };\n    if (addressToName[ctAddress] != null) return addressToName[ctAddress];\n\n    // TODO: consider using a third-party library\n    const isEqual = (a: any, b: any): boolean => JSON.stringify(a) === JSON.stringify(b);\n\n    const contracts = this._aci\n      .map(({ contract }) => contract)\n      .filter((contract) => contract?.event) as ContractAci[];\n    const matchedEvents = contracts\n      .map((contract) => [contract.name, contract.event.variant])\n      .map(([name, events]) => events.map((event: {}) => (\n        [name, Object.keys(event)[0], Object.values(event)[0]]\n      )))\n      .flat()\n      .filter(([, eventName]) => BigInt(`0x${calcHash(eventName).toString('hex')}`) === nameHash)\n      .filter(([, , type], idx, arr) => !arr.slice(0, idx).some((el) => isEqual(el[2], type)));\n    switch (matchedEvents.length) {\n      case 0: throw new MissingEventDefinitionError(nameHash.toString(), ctAddress);\n      case 1: return matchedEvents[0][0];\n      default: throw new AmbiguousEventDefinitionError(ctAddress, matchedEvents);\n    }\n  }\n\n  /**\n   * Decode Events\n   * @param events - Array of encoded events (callRes.result.log)\n   * @param options - Options\n   * @returns DecodedEvents\n   */\n  $decodeEvents(\n    events: Event[],\n    { omitUnknown, ...opt }: { omitUnknown?: boolean } & GetContractNameByEventOptions = {},\n  ): DecodedEvent[] {\n    return events\n      .map((event) => {\n        const topics = event.topics.map((t: string | number) => BigInt(t));\n        let contractName;\n        try {\n          contractName = this.#getContractNameByEvent(event.address, topics[0], opt);\n        } catch (error) {\n          if ((omitUnknown ?? false) && error instanceof MissingEventDefinitionError) return null;\n          throw error;\n        }\n        const decoded = this._calldata.decodeEvent(contractName, event.data, topics);\n        const [name, args] = Object.entries(decoded)[0];\n        return {\n          name,\n          args,\n          contract: {\n            name: contractName,\n            address: event.address,\n          },\n        };\n      }).filter((e: DecodedEvent | null): e is DecodedEvent => e != null);\n  }\n\n  static async initialize<M extends ContractMethodsBase>(\n    {\n      onCompiler,\n      onNode,\n      bytecode,\n      aci,\n      address,\n      sourceCodePath,\n      sourceCode,\n      fileSystem,\n      validateBytecode,\n      ...otherOptions\n    }: Omit<ConstructorParameters<typeof Contract>[0], 'aci' | 'address'> & {\n      validateBytecode?: boolean;\n      aci?: Aci;\n      address?: Encoded.ContractAddress | AensName;\n    },\n  ): Promise<ContractWithMethods<M>> {\n    if (aci == null && onCompiler != null) {\n      let res;\n      if (sourceCodePath != null) res = await onCompiler.compile(sourceCodePath);\n      if (sourceCode != null) res = await onCompiler.compileBySourceCode(sourceCode, fileSystem);\n      if (res != null) {\n        aci = res.aci;\n        bytecode ??= res.bytecode;\n      }\n    }\n    if (aci == null) throw new MissingContractDefError();\n\n    if (address != null) {\n      address = await resolveName(\n        address,\n        'contract_pubkey',\n        { resolveByNode: true, onNode },\n      ) as Encoded.ContractAddress;\n    }\n\n    if (address == null && sourceCode == null && sourceCodePath == null && bytecode == null) {\n      throw new MissingContractAddressError('Can\\'t create instance by ACI without address');\n    }\n\n    if (address != null) {\n      const contract = await getContract(address, { onNode });\n      if (contract.active == null) throw new InactiveContractError(address);\n    }\n\n    if (validateBytecode === true) {\n      if (address == null) throw new MissingContractAddressError('Can\\'t validate bytecode without contract address');\n      const onChanBytecode = (await getContractByteCode(address, { onNode })).bytecode;\n      let isValid = false;\n      if (bytecode != null) isValid = bytecode === onChanBytecode;\n      else if (sourceCode != null) {\n        if (onCompiler == null) throw new IllegalArgumentError('Can\\'t validate bytecode without compiler');\n        isValid = await onCompiler.validateBySourceCode(onChanBytecode, sourceCode, fileSystem);\n      } else if (sourceCodePath != null) {\n        if (onCompiler == null) throw new IllegalArgumentError('Can\\'t validate bytecode without compiler');\n        isValid = await onCompiler.validate(onChanBytecode, sourceCodePath);\n      }\n      if (!isValid) {\n        throw new BytecodeMismatchError((sourceCode ?? sourceCodePath) != null ? 'source code' : 'bytecode');\n      }\n    }\n\n    return new ContractWithMethods<M>({\n      onCompiler,\n      onNode,\n      sourceCode,\n      sourceCodePath,\n      bytecode,\n      aci,\n      address,\n      fileSystem,\n      ...otherOptions,\n    });\n  }\n\n  _aci: Aci;\n\n  #aciContract: ContractAci;\n\n  _name: string;\n\n  _calldata: Calldata;\n\n  $options: Omit<ConstructorParameters<typeof Contract>[0], 'aci'>;\n\n  constructor({ aci, ...otherOptions }: {\n    onCompiler?: CompilerBase;\n    onNode: Node;\n    bytecode?: Encoded.ContractBytearray;\n    aci: Aci;\n    address?: Encoded.ContractAddress;\n    sourceCodePath?: Parameters<CompilerBase['compile']>[0];\n    sourceCode?: Parameters<CompilerBase['compileBySourceCode']>[0];\n    fileSystem?: Parameters<CompilerBase['compileBySourceCode']>[1];\n  } & Parameters<Contract<M>['$deploy']>[1]) {\n    this._aci = aci;\n    const aciLast = aci[aci.length - 1];\n    if (aciLast.contract == null) {\n      throw new IllegalArgumentError(`The last 'aci' item should have 'contract' key, got ${Object.keys(aciLast)} keys instead`);\n    }\n    this.#aciContract = aciLast.contract;\n    this._name = this.#aciContract.name;\n    this._calldata = new Calldata(aci);\n    this.$options = otherOptions;\n\n    /**\n     * Generate proto function based on contract function using Contract ACI schema\n     * All function can be called like:\n     * ```js\n     * await contract.testFunction()\n     * ```\n     * then sdk will decide to use dry-run or send tx\n     * on-chain base on if function stateful or not.\n     * Also, you can manually do that:\n     * ```js\n     * await contract.testFunction({ callStatic: true }) // use call-static (dry-run)\n     * await contract.testFunction({ callStatic: false }) // send tx on-chain\n     * ```\n     */\n    Object.assign(\n      this,\n      Object.fromEntries(this.#aciContract.functions\n        .map(({ name, arguments: aciArgs, stateful }: FunctionAci) => {\n          const callStatic = name !== 'init' && !stateful;\n          return [\n            name,\n            async (...args: any) => {\n              const options = args.length === aciArgs.length + 1 ? args.pop() : {};\n              if (typeof options !== 'object') throw new TypeError(`Options should be an object: ${options}`);\n              if (name === 'init') return this.$deploy(args, { callStatic, ...options });\n              return this.$call(name, args, { callStatic, ...options });\n            },\n          ];\n        })),\n    );\n  }\n}\n\ninterface ContractWithMethodsClass {\n  new <M extends ContractMethodsBase>(\n    options: ConstructorParameters<typeof Contract>[0],\n  ): ContractWithMethods<M>;\n  initialize: typeof Contract['initialize'];\n}\n\n// eslint-disable-next-line @typescript-eslint/no-redeclare\nconst ContractWithMethods: ContractWithMethodsClass = Contract as any;\n\nexport default ContractWithMethods;\n","/**\n * Oracle methods - routines to interact with the æternity oracle system\n *\n * The high-level description of the oracle system is\n * https://github.com/aeternity/protocol/blob/master/ORACLE.md in the protocol\n * repository.\n */\n\nimport { mapObject, pause } from './utils/other';\nimport { oracleQueryId } from './tx/builder/helpers';\nimport { unpackTx, buildTxAsync, BuildTxOptions } from './tx/builder';\nimport {\n  ORACLE_TTL,\n  ORACLE_TTL_TYPES,\n  QUERY_TTL,\n  RESPONSE_TTL,\n} from './tx/builder/schema';\nimport { Tag } from './tx/builder/constants';\nimport { RequestTimedOutError } from './utils/errors';\nimport {\n  decode, encode, Encoded, Encoding,\n} from './utils/encoder';\nimport {\n  _getPollInterval, getHeight, sendTransaction, SendTransactionOptions,\n} from './chain';\nimport Node from './Node';\nimport AccountBase from './account/Base';\n\ntype OracleQueries = Awaited<ReturnType<Node['getOracleQueriesByPubkey']>>['oracleQueries'];\n\n/**\n * Poll for oracle queries\n * @category oracle\n * @param oracleId - Oracle public key\n * @param onQuery - OnQuery callback\n * @param options - Options object\n * @param options.interval - Poll interval(default: 5000)\n * @param options.onNode - Node to use\n * @returns Callback to stop polling function\n */\nexport function pollForQueries(\n  oracleId: Encoded.OracleAddress,\n  onQuery: (query: OracleQueries[number]) => void,\n  { interval, onNode, ...options }: { interval?: number; onNode: Node }\n  & Parameters<typeof _getPollInterval>[1],\n): () => void {\n  interval ??= _getPollInterval('microblock', options);\n  const knownQueryIds = new Set();\n  const checkNewQueries = async (): Promise<void> => {\n    const queries = ((await onNode.getOracleQueriesByPubkey(oracleId)).oracleQueries ?? [])\n      .filter(({ id }) => !knownQueryIds.has(id));\n    queries.forEach((query) => {\n      knownQueryIds.add(query.id);\n      onQuery(query);\n    });\n  };\n\n  let stopped = false;\n\n  // eslint-disable-next-line @typescript-eslint/no-floating-promises\n  (async () => {\n    while (!stopped) { // eslint-disable-line no-unmodified-loop-condition\n      // TODO: allow to handle this error somehow\n      await checkNewQueries().catch(console.error);\n      await pause(interval);\n    }\n  })();\n  return () => { stopped = true; };\n}\n\n/**\n * Poll for oracle query response\n * @category oracle\n * @param oracleId - Oracle public key\n * @param queryId - Oracle Query id\n * @param options - Options object\n * @param options.interval - Poll interval\n * @param options.onNode - Node to use\n * @returns OracleQuery object\n */\nexport async function pollForQueryResponse(\n  oracleId: Encoded.OracleAddress,\n  queryId: Encoded.OracleQueryId,\n  { interval, onNode, ...options }:\n  { interval?: number; onNode: Node } & Parameters<typeof _getPollInterval>[1],\n): Promise<string> {\n  interval ??= _getPollInterval('microblock', options);\n  let height;\n  let ttl;\n  let response;\n  do {\n    ({ response, ttl } = await onNode.getOracleQueryByPubkeyAndQueryId(oracleId, queryId));\n    const responseBuffer = decode(response as Encoded.OracleResponse);\n    if (responseBuffer.length > 0) return responseBuffer.toString();\n    await pause(interval);\n    height = await getHeight({ onNode });\n  } while (ttl >= height);\n  throw new RequestTimedOutError(height);\n}\n\n/**\n * Constructor for OracleQuery Object (helper object for using OracleQuery)\n * @category oracle\n * @param oracleId - Oracle public key\n * @param queryId - Oracle Query id\n * @param options - Options\n * @returns OracleQuery object\n */\nexport async function getQueryObject(\n  oracleId: Encoded.OracleAddress,\n  queryId: Encoded.OracleQueryId,\n  options: RespondToQueryOptions & Parameters<typeof pollForQueryResponse>[2],\n): Promise<GetQueryObjectReturnType> {\n  const record = await options.onNode.getOracleQueryByPubkeyAndQueryId(oracleId, queryId);\n  return {\n    ...record,\n    decodedQuery: decode(record.query as Encoded.OracleQueryId).toString(),\n    decodedResponse: decode(record.response as Encoded.OracleResponse).toString(),\n    respond: async (response, opt) => (\n      // eslint-disable-next-line @typescript-eslint/no-use-before-define\n      respondToQuery(queryId, response, { ...options, ...opt })\n    ),\n    pollForResponse: async (opt) => pollForQueryResponse(oracleId, queryId, { ...options, ...opt }),\n  };\n}\n\ninterface GetQueryObjectReturnType extends Awaited<ReturnType<Node['getOracleQueryByPubkeyAndQueryId']>> {\n  decodedQuery: string;\n  decodedResponse: string;\n  respond: (response: string, options?: Parameters<typeof respondToQuery>[2]) =>\n  ReturnType<typeof respondToQuery>;\n  pollForResponse: (options?: Parameters<typeof pollForQueryResponse>[2]) =>\n  ReturnType<typeof pollForQueryResponse>;\n}\n\n/**\n * Post query to oracle\n * @category oracle\n * @param oracleId - Oracle public key\n * @param query - Oracle query object\n * @param options - Options object\n * @param options.queryTtl - queryTtl Oracle query time to leave\n * @param options.responseTtl - queryFee Oracle query response time to leave\n * @param options.queryFee - queryFee Oracle query fee\n * @param options.fee - fee Transaction fee\n * @param options.ttl - Transaction time to leave\n * @returns Query object\n */\nexport async function postQueryToOracle(\n  oracleId: Encoded.OracleAddress,\n  query: string,\n  options: PostQueryToOracleOptions,\n): Promise<\n  Awaited<ReturnType<typeof sendTransaction>> & Awaited<ReturnType<typeof getQueryObject>>\n  > {\n  options.queryFee ??= (await options.onNode.getOracleByPubkey(oracleId)).queryFee.toString();\n  const senderId = options.onAccount.address;\n\n  const oracleQueryTx = await buildTxAsync({\n    queryTtlType: QUERY_TTL.type,\n    queryTtlValue: QUERY_TTL.value,\n    responseTtlType: RESPONSE_TTL.type,\n    responseTtlValue: RESPONSE_TTL.value,\n    ...options,\n    tag: Tag.OracleQueryTx,\n    oracleId,\n    senderId,\n    query,\n  });\n  const { nonce } = unpackTx(oracleQueryTx, Tag.OracleQueryTx);\n  const queryId = oracleQueryId(senderId, nonce, oracleId);\n  return {\n    ...await sendTransaction(oracleQueryTx, options),\n    ...await getQueryObject(oracleId, queryId, options),\n  };\n}\n\ntype PostQueryToOracleOptionsType = Parameters<typeof sendTransaction>[1]\n& Parameters<typeof getQueryObject>[2]\n& BuildTxOptions<Tag.OracleQueryTx, 'oracleId' | 'senderId' | 'query' | 'queryTtlType' | 'queryTtlValue' | 'responseTtlType' | 'responseTtlValue'>\n& {\n  queryTtlType?: ORACLE_TTL_TYPES;\n  queryTtlValue?: number;\n  responseTtlType?: ORACLE_TTL_TYPES;\n  responseTtlValue?: number;\n};\ninterface PostQueryToOracleOptions extends PostQueryToOracleOptionsType {}\n\n/**\n * Extend oracle ttl\n * @category oracle\n * @param options - Options object\n * @param options.fee - fee Transaction fee\n * @param options.ttl - Transaction time to leave\n * @param options.oracleTtlType - Oracle time to leave for extend\n * @param options.oracleTtlValue - Oracle time to leave for extend\n * @returns Oracle object\n */\nexport async function extendOracleTtl(options: ExtendOracleTtlOptions): Promise<\nAwaited<ReturnType<typeof sendTransaction>> & Awaited<ReturnType<typeof getOracleObject>>\n> {\n  const oracleId = encode(decode(options.onAccount.address), Encoding.OracleAddress);\n  const oracleExtendTx = await buildTxAsync({\n    oracleTtlType: ORACLE_TTL.type,\n    oracleTtlValue: ORACLE_TTL.value,\n    ...options,\n    tag: Tag.OracleExtendTx,\n    oracleId,\n  });\n  return {\n    ...await sendTransaction(oracleExtendTx, options),\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    ...await getOracleObject(oracleId, options),\n  };\n}\n\ntype ExtendOracleTtlOptionsType = SendTransactionOptions & Parameters<typeof getOracleObject>[1]\n& BuildTxOptions<Tag.OracleExtendTx, 'oracleTtlType' | 'oracleTtlValue' | 'callerId' | 'oracleId'>\n& { oracleTtlType?: ORACLE_TTL_TYPES; oracleTtlValue?: number };\ninterface ExtendOracleTtlOptions extends ExtendOracleTtlOptionsType {}\n\n/**\n * Extend oracle ttl\n * @category oracle\n * @param queryId - Oracle query id\n * @param response - Oracle query response\n * @param options - Options object\n * @param options.responseTtl - responseTtl Query response time to leave\n * @param options.fee - Transaction fee\n * @param options.ttl - Transaction time to leave\n * @returns Oracle object\n */\nexport async function respondToQuery(\n  queryId: Encoded.OracleQueryId,\n  response: string,\n  options: RespondToQueryOptions,\n): Promise<\n  Awaited<ReturnType<typeof sendTransaction>> & Awaited<ReturnType<typeof getOracleObject>>\n  > {\n  const oracleId = encode(decode(options.onAccount.address), Encoding.OracleAddress);\n  const oracleRespondTx = await buildTxAsync({\n    responseTtlType: RESPONSE_TTL.type,\n    responseTtlValue: RESPONSE_TTL.value,\n    ...options,\n    tag: Tag.OracleResponseTx,\n    oracleId,\n    queryId,\n    response,\n  });\n  return {\n    ...await sendTransaction(oracleRespondTx, options),\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    ...await getOracleObject(oracleId, options),\n  };\n}\n\ntype RespondToQueryOptionsType = SendTransactionOptions & Parameters<typeof getOracleObject>[1]\n& BuildTxOptions<Tag.OracleResponseTx, 'callerId' | 'oracleId' | 'queryId' | 'response' | 'responseTtlType' | 'responseTtlValue'>\n& { responseTtlType?: ORACLE_TTL_TYPES; responseTtlValue?: number };\ninterface RespondToQueryOptions extends RespondToQueryOptionsType {}\n\n/**\n * Constructor for Oracle Object (helper object for using Oracle)\n * @category oracle\n * @param oracleId - Oracle public key\n * @param options - Options\n * @returns Oracle object\n */\nexport async function getOracleObject(\n  oracleId: Encoded.OracleAddress,\n  options: { onNode: Node; onAccount: AccountBase },\n): Promise<GetOracleObjectReturnType> {\n  return {\n    ...await options.onNode.getOracleByPubkey(oracleId),\n    queries: (await options.onNode.getOracleQueriesByPubkey(oracleId)).oracleQueries,\n    ...mapObject<Function, Function>(\n      {\n        pollQueries: pollForQueries,\n        postQuery: postQueryToOracle,\n        respondToQuery,\n        extendOracle: extendOracleTtl,\n        getQuery: getQueryObject,\n      },\n      ([name, handler]) => [\n        name,\n        (...args: any) => {\n          const lastArg = args[args.length - 1];\n          if (lastArg != null && typeof lastArg === 'object' && lastArg.constructor === Object) {\n            Object.assign(lastArg, { ...options, ...lastArg });\n          } else args.push(options);\n          return handler(\n            ...['extendOracle', 'respondToQuery'].includes(name) ? [] : [oracleId],\n            ...args,\n          );\n        },\n      ],\n    ),\n  } as any;\n}\n\ninterface GetOracleObjectReturnType extends Awaited<ReturnType<Node['getOracleByPubkey']>> {\n  id: Encoded.OracleAddress;\n  queries: OracleQueries;\n  // TODO: replace getOracleObject with a class\n  pollQueries: (cb: Parameters<typeof pollForQueries>[1]) => ReturnType<typeof pollForQueries>;\n  postQuery: Function;\n  respondToQuery: Function;\n  extendOracle: Function;\n  getQuery: Function;\n}\n\n/**\n * Register oracle\n * @category oracle\n * @param queryFormat - Format of query\n * @param responseFormat - Format of query response\n * @param options - Options\n * @param options.queryFee - Oracle query Fee\n * @param options - Options object\n * @param options.abiVersion - Always 0 (do not use virtual machine)\n * @param options.fee - Transaction fee\n * @param options.ttl - Transaction time to leave\n * @returns Oracle object\n */\nexport async function registerOracle(\n  queryFormat: string,\n  responseFormat: string,\n  options: RegisterOracleOptions,\n): Promise<\n  Awaited<ReturnType<typeof sendTransaction>> & Awaited<ReturnType<typeof getOracleObject>>\n  > {\n  const accountId = options.onAccount.address;\n  const oracleRegisterTx = await buildTxAsync({\n    oracleTtlValue: ORACLE_TTL.value,\n    oracleTtlType: ORACLE_TTL.type,\n    ...options,\n    tag: Tag.OracleRegisterTx,\n    accountId,\n    queryFormat,\n    responseFormat,\n  });\n  return {\n    ...await sendTransaction(oracleRegisterTx, options),\n    ...await getOracleObject(encode(decode(accountId), Encoding.OracleAddress), options),\n  };\n}\n\ntype RegisterOracleOptionsType = SendTransactionOptions & Parameters<typeof getOracleObject>[1]\n& BuildTxOptions<Tag.OracleRegisterTx, 'accountId' | 'queryFormat' | 'responseFormat' | 'oracleTtlType' | 'oracleTtlValue'>\n& {\n  oracleTtlType?: ORACLE_TTL_TYPES;\n  oracleTtlValue?: number;\n};\ninterface RegisterOracleOptions extends RegisterOracleOptionsType {}\n","import BigNumber from 'bignumber.js';\nimport {\n  sendTransaction, getBalance, resolveName, SendTransactionOptions,\n} from './chain';\nimport { buildTxAsync, BuildTxOptions, unpackTx } from './tx/builder';\nimport { ArgumentError } from './utils/errors';\nimport { Encoded, Encoding } from './utils/encoder';\nimport { Tag, AensName } from './tx/builder/constants';\nimport AccountBase from './account/Base';\n\n/**\n * Send coins to another account\n * @category chain\n * @param amount - Amount to spend\n * @param recipientIdOrName - Address or name of recipient account\n * @param options - Options\n * @returns Transaction\n */\nexport async function spend(\n  amount: number | string,\n  recipientIdOrName: Encoded.AccountAddress | AensName,\n  options: SpendOptions,\n): ReturnType<typeof sendTransaction> {\n  return sendTransaction(\n    await buildTxAsync({\n      ...options,\n      tag: Tag.SpendTx,\n      senderId: options.onAccount.address,\n      recipientId: await resolveName<Encoding.AccountAddress>(\n        recipientIdOrName,\n        'account_pubkey',\n        options,\n      ),\n      amount,\n    }),\n    options,\n  );\n}\n\ntype SpendOptionsType = BuildTxOptions<Tag.SpendTx, 'senderId' | 'recipientId' | 'amount'>\n& Parameters<typeof resolveName>[2] & { onAccount: AccountBase } & SendTransactionOptions;\ninterface SpendOptions extends SpendOptionsType {}\n\n// TODO: Rename to spendFraction\n/**\n * Spend a fraction of coin balance to another account. Useful if needed to drain account balance\n * completely, sending funds to another account (with fraction set to 1).\n * @category chain\n * @param fraction - Fraction of balance to spend (between 0 and 1)\n * @param recipientIdOrName - Address or name of recipient account\n * @param options - Options\n * @example\n * ```js\n * // `fraction` * 100 = % of AE to be transferred (e.g. `0.42` for 42% or `1` for 100%)\n * const { blockHeight } = await aeSdk.transferFunds(\n *   0.42,\n *   'ak_21A27UVVt3hDkBE5J7rhhqnH5YNb4Y1dqo4PnSybrH85pnWo7E',\n * );\n * console.log('Transaction mined at', blockHeight);\n * ```\n */\nexport async function transferFunds(\n  fraction: number | string, // TODO: accept only number\n  recipientIdOrName: AensName | Encoded.AccountAddress,\n  options: TransferFundsOptions,\n): ReturnType<typeof sendTransaction> {\n  if (+fraction < 0 || +fraction > 1) {\n    throw new ArgumentError('fraction', 'a number between 0 and 1', fraction);\n  }\n  const recipientId = await resolveName<Encoding.AccountAddress>(\n    recipientIdOrName,\n    'account_pubkey',\n    options,\n  );\n  const senderId = options.onAccount.address;\n  const balance = new BigNumber(\n    await getBalance.bind(options.onAccount)(senderId, options),\n  );\n  const desiredAmount = balance.times(fraction).integerValue(BigNumber.ROUND_HALF_UP);\n  const { fee } = unpackTx(\n    await buildTxAsync({\n      ...options, tag: Tag.SpendTx, senderId, recipientId, amount: desiredAmount,\n    }),\n    Tag.SpendTx,\n  );\n  // Reducing of the amount may reduce transaction fee, so this is not completely accurate\n  const amount = desiredAmount.plus(fee).gt(balance) ? balance.minus(fee) : desiredAmount;\n  return sendTransaction(\n    await buildTxAsync({\n      ...options, tag: Tag.SpendTx, senderId, recipientId, amount,\n    }),\n    options,\n  );\n}\n\ntype TransferFundsOptionsType = BuildTxOptions<Tag.SpendTx, 'senderId' | 'recipientId' | 'amount'>\n& Parameters<typeof resolveName>[2] & { onAccount: AccountBase } & SendTransactionOptions;\ninterface TransferFundsOptions extends TransferFundsOptionsType {}\n\n/**\n * Submit transaction of another account paying for it (fee and gas)\n * @category chain\n * @param transaction - tx_<base64>-encoded transaction\n * @param options - Options\n * @returns Object Transaction\n */\nexport async function payForTransaction(\n  transaction: Encoded.Transaction,\n  options: PayForTransactionOptions,\n): ReturnType<typeof sendTransaction> {\n  return sendTransaction(\n    await buildTxAsync({\n      ...options, tag: Tag.PayingForTx, payerId: options.onAccount.address, tx: transaction,\n    }),\n    options,\n  );\n}\n\ninterface PayForTransactionOptions extends\n  BuildTxOptions<Tag.PayingForTx, 'payerId' | 'tx' | 'onNode'>, SendTransactionOptions {\n  onAccount: AccountBase;\n}\n","/**\n * Generalized Account module - routines to use generalized account\n */\n\nimport { ConsensusProtocolVersion, Int, Tag } from '../tx/builder/constants';\nimport {\n  buildContractIdByContractTx, buildTx, buildTxAsync, BuildTxOptions, unpackTx,\n} from '../tx/builder';\nimport { hash } from '../utils/crypto';\nimport {\n  decode, encode, Encoded, Encoding,\n} from '../utils/encoder';\nimport { ArgumentError, IllegalArgumentError } from '../utils/errors';\nimport { concatBuffers } from '../utils/other';\nimport AccountBase from '../account/Base';\nimport Contract from './Contract';\nimport Node from '../Node';\nimport { sendTransaction, SendTransactionOptions, getAccount } from '../chain';\nimport CompilerBase from './compiler/Base';\n\n/**\n * Convert current account to GA\n * @category contract\n * @param authFnName - Authorization function name\n * @param sourceCode - Auth contract source code\n * @param args - init arguments\n * @param options - Options\n * @returns General Account Object\n */\nexport async function createGeneralizedAccount(\n  authFnName: string,\n  args: any[],\n  {\n    onAccount, onCompiler, onNode, bytecode, aci, sourceCodePath, sourceCode, fileSystem, ...options\n  }: CreateGeneralizedAccountOptions,\n): Promise<Readonly<{\n    owner: Encoded.AccountAddress;\n    transaction: Encoded.TxHash;\n    rawTx: Encoded.Transaction;\n    gaContractId: Encoded.ContractAddress;\n  }>> {\n  const ownerId = onAccount.address;\n  if ((await getAccount(ownerId, { onNode })).kind === 'generalized') {\n    throw new IllegalArgumentError(`Account ${ownerId} is already GA`);\n  }\n\n  const contract = await Contract.initialize<{ init: (...a: any[]) => void }>({\n    onAccount, onCompiler, onNode, bytecode, aci, sourceCodePath, sourceCode, fileSystem,\n  });\n\n  const tx = await buildTxAsync({\n    ...options,\n    tag: Tag.GaAttachTx,\n    onNode,\n    code: await contract.$compile(),\n    gasLimit: options.gasLimit ?? await contract._estimateGas('init', args, options),\n    ownerId,\n    callData: contract._calldata.encode(contract._name, 'init', args),\n    authFun: hash(authFnName),\n  });\n  const contractId = buildContractIdByContractTx(tx);\n  const { hash: transaction, rawTx } = await sendTransaction(tx, {\n    onNode, onAccount, onCompiler, ...options,\n  });\n\n  return Object.freeze({\n    owner: ownerId,\n    transaction,\n    rawTx,\n    gaContractId: contractId,\n  });\n}\n\ninterface CreateGeneralizedAccountOptions extends\n  BuildTxOptions<Tag.GaAttachTx, 'authFun' | 'callData' | 'code' | 'ownerId' | 'gasLimit'>,\n  SendTransactionOptions,\n  Pick<\n  Parameters<typeof Contract.initialize>[0],\n  'bytecode' | 'aci' | 'sourceCodePath' | 'sourceCode' | 'fileSystem'\n  > {\n  onAccount: AccountBase;\n  onCompiler: CompilerBase;\n  onNode: Node;\n  gasLimit?: number;\n}\n\n/**\n * Build a transaction hash the same as `Auth.tx_hash` by GaMetaTx payload\n * @category contract\n * @param transaction - tx-encoded transaction\n * @param options - Options\n * @param options.fee - GaMetaTx fee, required in Ceres\n * @param options.gasPrice - GaMetaTx gasPrice, required in Ceres\n * @param options.onNode - Node to use\n * @returns Transaction hash\n */\nexport async function buildAuthTxHash(\n  transaction: Encoded.Transaction,\n  { fee, gasPrice, onNode }: { fee?: Int; gasPrice?: Int; onNode: Node },\n): Promise<Buffer> {\n  const { nodeNetworkId, consensusProtocolVersion } = await onNode.getNodeInfo();\n  let payload = hash(concatBuffers([Buffer.from(nodeNetworkId), decode(transaction)]));\n  if (consensusProtocolVersion === ConsensusProtocolVersion.Ceres) {\n    if (fee == null) throw new ArgumentError('fee', 'provided (in Ceres)', fee);\n    if (gasPrice == null) throw new ArgumentError('gasPrice', 'provided (in Ceres)', gasPrice);\n    payload = hash(decode(buildTx({\n      tag: Tag.GaMetaTxAuthData,\n      fee,\n      gasPrice,\n      txHash: encode(payload, Encoding.TxHash),\n    })));\n  }\n  return payload;\n}\n\n/**\n * Build a transaction hash the same as `Auth.tx_hash` by GaMetaTx\n * @category contract\n * @param transaction - tx-encoded signed GaMeta transaction\n * @param options - Options\n * @param options.onNode - Node to use\n * @returns Transaction hash\n */\nexport async function buildAuthTxHashByGaMetaTx(\n  transaction: Encoded.Transaction,\n  { onNode }: { onNode: Node },\n): Promise<Buffer> {\n  const txParams = unpackTx(transaction, Tag.SignedTx);\n  if (txParams.encodedTx.tag !== Tag.GaMetaTx) {\n    throw new ArgumentError('transaction', 'to include GaMetaTx', Tag[txParams.encodedTx.tag]);\n  }\n  return buildAuthTxHash(buildTx(txParams.encodedTx.tx.encodedTx), {\n    fee: txParams.encodedTx.fee,\n    gasPrice: txParams.encodedTx.gasPrice,\n    onNode,\n  });\n}\n","import { decode, Encoded } from '../utils/encoder';\nimport { ArgumentError } from '../utils/errors';\nimport { AensName } from '../tx/builder/constants';\nimport AccountBase from '../account/Base';\nimport { isNameValid } from '../tx/builder/helpers';\nimport Node from '../Node';\n\nfunction ensureOracleQuery(oq: string): asserts oq is Encoded.OracleQueryId {\n  if (!oq.startsWith('oq_')) throw new ArgumentError('oq', 'oracle query', oq);\n}\n\n/**\n * Helper to generate a signature to delegate\n *  - pre-claim/claim/transfer/revoke of a name to a contract.\n *  - register/extend/respond of an Oracle to a contract.\n * @category contract\n * @param contractAddress - Address of contract to delegate access\n * @param ids - The list of id's to prepend\n * @param options - Options\n * @param options.omitAddress - Prepend delegation signature with an account address\n * @param options.onAccount - Account to use\n * @param options.onNode - Node to use\n * @returns Signature\n * @deprecated use methods `sign*DelegationToContract` of Account instance instead\n * @example\n * ```js\n * const aeSdk = new AeSdk({ ... })\n * const contractAddress = 'ct_asd2ks...'\n * const aensName = 'example.chain'\n * const onAccount = new MemoryAccount(...) // Sign with a specific account\n * // Preclaim signature\n * const preclaimSig = await aeSdk.createDelegationSignature(contractAddress, [], { onAccount })\n * // Claim, transfer and revoke signature\n * const aensDelegationSig = await aeSdk\n *   .createDelegationSignature(contractAddress, [aensName], { onAccount })\n *\n * const oracleQueryId = 'oq_...'\n * const onAccount = new MemoryAccount(...) // Sign with a specific account\n * // Oracle register and extend signature\n * const oracleDelegationSig = await aeSdk\n *   .createDelegationSignature(contractAddress, [], { onAccount })\n * // Oracle respond signature\n * const respondSig = await aeSdk\n *   .createDelegationSignature(contractAddress, [oracleQueryId], { onAccount, omitAddress: true })\n * ```\n */\nexport default async function createDelegationSignature(\n  contractAddress: Encoded.ContractAddress,\n  ids: Array<Encoded.Any | AensName>,\n  { onAccount, omitAddress, ...options }: {\n    omitAddress?: boolean;\n    onAccount: AccountBase;\n    onNode: Node;\n  },\n): Promise<Uint8Array> {\n  if (ids.length > 1) throw new ArgumentError('ids', 'shorter than 2', ids);\n  const networkId = await options.onNode.getNetworkId();\n  if (ids.length === 0) {\n    if (omitAddress === true) {\n      throw new ArgumentError('omitAddress', 'equal false', omitAddress);\n    }\n    return decode(await onAccount.signDelegationToContract(contractAddress, { networkId }));\n  }\n\n  const [payload] = ids;\n  if (isNameValid(payload)) {\n    if (omitAddress === true) {\n      throw new ArgumentError('omitAddress', 'equal false', omitAddress);\n    }\n    return decode(\n      await onAccount.signNameDelegationToContract(contractAddress, payload, { networkId }),\n    );\n  }\n\n  ensureOracleQuery(payload);\n  if (omitAddress !== true) {\n    throw new ArgumentError('omitAddress', 'equal true', omitAddress);\n  }\n  return decode(\n    await onAccount.signOracleQueryDelegationToContract(contractAddress, payload, { networkId }),\n  );\n}\n","import * as chainMethods from './chain';\nimport * as aensMethods from './aens';\nimport * as spendMethods from './spend';\nimport * as oracleMethods from './oracle';\nimport Contract, { ContractMethodsBase } from './contract/Contract';\nimport createDelegationSignature from './contract/delegation-signature';\nimport * as contractGaMethods from './contract/ga';\nimport { buildTxAsync } from './tx/builder';\nimport { mapObject, UnionToIntersection } from './utils/other';\nimport Node from './Node';\nimport { TxParamsAsync } from './tx/builder/schema.generated';\nimport AccountBase from './account/Base';\nimport { Encoded } from './utils/encoder';\nimport CompilerBase from './contract/compiler/Base';\n\nexport type OnAccount = Encoded.AccountAddress | AccountBase | undefined;\n\nexport function getValueOrErrorProxy<Value extends object | undefined>(\n  valueCb: () => Value,\n): NonNullable<Value> {\n  return new Proxy(\n    {},\n    Object.fromEntries(([\n      'apply', 'construct', 'defineProperty', 'deleteProperty', 'getOwnPropertyDescriptor',\n      'getPrototypeOf', 'isExtensible', 'ownKeys', 'preventExtensions', 'set', 'setPrototypeOf',\n      'get', 'has',\n    ] as const).map((name) => [name, (t: {}, ...args: unknown[]) => {\n      const target = valueCb() as object; // to get a native exception in case it missed\n      const res = (Reflect[name] as any)(target, ...args);\n      return typeof res === 'function' && name === 'get'\n        ? res.bind(target) // otherwise it fails with attempted to get private field on non-instance\n        : res;\n    }])),\n  ) as NonNullable<Value>;\n}\n\nconst { InvalidTxError: _2, ...chainMethodsOther } = chainMethods;\n\nconst methods = {\n  ...chainMethodsOther,\n  ...aensMethods,\n  ...spendMethods,\n  ...oracleMethods,\n  createDelegationSignature,\n  ...contractGaMethods,\n} as const;\n\ntype Decrement<Number extends number> = [-1, 0, 1, 2, 3, 4, 5][Number];\ntype GetMethodsOptions <Methods extends { [key: string]: Function }> =\n  {\n    [Name in keyof Methods]:\n    Methods[Name] extends (...args: infer Args) => any\n      ? Args[Decrement<Args['length']>] : never\n  };\ntype MethodsOptions = GetMethodsOptions<typeof methods>;\nexport interface AeSdkMethodsOptions\n  extends Partial<UnionToIntersection<MethodsOptions[keyof MethodsOptions]>> {\n}\n\n/**\n * AeSdkMethods is the composition of:\n * - chain methods\n * - tx methods\n * - aens methods\n * - spend methods\n * - oracle methods\n * - contract methods\n * - contract ga methods\n *\n * While these methods can be used separately, this class provides a handy way to store\n * their context (current account, network, and compiler to use).\n */\nclass AeSdkMethods {\n  _options: AeSdkMethodsOptions = {};\n\n  /**\n   * @param options - Options\n   */\n  constructor(options: AeSdkMethodsOptions = {}) {\n    Object.assign(this._options, options);\n  }\n\n  _getOptions(\n    callOptions: AeSdkMethodsOptions = {},\n  ): AeSdkMethodsOptions & { onAccount: AccountBase; onCompiler: CompilerBase; onNode: Node } {\n    return {\n      ...this._options,\n      onAccount: getValueOrErrorProxy(() => this._options.onAccount),\n      onNode: getValueOrErrorProxy(() => this._options.onNode),\n      onCompiler: getValueOrErrorProxy(() => this._options.onCompiler),\n      ...callOptions,\n    };\n  }\n\n  async buildTx(options: TxParamsAsync): Promise<Encoded.Transaction> {\n    return buildTxAsync({ ...this._getOptions(), ...options });\n  }\n\n  async initializeContract<Methods extends ContractMethodsBase>(\n    options?: Omit<Parameters<typeof Contract.initialize>[0], 'onNode'> & { onNode?: Node },\n  ): Promise<Contract<Methods>> {\n    return Contract.initialize<Methods>(this._getOptions(options as AeSdkMethodsOptions));\n  }\n}\n\ntype RequiredKeys<T> = {\n  [K in keyof T]-?: {} extends Pick<T, K> ? never : K\n}[keyof T];\n\ntype OptionalIfNotRequired<T extends [any]> = RequiredKeys<T[0]> extends never ? T | [] : T;\n\ntype ReplaceOnAccount<Options> = Options extends { onAccount: any }\n  ? Omit<Options, 'onAccount'> & { onAccount: OnAccount } : Options;\n\ntype MakeOptional<Options> = OptionalIfNotRequired<[\n  Omit<Options, 'onNode' | 'onCompiler' | 'onAccount'> & Partial<ReplaceOnAccount<Options>>,\n]>;\n\ntype TransformMethods <Methods extends { [key: string]: Function }> =\n  {\n    [Name in keyof Methods]:\n    Methods[Name] extends (...args: [...infer Args, infer Options]) => infer Ret\n      ? (...args: [...Args, ...MakeOptional<Options>]) => Ret\n      : never\n  };\n\ninterface AeSdkMethodsTransformed extends TransformMethods<typeof methods> {}\n\nObject.assign(AeSdkMethods.prototype, mapObject<Function, Function>(\n  methods,\n  ([name, handler]) => [\n    name,\n    function methodWrapper(this: AeSdkMethods, ...args: any[]) {\n      args.length = handler.length;\n      const options = args[args.length - 1];\n      args[args.length - 1] = this._getOptions(options);\n      return handler(...args);\n    },\n  ],\n));\n\ntype AeSdkMethodsTyped = AeSdkMethods & AeSdkMethodsTransformed;\n// eslint-disable-next-line @typescript-eslint/no-redeclare\nconst AeSdkMethodsTyped = AeSdkMethods as new (options?: AeSdkMethodsOptions) => AeSdkMethodsTyped;\nexport default AeSdkMethodsTyped;\n","import Node from './Node';\nimport AccountBase from './account/Base';\nimport {\n  CompilerError, DuplicateNodeError, NodeNotFoundError, NotImplementedError, TypeError,\n} from './utils/errors';\nimport { Encoded } from './utils/encoder';\nimport CompilerBase from './contract/compiler/Base';\nimport AeSdkMethods, { OnAccount, getValueOrErrorProxy, AeSdkMethodsOptions } from './AeSdkMethods';\nimport { AensName } from './tx/builder/constants';\n\ntype NodeInfo = Awaited<ReturnType<Node['getNodeInfo']>> & { name: string };\n\n/**\n * Basic AeSdk class implements:\n * - node selector,\n * - integrated compiler support,\n * - wrappers of account methods mapped to the current account.\n */\nexport default class AeSdkBase extends AeSdkMethods {\n  pool: Map<string, Node> = new Map();\n\n  selectedNodeName?: string;\n\n  /**\n   * @param options - Options\n   * @param options.nodes - Array of nodes\n   */\n  constructor(\n    { nodes = [], ...options }: AeSdkMethodsOptions & {\n      nodes?: Array<{ name: string; instance: Node }>;\n    } = {},\n  ) {\n    super(options);\n\n    nodes.forEach(({ name, instance }, i) => this.addNode(name, instance, i === 0));\n  }\n\n  // TODO: consider dropping this getter, because:\n  // compiler is not intended to be used separately any more (functionality limited to sdk needs)\n  // and user creates its instance by himself\n  get compilerApi(): CompilerBase {\n    if (this._options.onCompiler == null) {\n      throw new CompilerError('You can\\'t use Compiler API. Compiler is not ready!');\n    }\n    return this._options.onCompiler;\n  }\n\n  get api(): Node {\n    this.ensureNodeConnected();\n    return this.pool.get(this.selectedNodeName) as Node;\n  }\n\n  /**\n   * Add Node\n   * @param name - Node name\n   * @param node - Node instance\n   * @param select - Select this node as current\n   * @example\n   * ```js\n   * // add and select new node with name 'testNode'\n   * aeSdkBase.addNode('testNode', new Node({ url }), true)\n   * ```\n   */\n  addNode(name: string, node: Node, select = false): void {\n    if (this.pool.has(name)) throw new DuplicateNodeError(name);\n\n    this.pool.set(name, node);\n    if (select || this.selectedNodeName == null) {\n      this.selectNode(name);\n    }\n  }\n\n  /**\n   * Select Node\n   * @param name - Node name\n   * @example\n   * nodePool.selectNode('testNode')\n   */\n  selectNode(name: string): void {\n    if (!this.pool.has(name)) throw new NodeNotFoundError(`Node with name ${name} not in pool`);\n    this.selectedNodeName = name;\n  }\n\n  /**\n   * Check if you have selected node\n   * @example\n   * nodePool.isNodeConnected()\n   */\n  isNodeConnected(): this is AeSdkBase & { selectedNodeName: string } {\n    return this.selectedNodeName != null;\n  }\n\n  protected ensureNodeConnected(): asserts this is AeSdkBase & { selectedNodeName: string } {\n    if (!this.isNodeConnected()) {\n      throw new NodeNotFoundError('You can\\'t use Node API. Node is not connected or not defined!');\n    }\n  }\n\n  /**\n   * Get information about node\n   * @example\n   * ```js\n   * nodePool.getNodeInfo() // { name, version, networkId, protocol, ... }\n   * ```\n   */\n  async getNodeInfo(): Promise<NodeInfo> {\n    this.ensureNodeConnected();\n    return {\n      name: this.selectedNodeName,\n      ...await this.api.getNodeInfo(),\n    };\n  }\n\n  /**\n   * Get array of available nodes\n   * @example\n   * nodePool.getNodesInPool()\n   */\n  async getNodesInPool(): Promise<NodeInfo[]> {\n    return Promise.all(\n      Array.from(this.pool.entries()).map(async ([name, node]) => ({\n        name,\n        ...await node.getNodeInfo(),\n      })),\n    );\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  addresses(): Encoded.AccountAddress[] {\n    return [];\n  }\n\n  /**\n   * Resolves an account\n   * @param account - ak-address, instance of AccountBase, or keypair\n   */\n  _resolveAccount(account: OnAccount = this._options.onAccount): AccountBase {\n    if (typeof account === 'string') throw new NotImplementedError('Address in AccountResolver');\n    if (typeof account === 'object') return account;\n    throw new TypeError(\n      'Account should be an address (ak-prefixed string), '\n      + `or instance of AccountBase, got ${String(account)} instead`,\n    );\n  }\n\n  get address(): Encoded.AccountAddress {\n    return this._resolveAccount().address;\n  }\n\n  async sign(\n    data: string | Uint8Array,\n    { onAccount, ...options }: { onAccount?: OnAccount } = {},\n  ): Promise<Uint8Array> {\n    return this._resolveAccount(onAccount).sign(data, options);\n  }\n\n  async signTransaction(\n    tx: Encoded.Transaction,\n    { onAccount, ...options }: { onAccount?: OnAccount } & Parameters<AccountBase['signTransaction']>[1] = {},\n  ): Promise<Encoded.Transaction> {\n    const networkId = this.selectedNodeName !== null ? await this.api.getNetworkId() : undefined;\n    return this._resolveAccount(onAccount).signTransaction(tx, { networkId, ...options });\n  }\n\n  async signMessage(\n    message: string,\n    { onAccount, ...options }: { onAccount?: OnAccount } & Parameters<AccountBase['signMessage']>[1] = {},\n  ): Promise<Uint8Array> {\n    return this._resolveAccount(onAccount).signMessage(message, options);\n  }\n\n  async signTypedData(\n    data: Encoded.ContractBytearray,\n    aci: Parameters<AccountBase['signTypedData']>[1],\n    { onAccount, ...options }: { onAccount?: OnAccount } & Parameters<AccountBase['signTypedData']>[2] = {},\n  ): Promise<Encoded.Signature> {\n    return this._resolveAccount(onAccount).signTypedData(data, aci, options);\n  }\n\n  async signDelegationToContract(\n    contractAddress: Encoded.ContractAddress,\n    { onAccount, ...options }: { onAccount?: OnAccount }\n    & Parameters<AccountBase['signDelegationToContract']>[1] = {},\n  ): Promise<Encoded.Signature> {\n    options.networkId ??= this.selectedNodeName !== null\n      ? await this.api.getNetworkId() : undefined;\n    return this._resolveAccount(onAccount)\n      .signDelegationToContract(contractAddress, options);\n  }\n\n  async signNameDelegationToContract(\n    contractAddress: Encoded.ContractAddress,\n    name: AensName,\n    { onAccount, ...options }: { onAccount?: OnAccount }\n    & Parameters<AccountBase['signNameDelegationToContract']>[2] = {},\n  ): Promise<Encoded.Signature> {\n    options.networkId ??= this.selectedNodeName !== null\n      ? await this.api.getNetworkId() : undefined;\n    return this._resolveAccount(onAccount)\n      .signNameDelegationToContract(contractAddress, name, options);\n  }\n\n  async signOracleQueryDelegationToContract(\n    contractAddress: Encoded.ContractAddress,\n    oracleQueryId: Encoded.OracleQueryId,\n    { onAccount, ...options }: { onAccount?: OnAccount }\n    & Parameters<AccountBase['signOracleQueryDelegationToContract']>[2] = {},\n  ): Promise<Encoded.Signature> {\n    options.networkId ??= this.selectedNodeName !== null\n      ? await this.api.getNetworkId() : undefined;\n    return this._resolveAccount(onAccount)\n      .signOracleQueryDelegationToContract(contractAddress, oracleQueryId, options);\n  }\n\n  override _getOptions(callOptions: AeSdkMethodsOptions = {}): {\n    onNode: Node;\n    onAccount: AccountBase;\n    onCompiler: CompilerBase;\n  } {\n    return {\n      ...this._options,\n      onNode: getValueOrErrorProxy(() => this.api),\n      onCompiler: getValueOrErrorProxy(() => this.compilerApi),\n      ...callOptions,\n      onAccount: getValueOrErrorProxy(() => this._resolveAccount(callOptions.onAccount)),\n    };\n  }\n}\n","import AeSdkBase from './AeSdkBase';\nimport { OnAccount } from './AeSdkMethods';\nimport AccountBase from './account/Base';\nimport { decode, Encoded } from './utils/encoder';\nimport { UnavailableAccountError } from './utils/errors';\n\nexport default class AeSdk extends AeSdkBase {\n  accounts: { [key: Encoded.AccountAddress]: AccountBase } = {};\n\n  selectedAddress?: Encoded.AccountAddress;\n\n  constructor(\n    { accounts, ...options }: { accounts?: AccountBase[] }\n    & ConstructorParameters<typeof AeSdkBase>[0] = {},\n  ) {\n    super(options);\n    accounts?.forEach((account, idx) => this.addAccount(account, { select: idx === 0 }));\n  }\n\n  override _resolveAccount(account: OnAccount = this.selectedAddress): AccountBase {\n    if (typeof account === 'string') {\n      const address = account as Encoded.AccountAddress;\n      decode(address);\n      if (this.accounts[address] == null) throw new UnavailableAccountError(account);\n      account = this.accounts[address];\n    }\n    return super._resolveAccount(account);\n  }\n\n  /**\n   * Get accounts addresses\n   * @example addresses()\n   */\n  override addresses(): Encoded.AccountAddress[] {\n    return Object.keys(this.accounts) as Encoded.AccountAddress[];\n  }\n\n  /**\n   * Add specific account\n   * @param account - Account instance\n   * @param options - Options\n   * @param options.select - Select account\n   * @example addAccount(account)\n   */\n  addAccount(account: AccountBase, { select }: { select?: boolean } = {}): void {\n    const { address } = account;\n    this.accounts[address] = account;\n    if (select === true) this.selectAccount(address);\n  }\n\n  /**\n   * Remove specific account\n   * @param address - Address of account to remove\n   * @example removeAccount(address)\n   */\n  removeAccount(address: Encoded.AccountAddress): void {\n    if (this.accounts[address] == null) throw new UnavailableAccountError(address);\n    delete this.accounts[address]; // eslint-disable-line @typescript-eslint/no-dynamic-delete\n    if (this.selectedAddress === address) delete this.selectedAddress;\n  }\n\n  /**\n   * Select specific account\n   * @param address - Address of account to select\n   * @example selectAccount('ak_xxxxxxxx')\n   */\n  selectAccount(address: Encoded.AccountAddress): void {\n    decode(address);\n    if (this.accounts[address] == null) throw new UnavailableAccountError(address);\n    this.selectedAddress = address;\n  }\n}\n","// eslint-disable-next-line max-classes-per-file\nimport { Encoded } from '../utils/encoder';\nimport { BaseError, InternalError } from '../utils/errors';\n\n/**\n * @category aepp wallet communication\n */\nexport const enum MESSAGE_DIRECTION {\n  to_waellet = 'to_waellet',\n  to_aepp = 'to_aepp',\n}\n\n/**\n * @category aepp wallet communication\n */\nexport const enum WALLET_TYPE {\n  window = 'window',\n  extension = 'extension',\n}\n\n/**\n * @category aepp wallet communication\n */\nexport const enum SUBSCRIPTION_TYPES {\n  subscribe = 'subscribe',\n  unsubscribe = 'unsubscribe',\n}\n\n/**\n * @category aepp wallet communication\n */\nexport const enum METHODS {\n  readyToConnect = 'connection.announcePresence',\n  updateAddress = 'address.update',\n  address = 'address.get',\n  connect = 'connection.open',\n  sign = 'transaction.sign',\n  signMessage = 'message.sign',\n  signTypedData = 'typedData.sign',\n  signDelegationToContract = 'delegationToContract.sign',\n  subscribeAddress = 'address.subscribe',\n  updateNetwork = 'networkId.update',\n  closeConnection = 'connection.close',\n}\n\n/**\n * @category aepp wallet communication\n */\nexport const enum RPC_STATUS {\n  CONNECTED = 'CONNECTED',\n  DISCONNECTED = 'DISCONNECTED',\n  WAITING_FOR_CONNECTION_REQUEST = 'WAITING_FOR_CONNECTION_REQUEST',\n}\n\ninterface RpcErrorAsJson {\n  code: number;\n  message: string;\n  data?: any;\n}\n\nconst rpcErrors: Array<(new (data?: any) => RpcError) & { code: number }> = [];\n\n/**\n * @category exception\n */\nexport abstract class RpcError extends BaseError {\n  static code: number;\n\n  code!: number;\n\n  data?: any;\n\n  toJSON(): RpcErrorAsJson {\n    return {\n      code: this.code,\n      message: this.message,\n      data: this.data,\n    };\n  }\n\n  static deserialize(json: RpcErrorAsJson): RpcError {\n    const RpcErr = rpcErrors.find((cl) => cl.code === json.code);\n    if (RpcErr == null) throw new InternalError(`Can't find RpcError with code: ${json.code}`);\n    return new RpcErr(json.data);\n  }\n}\n\n/**\n * @category exception\n */\nexport class RpcInvalidTransactionError extends RpcError {\n  static override code = 2;\n\n  override code = 2;\n\n  constructor(data?: any) {\n    super('Invalid transaction');\n    this.data = data;\n    this.name = 'RpcInvalidTransactionError';\n  }\n}\nrpcErrors.push(RpcInvalidTransactionError);\n\n/**\n * @category exception\n */\nexport class RpcRejectedByUserError extends RpcError {\n  static override code = 4;\n\n  override code = 4;\n\n  constructor(data?: any) {\n    super('Operation rejected by user');\n    this.data = data;\n    this.name = 'RpcRejectedByUserError';\n  }\n}\nrpcErrors.push(RpcRejectedByUserError);\n\n/**\n * @category exception\n */\nexport class RpcUnsupportedProtocolError extends RpcError {\n  static override code = 5;\n\n  override code = 5;\n\n  constructor() {\n    super('Unsupported Protocol Version');\n    this.name = 'RpcUnsupportedProtocolError';\n  }\n}\nrpcErrors.push(RpcUnsupportedProtocolError);\n\n/**\n * @category exception\n */\nexport class RpcConnectionDenyError extends RpcError {\n  static override code = 9;\n\n  override code = 9;\n\n  constructor(data?: any) {\n    super('Wallet deny your connection request');\n    this.data = data;\n    this.name = 'RpcConnectionDenyError';\n  }\n}\nrpcErrors.push(RpcConnectionDenyError);\n\n/**\n * @category exception\n */\nexport class RpcNotAuthorizeError extends RpcError {\n  static override code = 10;\n\n  override code = 10;\n\n  constructor() {\n    super('You are not connected to the wallet');\n    this.name = 'RpcNotAuthorizeError';\n  }\n}\nrpcErrors.push(RpcNotAuthorizeError);\n\n/**\n * @category exception\n */\nexport class RpcPermissionDenyError extends RpcError {\n  static override code = 11;\n\n  override code = 11;\n\n  constructor(address: Encoded.AccountAddress) {\n    super(`You are not subscribed for account ${address}`);\n    this.data = address;\n    this.name = 'RpcPermissionDenyError';\n  }\n}\nrpcErrors.push(RpcPermissionDenyError);\n\n/**\n * @category exception\n */\nexport class RpcInternalError extends RpcError {\n  static override code = 12;\n\n  override code = 12;\n\n  constructor() {\n    super('The peer failed to execute your request due to unknown error');\n    this.name = 'RpcInternalError';\n  }\n}\nrpcErrors.push(RpcInternalError);\n\n/**\n * @category exception\n */\nexport class RpcMethodNotFoundError extends RpcError {\n  static override code = -32601;\n\n  override code = -32601;\n\n  constructor() {\n    super('Method not found');\n    this.name = 'RpcMethodNotFoundError';\n  }\n}\nrpcErrors.push(RpcMethodNotFoundError);\n","import AccountBase from './Base';\nimport { METHODS } from '../aepp-wallet-communication/schema';\nimport { ArgumentError, NotImplementedError, UnsupportedProtocolError } from '../utils/errors';\nimport { Encoded } from '../utils/encoder';\nimport RpcClient from '../aepp-wallet-communication/rpc/RpcClient';\nimport { AeppApi, WalletApi } from '../aepp-wallet-communication/rpc/types';\nimport { AensName } from '../tx/builder/constants';\n\n/**\n * Account provided by wallet\n * @param params - Params\n * @param params.rpcClient - RpcClient instance\n * @param params.address - RPC account address\n * @returns AccountRpc instance\n */\nexport default class AccountRpc extends AccountBase {\n  _rpcClient: RpcClient<WalletApi, AeppApi>;\n\n  override readonly address: Encoded.AccountAddress;\n\n  constructor(rpcClient: RpcClient<WalletApi, AeppApi>, address: Encoded.AccountAddress) {\n    super();\n    this._rpcClient = rpcClient;\n    this.address = address;\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  async sign(): Promise<Uint8Array> {\n    throw new NotImplementedError('RAW signing using wallet');\n  }\n\n  override async signTransaction(\n    tx: Encoded.Transaction,\n    { innerTx, networkId }: Parameters<AccountBase['signTransaction']>[1] = {},\n  ): Promise<Encoded.Transaction> {\n    if (networkId == null) throw new ArgumentError('networkId', 'provided', networkId);\n    const res = await this._rpcClient.request(METHODS.sign, {\n      onAccount: this.address,\n      tx,\n      returnSigned: true,\n      networkId,\n      innerTx,\n    });\n    if (res.signedTransaction == null) {\n      throw new UnsupportedProtocolError('signedTransaction is missed in wallet response');\n    }\n    return res.signedTransaction;\n  }\n\n  override async signMessage(message: string): Promise<Uint8Array> {\n    const { signature } = await this._rpcClient\n      .request(METHODS.signMessage, { onAccount: this.address, message });\n    return Buffer.from(signature, 'hex');\n  }\n\n  override async signTypedData(\n    data: Encoded.ContractBytearray,\n    aci: Parameters<AccountBase['signTypedData']>[1],\n    {\n      name, version, contractAddress, networkId,\n    }: Parameters<AccountBase['signTypedData']>[2] = {},\n  ): Promise<Encoded.Signature> {\n    const { signature } = await this._rpcClient.request(METHODS.signTypedData, {\n      onAccount: this.address,\n      domain: {\n        name, version, networkId, contractAddress,\n      },\n      aci,\n      data,\n    });\n    return signature;\n  }\n\n  override async signDelegationToContract(\n    contractAddress: Encoded.ContractAddress,\n  ): Promise<Encoded.Signature> {\n    const { signature } = await this._rpcClient.request(METHODS.signDelegationToContract, {\n      onAccount: this.address,\n      contractAddress,\n    });\n    return signature;\n  }\n\n  override async signNameDelegationToContract(\n    contractAddress: Encoded.ContractAddress,\n    name: AensName,\n  ): Promise<Encoded.Signature> {\n    const { signature } = await this._rpcClient.request(METHODS.signDelegationToContract, {\n      onAccount: this.address,\n      contractAddress,\n      name,\n    });\n    return signature;\n  }\n\n  override async signOracleQueryDelegationToContract(\n    contractAddress: Encoded.ContractAddress,\n    oracleQueryId: Encoded.OracleQueryId,\n  ): Promise<Encoded.Signature> {\n    const { signature } = await this._rpcClient.request(METHODS.signDelegationToContract, {\n      onAccount: this.address,\n      contractAddress,\n      oracleQueryId,\n    });\n    return signature;\n  }\n}\n","import { Encoded } from '../../utils/encoder';\nimport { Domain, AciValue } from '../../utils/typed-data';\nimport { METHODS, SUBSCRIPTION_TYPES, WALLET_TYPE } from '../schema';\nimport { TransformNodeType } from '../../Node';\nimport { SignedTx } from '../../apis/node';\nimport { AensName } from '../../tx/builder/constants';\n\nexport interface WalletInfo {\n  id: string;\n  name: string;\n  networkId: string;\n  origin: string; // TODO: origin needs to be provided by transport\n  type: WALLET_TYPE;\n}\n\nexport interface Accounts {\n  connected: { [pub: Encoded.AccountAddress]: {} };\n  current: { [pub: Encoded.AccountAddress]: {} };\n}\n\nexport interface Node {\n  // TODO: name is not used, can be removed\n  name: string;\n  url: string;\n}\n\nexport interface Network {\n  networkId: string;\n  node?: Node;\n}\n\ntype Icons = Array<{ src: string; sizes?: string; type?: string; purpose?: string }>;\n\nexport const RPC_VERSION = 1;\n\nexport interface WalletApi {\n  [METHODS.connect]: (\n    p: { name: string; icons?: Icons; version: typeof RPC_VERSION; connectNode: boolean }\n  ) => Promise<WalletInfo & { node?: Node }>;\n\n  [METHODS.closeConnection]: (p: any) => void;\n\n  [METHODS.subscribeAddress]: (\n    p: { type: SUBSCRIPTION_TYPES; value: 'connected' | 'current' }\n  ) => Promise<{ subscription: Array<'connected' | 'current'>; address: Accounts }>;\n\n  [METHODS.address]: () => Promise<Encoded.AccountAddress[]>;\n\n  [METHODS.sign]: ((\n    p: {\n      tx: Encoded.Transaction;\n      onAccount: Encoded.AccountAddress;\n      returnSigned: boolean;\n      /**\n       * @deprecated Wallet provided networkId will be used (current network)\n       * required to maintain backward compatibility with wallets using SDK v11.0.1 and below\n       * @see {@link https://github.com/aeternity/aepp-sdk-js/commit/153fd89a52c4eab39fcd659b356b36d32129c1ba}\n       */\n      networkId: string;\n      innerTx?: boolean;\n    }\n  ) => Promise<{\n    /**\n     * @deprecated this is not a hash at all, will be removed later at the same time\n     * as dropping ability to broadcast transaction by wallet\n     */\n    transactionHash?: Partial<TransformNodeType<SignedTx>> & {\n      hash: Encoded.TxHash;\n      rawTx: Encoded.Transaction;\n    };\n    signedTransaction?: Encoded.Transaction;\n  }>);\n\n  [METHODS.signMessage]: (\n    p: { message: string; onAccount: Encoded.AccountAddress }\n  ) => Promise<{ signature: string }>;\n\n  [METHODS.signTypedData]: (\n    p: {\n      domain: Domain;\n      aci: AciValue;\n      data: Encoded.ContractBytearray;\n      onAccount: Encoded.AccountAddress;\n    },\n  ) => Promise<{ signature: Encoded.Signature }>;\n\n  [METHODS.signDelegationToContract]: (\n    p: {\n      contractAddress: Encoded.ContractAddress;\n      name?: AensName;\n      oracleQueryId?: Encoded.OracleQueryId;\n      onAccount: Encoded.AccountAddress;\n    },\n  ) => Promise<{ signature: Encoded.Signature }>;\n}\n\nexport interface AeppApi {\n  [METHODS.updateAddress]: (a: Accounts) => void;\n  [METHODS.updateNetwork]: (a: Network) => void;\n  [METHODS.readyToConnect]: (w: WalletInfo) => void;\n  [METHODS.closeConnection]: (p: any) => void;\n}\n","import { RpcError, RpcInternalError, RpcMethodNotFoundError } from '../schema';\nimport BrowserConnection from '../connection/Browser';\nimport { InvalidRpcMessageError, MissingCallbackError } from '../../utils/errors';\nimport { ensureError } from '../../utils/other';\n\ninterface JsonRpcRequest {\n  jsonrpc: '2.0';\n  id: number;\n  method: string;\n  params?: any;\n}\n\ninterface JsonRpcResponse {\n  jsonrpc: '2.0';\n  id: number;\n  method: string;\n  result?: any;\n  error?: {\n    code: number;\n    message: string;\n    data?: any;\n  };\n}\n\ntype RpcApiHandler = (p?: any) => any | undefined;\ntype RpcApi<Api> = { [k in keyof Api]: RpcApiHandler };\ntype WithOrigin<Api extends RpcApi<Api>> = {\n  [k in keyof Api]: (p: Parameters<Api[k]>[0], origin: string) => ReturnType<Api[k]>\n};\n\n/**\n * Contain functionality for using RPC conection\n * @category aepp wallet communication\n * @param connection - Connection object\n * @param onDisconnect - Disconnect callback\n * @param methods - Object containing handlers for each request by name\n */\nexport default class RpcClient <\n  RemoteApi extends RpcApi<RemoteApi>, LocalApi extends RpcApi<LocalApi>,\n> {\n  connection: BrowserConnection;\n\n  #callbacks = new Map<number, { resolve: (v: any) => void; reject: (e: Error) => void }>();\n\n  #messageId = 0;\n\n  #methods: WithOrigin<LocalApi>;\n\n  constructor(\n    connection: BrowserConnection,\n    onDisconnect: () => void,\n    methods: WithOrigin<LocalApi>,\n  ) {\n    this.connection = connection;\n    this.#methods = methods;\n    connection.connect(this.#handleMessage.bind(this), onDisconnect);\n  }\n\n  async #handleMessage(msg: JsonRpcRequest | JsonRpcResponse, origin: string): Promise<void> {\n    if (msg?.jsonrpc !== '2.0') throw new InvalidRpcMessageError(JSON.stringify(msg));\n    if ('result' in msg || 'error' in msg) {\n      this.#processResponse(msg);\n      return;\n    }\n\n    const request = msg as JsonRpcRequest;\n    let result;\n    let error: Error | undefined;\n    try {\n      if (!(request.method in this.#methods)) throw new RpcMethodNotFoundError();\n      const methodName = request.method as keyof LocalApi;\n      result = await this.#methods[methodName](request.params, origin);\n    } catch (e) {\n      ensureError(e);\n      error = e;\n    }\n    if (request.id != null) {\n      this.#sendResponse(\n        request.id,\n        request.method as keyof LocalApi,\n        result,\n        error == null || error instanceof RpcError ? error : new RpcInternalError(),\n      );\n    }\n    if (error != null && !(error instanceof RpcError)) throw error;\n  }\n\n  #sendRequest(\n    id: number | undefined,\n    method: keyof RemoteApi | keyof LocalApi,\n    params?: any,\n  ): void {\n    this.connection.sendMessage({\n      jsonrpc: '2.0',\n      ...id != null ? { id } : {},\n      method,\n      ...params != null ? { params } : {},\n    });\n  }\n\n  #sendResponse(\n    id: number,\n    method: keyof RemoteApi | keyof LocalApi, // TODO: remove as far it is not required in JSON RPC\n    result?: any,\n    error?: RpcError,\n  ): void {\n    this.connection.sendMessage({\n      jsonrpc: '2.0',\n      id,\n      method,\n      ...error != null ? { error: error.toJSON() } : { result },\n    });\n  }\n\n  /**\n   * Make a request\n   * @param name - Method name\n   * @param params - Method params\n   * @returns Promise which will be resolved after receiving response message\n   */\n  async request<Name extends keyof RemoteApi>(\n    name: Name,\n    params: Parameters<RemoteApi[Name]>[0],\n  ): Promise<ReturnType<RemoteApi[Name]>> {\n    this.#sendRequest(this.#messageId += 1, name, params);\n    return new Promise((resolve, reject) => {\n      this.#callbacks.set(this.#messageId, { resolve, reject });\n    });\n  }\n\n  /**\n   * Make a notification\n   * @param name - Method name\n   * @param params - Method params\n   */\n  notify<Name extends keyof RemoteApi>(name: Name, params: Parameters<RemoteApi[Name]>[0]): void {\n    this.#sendRequest(undefined, name, params);\n  }\n\n  /**\n   * Process response message\n   * @param msg - Message object\n   */\n  #processResponse({ id, error, result }: { id: number; error?: any; result?: any }): void {\n    const callbacks = this.#callbacks.get(id);\n    if (callbacks == null) throw new MissingCallbackError(id);\n    if (error != null) callbacks.reject(RpcError.deserialize(error));\n    else callbacks.resolve(result);\n    this.#callbacks.delete(id);\n  }\n}\n","import AeSdkBase from './AeSdkBase';\nimport { OnAccount } from './AeSdkMethods';\nimport AccountBase from './account/Base';\nimport AccountRpc from './account/Rpc';\nimport { decode, Encoded } from './utils/encoder';\nimport {\n  Accounts, RPC_VERSION, WalletInfo, Network, WalletApi, AeppApi, Node as NodeRpc,\n} from './aepp-wallet-communication/rpc/types';\nimport RpcClient from './aepp-wallet-communication/rpc/RpcClient';\nimport { METHODS, SUBSCRIPTION_TYPES } from './aepp-wallet-communication/schema';\nimport {\n  AlreadyConnectedError,\n  NoWalletConnectedError,\n  UnsubscribedAccountError,\n  UnAuthorizedAccountError,\n  RpcConnectionError,\n} from './utils/errors';\nimport Node from './Node';\nimport BrowserConnection from './aepp-wallet-communication/connection/Browser';\n\n/**\n * RPC handler for AEPP side\n * Contain functionality for wallet interaction and connect it to sdk\n * @category aepp wallet communication\n */\nexport default class AeSdkAepp extends AeSdkBase {\n  name: string;\n\n  onAddressChange: (a: Accounts) => void;\n\n  onDisconnect: (p: any) => void;\n\n  onNetworkChange: (a: Network) => void;\n\n  rpcClient?: RpcClient<WalletApi, AeppApi>;\n\n  _accounts?: Accounts;\n\n  /**\n   * @param options - Options\n   * @param options.name - Aepp name\n   * @param options.onAddressChange - Call-back function for update address event\n   * @param options.onDisconnect - Call-back function for disconnect event\n   * @param options.onNetworkChange - Call-back function for update network event\n   */\n  constructor({\n    name,\n    onAddressChange = () => {},\n    onDisconnect = () => {},\n    onNetworkChange = () => {},\n    ...other\n  }: {\n    name: string;\n    onAddressChange?: (a: Accounts) => void;\n    onDisconnect?: (p: any) => void;\n    onNetworkChange?: (a: Network) => void;\n  } & ConstructorParameters<typeof AeSdkBase>[0]) {\n    super(other);\n    this.onAddressChange = onAddressChange;\n    this.onDisconnect = onDisconnect;\n    this.onNetworkChange = onNetworkChange;\n    this.name = name;\n  }\n\n  override _resolveAccount(account: OnAccount = this.addresses()[0]): AccountBase {\n    if (typeof account === 'string') {\n      const address = account as Encoded.AccountAddress;\n      decode(address);\n      if (!this.addresses().includes(address)) throw new UnAuthorizedAccountError(address);\n      this._ensureConnected();\n      account = new AccountRpc(this.rpcClient, address);\n    }\n    if (account == null) this._ensureAccountAccess();\n    return super._resolveAccount(account);\n  }\n\n  override addresses(): Encoded.AccountAddress[] {\n    if (this._accounts == null) return [];\n    const current = Object.keys(this._accounts.current)[0];\n    return [\n      ...current != null ? [current] : [], ...Object.keys(this._accounts.connected),\n    ] as Encoded.AccountAddress[];\n  }\n\n  /**\n   * Connect to wallet\n   * @param connection - Wallet connection object\n   * @param options - Options\n   * @param options.connectNode - Request wallet to bind node\n   * @param options.name - Node name\n   * @param options.select - Select this node as current\n   */\n  async connectToWallet(\n    connection: BrowserConnection,\n    { connectNode = false, name = 'wallet-node' }: { connectNode?: boolean; name?: string } = {},\n  ): Promise<WalletInfo & { node?: NodeRpc }> {\n    if (this.rpcClient != null) throw new AlreadyConnectedError('You are already connected to wallet');\n    let disconnectParams: any;\n\n    const updateNetwork = (params: Network): void => {\n      if (connectNode) {\n        if (params.node?.url == null) throw new RpcConnectionError('Missing URLs of the Node');\n        this.pool.delete(name);\n        this.addNode(name, new Node(params.node.url), true);\n      }\n      this.onNetworkChange(params);\n    };\n\n    const client = new RpcClient<WalletApi, AeppApi>(\n      connection,\n      () => {\n        delete this.rpcClient;\n        delete this._accounts;\n        this.onDisconnect(disconnectParams);\n      },\n      {\n        [METHODS.updateAddress]: (params) => {\n          this._accounts = params;\n          this.onAddressChange(params);\n        },\n        [METHODS.updateNetwork]: updateNetwork,\n        [METHODS.closeConnection]: (params) => {\n          disconnectParams = params;\n          client.connection.disconnect();\n        },\n        [METHODS.readyToConnect]: () => {},\n      },\n    );\n    const walletInfo = await client\n      .request(METHODS.connect, { name: this.name, version: RPC_VERSION, connectNode });\n    updateNetwork(walletInfo);\n    this.rpcClient = client;\n    return walletInfo;\n  }\n\n  /**\n   * Disconnect from wallet\n   */\n  disconnectWallet(): void {\n    this._ensureConnected();\n    this.rpcClient.notify(METHODS.closeConnection, { reason: 'bye' });\n    this.rpcClient.connection.disconnect();\n  }\n\n  /**\n   * Ask addresses from wallet\n   * @returns Addresses from wallet\n   */\n  async askAddresses(): Promise<Encoded.AccountAddress[]> {\n    this._ensureAccountAccess();\n    return this.rpcClient.request(METHODS.address, undefined);\n  }\n\n  /**\n   * Subscribe for addresses from wallet\n   * @param type - Subscription type\n   * @param value - Should be one of 'current' (the selected account), 'connected' (all)\n   * @returns Accounts from wallet\n   */\n  async subscribeAddress(\n    type: SUBSCRIPTION_TYPES,\n    value: 'current' | 'connected',\n  ): Promise<ReturnType<WalletApi[METHODS.subscribeAddress]>> {\n    this._ensureConnected();\n    const result = await this.rpcClient.request(METHODS.subscribeAddress, { type, value });\n    this._accounts = result.address;\n    return result;\n  }\n\n  _ensureConnected(): asserts this is AeSdkAepp & { rpcClient: NonNullable<AeSdkAepp['rpcClient']> } {\n    if (this.rpcClient != null) return;\n    throw new NoWalletConnectedError('You are not connected to Wallet');\n  }\n\n  _ensureAccountAccess(): asserts this is AeSdkAepp & { rpcClient: NonNullable<AeSdkAepp['rpcClient']> } {\n    this._ensureConnected();\n    if (this.addresses().length !== 0) return;\n    throw new UnsubscribedAccountError();\n  }\n}\n","import JsonBig from 'json-bigint';\nimport BigNumber from 'bignumber.js';\nimport { mapObject } from './other';\n\nconst jsonBig = JsonBig({ storeAsString: true });\n\nconst convertValuesToBigNumbers = (value: any): any => {\n  if (typeof value === 'object' && value !== null && value.constructor === Object) {\n    return mapObject(value, ([k, v]) => [k, convertValuesToBigNumbers(v)]);\n  }\n  if (Array.isArray(value)) {\n    return value.map((item) => convertValuesToBigNumbers(item));\n  }\n  if (typeof value === 'string' && new BigNumber(value).toString(10) === value) {\n    const bn = new BigNumber(value);\n    bn.toJSON = () => bn.toString(10);\n    return bn;\n  }\n  return value;\n};\n\nexport default {\n  stringify: (...args: Parameters<typeof JsonBig['stringify']>): string => (\n    jsonBig.stringify(convertValuesToBigNumbers(args[0]), ...args.slice(1))\n  ),\n  parse: jsonBig.parse,\n};\n","import { v4 as uuid } from '@aeternity/uuid';\nimport AeSdk from './AeSdk';\nimport verifyTransaction from './tx/validator';\nimport RpcClient from './aepp-wallet-communication/rpc/RpcClient';\nimport {\n  METHODS, RPC_STATUS, SUBSCRIPTION_TYPES, WALLET_TYPE,\n  RpcInvalidTransactionError,\n  RpcNotAuthorizeError, RpcPermissionDenyError, RpcUnsupportedProtocolError,\n} from './aepp-wallet-communication/schema';\nimport { InternalError, UnknownRpcClientError } from './utils/errors';\nimport AccountBase from './account/Base';\nimport BrowserConnection from './aepp-wallet-communication/connection/Browser';\nimport {\n  Accounts,\n  AeppApi,\n  Network,\n  RPC_VERSION,\n  WalletApi,\n  WalletInfo,\n} from './aepp-wallet-communication/rpc/types';\nimport { Encoded } from './utils/encoder';\nimport jsonBig from './utils/json-big';\n\ntype RpcClientWallet = RpcClient<AeppApi, WalletApi>;\n\ntype OnConnection = (\n  clientId: string, params: Omit<Parameters<WalletApi[METHODS.connect]>[0], 'version'>, origin: string\n) => void;\n\ntype OnSubscription = (\n  clientId: string, params: Parameters<WalletApi[METHODS.subscribeAddress]>[0], origin: string\n) => void;\n\ntype OnDisconnect = (\n  clientId: string, params: Parameters<WalletApi[METHODS.closeConnection]>[0]\n) => void;\n\ntype OnAskAccounts = (\n  clientId: string, params: undefined, origin: string\n) => void;\n\ninterface RpcClientsInfo {\n  id: string;\n  status: RPC_STATUS;\n  connectNode: boolean;\n  addressSubscription: Set<'connected' | 'current'>;\n  rpc: RpcClientWallet;\n}\n\n/**\n * Contain functionality for aepp interaction and managing multiple aepps\n * @category aepp wallet communication\n */\nexport default class AeSdkWallet extends AeSdk {\n  id: string;\n\n  _type: WALLET_TYPE;\n\n  name: string;\n\n  _clients = new Map<string, RpcClientsInfo>();\n\n  onConnection: OnConnection;\n\n  onSubscription: OnSubscription;\n\n  onDisconnect: OnDisconnect;\n\n  onAskAccounts: OnAskAccounts;\n\n  /**\n   * @param options - Options\n   * @param options.name - Wallet name\n   * @param options.id - Wallet id\n   * @param options.type - Wallet type\n   * @param options.onConnection - Call-back function for incoming AEPP connection\n   * @param options.onSubscription - Call-back function for incoming AEPP account subscription\n   * @param options.onAskAccounts - Call-back function for incoming AEPP get address request\n   * @param options.onDisconnect - Call-back function for disconnect event\n   */\n  constructor({\n    name,\n    id,\n    type,\n    onConnection,\n    onSubscription,\n    onDisconnect,\n    onAskAccounts,\n    ...options\n  }: {\n    id: string;\n    type: WALLET_TYPE;\n    name: string;\n    onConnection: OnConnection;\n    onSubscription: OnSubscription;\n    onDisconnect: OnDisconnect;\n    onAskAccounts: OnAskAccounts;\n  } & ConstructorParameters<typeof AeSdk>[0]) {\n    super(options);\n    this.onConnection = onConnection;\n    this.onSubscription = onSubscription;\n    this.onDisconnect = onDisconnect;\n    this.onAskAccounts = onAskAccounts;\n    this.name = name;\n    this.id = id;\n    this._type = type;\n  }\n\n  _getAccountsForClient({ addressSubscription }: RpcClientsInfo): Accounts {\n    const { current, connected } = this.getAccounts();\n    return {\n      current: addressSubscription.has('current') || addressSubscription.has('connected')\n        ? current : {},\n      connected: addressSubscription.has('connected') ? connected : {},\n    };\n  }\n\n  _pushAccountsToApps(): void {\n    if (this._clients == null) return;\n    Array.from(this._clients.keys())\n      .filter((clientId) => this._isRpcClientConnected(clientId))\n      .map((clientId) => this._getClient(clientId))\n      .filter((client) => client.addressSubscription.size !== 0)\n      .forEach((client) => client.rpc\n        .notify(METHODS.updateAddress, this._getAccountsForClient(client)));\n  }\n\n  override selectAccount(address: Encoded.AccountAddress): void {\n    super.selectAccount(address);\n    this._pushAccountsToApps();\n  }\n\n  override addAccount(account: AccountBase, options?: Parameters<AeSdk['addAccount']>[1]): void {\n    super.addAccount(account, options);\n    this._pushAccountsToApps();\n  }\n\n  _getNode(): { node: Network['node'] } {\n    this.ensureNodeConnected();\n    return { node: { url: this.api.$host, name: this.selectedNodeName } };\n  }\n\n  override async selectNode(name: string): Promise<void> {\n    super.selectNode(name);\n    const networkId = await this.api.getNetworkId();\n    Array.from(this._clients.keys())\n      .filter((clientId) => this._isRpcClientConnected(clientId))\n      .map((clientId) => this._getClient(clientId))\n      .forEach((client) => {\n        client.rpc.notify(METHODS.updateNetwork, {\n          networkId,\n          ...client.connectNode && this._getNode(),\n        });\n      });\n  }\n\n  _getClient(clientId: string): RpcClientsInfo {\n    const client = this._clients.get(clientId);\n    if (client == null) throw new UnknownRpcClientError(clientId);\n    return client;\n  }\n\n  _isRpcClientConnected(clientId: string): boolean {\n    return RPC_STATUS.CONNECTED === this._getClient(clientId).status\n      && this._getClient(clientId).rpc.connection.isConnected();\n  }\n\n  _disconnectRpcClient(clientId: string): void {\n    const client = this._getClient(clientId);\n    client.rpc.connection.disconnect();\n    client.status = RPC_STATUS.DISCONNECTED;\n    client.addressSubscription = new Set();\n  }\n\n  /**\n   * Remove specific RpcClient by ID\n   * @param id - Client ID\n   */\n  removeRpcClient(id: string): void {\n    this._disconnectRpcClient(id);\n    this._clients.delete(id);\n  }\n\n  /**\n   * Add new client by AEPP connection\n   * @param clientConnection - AEPP connection object\n   * @returns Client ID\n   */\n  addRpcClient(clientConnection: BrowserConnection): string {\n    // @TODO  detect if aepp has some history based on origin????\n    // if yes use this instance for connection\n    const id = uuid();\n    let disconnectParams: any;\n    const client: RpcClientsInfo = {\n      id,\n      status: RPC_STATUS.WAITING_FOR_CONNECTION_REQUEST,\n      addressSubscription: new Set(),\n      connectNode: false,\n      rpc: new RpcClient<AeppApi, WalletApi>(\n        clientConnection,\n        () => {\n          this._clients.delete(id);\n          this.onDisconnect(id, disconnectParams); // also related info\n        },\n        {\n          [METHODS.closeConnection]: (params) => {\n            disconnectParams = params;\n            this._disconnectRpcClient(id);\n          },\n          // Store client info and prepare two fn for each client `connect` and `denyConnection`\n          // which automatically prepare and send response for that client\n          [METHODS.connect]: async ({\n            name, version, icons, connectNode,\n          }, origin) => {\n            if (version !== RPC_VERSION) throw new RpcUnsupportedProtocolError();\n\n            await this.onConnection(id, { name, icons, connectNode }, origin);\n            client.status = RPC_STATUS.CONNECTED;\n            client.connectNode = connectNode;\n            return {\n              ...await this.getWalletInfo(),\n              ...connectNode && this._getNode(),\n            };\n          },\n          [METHODS.subscribeAddress]: async ({ type, value }, origin) => {\n            if (!this._isRpcClientConnected(id)) throw new RpcNotAuthorizeError();\n\n            switch (type) {\n              case SUBSCRIPTION_TYPES.subscribe:\n                // TODO: remove `type` as it always subscribe\n                await this.onSubscription(id, { type, value }, origin);\n                client.addressSubscription.add(value);\n                break;\n              case SUBSCRIPTION_TYPES.unsubscribe:\n                client.addressSubscription.delete(value);\n                break;\n              default:\n                throw new InternalError(`Unknown subscription type: ${type}`);\n            }\n\n            return {\n              subscription: Array.from(client.addressSubscription),\n              address: this._getAccountsForClient(client),\n            };\n          },\n          [METHODS.address]: async (params, origin) => {\n            if (!this._isRpcClientConnected(id)) throw new RpcNotAuthorizeError();\n            await this.onAskAccounts(id, params, origin);\n            return this.addresses();\n          },\n          [METHODS.sign]: async (\n            {\n              tx, onAccount = this.address, returnSigned, innerTx,\n            },\n            origin,\n          ) => {\n            if (!this._isRpcClientConnected(id)) throw new RpcNotAuthorizeError();\n            if (!this.addresses().includes(onAccount)) {\n              throw new RpcPermissionDenyError(onAccount);\n            }\n\n            const parameters = {\n              onAccount, aeppOrigin: origin, aeppRpcClientId: id, innerTx,\n            };\n            if (returnSigned || innerTx === true) {\n              return { signedTransaction: await this.signTransaction(tx, parameters) };\n            }\n            try {\n              return jsonBig.parse(jsonBig.stringify({\n                transactionHash: await this.sendTransaction(tx, { ...parameters, verify: false }),\n              }));\n            } catch (error) {\n              const validation = await verifyTransaction(tx, this.api);\n              if (validation.length > 0) throw new RpcInvalidTransactionError(validation);\n              throw error;\n            }\n          },\n          [METHODS.signMessage]: async ({ message, onAccount = this.address }, origin) => {\n            if (!this._isRpcClientConnected(id)) throw new RpcNotAuthorizeError();\n            if (!this.addresses().includes(onAccount)) {\n              throw new RpcPermissionDenyError(onAccount);\n            }\n\n            const parameters = { onAccount, aeppOrigin: origin, aeppRpcClientId: id };\n            return {\n              signature: Buffer.from(await this.signMessage(message, parameters)).toString('hex'),\n            };\n          },\n          [METHODS.signTypedData]: async ({\n            domain, aci, data, onAccount = this.address,\n          }, origin) => {\n            if (!this._isRpcClientConnected(id)) throw new RpcNotAuthorizeError();\n            if (!this.addresses().includes(onAccount)) {\n              throw new RpcPermissionDenyError(onAccount);\n            }\n\n            const parameters = {\n              ...domain, onAccount, aeppOrigin: origin, aeppRpcClientId: id,\n            };\n            return {\n              signature: await this.signTypedData(data, aci, parameters),\n            };\n          },\n          [METHODS.signDelegationToContract]: async ({\n            contractAddress, name, oracleQueryId, onAccount = this.address,\n          }, origin) => {\n            if (!this._isRpcClientConnected(id)) throw new RpcNotAuthorizeError();\n            if (!this.addresses().includes(onAccount)) {\n              throw new RpcPermissionDenyError(onAccount);\n            }\n\n            const parameters = { onAccount, aeppOrigin: origin, aeppRpcClientId: id };\n            const signature = await (\n              (name == null ? null : this\n                .signNameDelegationToContract(contractAddress, name, parameters))\n              ?? (oracleQueryId == null ? null : this\n                .signOracleQueryDelegationToContract(contractAddress, oracleQueryId, parameters))\n              ?? this.signDelegationToContract(contractAddress, parameters)\n            );\n            return { signature };\n          },\n        },\n      ),\n    };\n    this._clients.set(id, client);\n    return id;\n  }\n\n  /**\n   * Send shareWalletInfo message to notify AEPP about wallet\n   * @param clientId - ID of RPC client send message to\n   */\n  async shareWalletInfo(clientId: string): Promise<void> {\n    this._getClient(clientId).rpc.notify(METHODS.readyToConnect, await this.getWalletInfo());\n  }\n\n  /**\n   * Get Wallet info object\n   * @returns Object with wallet information\n   */\n  async getWalletInfo(): Promise<WalletInfo> {\n    return {\n      id: this.id,\n      name: this.name,\n      networkId: await this.api.getNetworkId(),\n      origin: window.location.origin,\n      type: this._type,\n    };\n  }\n\n  /**\n   * Get Wallet accounts\n   * @returns Object with accounts information (\\{ connected: Object, current: Object \\})\n   */\n  getAccounts(): Accounts {\n    return {\n      current: this.selectedAddress != null ? { [this.selectedAddress]: {} } : {},\n      connected: this.addresses()\n        .filter((a) => a !== this.selectedAddress)\n        .reduce((acc, a) => ({ ...acc, [a]: {} }), {}),\n    };\n  }\n}\n","import AccountBase from './Base';\nimport {\n  ArgumentError,\n  InternalError,\n  InvalidAuthDataError,\n  NotImplementedError,\n} from '../utils/errors';\nimport { decode, Encoded } from '../utils/encoder';\nimport { getAccount } from '../chain';\nimport Contract from '../contract/Contract';\nimport { buildTxAsync, buildTx } from '../tx/builder';\nimport { Tag } from '../tx/builder/constants';\n\n/**\n * Generalized account class\n */\nexport default class AccountGeneralized extends AccountBase {\n  override readonly address: Encoded.AccountAddress;\n\n  #authFun?: string;\n\n  /**\n   * @param address - Address of generalized account\n   */\n  constructor(address: Encoded.AccountAddress) {\n    super();\n    decode(address);\n    this.address = address;\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  override async sign(): Promise<Uint8Array> {\n    throw new NotImplementedError('Can\\'t sign using generalized account');\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  override async signMessage(): Promise<Uint8Array> {\n    throw new NotImplementedError('Can\\'t sign using generalized account');\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  override async signTypedData(): Promise<Encoded.Signature> {\n    throw new NotImplementedError('Can\\'t sign using generalized account');\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  override async signDelegationToContract(): Promise<Encoded.Signature> {\n    throw new NotImplementedError('signing delegation to contract using generalized account');\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  override async signNameDelegationToContract(): Promise<Encoded.Signature> {\n    throw new NotImplementedError('signing delegation to contract using generalized account');\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  override async signOracleQueryDelegationToContract(): Promise<Encoded.Signature> {\n    throw new NotImplementedError('signing delegation to contract using generalized account');\n  }\n\n  override async signTransaction(\n    tx: Encoded.Transaction,\n    { authData, onCompiler, onNode }: Parameters<AccountBase['signTransaction']>[1],\n  ): Promise<Encoded.Transaction> {\n    if (authData == null || onCompiler == null || onNode == null) {\n      throw new ArgumentError('authData, onCompiler, onNode', 'provided', null);\n    }\n    const {\n      callData, sourceCode, args, fee, gasLimit, gasPrice,\n    } = typeof authData === 'function' ? await authData(tx) : authData;\n\n    const authCallData = callData ?? await (async () => {\n      if (this.#authFun == null) {\n        const account = await getAccount(this.address, { onNode });\n        if (account.kind !== 'generalized') {\n          throw new ArgumentError('account kind', 'generalized', account.kind);\n        }\n        this.#authFun = account.authFun;\n      }\n      if (this.#authFun == null) {\n        throw new InternalError('Account in generalised, but authFun not provided');\n      }\n\n      if (sourceCode == null || args == null) {\n        throw new InvalidAuthDataError('Auth data must contain sourceCode and args or callData.');\n      }\n      const contract = await Contract.initialize({ onCompiler, onNode, sourceCode });\n      return contract._calldata.encode(contract._name, this.#authFun, args);\n    })();\n\n    const gaMetaTx = await buildTxAsync({\n      tag: Tag.GaMetaTx,\n      tx: { tag: Tag.SignedTx, encodedTx: decode(tx), signatures: [] },\n      gaId: this.address,\n      authData: authCallData,\n      fee,\n      gasLimit,\n      gasPrice,\n      onNode,\n    });\n    return buildTx({ tag: Tag.SignedTx, encodedTx: decode(gaMetaTx), signatures: [] });\n  }\n}\n","import type Transport from '@ledgerhq/hw-transport';\nimport AccountBase from './Base';\nimport { ArgumentError, NotImplementedError } from '../utils/errors';\nimport { decode, Encoded } from '../utils/encoder';\nimport { buildTx } from '../tx/builder';\nimport { Tag } from '../tx/builder/constants';\n\nexport const CLA = 0xe0;\nexport const GET_ADDRESS = 0x02;\nexport const SIGN_TRANSACTION = 0x04;\nexport const GET_APP_CONFIGURATION = 0x06;\nexport const SIGN_PERSONAL_MESSAGE = 0x08;\n\n/**\n * Ledger wallet account class\n */\nexport default class AccountLedger extends AccountBase {\n  readonly transport: Transport;\n\n  override readonly address: Encoded.AccountAddress;\n\n  readonly index: number;\n\n  /**\n   * @param transport - Connection to Ledger to use\n   * @param index - Index of account\n   * @param address - Address of account\n   */\n  constructor(transport: Transport, index: number, address: Encoded.AccountAddress) {\n    super();\n    this.transport = transport;\n    this.index = index;\n    this.address = address;\n    const scrambleKey = 'w0w';\n    transport.decorateAppAPIMethods(this, ['signTransaction', 'signMessage'], scrambleKey);\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  override async sign(): Promise<Uint8Array> {\n    throw new NotImplementedError('RAW signing using Ledger HW');\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  override async signTypedData(): Promise<Encoded.Signature> {\n    throw new NotImplementedError('Typed data signing using Ledger HW');\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  override async signDelegationToContract(): Promise<Encoded.Signature> {\n    throw new NotImplementedError('signing delegation to contract using Ledger HW');\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  override async signNameDelegationToContract(): Promise<Encoded.Signature> {\n    throw new NotImplementedError('signing delegation to contract using Ledger HW');\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  override async signOracleQueryDelegationToContract(): Promise<Encoded.Signature> {\n    throw new NotImplementedError('signing delegation to contract using Ledger HW');\n  }\n\n  override async signTransaction(\n    tx: Encoded.Transaction,\n    { innerTx, networkId }: { innerTx?: boolean; networkId?: string } = {},\n  ): Promise<Encoded.Transaction> {\n    if (innerTx != null) throw new NotImplementedError('innerTx option in AccountLedger');\n    if (networkId == null) throw new ArgumentError('networkId', 'provided', networkId);\n\n    const rawTx = decode(tx);\n    let offset = 0;\n    const headerLength = 4 + 1 + 4;\n    const networkIdBuffer = Buffer.from(networkId);\n    const toSend = [];\n    while (offset !== rawTx.length) {\n      const maxChunkSize = offset === 0 ? 150 - headerLength - networkIdBuffer.length : 150;\n      const chunkSize = offset + maxChunkSize > rawTx.length\n        ? rawTx.length - offset : maxChunkSize;\n      const buffer = Buffer.alloc(\n        offset === 0 ? headerLength + networkIdBuffer.length + chunkSize : chunkSize,\n      );\n      if (offset === 0) {\n        let bufferOffset = buffer.writeUInt32BE(this.index, 0);\n        bufferOffset = buffer.writeUInt32BE(rawTx.length, bufferOffset);\n        bufferOffset = buffer.writeUInt8(networkIdBuffer.length, bufferOffset);\n        bufferOffset += networkIdBuffer.copy(\n          buffer,\n          bufferOffset,\n          0,\n          networkIdBuffer.length,\n        );\n        rawTx.copy(buffer, bufferOffset, 0, 150 - bufferOffset);\n      } else {\n        rawTx.copy(buffer, 0, offset, offset + chunkSize);\n      }\n      toSend.push(buffer);\n      offset += chunkSize;\n    }\n    const response = await toSend.reduce(\n      async (previous, data, i) => {\n        await previous;\n        return this.transport.send(\n          CLA,\n          SIGN_TRANSACTION,\n          i === 0 ? 0x00 : 0x80,\n          0x00,\n          data,\n        );\n      },\n      Promise.resolve(Buffer.alloc(0)),\n    );\n    const signatures = [response.subarray(0, 64)];\n\n    return buildTx({ tag: Tag.SignedTx, encodedTx: rawTx, signatures });\n  }\n\n  override async signMessage(messageStr: string): Promise<Uint8Array> {\n    let offset = 0;\n    const message = Buffer.from(messageStr);\n    const toSend = [];\n    while (offset !== message.length) {\n      const maxChunkSize = offset === 0 ? 150 - 4 - 4 : 150;\n      const chunkSize = offset + maxChunkSize > message.length\n        ? message.length - offset : maxChunkSize;\n      const buffer = Buffer.alloc(offset === 0 ? 4 + 4 + chunkSize : chunkSize);\n      if (offset === 0) {\n        buffer.writeUInt32BE(this.index, 0);\n        buffer.writeUInt32BE(message.length, 4);\n        message.copy(buffer, 4 + 4, offset, offset + chunkSize);\n      } else {\n        message.copy(buffer, 0, offset, offset + chunkSize);\n      }\n      toSend.push(buffer);\n      offset += chunkSize;\n    }\n    const response = await toSend.reduce(\n      async (previous, data, i) => {\n        await previous;\n        return this.transport.send(\n          CLA,\n          SIGN_PERSONAL_MESSAGE,\n          i === 0 ? 0x00 : 0x80,\n          0x00,\n          data,\n        );\n      },\n      Promise.resolve(Buffer.alloc(0)),\n    );\n    return response.subarray(0, 64);\n  }\n}\n","import type Transport from '@ledgerhq/hw-transport';\nimport AccountLedger, { CLA, GET_ADDRESS, GET_APP_CONFIGURATION } from './Ledger';\nimport { UnsupportedVersionError } from '../utils/errors';\nimport { Encoded } from '../utils/encoder';\nimport semverSatisfies from '../utils/semver-satisfies';\nimport Node from '../Node';\n\n/**\n * A factory class that generates instances of AccountLedger based on provided transport.\n */\nexport default class AccountLedgerFactory {\n  readonly transport: Transport;\n\n  private readonly versionCheckPromise: Promise<void>;\n\n  /**\n   * @param transport - Connection to Ledger to use\n   */\n  constructor(transport: Transport) {\n    this.transport = transport;\n    this.versionCheckPromise = this.getAppConfiguration().then(({ version }) => {\n      const args = [version, '0.4.4', '0.5.0'] as const;\n      if (!semverSatisfies(...args)) throw new UnsupportedVersionError('app on ledger', ...args);\n    });\n    const scrambleKey = 'w0w';\n    transport.decorateAppAPIMethods(this, ['getAddress', 'getAppConfiguration'], scrambleKey);\n  }\n\n  /**\n   * @returns the version of app installed on Ledger wallet\n   */\n  async getAppConfiguration(): Promise<{ version: string }> {\n    await this.versionCheckPromise;\n    const response = await this.transport.send(CLA, GET_APP_CONFIGURATION, 0x00, 0x00);\n    return {\n      version: [response[1], response[2], response[3]].join('.'),\n    };\n  }\n\n  /**\n   * Get `ak_`-prefixed address for a given account index.\n   * @param accountIndex - Index of account\n   * @param verify - Ask user to confirm address by showing it on the device screen\n   */\n  async getAddress(accountIndex: number, verify = false): Promise<Encoded.AccountAddress> {\n    await this.versionCheckPromise;\n    const buffer = Buffer.alloc(4);\n    buffer.writeUInt32BE(accountIndex, 0);\n    const response = await this.transport.send(\n      CLA,\n      GET_ADDRESS,\n      verify ? 0x01 : 0x00,\n      0x00,\n      buffer,\n    );\n    const addressLength = response[0];\n    return response.subarray(1, 1 + addressLength).toString('ascii') as Encoded.AccountAddress;\n  }\n\n  /**\n   * Get an instance of AccountLedger for a given account index.\n   * @param accountIndex - Index of account\n   */\n  async initialize(accountIndex: number): Promise<AccountLedger> {\n    await this.versionCheckPromise;\n    return new AccountLedger(this.transport, accountIndex, await this.getAddress(accountIndex));\n  }\n\n  /**\n   * Discovers accounts on Ledger that already have been used (has any on-chain transactions).\n   * It returns an empty array if none of accounts been used.\n   * If a used account is preceded by an unused account then it would be ignored.\n   * @param node - Instance of Node to get account information from\n   */\n  async discover(node: Node): Promise<AccountLedger[]> {\n    let index = 0;\n    const result = [];\n    let account;\n    do {\n      if (account != null) result.push(account);\n      account = await this.initialize(index);\n      index += 1;\n    } while (await node.getAccountByPubkey(account.address).then(() => true, () => false));\n    return result;\n  }\n}\n","import { Encoded } from '../../utils/encoder';\n\ninterface FunctionAci {\n  arguments: any[];\n  name: string;\n  payable: boolean;\n  returns: any;\n  stateful: boolean;\n}\n\nexport type Aci = Array<{\n  contract?: {\n    name: string;\n    event?: any;\n    functions: FunctionAci[];\n    kind: string; // known values: 'contract_main'\n    payable: boolean;\n    typedefs: any[];\n  };\n}>;\n\n/**\n * A base class for all compiler implementations\n */\nexport default abstract class CompilerBase {\n  /**\n   * Compile contract by contract's path\n   * Available only in Node.js\n   * @param path - Path to contract source code\n   * @returns ACI and bytecode\n   */\n  abstract compile(path: string): Promise<{\n    bytecode: Encoded.ContractBytearray;\n    aci: Aci;\n  }>;\n\n  /**\n   * Compile contract by contract's source code\n   * @param sourceCode - Contract source code as string\n   * @param fileSystem - A map of contract filename to the corresponding contract source code to\n   * include into the main contract\n   * @example\n   * ```js\n   * {\n   *   'library.aes': 'namespace TestLib =\\n  function sum(x: int, y: int) : int = x + y'\n   * }\n   * ```\n   * @returns ACI and bytecode\n   */\n  abstract compileBySourceCode(\n    sourceCode: string,\n    fileSystem?: Record<string, string>,\n  ): Promise<{\n    bytecode: Encoded.ContractBytearray;\n    aci: Aci;\n  }>;\n\n  /**\n   * Generate contract's ACI by contract's path\n   * Available only in Node.js\n   * @param path - Path to contract source code\n   * @returns ACI\n   */\n  abstract generateAci(path: string): Promise<Aci>;\n\n  /**\n   * Generate contract's ACI by contract's source code\n   * @param sourceCode - Contract source code as string\n   * @param fileSystem - A map of contract filename to the corresponding contract source code to\n   * include into the main contract\n   * @example\n   * ```js\n   * {\n   *   'library.aes': 'namespace TestLib =\\n  function sum(x: int, y: int) : int = x + y'\n   * }\n   * ```\n   * @returns ACI\n   */\n  abstract generateAciBySourceCode(\n    sourceCode: string,\n    fileSystem?: Record<string, string>,\n  ): Promise<Aci>;\n\n  /**\n   * Verify that a contract bytecode is the result of compiling the given source code\n   * Available only in Node.js\n   * @param bytecode - Contract bytecode to verify\n   * @param path - Path to contract source code\n   * @returns ACI and bytecode\n   */\n  abstract validate(bytecode: Encoded.ContractBytearray, path: string): Promise<boolean>;\n\n  /**\n   * Verify that a contract bytecode is the result of compiling the given source code\n   * @param bytecode - Contract bytecode to verify\n   * @param sourceCode - Contract source code as string\n   * @param fileSystem - A map of contract filename to the corresponding contract source code to\n   * include into the main contract\n   * @example\n   * ```js\n   * {\n   *   'library.aes': 'namespace TestLib =\\n  function sum(x: int, y: int) : int = x + y'\n   * }\n   * ```\n   */\n  abstract validateBySourceCode(\n    bytecode: Encoded.ContractBytearray,\n    sourceCode: string,\n    fileSystem?: Record<string, string>,\n  ): Promise<boolean>;\n\n  /**\n   * @returns Compiler version\n   */\n  abstract version(): Promise<string>;\n}\n","import * as coreClient from \"@azure/core-client\";\n\nexport const Contract: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Contract\",\n    modelProperties: {\n      code: {\n        serializedName: \"code\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      options: {\n        serializedName: \"options\",\n        type: {\n          name: \"Composite\",\n          className: \"CompileOpts\"\n        }\n      }\n    }\n  }\n};\n\nexport const CompileOpts: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CompileOpts\",\n    modelProperties: {\n      fileSystem: {\n        serializedName: \"file_system\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"any\" } }\n        }\n      },\n      srcFile: {\n        serializedName: \"src_file\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const CompilerError: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CompilerError\",\n    modelProperties: {\n      type: {\n        serializedName: \"type\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      pos: {\n        serializedName: \"pos\",\n        type: {\n          name: \"Composite\",\n          className: \"ErrorPos\"\n        }\n      },\n      message: {\n        serializedName: \"message\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      context: {\n        serializedName: \"context\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ErrorPos: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ErrorPos\",\n    modelProperties: {\n      file: {\n        serializedName: \"file\",\n        type: {\n          name: \"String\"\n        }\n      },\n      line: {\n        serializedName: \"line\",\n        required: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      col: {\n        serializedName: \"col\",\n        required: true,\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const CompileResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CompileResult\",\n    modelProperties: {\n      bytecode: {\n        serializedName: \"bytecode\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      aci: {\n        serializedName: \"aci\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Dictionary\",\n              value: { type: { name: \"any\" } }\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const SophiaCallResultInput: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SophiaCallResultInput\",\n    modelProperties: {\n      source: {\n        serializedName: \"source\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      options: {\n        serializedName: \"options\",\n        type: {\n          name: \"Composite\",\n          className: \"CompileOpts\"\n        }\n      },\n      function: {\n        serializedName: \"function\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      callResult: {\n        serializedName: \"call-result\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      callValue: {\n        serializedName: \"call-value\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const BytecodeCallResultInput: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"BytecodeCallResultInput\",\n    modelProperties: {\n      bytecode: {\n        serializedName: \"bytecode\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      function: {\n        serializedName: \"function\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      callResult: {\n        serializedName: \"call-result\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      callValue: {\n        serializedName: \"call-value\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const DecodedCallresult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DecodedCallresult\",\n    modelProperties: {\n      function: {\n        serializedName: \"function\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      result: {\n        serializedName: \"result\",\n        required: true,\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"any\" } }\n        }\n      }\n    }\n  }\n};\n\nexport const FunctionCallInput: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"FunctionCallInput\",\n    modelProperties: {\n      source: {\n        serializedName: \"source\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      options: {\n        serializedName: \"options\",\n        type: {\n          name: \"Composite\",\n          className: \"CompileOpts\"\n        }\n      },\n      function: {\n        serializedName: \"function\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      arguments: {\n        serializedName: \"arguments\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const Calldata: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Calldata\",\n    modelProperties: {\n      calldata: {\n        serializedName: \"calldata\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const DecodeCalldataBytecode: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DecodeCalldataBytecode\",\n    modelProperties: {\n      calldata: {\n        serializedName: \"calldata\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      bytecode: {\n        serializedName: \"bytecode\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const DecodedCalldata: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DecodedCalldata\",\n    modelProperties: {\n      function: {\n        serializedName: \"function\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      arguments: {\n        serializedName: \"arguments\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Dictionary\",\n              value: { type: { name: \"any\" } }\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const ErrorModel: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ErrorModel\",\n    modelProperties: {\n      reason: {\n        serializedName: \"reason\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const DecodeCalldataSource: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DecodeCalldataSource\",\n    modelProperties: {\n      source: {\n        serializedName: \"source\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      options: {\n        serializedName: \"options\",\n        type: {\n          name: \"Composite\",\n          className: \"CompileOpts\"\n        }\n      },\n      calldata: {\n        serializedName: \"calldata\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      function: {\n        serializedName: \"function\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ByteCodeInput: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ByteCodeInput\",\n    modelProperties: {\n      bytecode: {\n        serializedName: \"bytecode\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const FateAssembler: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"FateAssembler\",\n    modelProperties: {\n      fateAssembler: {\n        serializedName: \"fate-assembler\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ValidateByteCodeInput: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ValidateByteCodeInput\",\n    modelProperties: {\n      bytecode: {\n        serializedName: \"bytecode\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      source: {\n        serializedName: \"source\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      options: {\n        serializedName: \"options\",\n        type: {\n          name: \"Composite\",\n          className: \"CompileOpts\"\n        }\n      }\n    }\n  }\n};\n\nexport const CompilerVersion: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CompilerVersion\",\n    modelProperties: {\n      version: {\n        serializedName: \"version\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ApiVersion: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ApiVersion\",\n    modelProperties: {\n      apiVersion: {\n        serializedName: \"api-version\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const SophiaBinaryData: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SophiaBinaryData\",\n    modelProperties: {\n      sophiaType: {\n        serializedName: \"sophia-type\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      data: {\n        serializedName: \"data\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const SophiaJsonData: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SophiaJsonData\",\n    modelProperties: {\n      data: {\n        serializedName: \"data\",\n        required: true,\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"any\" } }\n        }\n      }\n    }\n  }\n};\n","import { OperationParameter, OperationURLParameter } from \"@azure/core-client\";\nimport {\n  Contract as ContractMapper,\n  SophiaCallResultInput as SophiaCallResultInputMapper,\n  BytecodeCallResultInput as BytecodeCallResultInputMapper,\n  FunctionCallInput as FunctionCallInputMapper,\n  DecodeCalldataBytecode as DecodeCalldataBytecodeMapper,\n  DecodeCalldataSource as DecodeCalldataSourceMapper,\n  ByteCodeInput as ByteCodeInputMapper,\n  ValidateByteCodeInput as ValidateByteCodeInputMapper\n} from \"../models/mappers\";\n\nexport const contentType: OperationParameter = {\n  parameterPath: [\"options\", \"contentType\"],\n  mapper: {\n    defaultValue: \"application/json\",\n    isConstant: true,\n    serializedName: \"Content-Type\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const body: OperationParameter = {\n  parameterPath: \"body\",\n  mapper: ContractMapper\n};\n\nexport const accept: OperationParameter = {\n  parameterPath: \"accept\",\n  mapper: {\n    defaultValue: \"application/json\",\n    isConstant: true,\n    serializedName: \"Accept\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const $host: OperationURLParameter = {\n  parameterPath: \"$host\",\n  mapper: {\n    serializedName: \"$host\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  },\n  skipEncoding: true\n};\n\nexport const body1: OperationParameter = {\n  parameterPath: \"body\",\n  mapper: SophiaCallResultInputMapper\n};\n\nexport const body2: OperationParameter = {\n  parameterPath: \"body\",\n  mapper: BytecodeCallResultInputMapper\n};\n\nexport const body3: OperationParameter = {\n  parameterPath: \"body\",\n  mapper: FunctionCallInputMapper\n};\n\nexport const body4: OperationParameter = {\n  parameterPath: \"body\",\n  mapper: DecodeCalldataBytecodeMapper\n};\n\nexport const body5: OperationParameter = {\n  parameterPath: \"body\",\n  mapper: DecodeCalldataSourceMapper\n};\n\nexport const body6: OperationParameter = {\n  parameterPath: \"body\",\n  mapper: ByteCodeInputMapper\n};\n\nexport const body7: OperationParameter = {\n  parameterPath: \"body\",\n  mapper: ValidateByteCodeInputMapper\n};\n","import * as coreClient from \"@azure/core-client\";\nimport * as Parameters from \"./models/parameters\";\nimport * as Mappers from \"./models/mappers\";\nimport {\n  CompilerOptionalParams,\n  Contract,\n  GenerateACIOptionalParams,\n  GenerateACIResponse,\n  CompileContractOptionalParams,\n  CompileContractResponse,\n  SophiaCallResultInput,\n  DecodeCallResultOptionalParams,\n  DecodeCallResultResponse,\n  BytecodeCallResultInput,\n  DecodeCallResultBytecodeOptionalParams,\n  DecodeCallResultBytecodeResponse,\n  FunctionCallInput,\n  EncodeCalldataOptionalParams,\n  EncodeCalldataResponse,\n  DecodeCalldataBytecode,\n  DecodeCalldataBytecodeOptionalParams,\n  DecodeCalldataBytecodeResponse,\n  DecodeCalldataSource,\n  DecodeCalldataSourceOptionalParams,\n  DecodeCalldataSourceResponse,\n  ByteCodeInput,\n  GetFateAssemblerCodeOptionalParams,\n  GetFateAssemblerCodeResponse,\n  ValidateByteCodeInput,\n  ValidateByteCodeOptionalParams,\n  GetCompilerVersionOptionalParams,\n  GetCompilerVersionResponse,\n  VersionOptionalParams,\n  VersionResponse,\n  ApiVersionOptionalParams,\n  ApiVersionResponse,\n  ApiOptionalParams,\n  ApiResponse\n} from \"./models\";\n\nexport class Compiler extends coreClient.ServiceClient {\n  $host: string;\n\n  /**\n   * Initializes a new instance of the Compiler class.\n   * @param $host server parameter\n   * @param options The parameter options\n   */\n  constructor($host: string, options?: CompilerOptionalParams) {\n    if ($host === undefined) {\n      throw new Error(\"'$host' cannot be null\");\n    }\n\n    // Initializing default values for options\n    if (!options) {\n      options = {};\n    }\n    const defaults: CompilerOptionalParams = {\n      requestContentType: \"application/json; charset=utf-8\"\n    };\n\n    const packageDetails = `azsdk-js-compiler/1.0.0-beta.1`;\n    const userAgentPrefix =\n      options.userAgentOptions && options.userAgentOptions.userAgentPrefix\n        ? `${options.userAgentOptions.userAgentPrefix} ${packageDetails}`\n        : `${packageDetails}`;\n\n    const optionsWithDefaults = {\n      ...defaults,\n      ...options,\n      userAgentOptions: {\n        userAgentPrefix\n      },\n      endpoint: options.endpoint ?? options.baseUri ?? \"{$host}\"\n    };\n    super(optionsWithDefaults);\n    // Parameter assignments\n    this.$host = $host;\n  }\n\n  /**\n   * Generate an Aeternity Contract Interface (ACI) for contract\n   * @param body contract code\n   * @param options The options parameters.\n   */\n  generateACI(\n    body: Contract,\n    options?: GenerateACIOptionalParams\n  ): Promise<GenerateACIResponse> {\n    return this.sendOperationRequest(\n      { body, options },\n      generateACIOperationSpec\n    );\n  }\n\n  /**\n   * Compile a sophia contract from source and return byte code and ACI\n   * @param body contract code\n   * @param options The options parameters.\n   */\n  compileContract(\n    body: Contract,\n    options?: CompileContractOptionalParams\n  ): Promise<CompileContractResponse> {\n    return this.sendOperationRequest(\n      { body, options },\n      compileContractOperationSpec\n    );\n  }\n\n  /**\n   * Decode the result of contract call\n   * @param body Binary data in Sophia ABI format\n   * @param options The options parameters.\n   */\n  decodeCallResult(\n    body: SophiaCallResultInput,\n    options?: DecodeCallResultOptionalParams\n  ): Promise<DecodeCallResultResponse> {\n    return this.sendOperationRequest(\n      { body, options },\n      decodeCallResultOperationSpec\n    );\n  }\n\n  /**\n   * Decode the result of contract call from Bytecode\n   * @param body Call result + compiled contract\n   * @param options The options parameters.\n   */\n  decodeCallResultBytecode(\n    body: BytecodeCallResultInput,\n    options?: DecodeCallResultBytecodeOptionalParams\n  ): Promise<DecodeCallResultBytecodeResponse> {\n    return this.sendOperationRequest(\n      { body, options },\n      decodeCallResultBytecodeOperationSpec\n    );\n  }\n\n  /**\n   * Encode Sophia function call according to sophia ABI.\n   * @param body Sophia function call - contract code + function name + arguments\n   * @param options The options parameters.\n   */\n  encodeCalldata(\n    body: FunctionCallInput,\n    options?: EncodeCalldataOptionalParams\n  ): Promise<EncodeCalldataResponse> {\n    return this.sendOperationRequest(\n      { body, options },\n      encodeCalldataOperationSpec\n    );\n  }\n\n  /**\n   * Identify function name and arguments in Calldata for a compiled contract\n   * @param body Calldata + compiled contract\n   * @param options The options parameters.\n   */\n  decodeCalldataBytecode(\n    body: DecodeCalldataBytecode,\n    options?: DecodeCalldataBytecodeOptionalParams\n  ): Promise<DecodeCalldataBytecodeResponse> {\n    return this.sendOperationRequest(\n      { body, options },\n      decodeCalldataBytecodeOperationSpec\n    );\n  }\n\n  /**\n   * Identify function name and arguments in Calldata for a (partial) contract\n   * @param body Calldata + contract (stub) code\n   * @param options The options parameters.\n   */\n  decodeCalldataSource(\n    body: DecodeCalldataSource,\n    options?: DecodeCalldataSourceOptionalParams\n  ): Promise<DecodeCalldataSourceResponse> {\n    return this.sendOperationRequest(\n      { body, options },\n      decodeCalldataSourceOperationSpec\n    );\n  }\n\n  /**\n   * Get FATE assembler code from bytecode\n   * @param body contract byte array\n   * @param options The options parameters.\n   */\n  getFateAssemblerCode(\n    body: ByteCodeInput,\n    options?: GetFateAssemblerCodeOptionalParams\n  ): Promise<GetFateAssemblerCodeResponse> {\n    return this.sendOperationRequest(\n      { body, options },\n      getFateAssemblerCodeOperationSpec\n    );\n  }\n\n  /**\n   * Verify that an encoded byte array is the result of compiling a given contract\n   * @param body contract byte array and source code\n   * @param options The options parameters.\n   */\n  validateByteCode(\n    body: ValidateByteCodeInput,\n    options?: ValidateByteCodeOptionalParams\n  ): Promise<void> {\n    return this.sendOperationRequest(\n      { body, options },\n      validateByteCodeOperationSpec\n    );\n  }\n\n  /**\n   * Extract compiler version from bytecode\n   * @param body contract byte array\n   * @param options The options parameters.\n   */\n  getCompilerVersion(\n    body: ByteCodeInput,\n    options?: GetCompilerVersionOptionalParams\n  ): Promise<GetCompilerVersionResponse> {\n    return this.sendOperationRequest(\n      { body, options },\n      getCompilerVersionOperationSpec\n    );\n  }\n\n  /**\n   * Get the version of the underlying Sophia compiler version\n   * @param options The options parameters.\n   */\n  version(options?: VersionOptionalParams): Promise<VersionResponse> {\n    return this.sendOperationRequest({ options }, versionOperationSpec);\n  }\n\n  /**\n   * Get the version of the API\n   * @param options The options parameters.\n   */\n  apiVersion(options?: ApiVersionOptionalParams): Promise<ApiVersionResponse> {\n    return this.sendOperationRequest({ options }, apiVersionOperationSpec);\n  }\n\n  /**\n   * Get the Api description\n   * @param options The options parameters.\n   */\n  api(options?: ApiOptionalParams): Promise<ApiResponse> {\n    return this.sendOperationRequest({ options }, apiOperationSpec);\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst generateACIOperationSpec: coreClient.OperationSpec = {\n  path: \"/aci\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: {\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: { name: \"Dictionary\", value: { type: { name: \"any\" } } }\n          }\n        }\n      }\n    },\n    400: {\n      bodyMapper: {\n        type: {\n          name: \"Sequence\",\n          element: { type: { name: \"Composite\", className: \"CompilerError\" } }\n        }\n      },\n      isError: true\n    }\n  },\n  requestBody: Parameters.body,\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.contentType, Parameters.accept],\n  mediaType: \"json\",\n  serializer\n};\nconst compileContractOperationSpec: coreClient.OperationSpec = {\n  path: \"/compile\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.CompileResult\n    },\n    400: {\n      bodyMapper: {\n        type: {\n          name: \"Sequence\",\n          element: { type: { name: \"Composite\", className: \"CompilerError\" } }\n        }\n      },\n      isError: true\n    }\n  },\n  requestBody: Parameters.body,\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.contentType, Parameters.accept],\n  mediaType: \"json\",\n  serializer\n};\nconst decodeCallResultOperationSpec: coreClient.OperationSpec = {\n  path: \"/decode-call-result\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: { type: { name: \"any\" } }\n    },\n    400: {\n      bodyMapper: {\n        type: {\n          name: \"Sequence\",\n          element: { type: { name: \"Composite\", className: \"CompilerError\" } }\n        }\n      },\n      isError: true\n    }\n  },\n  requestBody: Parameters.body1,\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.contentType, Parameters.accept],\n  mediaType: \"json\",\n  serializer\n};\nconst decodeCallResultBytecodeOperationSpec: coreClient.OperationSpec = {\n  path: \"/decode-call-result/bytecode\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DecodedCallresult\n    },\n    400: {\n      bodyMapper: {\n        type: {\n          name: \"Sequence\",\n          element: { type: { name: \"Composite\", className: \"CompilerError\" } }\n        }\n      },\n      isError: true\n    }\n  },\n  requestBody: Parameters.body2,\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.contentType, Parameters.accept],\n  mediaType: \"json\",\n  serializer\n};\nconst encodeCalldataOperationSpec: coreClient.OperationSpec = {\n  path: \"/encode-calldata\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Calldata\n    },\n    400: {\n      bodyMapper: {\n        type: {\n          name: \"Sequence\",\n          element: { type: { name: \"Composite\", className: \"CompilerError\" } }\n        }\n      },\n      isError: true\n    }\n  },\n  requestBody: Parameters.body3,\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.contentType, Parameters.accept],\n  mediaType: \"json\",\n  serializer\n};\nconst decodeCalldataBytecodeOperationSpec: coreClient.OperationSpec = {\n  path: \"/decode-calldata/bytecode\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DecodedCalldata\n    },\n    400: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true\n    }\n  },\n  requestBody: Parameters.body4,\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.contentType, Parameters.accept],\n  mediaType: \"json\",\n  serializer\n};\nconst decodeCalldataSourceOperationSpec: coreClient.OperationSpec = {\n  path: \"/decode-calldata/source\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DecodedCalldata\n    },\n    400: {\n      bodyMapper: {\n        type: {\n          name: \"Sequence\",\n          element: { type: { name: \"Composite\", className: \"CompilerError\" } }\n        }\n      },\n      isError: true\n    }\n  },\n  requestBody: Parameters.body5,\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.contentType, Parameters.accept],\n  mediaType: \"json\",\n  serializer\n};\nconst getFateAssemblerCodeOperationSpec: coreClient.OperationSpec = {\n  path: \"/fate-assembler\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.FateAssembler\n    },\n    400: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true\n    }\n  },\n  requestBody: Parameters.body6,\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.contentType, Parameters.accept],\n  mediaType: \"json\",\n  serializer\n};\nconst validateByteCodeOperationSpec: coreClient.OperationSpec = {\n  path: \"/validate-byte-code\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {},\n    400: {\n      bodyMapper: {\n        type: {\n          name: \"Sequence\",\n          element: { type: { name: \"Composite\", className: \"CompilerError\" } }\n        }\n      },\n      isError: true\n    }\n  },\n  requestBody: Parameters.body7,\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.contentType, Parameters.accept],\n  mediaType: \"json\",\n  serializer\n};\nconst getCompilerVersionOperationSpec: coreClient.OperationSpec = {\n  path: \"/compiler-version\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.CompilerVersion\n    },\n    400: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true\n    }\n  },\n  requestBody: Parameters.body6,\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.contentType, Parameters.accept],\n  mediaType: \"json\",\n  serializer\n};\nconst versionOperationSpec: coreClient.OperationSpec = {\n  path: \"/version\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.CompilerVersion\n    },\n    500: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true\n    }\n  },\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst apiVersionOperationSpec: coreClient.OperationSpec = {\n  path: \"/api-version\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ApiVersion\n    },\n    500: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true\n    }\n  },\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst apiOperationSpec: coreClient.OperationSpec = {\n  path: \"/api\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: {\n        type: { name: \"Dictionary\", value: { type: { name: \"any\" } } }\n      }\n    },\n    400: {\n      bodyMapper: Mappers.ErrorModel,\n      isError: true\n    }\n  },\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","import { RestError } from '@azure/core-rest-pipeline';\nimport {\n  Compiler as CompilerApi,\n  ErrorModel,\n  CompilerError as CompilerErrorApi,\n} from '../../apis/compiler';\nimport { genErrorFormatterPolicy, genVersionCheckPolicy } from '../../utils/autorest';\nimport CompilerBase, { Aci } from './Base';\nimport { Encoded } from '../../utils/encoder';\nimport { CompilerError, NotImplementedError } from '../../utils/errors';\n\ntype GeneralCompilerError = ErrorModel & {\n  info?: object;\n  parameter?: string;\n};\n\n/**\n * Contract Compiler over HTTP\n *\n * This class include api call's related to contract compiler functionality.\n * @category contract\n * @example CompilerHttp('COMPILER_URL')\n */\nexport default class CompilerHttp extends CompilerBase {\n  readonly api: CompilerApi;\n\n  /**\n   * @param compilerUrl - Url for compiler API\n   * @param options - Options\n   * @param options.ignoreVersion - Don't check compiler version\n   */\n  constructor(compilerUrl: string, { ignoreVersion }: { ignoreVersion?: boolean } = {}) {\n    super();\n    this.api = new CompilerApi(compilerUrl, {\n      allowInsecureConnection: true,\n      additionalPolicies: [\n        genErrorFormatterPolicy((body: GeneralCompilerError | CompilerErrorApi[]) => {\n          let message = '';\n          if ('reason' in body) {\n            message += ` ${body.reason\n            }${body.parameter != null ? ` in ${body.parameter}` : ''\n              // TODO: revising after improving documentation https://github.com/aeternity/aesophia_http/issues/78\n            }${body.info != null ? ` (${JSON.stringify(body.info)})` : ''}`;\n          }\n          if (Array.isArray(body)) {\n            message += `\\n${body\n              .map((e) => `${e.type}:${e.pos.line}:${e.pos.col}: ${e.message}${e.context != null ? ` (${e.context})` : ''}`)\n              .join('\\n')}`;\n          }\n          return message;\n        }),\n      ],\n    });\n    if (ignoreVersion !== true) {\n      const versionPromise = this.api.apiVersion()\n        .then(({ apiVersion }) => apiVersion, (error) => error);\n      this.api.pipeline.addPolicy(\n        genVersionCheckPolicy('compiler', '/api-version', versionPromise, '7.3.0', '8.0.0'),\n      );\n    }\n  }\n\n  async compileBySourceCode(\n    sourceCode: string,\n    fileSystem?: Record<string, string>,\n  ): Promise<{ bytecode: Encoded.ContractBytearray; aci: Aci }> {\n    try {\n      const res = await this.api.compileContract({ code: sourceCode, options: { fileSystem } });\n      // TODO: should be fixed when the compiledAci interface gets updated\n      return res as { bytecode: Encoded.ContractBytearray; aci: Aci };\n    } catch (error) {\n      if (error instanceof RestError && error.statusCode === 400) {\n        throw new CompilerError(error.message);\n      }\n      throw error;\n    }\n  }\n\n  // eslint-disable-next-line class-methods-use-this, @typescript-eslint/no-unused-vars\n  async compile(path: string): Promise<{ bytecode: Encoded.ContractBytearray; aci: Aci }> {\n    throw new NotImplementedError('File system access, use CompilerHttpNode instead');\n  }\n\n  async generateAciBySourceCode(\n    sourceCode: string,\n    fileSystem?: Record<string, string>,\n  ): Promise<Aci> {\n    try {\n      return await this.api.generateACI({ code: sourceCode, options: { fileSystem } });\n    } catch (error) {\n      if (error instanceof RestError && error.statusCode === 400) {\n        throw new CompilerError(error.message);\n      }\n      throw error;\n    }\n  }\n\n  // eslint-disable-next-line class-methods-use-this, @typescript-eslint/no-unused-vars\n  async generateAci(path: string): Promise<Aci> {\n    throw new NotImplementedError('File system access, use CompilerHttpNode instead');\n  }\n\n  async validateBySourceCode(\n    bytecode: Encoded.ContractBytearray,\n    sourceCode: string,\n    fileSystem?: Record<string, string>,\n  ): Promise<boolean> {\n    try {\n      await this.api.validateByteCode({ bytecode, source: sourceCode, options: { fileSystem } });\n      return true;\n    } catch {\n      return false;\n    }\n  }\n\n  // eslint-disable-next-line class-methods-use-this, @typescript-eslint/no-unused-vars\n  async validate(bytecode: Encoded.ContractBytearray, path: string): Promise<boolean> {\n    throw new NotImplementedError('File system access, use CompilerHttpNode instead');\n  }\n\n  async version(): Promise<string> {\n    return (await this.api.version()).version;\n  }\n}\n","/**\n * Convert string from snake_case to PascalCase\n * @param s - String to convert\n * @returns Converted string\n */\nexport function snakeToPascal(s: string): string {\n  return s.replace(/_./g, (match) => match[1].toUpperCase());\n}\n\n/**\n * Convert string from PascalCase to snake_case\n * @param s - String to convert\n * @returns Converted string\n */\nexport function pascalToSnake(s: string): string {\n  return s.replace(/[A-Z]/g, (match) => `_${match.toLowerCase()}`);\n}\n","import { w3cwebsocket as W3CWebSocket } from 'websocket';\nimport BigNumber from 'bignumber.js';\nimport type Channel from './Base';\nimport JsonBig from '../utils/json-big';\nimport { pascalToSnake } from '../utils/string';\nimport { Encoded } from '../utils/encoder';\nimport {\n  BaseError,\n  ChannelCallError,\n  ChannelPingTimedOutError,\n  UnexpectedTsError,\n  UnknownChannelStateError,\n  ChannelIncomingMessageError,\n  ChannelError,\n} from '../utils/errors';\nimport { encodeContractAddress } from '../utils/crypto';\nimport { buildTx } from '../tx/builder';\nimport { ensureError } from '../utils/other';\n\nexport interface ChannelEvents {\n  statusChanged: (status: ChannelStatus) => void;\n  stateChanged: (tx: Encoded.Transaction | '') => void;\n  depositLocked: () => void;\n  ownDepositLocked: () => void;\n  withdrawLocked: () => void;\n  ownWithdrawLocked: () => void;\n  peerDisconnected: () => void;\n  channelReestablished: () => void;\n  error: (error: Error) => void;\n  onChainTx: (tx: Encoded.Transaction, details: { info: string; type: string }) => void;\n  message: (message: string | Object) => void;\n  newContract: (contractAddress: Encoded.ContractAddress) => void;\n}\n\nexport interface ChannelAction {\n  guard: (channel: Channel, state?: ChannelFsm) => boolean;\n  action: (channel: Channel, state?: ChannelFsm) => ChannelFsm;\n}\n\ninterface SignOptions {\n  updates?: any[];\n  [k: string]: any;\n}\nexport type SignTxWithTag = (tag: string, tx: Encoded.Transaction, options?: SignOptions) => (\n  Promise<Encoded.Transaction>\n);\n// TODO: SignTx shouldn't return number or null\nexport type SignTx = (tx: Encoded.Transaction, options?: SignOptions) => (\n  Promise<Encoded.Transaction | number | null>\n);\n\nexport interface ChannelOptions {\n  existingFsmId?: Encoded.Bytearray;\n  url: string;\n\n  /**\n   * @see {@link https://github.com/aeternity/protocol/blob/6734de2e4c7cce7e5e626caa8305fb535785131d/node/api/channels_api_usage.md#channel-establishing-parameters}\n   */\n  initiatorId: Encoded.AccountAddress;\n  responderId: Encoded.AccountAddress;\n  lockPeriod: number;\n  pushAmount: number;\n  initiatorAmount: BigNumber;\n  responderAmount: BigNumber;\n  channelReserve?: BigNumber | number;\n  ttl?: number;\n  host: string;\n  port: number;\n  role: 'initiator' | 'responder';\n  minimumDepthStrategy?: 'txfee' | 'plain';\n  minimumDepth?: number;\n  fee?: BigNumber | number;\n  gasPrice?: BigNumber | number;\n\n  signedTx?: string;\n  existingChannelId?: string;\n  offChainTx?: string;\n  reconnectTx?: string;\n  timeoutIdle?: number;\n  timeoutFundingCreate?: number;\n  timeoutFundingSign?: number;\n  timeoutFundingLock?: number;\n  timeoutSign?: number;\n  timeoutAccept?: number;\n  timeoutInitialized?: number;\n  timeoutAwaitingOpen?: number;\n  statePassword?: string;\n  debug: boolean;\n  sign: SignTxWithTag;\n  offchainTx?: string;\n}\n\nexport interface ChannelHandler extends Function {\n  enter?: Function;\n}\n\nexport interface ChannelState {\n  signedTx: Encoded.Transaction;\n  resolve: (r?: any) => void;\n  reject: (e: BaseError) => void;\n  sign: SignTx;\n  handler?: ChannelHandler;\n  onOnChainTx?: (tx: Encoded.Transaction) => void;\n  onOwnWithdrawLocked?: () => void;\n  onWithdrawLocked?: () => void;\n  onOwnDepositLocked?: () => void;\n  onDepositLocked?: () => void;\n  closeTx?: string;\n}\n\nexport interface ChannelFsm {\n  handler: ChannelHandler;\n  state?: ChannelState | {\n    resolve: Function;\n    reject: Function;\n  };\n}\n\nexport interface ChannelMessage {\n  id?: number;\n  method: string;\n  params: any;\n  payload?: any;\n  data?: any;\n  error?: ChannelMessageError;\n}\n\ninterface ChannelMessageError {\n  code: number;\n  message: string;\n  data: [{\n    message: string;\n    code: number;\n  }];\n  request: ChannelMessage;\n}\n\n// Send ping message every 10 seconds\nconst PING_TIMEOUT_MS = 10000;\n// Close connection if pong message is not received within 15 seconds\nconst PONG_TIMEOUT_MS = 15000;\n\nexport function emit<E extends keyof ChannelEvents>(\n  channel: Channel,\n  ...args: [E, ...Parameters<ChannelEvents[E]>]\n): void {\n  const [eventName, ...rest] = args;\n  channel._eventEmitter.emit(eventName, ...rest);\n}\n\nfunction enterState(channel: Channel, nextState: ChannelFsm): void {\n  if (nextState == null) {\n    throw new UnknownChannelStateError();\n  }\n  channel._fsm = nextState;\n  if (nextState?.handler?.enter != null) {\n    nextState.handler.enter(channel);\n  }\n  // eslint-disable-next-line @typescript-eslint/no-use-before-define\n  void dequeueAction(channel);\n}\n\n// TODO: rewrite to enum\nexport type ChannelStatus = 'connecting' | 'connected' | 'accepted' | 'halfSigned' | 'signed'\n| 'open' | 'closing' | 'closed' | 'died' | 'disconnected';\n\nexport function changeStatus(channel: Channel, newStatus: ChannelStatus): void {\n  if (newStatus === channel._status) return;\n  channel._status = newStatus;\n  emit(channel, 'statusChanged', newStatus);\n}\n\nexport function changeState(channel: Channel, newState: Encoded.Transaction | ''): void {\n  channel._state = newState;\n  emit(channel, 'stateChanged', newState);\n}\n\nfunction send(channel: Channel, message: ChannelMessage): void {\n  if (channel._options.debug) console.log('Send message: ', message);\n  channel._websocket.send(JsonBig.stringify({ jsonrpc: '2.0', ...message }));\n}\n\nexport function notify(channel: Channel, method: string, params: object = {}): void {\n  send(channel, { method, params });\n}\n\nasync function dequeueAction(channel: Channel): Promise<void> {\n  if (channel._isActionQueueLocked) return;\n  const queue = channel._actionQueue;\n  if (queue.length === 0) return;\n  const index = queue.findIndex((action) => action.guard(channel, channel._fsm));\n  if (index === -1) return;\n  channel._actionQueue = queue.filter((_, i) => index !== i);\n  channel._isActionQueueLocked = true;\n  const nextState: ChannelFsm = await queue[index].action(channel, channel._fsm);\n  channel._isActionQueueLocked = false;\n  enterState(channel, nextState);\n}\n\nexport async function enqueueAction(\n  channel: Channel,\n  guard: ChannelAction['guard'],\n  action: () => { handler: ChannelHandler; state?: Partial<ChannelState> },\n): Promise<any> {\n  const promise = new Promise((resolve, reject) => {\n    channel._actionQueue.push({\n      guard,\n      action() {\n        const res = action();\n        return { ...res, state: { ...res.state, resolve, reject } };\n      },\n    });\n  });\n  void dequeueAction(channel);\n  return promise;\n}\n\nasync function handleMessage(channel: Channel, message: ChannelMessage): Promise<void> {\n  const { handler, state: st } = channel._fsm;\n  const nextState = await Promise.resolve(handler(channel, message, st));\n  enterState(channel, nextState);\n  // TODO: emit message and handler name (?) to move this code to Contract constructor\n  if (\n    message?.params?.data?.updates?.[0]?.op === 'OffChainNewContract'\n    // if name is channelOpen, the contract was created by other participant\n    && nextState?.handler.name === 'channelOpen'\n  ) {\n    const round = channel.round();\n    if (round == null) throw new UnexpectedTsError('Round is null');\n    const owner = message?.params?.data?.updates?.[0]?.owner;\n    emit(channel, 'newContract', encodeContractAddress(owner, round + 1));\n  }\n}\n\nasync function dequeueMessage(channel: Channel): Promise<void> {\n  if (channel._isMessageQueueLocked) return;\n  channel._isMessageQueueLocked = true;\n  while (channel._messageQueue.length > 0) {\n    const message = channel._messageQueue.shift();\n    if (message == null) throw new UnexpectedTsError();\n    try {\n      await handleMessage(channel, message);\n    } catch (error) {\n      ensureError(error);\n      emit(channel, 'error', new ChannelIncomingMessageError(error, message));\n    }\n  }\n  channel._isMessageQueueLocked = false;\n}\n\nexport function disconnect(channel: Channel): void {\n  channel._websocket.close();\n  clearTimeout(channel._pingTimeoutId);\n}\n\nfunction ping(channel: Channel): void {\n  clearTimeout(channel._pingTimeoutId);\n  channel._pingTimeoutId = setTimeout(() => {\n    notify(channel, 'channels.system', { action: 'ping' });\n    channel._pingTimeoutId = setTimeout(() => {\n      disconnect(channel);\n      emit(channel, 'error', new ChannelPingTimedOutError());\n    }, PONG_TIMEOUT_MS);\n  }, PING_TIMEOUT_MS);\n}\n\nfunction onMessage(channel: Channel, data: string): void {\n  const message = JsonBig.parse(data);\n  if (channel._options.debug) console.log('Receive message: ', message);\n  if (message.id != null) {\n    const callback = channel._rpcCallbacks.get(message.id);\n    if (callback == null) {\n      emit(channel, 'error', new ChannelError(`Can't find callback by id: ${message.id}`));\n      return;\n    }\n    try {\n      callback(message);\n    } finally {\n      channel._rpcCallbacks.delete(message.id);\n    }\n    return;\n  }\n  if (message.method === 'channels.message') {\n    emit(channel, 'message', message.params.data.message);\n    return;\n  }\n  if (message.method === 'channels.system.pong') {\n    if (message.params.channel_id === channel._channelId || channel._channelId == null) {\n      ping(channel);\n    }\n    return;\n  }\n  channel._messageQueue.push(message);\n  void dequeueMessage(channel);\n}\n\nexport async function call(channel: Channel, method: string, params: any): Promise<any> {\n  return new Promise((resolve, reject) => {\n    const id = channel._nextRpcMessageId;\n    channel._nextRpcMessageId += 1;\n    channel._rpcCallbacks.set(id, (\n      message: { result: PromiseLike<any>; error?: ChannelMessageError },\n    ) => {\n      if (message.error != null) {\n        const details = message.error.data[0].message ?? '';\n        reject(new ChannelCallError(message.error.message + details));\n      } else resolve(message.result);\n    });\n    send(channel, { method, id, params });\n  });\n}\n\nexport async function initialize(\n  channel: Channel,\n  connectionHandler: Function,\n  openHandler: Function,\n  { url, ...channelOptions }: ChannelOptions,\n): Promise<void> {\n  channel._options = { url, ...channelOptions };\n  channel._fsm = { handler: connectionHandler };\n\n  const wsUrl = new URL(url);\n  Object.entries(channelOptions)\n    .filter(([key]) => !['sign', 'debug'].includes(key))\n    .forEach(([key, value]) => wsUrl.searchParams.set(pascalToSnake(key), value.toString()));\n  wsUrl.searchParams.set('protocol', 'json-rpc');\n  changeStatus(channel, 'connecting');\n  channel._websocket = new W3CWebSocket(wsUrl.toString());\n  await new Promise<void>((resolve, reject) => {\n    Object.assign(channel._websocket, {\n      onerror: reject,\n      onopen: async () => {\n        resolve();\n        changeStatus(channel, 'connected');\n        if (channelOptions.reconnectTx != null) {\n          enterState(channel, { handler: openHandler });\n          const { signedTx } = await channel.state();\n          if (signedTx == null) {\n            throw new ChannelError('`signedTx` missed in state while reconnection');\n          }\n          changeState(channel, buildTx(signedTx));\n        }\n        ping(channel);\n      },\n      onclose: () => {\n        changeStatus(channel, 'disconnected');\n        clearTimeout(channel._pingTimeoutId);\n      },\n      onmessage: ({ data }: { data: string }) => onMessage(channel, data),\n    });\n  });\n}\n","/* eslint-disable consistent-return */\n/* eslint-disable default-case */\n/* eslint-disable @typescript-eslint/no-use-before-define */\nimport {\n  ChannelState,\n  changeStatus,\n  changeState,\n  notify,\n  emit,\n  disconnect,\n  ChannelMessage,\n  ChannelFsm,\n  SignTx,\n  ChannelStatus,\n  ChannelEvents,\n} from './internal';\nimport { unpackTx, buildTx } from '../tx/builder';\nimport { decode, Encoded } from '../utils/encoder';\nimport {\n  IllegalArgumentError,\n  InsufficientBalanceError,\n  ChannelConnectionError,\n  UnexpectedChannelMessageError,\n  ChannelError,\n} from '../utils/errors';\nimport type Channel from './Base';\nimport { Tag } from '../tx/builder/constants';\nimport { snakeToPascal } from '../utils/string';\n\nexport async function appendSignature(\n  tx: Encoded.Transaction,\n  signFn: SignTx,\n): Promise<Encoded.Transaction | number | null> {\n  const { signatures, encodedTx } = unpackTx(tx, Tag.SignedTx);\n  const payloadTx = buildTx(encodedTx);\n  const result = await signFn(payloadTx);\n  if (typeof result === 'string') {\n    const { signatures: signatures2 } = unpackTx(result, Tag.SignedTx);\n    return buildTx({\n      tag: Tag.SignedTx,\n      signatures: signatures.concat(signatures2),\n      encodedTx: decode(payloadTx),\n    });\n  }\n  return result;\n}\n\nexport async function signAndNotify(\n  channel: Channel,\n  method: string,\n  data: {\n    tx?: Encoded.Transaction;\n    signed_tx?: Encoded.Transaction;\n  },\n  signFn: SignTx,\n): Promise<boolean> {\n  let signedTx;\n  if (data.tx != null) signedTx = await signFn(data.tx);\n  else if (data.signed_tx != null) signedTx = await appendSignature(data.signed_tx, signFn);\n  else throw new ChannelError('Can\\'t find transaction in message');\n  const isError = typeof signedTx !== 'string';\n  const key = data.tx != null ? 'tx' : 'signed_tx';\n  notify(channel, method, isError ? { error: signedTx ?? 1 } : { [key]: signedTx });\n  return isError;\n}\n\nexport function handleUnexpectedMessage(\n  _channel: Channel,\n  message: ChannelMessage,\n  state: ChannelState,\n): ChannelFsm {\n  state?.reject?.(Object.assign(\n    new UnexpectedChannelMessageError(`Unexpected message received:\\n\\n${JSON.stringify(message)}`),\n    { wsMessage: message },\n  ));\n  return { handler: channelOpen };\n}\n\nexport function awaitingCompletion(\n  channel: Channel,\n  message: ChannelMessage,\n  state: ChannelState,\n  onSuccess?: typeof handleUnexpectedMessage,\n): ChannelFsm {\n  if (onSuccess != null && message.method === 'channels.update') {\n    return onSuccess(channel, message, state);\n  }\n  if (message.method === 'channels.conflict') {\n    state.resolve({\n      accepted: false,\n      errorCode: message.params.data.error_code,\n      errorMessage: message.params.data.error_msg,\n    });\n    return { handler: channelOpen };\n  }\n  if (message.method === 'channels.info') {\n    if (message.params.data.event === 'aborted_update') {\n      state.resolve({ accepted: false });\n      return { handler: channelOpen };\n    }\n  }\n  if (message.error != null) {\n    const codes = message.error.data.map((d) => d.code);\n    if (codes.includes(1001)) {\n      state.reject(new InsufficientBalanceError('Insufficient balance'));\n    } else if (codes.includes(1002)) {\n      state.reject(new IllegalArgumentError('Amount cannot be negative'));\n    } else {\n      state.reject(new ChannelConnectionError(message.error.message));\n    }\n    return { handler: channelOpen };\n  }\n  return handleUnexpectedMessage(channel, message, state);\n}\n\nexport function awaitingConnection(\n  channel: Channel,\n  message: ChannelMessage,\n): ChannelFsm | undefined {\n  if (message.method === 'channels.info') {\n    const channelInfoStatus: string = message.params.data.event;\n\n    let nextStatus: ChannelStatus | null = null;\n    if (channelInfoStatus === 'channel_accept') nextStatus = 'accepted';\n    if (channelInfoStatus === 'funding_created') nextStatus = 'halfSigned';\n    if (nextStatus != null) {\n      changeStatus(channel, nextStatus);\n      return { handler: awaitingChannelCreateTx };\n    }\n\n    if (message.params.data.event === 'channel_reestablished') {\n      return { handler: awaitingOpenConfirmation };\n    }\n    if (message.params.data.event === 'fsm_up') {\n      channel._fsmId = message.params.data.fsm_id;\n      return { handler: awaitingConnection };\n    }\n    return { handler: awaitingConnection };\n  }\n  if (message.method === 'channels.error') {\n    emit(channel, 'error', new ChannelConnectionError(message?.payload?.message));\n    return { handler: channelClosed };\n  }\n}\n\nexport async function awaitingReconnection(\n  channel: Channel,\n  message: ChannelMessage,\n  state: ChannelState,\n): Promise<ChannelFsm> {\n  if (message.method === 'channels.info') {\n    if (message.params.data.event === 'fsm_up') {\n      channel._fsmId = message.params.data.fsm_id;\n      const { signedTx } = await channel.state();\n      changeState(channel, signedTx == null ? '' : buildTx(signedTx));\n      return { handler: channelOpen };\n    }\n  }\n  return handleUnexpectedMessage(channel, message, state);\n}\n\nexport async function awaitingChannelCreateTx(\n  channel: Channel,\n  message: ChannelMessage,\n): Promise<ChannelFsm | undefined> {\n  const tag = channel._options.role === 'initiator' ? 'initiator_sign' : 'responder_sign';\n  if (message.method === `channels.sign.${tag}`) {\n    await signAndNotify(\n      channel,\n      `channels.${tag}`,\n      message.params.data,\n      async (tx) => channel._options.sign(tag, tx),\n    );\n    return { handler: awaitingOnChainTx };\n  }\n}\n\nexport function awaitingOnChainTx(\n  channel: Channel,\n  message: ChannelMessage,\n): ChannelFsm | undefined {\n  function awaitingBlockInclusion(_: Channel, message2: ChannelMessage): ChannelFsm | undefined {\n    if (message2.method === 'channels.info') {\n      switch (message2.params.data.event) {\n        case 'funding_created':\n        case 'own_funding_locked':\n          return { handler: awaitingBlockInclusion };\n        case 'funding_locked':\n          return { handler: awaitingOpenConfirmation };\n      }\n    }\n    if (message2.method === 'channels.on_chain_tx') {\n      emit(channel, 'onChainTx', message2.params.data.tx, {\n        info: message2.params.data.info,\n        type: message2.params.data.type,\n      });\n      return { handler: awaitingBlockInclusion };\n    }\n  }\n\n  if (message.method === 'channels.on_chain_tx') {\n    const { info } = message.params.data;\n    const { role } = channel._options;\n    if ((info === 'funding_signed' && role === 'initiator')\n      || (info === 'funding_created' && role === 'responder')) {\n      return { handler: awaitingBlockInclusion };\n    }\n  }\n  if (\n    message.method === 'channels.info'\n    && message.params.data.event === 'funding_signed'\n    && channel._options.role === 'initiator'\n  ) {\n    channel._channelId = message.params.channel_id;\n    changeStatus(channel, 'signed');\n    return { handler: awaitingOnChainTx };\n  }\n}\n\nfunction awaitingOpenConfirmation(\n  channel: Channel,\n  message: ChannelMessage,\n): ChannelFsm | undefined {\n  if (message.method === 'channels.info' && message.params.data.event === 'open') {\n    channel._channelId = message.params.channel_id;\n    return {\n      handler(_: Channel, message2: ChannelMessage): ChannelFsm | undefined {\n        if (message2.method === 'channels.update') {\n          changeState(channel, message2.params.data.state);\n          return { handler: channelOpen };\n        }\n      },\n    };\n  }\n}\n\nexport async function channelOpen(\n  channel: Channel,\n  message: ChannelMessage,\n  state: ChannelState,\n): Promise<ChannelFsm | undefined> {\n  switch (message.method) {\n    case 'channels.info':\n      switch (message.params.data.event) {\n        case 'update':\n        case 'withdraw_created':\n        case 'deposit_created':\n          return { handler: awaitingTxSignRequest };\n        case 'own_withdraw_locked':\n        case 'withdraw_locked':\n        case 'own_deposit_locked':\n        case 'deposit_locked':\n        case 'peer_disconnected':\n        case 'channel_reestablished':\n        case 'open':\n          // TODO: Better handling of peer_disconnected event.\n          //\n          //       We should enter intermediate state where offchain transactions\n          //       are blocked until channel is reestablished.\n          emit(channel, snakeToPascal(message.params.data.event) as keyof ChannelEvents);\n          return { handler: channelOpen };\n        case 'fsm_up':\n          channel._fsmId = message.params.data.fsm_id;\n          return { handler: channelOpen };\n        case 'timeout':\n        case 'close_mutual':\n          return { handler: channelOpen };\n        case 'closing':\n          changeStatus(channel, 'closing');\n          return { handler: channelOpen };\n        case 'closed_confirmed':\n          changeStatus(channel, 'closed');\n          return { handler: channelClosed };\n        case 'died':\n          changeStatus(channel, 'died');\n          return { handler: channelClosed };\n        case 'shutdown':\n          return { handler: channelOpen };\n      }\n      break;\n    case 'channels.on_chain_tx':\n      emit(channel, 'onChainTx', message.params.data.tx, {\n        info: message.params.data.info,\n        type: message.params.data.type,\n      });\n      return { handler: channelOpen };\n    case 'channels.leave':\n      // TODO: emit event\n      return { handler: channelOpen };\n    case 'channels.update':\n      changeState(channel, message.params.data.state);\n      return { handler: channelOpen };\n    case 'channels.sign.shutdown_sign_ack':\n      return awaitingTxSignRequest(channel, message, state);\n  }\n}\nchannelOpen.enter = (channel: Channel) => {\n  changeStatus(channel, 'open');\n};\n\nasync function awaitingTxSignRequest(\n  channel: Channel,\n  message: ChannelMessage,\n  state: ChannelState,\n): Promise<ChannelFsm> {\n  const [, tag] = message.method.match(/^channels\\.sign\\.([^.]+)$/) ?? [];\n  if (tag == null) return handleUnexpectedMessage(channel, message, state);\n  const isError = await signAndNotify(\n    channel,\n    `channels.${tag}`,\n    message.params.data,\n    async (tx) => channel._options.sign(tag, tx, { updates: message.params.data.updates }),\n  );\n\n  function awaitingUpdateConflict(_: Channel, message2: ChannelMessage): ChannelFsm {\n    if (message2.error != null) {\n      return { handler: awaitingUpdateConflict, state };\n    }\n    if (message2.method === 'channels.conflict') {\n      return { handler: channelOpen };\n    }\n    return handleUnexpectedMessage(channel, message2, state);\n  }\n  return isError ? { handler: awaitingUpdateConflict, state } : { handler: channelOpen };\n}\n\nexport async function awaitingShutdownTx(\n  channel: Channel,\n  message: ChannelMessage,\n  state: ChannelState,\n): Promise<ChannelFsm> {\n  if (message.method !== 'channels.sign.shutdown_sign') {\n    return handleUnexpectedMessage(channel, message, state);\n  }\n  await signAndNotify(\n    channel,\n    'channels.shutdown_sign',\n    message.params.data,\n    async (tx) => state.sign(tx),\n  );\n  return {\n    handler(_: Channel, message2: ChannelMessage): ChannelFsm {\n      if (message2.method !== 'channels.on_chain_tx') {\n        return handleUnexpectedMessage(channel, message2, state);\n      }\n      // state.resolve(message.params.data.tx)\n      return { handler: channelClosed, state };\n    },\n    state,\n  };\n}\n\nexport function awaitingLeave(\n  channel: Channel,\n  message: ChannelMessage,\n  state: ChannelState,\n): ChannelFsm {\n  if (message.method === 'channels.leave') {\n    state.resolve({ channelId: message.params.channel_id, signedTx: message.params.data.state });\n    disconnect(channel);\n    return { handler: channelClosed };\n  }\n  if (message.method === 'channels.error') {\n    state.reject(new ChannelConnectionError(message.data.message));\n    return { handler: channelOpen };\n  }\n  return handleUnexpectedMessage(channel, message, state);\n}\n\nexport function channelClosed(\n  _channel: Channel,\n  message: ChannelMessage,\n  state: ChannelState,\n): ChannelFsm {\n  if (state == null) return { handler: channelClosed };\n  if (message.params.data.event === 'closing') return { handler: channelClosed, state };\n  if (message.params.data.info === 'channel_closed') {\n    state.closeTx = message.params.data.tx;\n    return { handler: channelClosed, state };\n  }\n  if (message.params.data.event === 'closed_confirmed') {\n    state.resolve(state.closeTx);\n    return { handler: channelClosed };\n  }\n  return { handler: channelClosed, state };\n}\n","import EventEmitter from 'events';\nimport { w3cwebsocket as W3CWebSocket } from 'websocket';\nimport { snakeToPascal } from '../utils/string';\nimport { buildTx, unpackTx } from '../tx/builder';\nimport { Tag } from '../tx/builder/constants';\nimport * as handlers from './handlers';\nimport {\n  initialize,\n  enqueueAction,\n  notify,\n  call,\n  disconnect as channelDisconnect,\n  SignTx,\n  ChannelOptions,\n  ChannelState,\n  ChannelHandler,\n  ChannelAction,\n  ChannelStatus,\n  ChannelFsm,\n  ChannelMessage,\n  ChannelEvents,\n} from './internal';\nimport { ChannelError } from '../utils/errors';\nimport { Encoded } from '../utils/encoder';\nimport { TxUnpacked } from '../tx/builder/schema.generated';\n\nfunction snakeToPascalObjKeys<Type>(obj: object): Type {\n  return Object.entries(obj).reduce((result, [key, val]) => ({\n    ...result,\n    [snakeToPascal(key)]: val,\n  }), {}) as Type;\n}\n\n/**\n * Channel\n * @example\n * ```js\n * await Channel.initialize({\n *   url: 'ws://localhost:3001',\n *   role: 'initiator'\n *   initiatorId: 'ak_Y1NRjHuoc3CGMYMvCmdHSBpJsMDR6Ra2t5zjhRcbtMeXXLpLH',\n *   responderId: 'ak_V6an1xhec1xVaAhLuak7QoEbi6t7w5hEtYWp9bMKaJ19i6A9E',\n *   initiatorAmount: 1e18,\n *   responderAmount: 1e18,\n *   pushAmount: 0,\n *   channelReserve: 0,\n *   ttl: 1000,\n *   host: 'localhost',\n *   port: 3002,\n *   lockPeriod: 10,\n *   async sign (tag, tx) => await account.signTransaction(tx)\n * })\n * ```\n */\nexport default class Channel {\n  _eventEmitter = new EventEmitter();\n\n  _pingTimeoutId!: NodeJS.Timeout;\n\n  _nextRpcMessageId = 0;\n\n  _rpcCallbacks = new Map<number, (message: object) => void>();\n\n  _fsmId?: Encoded.Bytearray;\n\n  _messageQueue: ChannelMessage[] = [];\n\n  _isMessageQueueLocked = false;\n\n  _actionQueue: ChannelAction[] = [];\n\n  _isActionQueueLocked = false;\n\n  _status: ChannelStatus = 'disconnected';\n\n  _fsm!: ChannelFsm;\n\n  _websocket!: W3CWebSocket;\n\n  _state: Encoded.Transaction | '' = '';\n\n  _options!: ChannelOptions;\n\n  _channelId?: Encoded.Channel;\n\n  /**\n   * @param options - Channel params\n   * @param options.url - Channel url (for example: \"ws://localhost:3001\")\n   * @param options.role - Participant role (\"initiator\" or \"responder\")\n   * @param options.initiatorId - Initiator's public key\n   * @param options.responderId - Responder's public key\n   * @param options.pushAmount - Initial deposit in favour of the responder by the initiator\n   * @param options.initiatorAmount - Amount of coins the initiator has committed to\n   * the channel\n   * @param options.responderAmount - Amount of coins the responder has committed to\n   * the channel\n   * @param options.channelReserve - The minimum amount both peers need to maintain\n   * @param options.ttl - Minimum block height to include the channel_create_tx\n   * @param options.host - Host of the responder's node\n   * @param options.port - The port of the responders node\n   * @param options.lockPeriod - Amount of blocks for disputing a solo close\n   * @param options.minimumDepthStrategy - How to calculate minimum depth (default: txfee)\n   * @param options.minimumDepth - The minimum amount of blocks to be mined\n   * @param options.fee - The fee to be used for the channel open transaction\n   * @param options.gasPrice - Used for the fee computation of the channel open transaction\n   * @param options.existingChannelId - Existing channel id (required if reestablishing a\n   * channel)\n   * @param options.offchainTx - Offchain transaction (required if reestablishing\n   * a channel)\n   * @param options.timeoutIdle - The time waiting for a new event to be initiated\n   * (default: 600000)\n   * @param options.timeoutFundingCreate - The time waiting for the initiator to produce\n   * the create channel transaction after the noise session had been established (default: 120000)\n   * @param options.timeoutFundingSign - The time frame the other client has to sign an\n   * off-chain update after our client had initiated and signed it. This applies only for double\n   * signed on-chain intended updates: channel create transaction, deposit, withdrawal and etc.\n   * (default: 120000)\n   * @param options.timeoutFundingLock - The time frame the other client has to confirm an\n   * on-chain transaction reaching maturity (passing minimum depth) after the local node has\n   * detected this. This applies only for double signed on-chain intended updates: channel create\n   * transaction, deposit, withdrawal and etc. (default: 360000)\n   * @param options.timeoutSign - The time frame the client has to return a signed\n   * off-chain update or to decline it. This applies for all off-chain updates (default: 500000)\n   * @param options.timeoutAccept - The time frame the other client has to react to an\n   * event. This applies for all off-chain updates that are not meant to land on-chain, as well as\n   * some special cases: opening a noise connection, mutual closing acknowledgement and\n   * reestablishing an existing channel (default: 120000)\n   * @param options.timeoutInitialized - the time frame the responder has to accept an\n   * incoming noise session. Applicable only for initiator (default: timeout_accept's value)\n   * @param options.timeoutAwaitingOpen - The time frame the initiator has to start an\n   * outgoing noise session to the responder's node. Applicable only for responder (default:\n   * timeout_idle's value)\n   * @param options.debug=false - Log websocket communication\n   * @param options.sign - Function which verifies and signs transactions\n   */\n  static async initialize(options: ChannelOptions): Promise<Channel> {\n    return Channel._initialize(new Channel(), options);\n  }\n\n  static async _initialize<T extends Channel>(channel: T, options: ChannelOptions): Promise<T> {\n    await initialize(\n      channel,\n      options.existingFsmId != null ? handlers.awaitingReconnection : handlers.awaitingConnection,\n      handlers.channelOpen,\n      options,\n    );\n    return channel;\n  }\n\n  /**\n   * Register event listener function\n   *\n   * Possible events:\n   *\n   *   - \"error\"\n   *   - \"stateChanged\"\n   *   - \"statusChanged\"\n   *   - \"message\"\n   *   - \"peerDisconnected\"\n   *   - \"onChainTx\"\n   *   - \"ownWithdrawLocked\"\n   *   - \"withdrawLocked\"\n   *   - \"ownDepositLocked\"\n   *   - \"depositLocked\"\n   *   - \"channelReestablished\"\n   *   - \"newContract\"\n   *\n   *\n   * @param eventName - Event name\n   * @param callback - Callback function\n   */\n  on<E extends keyof ChannelEvents>(eventName: E, callback: ChannelEvents[E]): void {\n    this._eventEmitter.on(eventName, callback);\n  }\n\n  /**\n   * Remove event listener function\n   * @param eventName - Event name\n   * @param callback - Callback function\n   */\n  off<E extends keyof ChannelEvents>(eventName: E, callback: ChannelEvents[E]): void {\n    this._eventEmitter.removeListener(eventName, callback);\n  }\n\n  /**\n   * Close the connection\n   */\n  disconnect(): void {\n    return channelDisconnect(this);\n  }\n\n  /**\n   * Get current status\n   */\n  status(): ChannelStatus {\n    return this._status;\n  }\n\n  /**\n   * Get current state\n   */\n  async state(): Promise<{\n    calls: TxUnpacked & { tag: Tag.CallsMtree };\n    halfSignedTx?: TxUnpacked & { tag: Tag.SignedTx };\n    signedTx?: TxUnpacked & { tag: Tag.SignedTx };\n    trees: TxUnpacked & { tag: Tag.StateTrees };\n  }> {\n    const res = snakeToPascalObjKeys<{\n      calls: Encoded.CallStateTree;\n      halfSignedTx: Encoded.Transaction | '';\n      signedTx: Encoded.Transaction | '';\n      trees: Encoded.StateTrees;\n    }>(await call(this, 'channels.get.offchain_state', {}));\n    return {\n      calls: unpackTx(res.calls, Tag.CallsMtree),\n      ...res.halfSignedTx !== '' && { halfSignedTx: unpackTx(res.halfSignedTx, Tag.SignedTx) },\n      ...res.signedTx !== '' && { signedTx: unpackTx(res.signedTx, Tag.SignedTx) },\n      trees: unpackTx(res.trees, Tag.StateTrees),\n    };\n  }\n\n  /**\n   * Get current round\n   *\n   * If round cannot be determined (for example when channel has not been opened)\n   * it will return `null`.\n   */\n  round(): number | null {\n    if (this._state === '') {\n      return null;\n    }\n    const params = unpackTx(this._state, Tag.SignedTx).encodedTx;\n    switch (params.tag) {\n      case Tag.ChannelCreateTx:\n        return 1;\n      case Tag.ChannelOffChainTx:\n      case Tag.ChannelWithdrawTx:\n      case Tag.ChannelDepositTx:\n        return params.round;\n      default:\n        return null;\n    }\n  }\n\n  /**\n   * Get channel id\n   *\n   */\n  id(): Encoded.Channel {\n    if (this._channelId == null) throw new ChannelError('Channel is not initialized');\n    return this._channelId;\n  }\n\n  /**\n   * Get channel's fsm id\n   *\n   */\n  fsmId(): Encoded.Bytearray {\n    if (this._fsmId == null) throw new ChannelError('Channel is not initialized');\n    return this._fsmId;\n  }\n\n  protected async enqueueAction(\n    action: () => { handler: ChannelHandler; state?: Partial<ChannelState> },\n  ): Promise<any> {\n    return enqueueAction(\n      this,\n      (channel, state) => state?.handler === handlers.channelOpen,\n      action,\n    );\n  }\n\n  /**\n   * Leave channel\n   *\n   * It is possible to leave a channel and then later reestablish the channel\n   * off-chain state and continue operation. When a leave method is called,\n   * the channel fsm passes it on to the peer fsm, reports the current mutually\n   * signed state and then terminates.\n   *\n   * The channel can be reestablished by instantiating another Channel instance\n   * with two extra params: existingChannelId and offchainTx (returned from leave\n   * method as channelId and signedTx respectively).\n   *\n   * @example\n   * ```js\n   * channel.leave().then(({ channelId, signedTx }) => {\n   *   console.log(channelId)\n   *   console.log(signedTx)\n   * })\n   * ```\n   */\n  async leave(): Promise<{ channelId: Encoded.Bytearray; signedTx: Encoded.Transaction }> {\n    return this.enqueueAction(() => {\n      notify(this, 'channels.leave');\n      return { handler: handlers.awaitingLeave };\n    });\n  }\n\n  /**\n   * Trigger mutual close\n   *\n   * At any moment after the channel is opened, a closing procedure can be triggered.\n   * This can be done by either of the parties. The process is similar to the off-chain updates.\n   *\n   * @param sign - Function which verifies and signs mutual close transaction\n   * @example\n   * ```js\n   * channel.shutdown(\n   *   async (tx) => await account.signTransaction(tx)\n   * ).then(tx => console.log('on_chain_tx', tx))\n   * ```\n   */\n  async shutdown(sign: SignTx): Promise<Encoded.Transaction> {\n    return this.enqueueAction(() => {\n      notify(this, 'channels.shutdown');\n      return {\n        handler: handlers.awaitingShutdownTx,\n        state: { sign },\n      };\n    });\n  }\n\n  static async reconnect(options: ChannelOptions, txParams: any): Promise<Channel> {\n    const { sign } = options;\n\n    return Channel.initialize({\n      ...options,\n      reconnectTx: await sign(\n        'reconnect',\n        buildTx({ ...txParams, tag: Tag.ChannelClientReconnectTx }),\n      ),\n    });\n  }\n}\n","import BigNumber from 'bignumber.js';\nimport {\n  notify, call, SignTx, ChannelState, ChannelMessage, ChannelFsm, changeState,\n} from './internal';\nimport { Encoded } from '../utils/encoder';\nimport { pause } from '../utils/other';\nimport Channel from './Base';\nimport { ChannelConnectionError } from '../utils/errors';\nimport {\n  awaitingCompletion, channelOpen, handleUnexpectedMessage, signAndNotify,\n} from './handlers';\nimport { unpackTx } from '../tx/builder';\nimport { Tag } from '../tx/builder/constants';\nimport { TxUnpacked } from '../tx/builder/schema.generated';\n\nexport default class ChannelSpend extends Channel {\n  /**\n   * Trigger a transfer update\n   *\n   * The transfer update is moving coins from one channel account to another.\n   * The update is a change to be applied on top of the latest state.\n   *\n   * Sender and receiver are the channel parties. Both the initiator and responder\n   * can take those roles. Any public key outside the channel is considered invalid.\n   *\n   * @param from - Sender's public address\n   * @param to - Receiver's public address\n   * @param amount - Transaction amount\n   * @param sign - Function which verifies and signs offchain transaction\n   * @param metadata - Metadata\n\n   * @example\n   * ```js\n   * channel.update(\n   *   'ak_Y1NRjHuoc3CGMYMvCmdHSBpJsMDR6Ra2t5zjhRcbtMeXXLpLH',\n   *   'ak_V6an1xhec1xVaAhLuak7QoEbi6t7w5hEtYWp9bMKaJ19i6A9E',\n   *   10,\n   *   async (tx) => await account.signTransaction(tx)\n   * ).then(({ accepted, signedTx }) =>\n   *   if (accepted) {\n   *     console.log('Update has been accepted')\n   *   }\n   * )\n   * ```\n   */\n  async update(\n    from: Encoded.AccountAddress,\n    to: Encoded.AccountAddress,\n    amount: number | BigNumber,\n    sign: SignTx,\n    metadata: string[] = [],\n  ): Promise<{\n      accepted: boolean;\n      signedTx?: Encoded.Transaction;\n      errorCode?: number;\n      errorMessage?: string;\n    }> {\n    return this.enqueueAction(() => {\n      notify(this, 'channels.update.new', {\n        from, to, amount, meta: metadata,\n      });\n\n      const awaitingOffChainTx = async (\n        _: Channel,\n        message: ChannelMessage,\n        state: ChannelState,\n      ): Promise<ChannelFsm> => {\n        if (message.method === 'channels.sign.update') {\n          const isError = await signAndNotify(\n            this,\n            'channels.update',\n            message.params.data,\n            async (tx) => sign(tx, { updates: message.params.data.updates }),\n          );\n          if (isError) return { handler: awaitingOffChainTx, state };\n          return {\n            handler: (_2: Channel, message2: ChannelMessage): ChannelFsm => (\n              awaitingCompletion(this, message2, state, () => {\n                changeState(this, message2.params.data.state);\n                state.resolve({ accepted: true, signedTx: message2.params.data.state });\n                return { handler: channelOpen };\n              })\n            ),\n            state,\n          };\n        }\n        if (message.method === 'channels.error') {\n          state.reject(new ChannelConnectionError(message.data.message));\n          return { handler: channelOpen };\n        }\n        return awaitingCompletion(this, message, state);\n      };\n\n      return { handler: awaitingOffChainTx };\n    });\n  }\n\n  /**\n   * Get proof of inclusion\n   *\n   * If a certain address of an account or a contract is not found\n   * in the state tree - the response is an error.\n   *\n   * @param addresses - Addresses\n   * @param addresses.accounts - List of account addresses to include in poi\n   * @param addresses.contracts - List of contract addresses to include in poi\n   * @example\n   * ```js\n   * channel.poi({\n   *   accounts: [\n   *     'ak_Y1NRjHuoc3CGMYMvCmdHSBpJsMDR6Ra2t5zjhRcbtMeXXLpLH',\n   *     'ak_V6an1xhec1xVaAhLuak7QoEbi6t7w5hEtYWp9bMKaJ19i6A9E'\n   *   ],\n   *   contracts: ['ct_2dCUAWYZdrWfACz3a2faJeKVTVrfDYxCQHCqAt5zM15f3u2UfA']\n   * }).then(poi => console.log(poi))\n   * ```\n   */\n  async poi(\n    { accounts, contracts }: {\n      accounts: Encoded.AccountAddress[];\n      contracts?: Encoded.ContractAddress[];\n    },\n  ): Promise<TxUnpacked & { tag: Tag.TreesPoi }> {\n    return unpackTx(\n      (await call(this, 'channels.get.poi', { accounts, contracts })).poi,\n      Tag.TreesPoi,\n    );\n  }\n\n  /**\n   * Get balances\n   *\n   * The accounts param contains a list of addresses to fetch balances of.\n   * Those can be either account balances or a contract ones, encoded as an account addresses.\n   *\n   * If a certain account address had not being found in the state tree - it is simply\n   * skipped in the response.\n   *\n   * @param accounts - List of addresses to fetch balances from\n   * @example\n   * ```js\n   * channel.balances([\n   *   'ak_Y1NRjHuoc3CGMYMvCmdHSBpJsMDR6Ra2t5zjhRcbtMeXXLpLH',\n   *   'ak_V6an1xhec1xVaAhLuak7QoEbi6t7w5hEtYWp9bMKaJ19i6A9E'\n   *   'ct_2dCUAWYZdrWfACz3a2faJeKVTVrfDYxCQHCqAt5zM15f3u2UfA'\n   * ]).then(balances =>\n   *   console.log(balances['ak_Y1NRjHuoc3CGMYMvCmdHSBpJsMDR6Ra2t5zjhRcbtMeXXLpLH'])\n   * )\n   * ```\n   */\n  async balances(\n    accounts: Encoded.AccountAddress[],\n  ): Promise<{ [key: Encoded.AccountAddress]: string }> {\n    return Object.fromEntries(\n      (await call(this, 'channels.get.balances', { accounts }))\n        .map((item: {\n          account: Encoded.AccountAddress;\n          balance: string;\n        }) => [item.account, item.balance]),\n    );\n  }\n\n  private async awaitingActionTx(\n    action: 'deposit' | 'withdraw',\n    message: ChannelMessage,\n    state: ChannelState,\n  ): Promise<ChannelFsm> {\n    if (message.method !== `channels.sign.${action}_tx`) {\n      return handleUnexpectedMessage(this, message, state);\n    }\n\n    const awaitingActionCompletion = (_: Channel, message2: ChannelMessage): ChannelFsm => {\n      if (message2.method === 'channels.on_chain_tx') {\n        state.onOnChainTx?.(message2.params.data.tx);\n        return { handler: awaitingActionCompletion, state };\n      }\n      if (\n        message2.method === 'channels.info'\n        && [`own_${action}_locked`, `${action}_locked`].includes(message2.params.data.event)\n      ) {\n        const Action = action === 'deposit' ? 'Deposit' : 'Withdraw';\n        const isOwn: boolean = message2.params.data.event.startsWith('own_');\n        state[`on${isOwn ? 'Own' : ''}${Action}Locked`]?.();\n        return { handler: awaitingActionCompletion, state };\n      }\n      return awaitingCompletion(this, message2, state, () => {\n        changeState(this, message2.params.data.state);\n        state.resolve({ accepted: true, signedTx: message2.params.data.state });\n        return { handler: channelOpen };\n      });\n    };\n\n    const { sign } = state;\n    await signAndNotify(\n      this,\n      `channels.${action}_tx`,\n      message.params.data,\n      async (tx) => sign(tx, { updates: message.params.data.updates }),\n    );\n    return { handler: awaitingActionCompletion, state };\n  }\n\n  /**\n   * Withdraw coins from the channel\n   *\n   * After the channel had been opened any of the participants can initiate a withdrawal.\n   * The process closely resembles the update. The most notable difference is that the\n   * transaction has been co-signed: it is channel_withdraw_tx and after the procedure\n   * is finished - it is being posted on-chain.\n   *\n   * Any of the participants can initiate a withdrawal. The only requirements are:\n   *\n   *   - Channel is already opened\n   *   - No off-chain update/deposit/withdrawal is currently being performed\n   *   - Channel is not being closed or in a solo closing state\n   *   - The withdrawal amount must be equal to or greater than zero, and cannot exceed\n   *     the available balance on the channel (minus the channel_reserve)\n   *\n   * After the other party had signed the withdraw transaction, the transaction is posted\n   * on-chain and onOnChainTx callback is called with on-chain transaction as first argument.\n   * After computing transaction hash it can be tracked on the chain: entering the mempool,\n   * block inclusion and a number of confirmations.\n   *\n   * After the minimum_depth block confirmations onOwnWithdrawLocked callback is called\n   * (without any arguments).\n   *\n   * When the other party had confirmed that the block height needed is reached\n   * onWithdrawLocked callback is called (without any arguments).\n   *\n   * @param amount - Amount of coins to withdraw\n   * @param sign - Function which verifies and signs withdraw transaction\n   * @param callbacks - Callbacks\n   * @param callbacks.onOnChainTx - Called when withdraw transaction has been posted\n   * on chain\n   * @param callbacks.onOwnWithdrawLocked\n   * @param callbacks.onWithdrawLocked\n   * @example\n   * ```js\n   * channel.withdraw(\n   *   100,\n   *   async (tx) => await account.signTransaction(tx),\n   *   { onOnChainTx: (tx) => console.log('on_chain_tx', tx) }\n   * ).then(({ accepted, signedTx }) => {\n   *   if (accepted) {\n   *     console.log('Withdrawal has been accepted')\n   *   } else {\n   *     console.log('Withdrawal has been rejected')\n   *   }\n   * })\n   * ```\n   */\n  async withdraw(\n    amount: number | BigNumber,\n    sign: SignTx,\n    { onOnChainTx, onOwnWithdrawLocked, onWithdrawLocked }:\n    Pick<ChannelState, 'onOnChainTx' | 'onOwnWithdrawLocked' | 'onWithdrawLocked'> = {},\n  ): Promise<{ accepted: boolean; signedTx: Encoded.Transaction }> {\n    return this.enqueueAction(() => {\n      notify(this, 'channels.withdraw', { amount });\n      return {\n        handler: async (\n          _: Channel,\n          message: ChannelMessage,\n          state: ChannelState,\n        ): Promise<ChannelFsm> => (\n          this.awaitingActionTx('withdraw', message, state)\n        ),\n        state: {\n          sign,\n          onOnChainTx,\n          onOwnWithdrawLocked,\n          onWithdrawLocked,\n        },\n      };\n    });\n  }\n\n  /**\n   * Deposit coins into the channel\n   *\n   * After the channel had been opened any of the participants can initiate a deposit.\n   * The process closely resembles the update. The most notable difference is that the\n   * transaction has been co-signed: it is channel_deposit_tx and after the procedure\n   * is finished - it is being posted on-chain.\n   *\n   * Any of the participants can initiate a deposit. The only requirements are:\n   *\n   *   - Channel is already opened\n   *   - No off-chain update/deposit/withdrawal is currently being performed\n   *   - Channel is not being closed or in a solo closing state\n   *   - The deposit amount must be equal to or greater than zero, and cannot exceed\n   *     the available balance on the channel (minus the channel_reserve)\n   *\n   * After the other party had signed the deposit transaction, the transaction is posted\n   * on-chain and onOnChainTx callback is called with on-chain transaction as first argument.\n   * After computing transaction hash it can be tracked on the chain: entering the mempool,\n   * block inclusion and a number of confirmations.\n   *\n   * After the minimum_depth block confirmations onOwnDepositLocked callback is called\n   * (without any arguments).\n   *\n   * When the other party had confirmed that the block height needed is reached\n   * onDepositLocked callback is called (without any arguments).\n   *\n   * @param amount - Amount of coins to deposit\n   * @param sign - Function which verifies and signs deposit transaction\n   * @param callbacks - Callbacks\n   * @param callbacks.onOnChainTx - Called when deposit transaction has been posted\n   * on chain\n   * @param callbacks.onOwnDepositLocked\n   * @param callbacks.onDepositLocked\n   * @example\n   * ```js\n   * channel.deposit(\n   *   100,\n   *   async (tx) => await account.signTransaction(tx),\n   *   { onOnChainTx: (tx) => console.log('on_chain_tx', tx) }\n   * ).then(({ accepted, state }) => {\n   *   if (accepted) {\n   *     console.log('Deposit has been accepted')\n   *     console.log('The new state is:', state)\n   *   } else {\n   *     console.log('Deposit has been rejected')\n   *   }\n   * })\n   * ```\n   */\n  async deposit(\n    amount: number | BigNumber,\n    sign: SignTx,\n    { onOnChainTx, onOwnDepositLocked, onDepositLocked }:\n    Pick<ChannelState, 'onOnChainTx' | 'onOwnDepositLocked' | 'onDepositLocked'> = {},\n  ): Promise<{ accepted: boolean; state: ChannelState }> {\n    return this.enqueueAction(() => {\n      notify(this, 'channels.deposit', { amount });\n      return {\n        handler: async (\n          _: Channel,\n          message: ChannelMessage,\n          state: ChannelState,\n        ): Promise<ChannelFsm> => (\n          this.awaitingActionTx('deposit', message, state)\n        ),\n        state: {\n          sign,\n          onOnChainTx,\n          onOwnDepositLocked,\n          onDepositLocked,\n        },\n      };\n    });\n  }\n\n  /**\n   * Send generic message\n   *\n   * If message is an object it will be serialized into JSON string\n   * before sending.\n   *\n   * If there is ongoing update that has not yet been finished the message\n   * will be sent after that update is finalized.\n   *\n   * @param message - Message\n   * @param recipient - Address of the recipient\n   * @example\n   * ```js\n   * channel.sendMessage(\n   *   'hello world',\n   *   'ak_Y1NRjHuoc3CGMYMvCmdHSBpJsMDR6Ra2t5zjhRcbtMeXXLpLH'\n   * )\n   * ```\n   */\n  async sendMessage(\n    message: string | object,\n    recipient: Encoded.AccountAddress,\n  ): Promise<void> {\n    const info = typeof message === 'object' ? JSON.stringify(message) : message;\n    if (this.status() === 'connecting') {\n      await new Promise<void>((resolve) => {\n        const onStatusChanged = (status: string): void => {\n          if (status === 'connecting') return;\n          resolve();\n          this.off('statusChanged', onStatusChanged);\n        };\n        this.on('statusChanged', onStatusChanged);\n      });\n      // For some reason we can't immediately send a message when connection is\n      // established. Thus we wait 500ms which seems to work.\n      await pause(500);\n    }\n    notify(this, 'channels.message', { info, to: recipient });\n  }\n}\n","import BigNumber from 'bignumber.js';\nimport { snakeToPascal } from '../utils/string';\nimport {\n  MIN_GAS_PRICE, Tag, AbiVersion, VmVersion,\n} from '../tx/builder/constants';\nimport {\n  signAndNotify,\n  awaitingCompletion,\n  channelClosed,\n  channelOpen,\n  handleUnexpectedMessage,\n} from './handlers';\nimport {\n  notify, call, SignTx, ChannelState, ChannelOptions, ChannelMessage, ChannelFsm, changeState, emit,\n} from './internal';\nimport { Encoded } from '../utils/encoder';\nimport { ContractCallReturnType } from '../apis/node';\nimport { ContractCallObject } from '../contract/Contract';\nimport Channel from './Base';\nimport ChannelSpend from './Spend';\nimport { ChannelError, UnexpectedChannelMessageError } from '../utils/errors';\nimport { unpackTx } from '../tx/builder';\nimport { encodeContractAddress } from '../utils/crypto';\n\nfunction snakeToPascalObjKeys<Type>(obj: object): Type {\n  return Object.entries(obj).reduce((result, [key, val]) => ({\n    ...result,\n    [snakeToPascal(key)]: val,\n  }), {}) as Type;\n}\n\ninterface CallContractOptions {\n  amount?: number | BigNumber;\n  callData?: Encoded.ContractBytearray;\n  abiVersion?: AbiVersion;\n  contract?: Encoded.ContractAddress;\n  returnValue?: any;\n  gasUsed?: number | BigNumber;\n  gasPrice?: number | BigNumber;\n  height?: number;\n  callerNonce?: number;\n  log?: any;\n  returnType?: ContractCallReturnType;\n}\n\ninterface Contract {\n  abiVersion: AbiVersion;\n  active: boolean;\n  deposit: number | BigNumber;\n  id: string;\n  ownerId: string;\n  referrerIds: string[];\n  vmVersion: VmVersion;\n}\n\nexport default class ChannelContract extends ChannelSpend {\n  static override async initialize(options: ChannelOptions): Promise<ChannelContract> {\n    return Channel._initialize(new ChannelContract(), options);\n  }\n\n  /**\n   * Trigger create contract update\n   *\n   * The create contract update is creating a contract inside the channel's internal state tree.\n   * The update is a change to be applied on top of the latest state.\n   *\n   * That would create a contract with the poster being the owner of it. Poster commits initially\n   * a deposit amount of coins to the new contract.\n   *\n   * @param options - Options\n   * @param options.code - Api encoded compiled AEVM byte code\n   * @param options.callData - Api encoded compiled AEVM call data for the code\n   * @param options.deposit - Initial amount the owner of the contract commits to it\n   * @param options.vmVersion - Version of the Virtual Machine\n   * @param options.abiVersion - Version of the Application Binary Interface\n   * @param sign - Function which verifies and signs create contract transaction\n   * @example\n   * ```js\n   * channel.createContract({\n   *   code: 'cb_HKtpipK4aCgYb17wZ...',\n   *   callData: 'cb_1111111111111111...',\n   *   deposit: 10,\n   *   vmVersion: 3,\n   *   abiVersion: 1\n   * }).then(({ accepted, signedTx, address }) => {\n   *   if (accepted) {\n   *     console.log('New contract has been created')\n   *     console.log('Contract address:', address)\n   *   } else {\n   *     console.log('New contract has been rejected')\n   *   }\n   * })\n   * ```\n   */\n  async createContract(\n    {\n      code, callData, deposit, vmVersion, abiVersion,\n    }: {\n      code: Encoded.ContractBytearray;\n      callData: Encoded.ContractBytearray;\n      deposit: number | BigNumber;\n      vmVersion: VmVersion;\n      abiVersion: AbiVersion;\n    },\n    sign: SignTx,\n  ): Promise<{\n      accepted: boolean; signedTx: Encoded.Transaction; address: Encoded.ContractAddress;\n    }> {\n    return this.enqueueAction(() => {\n      notify(this, 'channels.update.new_contract', {\n        code,\n        call_data: callData,\n        deposit,\n        vm_version: vmVersion,\n        abi_version: abiVersion,\n      });\n      return {\n        handler: async (\n          _: Channel,\n          message: ChannelMessage,\n          state: ChannelState,\n        ): Promise<ChannelFsm> => {\n          if (message.method !== 'channels.sign.update') {\n            return handleUnexpectedMessage(this, message, state);\n          }\n          await signAndNotify(\n            this,\n            'channels.update',\n            message.params.data,\n            async (tx) => state.sign(tx),\n          );\n          return {\n            handler: (\n              _2: Channel,\n              message2: ChannelMessage,\n              state2: ChannelState,\n            ): ChannelFsm => (\n              awaitingCompletion(this, message2, state2, () => {\n                const params = unpackTx(message2.params.data.state, Tag.SignedTx).encodedTx;\n                if (params.tag !== Tag.ChannelOffChainTx) {\n                  throw new ChannelError(`Tag should be ${Tag[Tag.ChannelOffChainTx]}, got ${Tag[params.tag]} instead`);\n                }\n                const addressKey = this._options.role === 'initiator'\n                  ? 'initiatorId' : 'responderId';\n                const owner = this._options[addressKey];\n                changeState(this, message2.params.data.state);\n                const address = encodeContractAddress(owner, params.round);\n                emit(this, 'newContract', address);\n                state2.resolve({ accepted: true, address, signedTx: message2.params.data.state });\n                return { handler: channelOpen };\n              })\n            ),\n            state,\n          };\n        },\n        state: { sign },\n      };\n    });\n  }\n\n  /**\n   * Trigger call a contract update\n   *\n   * The call contract update is calling a preexisting contract inside the channel's\n   * internal state tree. The update is a change to be applied on top of the latest state.\n   *\n   * That would call a contract with the poster being the caller of it. Poster commits\n   * an amount of coins to the contract.\n   *\n   * The call would also create a call object inside the channel state tree. It contains\n   * the result of the contract call.\n   *\n   * It is worth mentioning that the gas is not consumed, because this is an off-chain\n   * contract call. It would be consumed if it were an on-chain one. This could happen\n   * if a call with a similar computation amount is to be forced on-chain.\n   *\n   * @param options - Options\n   * @param options.amount - Amount the caller of the contract commits to it\n   * @param options.callData - ABI encoded compiled AEVM call data for the code\n   * @param options.contract - Address of the contract to call\n   * @param options.abiVersion - Version of the ABI\n   * @param sign - Function which verifies and signs contract call transaction\n   * @example\n   * ```js\n   * channel.callContract({\n   *   contract: 'ct_9sRA9AVE4BYTAkh5RNfJYmwQe1NZ4MErasQLXZkFWG43TPBqa',\n   *   callData: 'cb_1111111111111111...',\n   *   amount: 0,\n   *   abiVersion: 1\n   * }).then(({ accepted, signedTx }) => {\n   *   if (accepted) {\n   *     console.log('Contract called succesfully')\n   *   } else {\n   *     console.log('Contract call has been rejected')\n   *   }\n   * })\n   * ```\n   */\n  async callContract(\n    {\n      amount, callData, contract, abiVersion,\n    }: CallContractOptions,\n    sign: SignTx,\n  ): Promise<{ accepted: boolean; signedTx: Encoded.Transaction }> {\n    return this.enqueueAction(() => {\n      notify(this, 'channels.update.call_contract', {\n        amount,\n        call_data: callData,\n        contract_id: contract,\n        abi_version: abiVersion,\n      });\n      return {\n        handler: async (\n          _: Channel,\n          message: ChannelMessage,\n          state: ChannelState,\n        ): Promise<ChannelFsm> => {\n          if (message.method !== 'channels.sign.update') {\n            return handleUnexpectedMessage(this, message, state);\n          }\n          await signAndNotify(\n            this,\n            'channels.update',\n            message.params.data,\n            async (tx) => state.sign(tx, { updates: message.params.data.updates }),\n          );\n          return {\n            handler: (\n              _2: Channel,\n              message2: ChannelMessage,\n              state2: ChannelState,\n            ): ChannelFsm => (\n              awaitingCompletion(this, message2, state2, () => {\n                changeState(this, message2.params.data.state);\n                state2.resolve({ accepted: true, signedTx: message2.params.data.state });\n                return { handler: channelOpen };\n              })\n            ),\n            state,\n          };\n        },\n        state: { sign },\n      };\n    });\n  }\n\n  /**\n   * Trigger a force progress contract call\n   * This call is going on-chain\n   * @param options - Options\n   * @param options.amount - Amount the caller of the contract commits to it\n   * @param options.callData - ABI encoded compiled AEVM call data for the code\n   * @param options.contract - Address of the contract to call\n   * @param options.abiVersion - Version of the ABI\n   * @param options.gasPrice=1000000000]\n   * @param options.gasLimit=1000000]\n   * @param sign - Function which verifies and signs contract force progress transaction\n   * @param callbacks - Callbacks\n   * @example\n   * ```js\n   * channel.forceProgress({\n   *   contract: 'ct_9sRA9AVE4BYTAkh5RNfJYmwQe1NZ4MErasQLXZkFWG43TPBqa',\n   *   callData: 'cb_1111111111111111...',\n   *   amount: 0,\n   *   abiVersion: 1,\n   *   gasPrice: 1000005554\n   * }).then(({ accepted, signedTx }) => {\n   *   if (accepted) {\n   *     console.log('Contract force progress call successful')\n   *   } else {\n   *     console.log('Contract force progress call has been rejected')\n   *   }\n   * })\n   * ```\n   */\n  async forceProgress(\n    {\n      amount, callData, contract, abiVersion, gasLimit = 1000000, gasPrice = MIN_GAS_PRICE,\n    }: {\n      amount: number;\n      callData: Encoded.ContractBytearray;\n      contract: Encoded.ContractAddress;\n      abiVersion: AbiVersion;\n      gasLimit?: number;\n      gasPrice?: number;\n    },\n    sign: SignTx,\n    { onOnChainTx }: Pick<ChannelState, 'onOnChainTx'> = {},\n  ): Promise<{\n      accepted: boolean;\n      signedTx: Encoded.Transaction;\n      tx: Encoded.Transaction | Uint8Array;\n    }> {\n    return this.enqueueAction(() => {\n      notify(this, 'channels.force_progress', {\n        amount,\n        call_data: callData,\n        contract_id: contract,\n        abi_version: abiVersion,\n        gas_price: gasPrice,\n        gas: gasLimit,\n      });\n      return {\n        handler: async (\n          _: Channel,\n          message: ChannelMessage,\n          state: ChannelState,\n        ): Promise<ChannelFsm> => {\n          if (message.method !== 'channels.sign.force_progress_tx') {\n            return handleUnexpectedMessage(this, message, state);\n          }\n          await signAndNotify(\n            this,\n            'channels.force_progress_sign',\n            message.params.data,\n            async (tx) => state.sign(tx, { updates: message.params.data.updates }),\n          );\n          return {\n            handler: (\n              _2: Channel,\n              message2: ChannelMessage,\n              state2: ChannelState,\n            ): ChannelFsm => {\n              if (message2.method === 'channels.on_chain_tx') {\n                state2.onOnChainTx?.(message2.params.data.tx);\n                emit(this, 'onChainTx', message2.params.data.tx, {\n                  info: message2.params.data.info,\n                  type: message2.params.data.type,\n                });\n                state2.resolve({ accepted: true, tx: message2.params.data.tx });\n                // TODO: shouldn't be unexpected message in this case\n              }\n              return handleUnexpectedMessage(this, message2, state2);\n            },\n            state,\n          };\n        },\n        state: { sign, onOnChainTx },\n      };\n    });\n  }\n\n  /**\n   * Call contract using dry-run\n   *\n   * In order to get the result of a potential contract call, one might need to\n   * dry-run a contract call. It takes the exact same arguments as a call would\n   * and returns the call object.\n   *\n   * The call is executed in the channel's state, but it does not impact the state\n   * whatsoever. It uses as an environment the latest channel's state and the current\n   * top of the blockchain as seen by the node.\n   *\n   * @param options - Options\n   * @param options.amount - Amount the caller of the contract commits to it\n   * @param options.callData - ABI encoded compiled AEVM call data for the code\n   * @param options.contract - Address of the contract to call\n   * @param options.abiVersion - Version of the ABI\n   * @example\n   * ```js\n   * channel.callContractStatic({\n   *   contract: 'ct_9sRA9AVE4BYTAkh5RNfJYmwQe1NZ4MErasQLXZkFWG43TPBqa',\n   *   callData: 'cb_1111111111111111...',\n   *   amount: 0,\n   *   abiVersion: 1\n   * }).then(({ returnValue, gasUsed }) => {\n   *   console.log('Returned value:', returnValue)\n   *   console.log('Gas used:', gasUsed)\n   * })\n   * ```\n   */\n  async callContractStatic(\n    {\n      amount, callData, contract, abiVersion,\n    }: {\n      amount: number;\n      callData: Encoded.ContractBytearray;\n      contract: Encoded.ContractAddress;\n      abiVersion: AbiVersion;\n    },\n  ): Promise<CallContractOptions> {\n    return snakeToPascalObjKeys(await call(this, 'channels.dry_run.call_contract', {\n      amount,\n      call_data: callData,\n      contract_id: contract,\n      abi_version: abiVersion,\n    }));\n  }\n\n  /**\n   * Get contract call result\n   *\n   * The combination of a caller, contract and a round of execution determines the\n   * contract call. Providing an incorrect set of those results in an error response.\n   *\n   * @param options - Options\n   * @param options.caller - Address of contract caller\n   * @param options.contract - Address of the contract\n   * @param options.round - Round when contract was called\n   * @example\n   * ```js\n   * channel.getContractCall({\n   *   caller: 'ak_Y1NRjHuoc3CGMYMvCmdHSBpJsMDR6Ra2t5zjhRcbtMeXXLpLH',\n   *   contract: 'ct_9sRA9AVE4BYTAkh5RNfJYmwQe1NZ4MErasQLXZkFWG43TPBqa',\n   *   round: 3\n   * }).then(({ returnType, returnValue }) => {\n   *   if (returnType === 'ok') console.log(returnValue)\n   * })\n   * ```\n   */\n  async getContractCall(\n    { caller, contract, round }: {\n      caller: Encoded.AccountAddress;\n      contract: Encoded.ContractAddress;\n      round: number;\n    },\n  ): Promise<ContractCallObject> {\n    return snakeToPascalObjKeys(\n      await call(this, 'channels.get.contract_call', {\n        caller_id: caller,\n        contract_id: contract,\n        round,\n      }),\n    );\n  }\n\n  /**\n   * Get the latest contract state\n   *\n   * @param contract - Address of the contract\n   * @example\n   * ```js\n   * channel.getContractState(\n   *   'ct_9sRA9AVE4BYTAkh5RNfJYmwQe1NZ4MErasQLXZkFWG43TPBqa'\n   * ).then(({ contract }) => {\n   *   console.log('deposit:', contract.deposit)\n   * })\n   * ```\n   */\n  async getContractState(\n    contract: Encoded.ContractAddress,\n  ): Promise<{ contract: Contract; contractState: object }> {\n    const result = await call(this, 'channels.get.contract', { pubkey: contract });\n    return snakeToPascalObjKeys({\n      ...result,\n      contract: snakeToPascalObjKeys(result.contract),\n    });\n  }\n\n  /**\n   * Clean up all locally stored contract calls\n   *\n   * Contract calls are kept locally in order for the participant to be able to look them up.\n   * They consume memory and in order for the participant to free it - one can prune all messages.\n   * This cleans up all locally stored contract calls and those will no longer be available for\n   * fetching and inspection.\n   */\n  async cleanContractCalls(): Promise<void> {\n    return this.enqueueAction(() => {\n      notify(this, 'channels.clean_contract_calls');\n      return {\n        handler(_: Channel, message: ChannelMessage, state: ChannelState): ChannelFsm {\n          if (message.method === 'channels.calls_pruned.reply') {\n            state.resolve();\n            return { handler: channelOpen };\n          }\n          state.reject(new UnexpectedChannelMessageError('Unexpected message received'));\n          return { handler: channelClosed };\n        },\n      };\n    });\n  }\n}\n","/* eslint-disable max-classes-per-file */\nimport WebSocket from 'isomorphic-ws';\nimport { BaseError, UnexpectedTsError, InternalError } from './utils/errors';\nimport { Encoded } from './utils/encoder';\n\ninterface Message {\n  payload: Object;\n  source: Source.Middleware | Source.Node;\n  subscription: 'KeyBlocks' | 'MicroBlocks' | 'Transactions' | 'Object';\n  target?: string;\n}\n\nenum Source {\n  Middleware = 'mdw',\n  Node = 'node',\n  All = 'all',\n}\n\nexport class MiddlewareSubscriberError extends BaseError {\n  constructor(message: string) {\n    super(message);\n    this.name = 'MiddlewareSubscriberError';\n  }\n}\n\nexport class MiddlewareSubscriberDisconnected extends MiddlewareSubscriberError {\n  constructor(readonly closeEvent: WebSocket.CloseEvent) {\n    super('Connection closed');\n    this.name = 'MiddlewareSubscriberDisconnected';\n  }\n}\n\nexport default class MiddlewareSubscriber {\n  #subscriptions: Array<\n  readonly [target: string, s: Source, cb: (p?: Object, e?: Error) => void]\n  > = [];\n\n  #requestQueue: Array<[isSubscribe: boolean, target: string]> = [];\n\n  #webSocket?: WebSocket;\n\n  get webSocket(): WebSocket | undefined {\n    return this.#webSocket;\n  }\n\n  get #targets(): Set<string> {\n    return new Set(this.#subscriptions.map(([target]) => target));\n  }\n\n  #sendMessage(message: any): void {\n    if (this.#webSocket == null) throw new UnexpectedTsError();\n    this.#webSocket.send(JSON.stringify(message));\n  }\n\n  #sendSubscribe(isSubscribe: boolean, target: string): void {\n    if (this.#webSocket == null) return;\n    const payload = ['KeyBlocks', 'MicroBlocks', 'Transactions'].includes(target)\n      ? target : 'Object';\n    this.#sendMessage({\n      op: isSubscribe ? 'Subscribe' : 'Unsubscribe',\n      payload,\n      ...payload === 'Object' && { target },\n    });\n    this.#requestQueue.push([isSubscribe, target]);\n  }\n\n  #emit(condition: (target: string, source: Source) => boolean, p?: Object, e?: Error): void {\n    this.#subscriptions\n      .filter(([target, source]) => condition(target, source))\n      .forEach(([, , cb]) => cb(p, e));\n  }\n\n  constructor(readonly url: string) {\n  }\n\n  #disconnect(onlyReset = false): void {\n    if (this.#webSocket == null) return;\n    if (!onlyReset) this.#webSocket.close();\n    Object.assign(this.#webSocket, {\n      onopen: undefined,\n      onerror: undefined,\n      onmessage: undefined,\n    });\n    this.#webSocket = undefined;\n  }\n\n  async reconnect(): Promise<void> {\n    this.#disconnect();\n    this.#webSocket = await new Promise((resolve) => {\n      const webSocket = new WebSocket(this.url);\n      Object.assign(webSocket, {\n        onopen: () => resolve(webSocket),\n        onerror: (errorEvent: WebSocket.ErrorEvent) => {\n          this.#emit(() => true, undefined, errorEvent.error);\n        },\n        onmessage: (event: WebSocket.MessageEvent) => {\n          if (typeof event.data !== 'string') {\n            throw new InternalError(`Unknown incoming message type: ${typeof event.data}`);\n          }\n          this.#messageHandler(JSON.parse(event.data));\n        },\n        onclose: (event: WebSocket.CloseEvent) => {\n          this.#emit(() => true, undefined, new MiddlewareSubscriberDisconnected(event));\n          this.#disconnect(true);\n        },\n      });\n    });\n    await Promise.all([...this.#targets].map((target) => this.#sendSubscribe(true, target)));\n  }\n\n  #messageHandler(message: string | string[] | Message): void {\n    if (typeof message === 'string' || Array.isArray(message)) {\n      const request = this.#requestQueue.shift();\n      if (request == null) throw new InternalError('Request queue is empty');\n      const [isSubscribe, target] = request;\n      let error;\n      if (typeof message === 'string') error = new MiddlewareSubscriberError(message);\n      if (message.includes(target) !== isSubscribe) {\n        error = new InternalError(`Expected ${target} to be${isSubscribe ? '' : ' not'} included into ${message}`);\n      }\n      if (error != null) this.#emit((t) => target === t, undefined, error);\n      return;\n    }\n    this.#emit(\n      (target, source) => (target === message.subscription || target === message.target)\n        && (source === message.source || source === Source.All),\n      message.payload,\n    );\n  }\n\n  #subscribe(target: string, source: Source, cb: (p?: Object, e?: Error) => void): () => void {\n    const subscription = [target, source, cb] as const;\n    if (this.#targets.size === 0) this.reconnect();\n    if (!this.#targets.has(target)) this.#sendSubscribe(true, target);\n    this.#subscriptions.push(subscription);\n    return () => {\n      this.#subscriptions = this.#subscriptions.filter((item) => item !== subscription);\n      if (!this.#targets.has(target)) this.#sendSubscribe(false, target);\n      if (this.#targets.size === 0) this.#disconnect();\n    };\n  }\n\n  // TODO: replace p?: any with a proper type definition\n\n  subscribeKeyBlocks(cb: (p?: any, e?: Error) => void): () => void {\n    return this.#subscribe('KeyBlocks', Source.Middleware, cb);\n  }\n\n  subscribeKeyBlocksNode(cb: (p?: any, e?: Error) => void): () => void {\n    return this.#subscribe('KeyBlocks', Source.Node, cb);\n  }\n\n  subscribeKeyBlocksAll(cb: (p?: any, e?: Error) => void): () => void {\n    return this.#subscribe('KeyBlocks', Source.All, cb);\n  }\n\n  subscribeMicroBlocks(cb: (p?: any, e?: Error) => void): () => void {\n    return this.#subscribe('MicroBlocks', Source.Middleware, cb);\n  }\n\n  subscribeMicroBlocksNode(cb: (p?: any, e?: Error) => void): () => void {\n    return this.#subscribe('MicroBlocks', Source.Node, cb);\n  }\n\n  subscribeMicroBlocksAll(cb: (p?: any, e?: Error) => void): () => void {\n    return this.#subscribe('MicroBlocks', Source.All, cb);\n  }\n\n  subscribeTransactions(cb: (p?: any, e?: Error) => void): () => void {\n    return this.#subscribe('Transactions', Source.Middleware, cb);\n  }\n\n  subscribeTransactionsNode(cb: (p?: any, e?: Error) => void): () => void {\n    return this.#subscribe('Transactions', Source.Node, cb);\n  }\n\n  subscribeTransactionsAll(cb: (p?: any, e?: Error) => void): () => void {\n    return this.#subscribe('Transactions', Source.All, cb);\n  }\n\n  subscribeObject(\n    target: Encoded.KeyBlockHash | Encoded.Channel | Encoded.ContractAddress\n    | Encoded.OracleAddress | Encoded.OracleQueryId | Encoded.AccountAddress\n    | Encoded.Name | `${string}.chain`,\n    cb: (p?: any, e?: Error) => void,\n  ): () => void {\n    return this.#subscribe(target, Source.Middleware, cb);\n  }\n\n  subscribeObjectNode(\n    target: Encoded.KeyBlockHash | Encoded.Channel | Encoded.ContractAddress\n    | Encoded.OracleAddress | Encoded.OracleQueryId | Encoded.AccountAddress\n    | Encoded.Name | `${string}.chain`,\n    cb: (p?: any, e?: Error) => void,\n  ): () => void {\n    return this.#subscribe(target, Source.Node, cb);\n  }\n\n  subscribeObjectAll(\n    target: Encoded.KeyBlockHash | Encoded.Channel | Encoded.ContractAddress\n    | Encoded.OracleAddress | Encoded.OracleQueryId | Encoded.AccountAddress\n    | Encoded.Name | `${string}.chain`,\n    cb: (p?: any, e?: Error) => void,\n  ): () => void {\n    return this.#subscribe(target, Source.All, cb);\n  }\n}\n","import {\n  OperationParameter,\n  OperationURLParameter,\n  OperationQueryParameter\n} from \"@azure/core-client\";\n\nexport const accept: OperationParameter = {\n  parameterPath: \"accept\",\n  mapper: {\n    defaultValue: \"application/json\",\n    isConstant: true,\n    serializedName: \"Accept\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const $host: OperationURLParameter = {\n  parameterPath: \"$host\",\n  mapper: {\n    serializedName: \"$host\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  },\n  skipEncoding: true\n};\n\nexport const id: OperationURLParameter = {\n  parameterPath: \"id\",\n  mapper: {\n    serializedName: \"id\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const ownedOnly: OperationQueryParameter = {\n  parameterPath: [\"options\", \"ownedOnly\"],\n  mapper: {\n    serializedName: \"owned_only\",\n    type: {\n      name: \"Boolean\"\n    }\n  }\n};\n\nexport const type: OperationQueryParameter = {\n  parameterPath: [\"options\", \"type\"],\n  mapper: {\n    serializedName: \"type\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const limit: OperationQueryParameter = {\n  parameterPath: \"limit\",\n  mapper: {\n    defaultValue: 10,\n    constraints: {\n      InclusiveMaximum: 100,\n      InclusiveMinimum: 1\n    },\n    serializedName: \"limit\",\n    type: {\n      name: \"Number\"\n    }\n  }\n};\n\nexport const scope: OperationQueryParameter = {\n  parameterPath: \"scope\",\n  mapper: {\n    constraints: {\n      Pattern: new RegExp(\"(txi|gen):\\\\d+(-\\\\d+)?\")\n    },\n    serializedName: \"scope\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const direction: OperationQueryParameter = {\n  parameterPath: \"direction\",\n  mapper: {\n    serializedName: \"direction\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const by: OperationQueryParameter = {\n  parameterPath: [\"options\", \"by\"],\n  mapper: {\n    serializedName: \"by\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const prefix: OperationQueryParameter = {\n  parameterPath: [\"options\", \"prefix\"],\n  mapper: {\n    serializedName: \"prefix\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const accountId: OperationURLParameter = {\n  parameterPath: \"accountId\",\n  mapper: {\n    serializedName: \"accountId\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const contractId: OperationURLParameter = {\n  parameterPath: \"contractId\",\n  mapper: {\n    serializedName: \"contractId\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const tokenId: OperationURLParameter = {\n  parameterPath: \"tokenId\",\n  mapper: {\n    serializedName: \"tokenId\",\n    required: true,\n    type: {\n      name: \"Number\"\n    }\n  }\n};\n\nexport const templateId: OperationURLParameter = {\n  parameterPath: \"templateId\",\n  mapper: {\n    serializedName: \"templateId\",\n    required: true,\n    type: {\n      name: \"Number\"\n    }\n  }\n};\n\nexport const accountId1: OperationURLParameter = {\n  parameterPath: \"accountId\",\n  mapper: {\n    serializedName: \"account_id\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const sender: OperationURLParameter = {\n  parameterPath: \"sender\",\n  mapper: {\n    serializedName: \"sender\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const recipient: OperationURLParameter = {\n  parameterPath: \"recipient\",\n  mapper: {\n    serializedName: \"recipient\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const hash: OperationQueryParameter = {\n  parameterPath: \"hash\",\n  mapper: {\n    serializedName: \"hash\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const hashOrKbi: OperationURLParameter = {\n  parameterPath: \"hashOrKbi\",\n  mapper: {\n    serializedName: \"hash_or_kbi\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const kbi: OperationURLParameter = {\n  parameterPath: \"kbi\",\n  mapper: {\n    serializedName: \"kbi\",\n    required: true,\n    type: {\n      name: \"Number\"\n    }\n  }\n};\n\nexport const mbi: OperationURLParameter = {\n  parameterPath: \"mbi\",\n  mapper: {\n    serializedName: \"mbi\",\n    required: true,\n    type: {\n      name: \"Number\"\n    }\n  }\n};\n\nexport const state: OperationQueryParameter = {\n  parameterPath: [\"options\", \"state\"],\n  mapper: {\n    serializedName: \"state\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const contractId1: OperationQueryParameter = {\n  parameterPath: [\"options\", \"contractId\"],\n  mapper: {\n    serializedName: \"contract_id\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const event: OperationQueryParameter = {\n  parameterPath: [\"options\", \"event\"],\n  mapper: {\n    serializedName: \"event\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const functionPrefix: OperationQueryParameter = {\n  parameterPath: [\"options\", \"functionPrefix\"],\n  mapper: {\n    serializedName: \"function_prefix\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const data: OperationQueryParameter = {\n  parameterPath: [\"options\", \"data\"],\n  mapper: {\n    serializedName: \"data\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const aexnArgs: OperationQueryParameter = {\n  parameterPath: [\"options\", \"aexnArgs\"],\n  mapper: {\n    serializedName: \"aexn-args\",\n    type: {\n      name: \"Boolean\"\n    }\n  }\n};\n\nexport const hash1: OperationURLParameter = {\n  parameterPath: \"hash\",\n  mapper: {\n    serializedName: \"hash\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const ownedBy: OperationQueryParameter = {\n  parameterPath: [\"options\", \"ownedBy\"],\n  mapper: {\n    serializedName: \"owned_by\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const state1: OperationQueryParameter = {\n  parameterPath: [\"options\", \"state\"],\n  mapper: {\n    serializedName: \"state\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const type1: OperationQueryParameter = {\n  parameterPath: [\"options\", \"type\"],\n  mapper: {\n    serializedName: \"type\",\n    type: {\n      name: \"Sequence\",\n      element: {\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  },\n  collectionFormat: \"Multi\"\n};\n\nexport const typeGroup: OperationQueryParameter = {\n  parameterPath: [\"options\", \"typeGroup\"],\n  mapper: {\n    serializedName: \"type_group\",\n    type: {\n      name: \"Sequence\",\n      element: {\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  },\n  collectionFormat: \"Multi\"\n};\n\nexport const account: OperationQueryParameter = {\n  parameterPath: [\"options\", \"account\"],\n  mapper: {\n    serializedName: \"account\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const contract: OperationQueryParameter = {\n  parameterPath: [\"options\", \"contract\"],\n  mapper: {\n    serializedName: \"contract\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const channel: OperationQueryParameter = {\n  parameterPath: [\"options\", \"channel\"],\n  mapper: {\n    serializedName: \"channel\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const oracle: OperationQueryParameter = {\n  parameterPath: [\"options\", \"oracle\"],\n  mapper: {\n    serializedName: \"oracle\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const senderId: OperationQueryParameter = {\n  parameterPath: [\"options\", \"senderId\"],\n  mapper: {\n    serializedName: \"sender_id\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const recipientId: OperationQueryParameter = {\n  parameterPath: [\"options\", \"recipientId\"],\n  mapper: {\n    serializedName: \"recipient_id\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const entrypoint: OperationQueryParameter = {\n  parameterPath: [\"options\", \"entrypoint\"],\n  mapper: {\n    serializedName: \"entrypoint\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const txType: OperationQueryParameter = {\n  parameterPath: [\"options\", \"txType\"],\n  mapper: {\n    serializedName: \"tx_type\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const id1: OperationQueryParameter = {\n  parameterPath: [\"options\", \"id\"],\n  mapper: {\n    serializedName: \"id\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const hashOrIndex: OperationURLParameter = {\n  parameterPath: \"hashOrIndex\",\n  mapper: {\n    serializedName: \"hash_or_index\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n","import * as coreClient from \"@azure/core-client\";\n\nexport const Paths1I5J7OcV2AccountsIdActivitiesGetResponses200ContentApplicationJsonSchemaAllof0: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className:\n      \"Paths1I5J7OcV2AccountsIdActivitiesGetResponses200ContentApplicationJsonSchemaAllof0\",\n    modelProperties: {\n      data: {\n        serializedName: \"data\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Activity\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const Activity: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Activity\",\n    modelProperties: {\n      blockHash: {\n        serializedName: \"block_hash\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      height: {\n        serializedName: \"height\",\n        required: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      payload: {\n        serializedName: \"payload\",\n        required: true,\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"any\" } }\n        }\n      },\n      type: {\n        serializedName: \"type\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const PaginatedResponse: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"PaginatedResponse\",\n    modelProperties: {\n      next: {\n        serializedName: \"next\",\n        required: true,\n        nullable: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      prev: {\n        serializedName: \"prev\",\n        required: true,\n        nullable: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ErrorResponse: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ErrorResponse\",\n    modelProperties: {\n      error: {\n        serializedName: \"error\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const Paths17FlgdkV2Aex141GetResponses200ContentApplicationJsonSchemaAllof0: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className:\n      \"Paths17FlgdkV2Aex141GetResponses200ContentApplicationJsonSchemaAllof0\",\n    modelProperties: {\n      data: {\n        serializedName: \"data\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Aex141Response\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const Aex141Response: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Aex141Response\",\n    modelProperties: {\n      baseUrl: {\n        serializedName: \"base_url\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      contractId: {\n        serializedName: \"contract_id\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      contractTxi: {\n        serializedName: \"contract_txi\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      extensions: {\n        serializedName: \"extensions\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      limits: {\n        serializedName: \"limits\",\n        required: true,\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"any\" } }\n        }\n      }\n    }\n  }\n};\n\nexport const PathsAxw0PwV2Aex141OwnedNftsAccountidGetResponses200ContentApplicationJsonSchemaAllof0: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className:\n      \"PathsAxw0PwV2Aex141OwnedNftsAccountidGetResponses200ContentApplicationJsonSchemaAllof0\",\n    modelProperties: {\n      data: {\n        serializedName: \"data\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Aex141OwnedTokenResponse\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const Aex141OwnedTokenResponse: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Aex141OwnedTokenResponse\",\n    modelProperties: {\n      accountId: {\n        serializedName: \"account_id\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      contractId: {\n        serializedName: \"contract_id\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      tokenId: {\n        serializedName: \"token_id\",\n        required: true,\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const PathsN3Ru7DV2Aex141ContractidOwnersGetResponses200ContentApplicationJsonSchemaAllof0: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className:\n      \"PathsN3Ru7DV2Aex141ContractidOwnersGetResponses200ContentApplicationJsonSchemaAllof0\",\n    modelProperties: {\n      data: {\n        serializedName: \"data\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Aex141OwnedTokenResponse\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const PathsRa6Pv6V2Aex141ContractidTemplatesGetResponses200ContentApplicationJsonSchemaAllof0: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className:\n      \"PathsRa6Pv6V2Aex141ContractidTemplatesGetResponses200ContentApplicationJsonSchemaAllof0\",\n    modelProperties: {\n      data: {\n        serializedName: \"data\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Aex141TemplatesResponse\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const Aex141TemplatesResponse: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Aex141TemplatesResponse\",\n    modelProperties: {\n      contractId: {\n        serializedName: \"contract_id\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      edition: {\n        serializedName: \"edition\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"any\" } }\n        }\n      },\n      logIdx: {\n        serializedName: \"log_idx\",\n        required: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      templateId: {\n        serializedName: \"template_id\",\n        required: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      txHash: {\n        serializedName: \"tx_hash\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const Paths19B9O7TV2Aex141ContractidTemplatesTemplateidTokensGetResponses200ContentApplicationJsonSchemaAllof0: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className:\n      \"Paths19B9O7TV2Aex141ContractidTemplatesTemplateidTokensGetResponses200ContentApplicationJsonSchemaAllof0\",\n    modelProperties: {\n      data: {\n        serializedName: \"data\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Aex141TemplateTokensResponse\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const Aex141TemplateTokensResponse: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Aex141TemplateTokensResponse\",\n    modelProperties: {\n      logIdx: {\n        serializedName: \"log_idx\",\n        required: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      ownerId: {\n        serializedName: \"owner_id\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      tokenId: {\n        serializedName: \"token_id\",\n        required: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      txHash: {\n        serializedName: \"tx_hash\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const Paths1Fe570RV2Aex9GetResponses200ContentApplicationJsonSchemaAllof0: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className:\n      \"Paths1Fe570RV2Aex9GetResponses200ContentApplicationJsonSchemaAllof0\",\n    modelProperties: {\n      data: {\n        serializedName: \"data\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Aex9Response\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const Aex9Response: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Aex9Response\",\n    modelProperties: {\n      contractId: {\n        serializedName: \"contract_id\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      contractTxi: {\n        serializedName: \"contract_txi\",\n        required: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      decimals: {\n        serializedName: \"decimals\",\n        required: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      eventSupply: {\n        serializedName: \"event_supply\",\n        required: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      extensions: {\n        serializedName: \"extensions\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      holders: {\n        serializedName: \"holders\",\n        required: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      initialSupply: {\n        serializedName: \"initial_supply\",\n        required: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      name: {\n        serializedName: \"name\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      symbol: {\n        serializedName: \"symbol\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const PathsO9MbpkV2Aex9AccountBalancesAccountIdGetResponses200ContentApplicationJsonSchemaAllof1: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className:\n      \"PathsO9MbpkV2Aex9AccountBalancesAccountIdGetResponses200ContentApplicationJsonSchemaAllof1\",\n    modelProperties: {\n      data: {\n        serializedName: \"data\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Aex9BalanceResponse\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const Aex9BalanceResponse: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Aex9BalanceResponse\",\n    modelProperties: {\n      amount: {\n        serializedName: \"amount\",\n        required: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      blockHash: {\n        serializedName: \"block_hash\",\n        required: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      contractId: {\n        serializedName: \"contract_id\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      decimals: {\n        serializedName: \"decimals\",\n        required: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      height: {\n        serializedName: \"height\",\n        required: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      tokenName: {\n        serializedName: \"token_name\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      tokenSymbol: {\n        serializedName: \"token_symbol\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      txHash: {\n        serializedName: \"tx_hash\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      txIndex: {\n        serializedName: \"tx_index\",\n        required: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      txType: {\n        serializedName: \"tx_type\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const PathsY2JwfkV2Aex9TransfersFromToSenderRecipientGetResponses200ContentApplicationJsonSchemaAllof0: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className:\n      \"PathsY2JwfkV2Aex9TransfersFromToSenderRecipientGetResponses200ContentApplicationJsonSchemaAllof0\",\n    modelProperties: {\n      data: {\n        serializedName: \"data\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Aex9TransferResponse\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const Aex9TransferResponse: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Aex9TransferResponse\",\n    modelProperties: {\n      amount: {\n        serializedName: \"amount\",\n        required: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      blockHeight: {\n        serializedName: \"block_height\",\n        required: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      callTxi: {\n        serializedName: \"call_txi\",\n        required: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      contractId: {\n        serializedName: \"contract_id\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      logIdx: {\n        serializedName: \"log_idx\",\n        required: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      microTime: {\n        serializedName: \"micro_time\",\n        required: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      recipient: {\n        serializedName: \"recipient\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      sender: {\n        serializedName: \"sender\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const Paths5U7W2V2Aex9TransfersFromIdGetResponses200ContentApplicationJsonSchemaAllof0: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className:\n      \"Paths5U7W2V2Aex9TransfersFromIdGetResponses200ContentApplicationJsonSchemaAllof0\",\n    modelProperties: {\n      data: {\n        serializedName: \"data\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Aex9TransferResponse\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const Paths12TleqhV2Aex9TransfersToIdGetResponses200ContentApplicationJsonSchemaAllof0: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className:\n      \"Paths12TleqhV2Aex9TransfersToIdGetResponses200ContentApplicationJsonSchemaAllof0\",\n    modelProperties: {\n      data: {\n        serializedName: \"data\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Aex9TransferResponse\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const Paths1C2B0UpV2Aex9ContractidBalancesGetResponses200ContentApplicationJsonSchemaAllof0: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className:\n      \"Paths1C2B0UpV2Aex9ContractidBalancesGetResponses200ContentApplicationJsonSchemaAllof0\",\n    modelProperties: {\n      data: {\n        serializedName: \"data\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Aex9ContractBalanceResponse\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const Aex9ContractBalanceResponse: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Aex9ContractBalanceResponse\",\n    modelProperties: {\n      accountId: {\n        serializedName: \"account_id\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      amount: {\n        serializedName: \"amount\",\n        required: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      blockHash: {\n        serializedName: \"block_hash\",\n        required: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      contractId: {\n        serializedName: \"contract_id\",\n        required: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      height: {\n        serializedName: \"height\",\n        required: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      lastLogIdx: {\n        serializedName: \"last_log_idx\",\n        required: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      lastTxHash: {\n        serializedName: \"last_tx_hash\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const PathsBelvp6V2Aex9ContractidBalancesAccountidGetResponses200ContentApplicationJsonSchemaAllof0: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className:\n      \"PathsBelvp6V2Aex9ContractidBalancesAccountidGetResponses200ContentApplicationJsonSchemaAllof0\",\n    modelProperties: {\n      account: {\n        serializedName: \"account\",\n        type: {\n          name: \"String\"\n        }\n      },\n      amount: {\n        serializedName: \"amount\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      contract: {\n        serializedName: \"contract\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const Paths11X7LpcV2Aex9ContractidBalancesAccountidHistoryGetResponses200ContentApplicationJsonSchemaAllof0: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className:\n      \"Paths11X7LpcV2Aex9ContractidBalancesAccountidHistoryGetResponses200ContentApplicationJsonSchemaAllof0\",\n    modelProperties: {\n      account: {\n        serializedName: \"account\",\n        type: {\n          name: \"String\"\n        }\n      },\n      amount: {\n        serializedName: \"amount\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      contract: {\n        serializedName: \"contract\",\n        type: {\n          name: \"String\"\n        }\n      },\n      height: {\n        serializedName: \"height\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const Paths5LeqfqV2BlocksGetResponses200ContentApplicationJsonSchemaAllof0: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className:\n      \"Paths5LeqfqV2BlocksGetResponses200ContentApplicationJsonSchemaAllof0\",\n    modelProperties: {\n      data: {\n        serializedName: \"data\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Block\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const Block: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Block\",\n    modelProperties: {\n      beneficiary: {\n        serializedName: \"beneficiary\",\n        type: {\n          name: \"String\"\n        }\n      },\n      hash: {\n        serializedName: \"hash\",\n        type: {\n          name: \"String\"\n        }\n      },\n      height: {\n        serializedName: \"height\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      info: {\n        serializedName: \"info\",\n        type: {\n          name: \"String\"\n        }\n      },\n      miner: {\n        serializedName: \"miner\",\n        type: {\n          name: \"String\"\n        }\n      },\n      nonce: {\n        serializedName: \"nonce\",\n        type: {\n          name: \"String\"\n        }\n      },\n      pow: {\n        serializedName: \"pow\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Number\"\n            }\n          }\n        }\n      },\n      prevHash: {\n        serializedName: \"prev_hash\",\n        type: {\n          name: \"String\"\n        }\n      },\n      prevKeyHash: {\n        serializedName: \"prev_key_hash\",\n        type: {\n          name: \"String\"\n        }\n      },\n      stateHash: {\n        serializedName: \"state_hash\",\n        type: {\n          name: \"String\"\n        }\n      },\n      target: {\n        serializedName: \"target\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      time: {\n        serializedName: \"time\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      version: {\n        serializedName: \"version\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const NotFoundResponse: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"NotFoundResponse\",\n    modelProperties: {\n      error: {\n        serializedName: \"error\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const PathsC25EgV2ChannelsGetResponses200ContentApplicationJsonSchemaAllof0: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className:\n      \"PathsC25EgV2ChannelsGetResponses200ContentApplicationJsonSchemaAllof0\",\n    modelProperties: {\n      data: {\n        serializedName: \"data\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Channel\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const Channel: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Channel\",\n    modelProperties: {\n      amount: {\n        serializedName: \"amount\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      channel: {\n        serializedName: \"channel\",\n        type: {\n          name: \"String\"\n        }\n      },\n      channelReserve: {\n        serializedName: \"channel_reserve\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      delegateIds: {\n        serializedName: \"delegate_ids\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"any\" } }\n        }\n      },\n      initiator: {\n        serializedName: \"initiator\",\n        type: {\n          name: \"String\"\n        }\n      },\n      initiatorAmount: {\n        serializedName: \"initiator_amount\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      lastUpdatedHeight: {\n        serializedName: \"last_updated_height\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastUpdatedTxType: {\n        serializedName: \"last_updated_tx_type\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lockPeriod: {\n        serializedName: \"lock_period\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      lockedUntil: {\n        serializedName: \"locked_until\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      responder: {\n        serializedName: \"responder\",\n        type: {\n          name: \"String\"\n        }\n      },\n      responderAmount: {\n        serializedName: \"responder_amount\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      round: {\n        serializedName: \"round\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      soloRound: {\n        serializedName: \"solo_round\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      stateHash: {\n        serializedName: \"state_hash\",\n        type: {\n          name: \"String\"\n        }\n      },\n      updatesCount: {\n        serializedName: \"updates_count\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const Paths1Csrt0IV2ContractsCallsGetResponses200ContentApplicationJsonSchemaAllof0: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className:\n      \"Paths1Csrt0IV2ContractsCallsGetResponses200ContentApplicationJsonSchemaAllof0\",\n    modelProperties: {\n      data: {\n        serializedName: \"data\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ContractCall\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const ContractCall: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ContractCall\",\n    modelProperties: {\n      blockHash: {\n        serializedName: \"block_hash\",\n        type: {\n          name: \"String\"\n        }\n      },\n      callTxHash: {\n        serializedName: \"call_tx_hash\",\n        type: {\n          name: \"String\"\n        }\n      },\n      callTxi: {\n        serializedName: \"call_txi\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      contractId: {\n        serializedName: \"contract_id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      contractTxi: {\n        serializedName: \"contract_txi\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      function: {\n        serializedName: \"function\",\n        type: {\n          name: \"String\"\n        }\n      },\n      height: {\n        serializedName: \"height\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      internalTx: {\n        serializedName: \"internal_tx\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"any\" } }\n        }\n      },\n      localIdx: {\n        serializedName: \"local_idx\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      microIndex: {\n        serializedName: \"micro_index\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const Paths9Ya94MV2ContractsLogsGetResponses200ContentApplicationJsonSchemaAllof0: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className:\n      \"Paths9Ya94MV2ContractsLogsGetResponses200ContentApplicationJsonSchemaAllof0\",\n    modelProperties: {\n      data: {\n        serializedName: \"data\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ContractLog\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const ContractLog: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ContractLog\",\n    modelProperties: {\n      args: {\n        serializedName: \"args\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Number\"\n            }\n          }\n        }\n      },\n      blockHash: {\n        serializedName: \"block_hash\",\n        type: {\n          name: \"String\"\n        }\n      },\n      callTxHash: {\n        serializedName: \"call_tx_hash\",\n        type: {\n          name: \"String\"\n        }\n      },\n      callTxi: {\n        serializedName: \"call_txi\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      contractId: {\n        serializedName: \"contract_id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      contractTxi: {\n        serializedName: \"contract_txi\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      data: {\n        serializedName: \"data\",\n        type: {\n          name: \"String\"\n        }\n      },\n      eventHash: {\n        serializedName: \"event_hash\",\n        type: {\n          name: \"String\"\n        }\n      },\n      extCallerContractId: {\n        serializedName: \"ext_caller_contract_id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      extCallerContractTxi: {\n        serializedName: \"ext_caller_contract_txi\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      height: {\n        serializedName: \"height\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      logIdx: {\n        serializedName: \"log_idx\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      microIndex: {\n        serializedName: \"micro_index\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      parentContractId: {\n        serializedName: \"parent_contract_id\",\n        nullable: true,\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const PathsRzn6HzV2DeltastatsGetResponses200ContentApplicationJsonSchemaAllof0: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className:\n      \"PathsRzn6HzV2DeltastatsGetResponses200ContentApplicationJsonSchemaAllof0\",\n    modelProperties: {\n      data: {\n        serializedName: \"data\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"DeltaStat\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const DeltaStat: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DeltaStat\",\n    modelProperties: {\n      auctionsStarted: {\n        serializedName: \"auctions_started\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      blockReward: {\n        serializedName: \"block_reward\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      contractsCreated: {\n        serializedName: \"contracts_created\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      devReward: {\n        serializedName: \"dev_reward\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      height: {\n        serializedName: \"height\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      namesActivated: {\n        serializedName: \"names_activated\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      namesExpired: {\n        serializedName: \"names_expired\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      namesRevoked: {\n        serializedName: \"names_revoked\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      oraclesExpired: {\n        serializedName: \"oracles_expired\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      oraclesRegistered: {\n        serializedName: \"oracles_registered\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const Paths10TrrshV2KeyBlocksGetResponses200ContentApplicationJsonSchemaAllof0: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className:\n      \"Paths10TrrshV2KeyBlocksGetResponses200ContentApplicationJsonSchemaAllof0\",\n    modelProperties: {\n      data: {\n        serializedName: \"data\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"KeyBlock\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const KeyBlock: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"KeyBlock\",\n    modelProperties: {\n      beneficiary: {\n        serializedName: \"beneficiary\",\n        type: {\n          name: \"String\"\n        }\n      },\n      hash: {\n        serializedName: \"hash\",\n        type: {\n          name: \"String\"\n        }\n      },\n      height: {\n        serializedName: \"height\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      info: {\n        serializedName: \"info\",\n        type: {\n          name: \"String\"\n        }\n      },\n      miner: {\n        serializedName: \"miner\",\n        type: {\n          name: \"String\"\n        }\n      },\n      nonce: {\n        serializedName: \"nonce\",\n        type: {\n          name: \"String\"\n        }\n      },\n      pow: {\n        serializedName: \"pow\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Number\"\n            }\n          }\n        }\n      },\n      prevHash: {\n        serializedName: \"prev_hash\",\n        type: {\n          name: \"String\"\n        }\n      },\n      prevKeyHash: {\n        serializedName: \"prev_key_hash\",\n        type: {\n          name: \"String\"\n        }\n      },\n      stateHash: {\n        serializedName: \"state_hash\",\n        type: {\n          name: \"String\"\n        }\n      },\n      target: {\n        serializedName: \"target\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      time: {\n        serializedName: \"time\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      version: {\n        serializedName: \"version\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const Paths7Hfka2V2KeyBlocksHashOrKbiMicroBlocksGetResponses200ContentApplicationJsonSchemaAllof0: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className:\n      \"Paths7Hfka2V2KeyBlocksHashOrKbiMicroBlocksGetResponses200ContentApplicationJsonSchemaAllof0\",\n    modelProperties: {\n      data: {\n        serializedName: \"data\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"MicroBlock\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const MicroBlock: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"MicroBlock\",\n    modelProperties: {\n      hash: {\n        serializedName: \"hash\",\n        type: {\n          name: \"String\"\n        }\n      },\n      height: {\n        serializedName: \"height\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      microBlockIndex: {\n        serializedName: \"micro_block_index\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      pofHash: {\n        serializedName: \"pof_hash\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Number\"\n            }\n          }\n        }\n      },\n      prevHash: {\n        serializedName: \"prev_hash\",\n        type: {\n          name: \"String\"\n        }\n      },\n      prevKeyHash: {\n        serializedName: \"prev_key_hash\",\n        type: {\n          name: \"String\"\n        }\n      },\n      stateHash: {\n        serializedName: \"state_hash\",\n        type: {\n          name: \"String\"\n        }\n      },\n      time: {\n        serializedName: \"time\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      transactionsCount: {\n        serializedName: \"transactions_count\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      version: {\n        serializedName: \"version\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const Paths1RxrrvbV2MicroBlocksHashTxsGetResponses200ContentApplicationJsonSchemaAllof0: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className:\n      \"Paths1RxrrvbV2MicroBlocksHashTxsGetResponses200ContentApplicationJsonSchemaAllof0\",\n    modelProperties: {\n      data: {\n        serializedName: \"data\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Tx\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const Tx: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Tx\",\n    modelProperties: {\n      blockHash: {\n        serializedName: \"block_hash\",\n        type: {\n          name: \"String\"\n        }\n      },\n      blockHeight: {\n        serializedName: \"block_height\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      hash: {\n        serializedName: \"hash\",\n        type: {\n          name: \"String\"\n        }\n      },\n      microIndex: {\n        serializedName: \"micro_index\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      microTime: {\n        serializedName: \"micro_time\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      signatures: {\n        serializedName: \"signatures\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      tx: {\n        serializedName: \"tx\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"any\" } }\n        }\n      },\n      txIndex: {\n        serializedName: \"tx_index\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const Paths16Srg6EV2NamesGetResponses200ContentApplicationJsonSchemaAllof0: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className:\n      \"Paths16Srg6EV2NamesGetResponses200ContentApplicationJsonSchemaAllof0\",\n    modelProperties: {\n      data: {\n        serializedName: \"data\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Name\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const Name: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Name\",\n    modelProperties: {\n      active: {\n        serializedName: \"active\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      hash: {\n        serializedName: \"hash\",\n        type: {\n          name: \"String\"\n        }\n      },\n      info: {\n        serializedName: \"info\",\n        type: {\n          name: \"Composite\",\n          className: \"NameInfo\"\n        }\n      },\n      previous: {\n        serializedName: \"previous\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Name\"\n            }\n          }\n        }\n      },\n      status: {\n        serializedName: \"status\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const NameInfo: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"NameInfo\",\n    modelProperties: {\n      activeFrom: {\n        serializedName: \"active_from\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      claims: {\n        serializedName: \"claims\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Number\"\n            }\n          }\n        }\n      },\n      expireHeight: {\n        serializedName: \"expire_height\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      ownership: {\n        serializedName: \"ownership\",\n        type: {\n          name: \"Composite\",\n          className: \"NameInfoOwnership\"\n        }\n      },\n      pointers: {\n        serializedName: \"pointers\",\n        type: {\n          name: \"Composite\",\n          className: \"NameInfoPointers\"\n        }\n      },\n      transfers: {\n        serializedName: \"transfers\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Number\"\n            }\n          }\n        }\n      },\n      updates: {\n        serializedName: \"updates\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const NameInfoOwnership: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"NameInfoOwnership\",\n    modelProperties: {\n      current: {\n        serializedName: \"current\",\n        type: {\n          name: \"String\"\n        }\n      },\n      original: {\n        serializedName: \"original\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const NameInfoPointers: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"NameInfoPointers\",\n    modelProperties: {\n      accountPubkey: {\n        serializedName: \"account_pubkey\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const Auction: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Auction\",\n    modelProperties: {\n      active: {\n        serializedName: \"active\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      info: {\n        serializedName: \"info\",\n        type: {\n          name: \"Composite\",\n          className: \"AuctionInfo\"\n        }\n      }\n    }\n  }\n};\n\nexport const AuctionInfo: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"AuctionInfo\",\n    modelProperties: {\n      auctionEnd: {\n        serializedName: \"auction_end\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      bids: {\n        serializedName: \"bids\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Number\"\n            }\n          }\n        }\n      },\n      lastBid: {\n        serializedName: \"last_bid\",\n        type: {\n          name: \"Composite\",\n          className: \"AuctionInfoLastBid\"\n        }\n      },\n      name: {\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      previous: {\n        serializedName: \"previous\",\n        type: {\n          name: \"Composite\",\n          className: \"Auction\"\n        }\n      },\n      status: {\n        serializedName: \"status\",\n        type: {\n          name: \"String\"\n        }\n      },\n      txIndex: {\n        serializedName: \"tx_index\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const AuctionInfoLastBid: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"AuctionInfoLastBid\",\n    modelProperties: {\n      blockHash: {\n        serializedName: \"block_hash\",\n        type: {\n          name: \"String\"\n        }\n      },\n      blockHeight: {\n        serializedName: \"block_height\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      hash: {\n        serializedName: \"hash\",\n        type: {\n          name: \"String\"\n        }\n      },\n      microIndex: {\n        serializedName: \"micro_index\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      microTime: {\n        serializedName: \"micro_time\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      signatures: {\n        serializedName: \"signatures\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      tx: {\n        serializedName: \"tx\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"any\" } }\n        }\n      }\n    }\n  }\n};\n\nexport const Paths1I6PwfdV2NamesSearchGetResponses200ContentApplicationJsonSchemaAllof0: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className:\n      \"Paths1I6PwfdV2NamesSearchGetResponses200ContentApplicationJsonSchemaAllof0\",\n    modelProperties: {\n      data: {\n        serializedName: \"data\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Get200ApplicationJsonAllOfPropertiesItemsItem\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const Paths7P6Qc1V2NamesSearchGetResponses200ContentApplicationJsonSchemaAllof0PropertiesDataItemsAllof1: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className:\n      \"Paths7P6Qc1V2NamesSearchGetResponses200ContentApplicationJsonSchemaAllof0PropertiesDataItemsAllof1\",\n    modelProperties: {\n      status: {\n        serializedName: \"status\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const NameClaim: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"NameClaim\",\n    modelProperties: {\n      blockHash: {\n        serializedName: \"block_hash\",\n        type: {\n          name: \"String\"\n        }\n      },\n      height: {\n        serializedName: \"height\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      tx: {\n        serializedName: \"tx\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"any\" } }\n        }\n      }\n    }\n  }\n};\n\nexport const PathsDjelzuV2NamesIdPointeesGetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className:\n      \"PathsDjelzuV2NamesIdPointeesGetResponses200ContentApplicationJsonSchema\",\n    modelProperties: {\n      active: {\n        serializedName: \"active\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"any\" } }\n        }\n      },\n      inactive: {\n        serializedName: \"inactive\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"any\" } }\n        }\n      }\n    }\n  }\n};\n\nexport const NameTransfer: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"NameTransfer\",\n    modelProperties: {\n      blockHash: {\n        serializedName: \"block_hash\",\n        type: {\n          name: \"String\"\n        }\n      },\n      height: {\n        serializedName: \"height\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      tx: {\n        serializedName: \"tx\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"any\" } }\n        }\n      }\n    }\n  }\n};\n\nexport const NameUpdate: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"NameUpdate\",\n    modelProperties: {\n      blockHash: {\n        serializedName: \"block_hash\",\n        type: {\n          name: \"String\"\n        }\n      },\n      height: {\n        serializedName: \"height\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      tx: {\n        serializedName: \"tx\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"any\" } }\n        }\n      }\n    }\n  }\n};\n\nexport const Oracle: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Oracle\",\n    modelProperties: {\n      active: {\n        serializedName: \"active\",\n        required: true,\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      activeFrom: {\n        serializedName: \"active_from\",\n        required: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      expireHeight: {\n        serializedName: \"expire_height\",\n        required: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      extends: {\n        serializedName: \"extends\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"OracleExtendsItem\"\n            }\n          }\n        }\n      },\n      oracle: {\n        serializedName: \"oracle\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      queryFee: {\n        serializedName: \"query_fee\",\n        required: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      register: {\n        serializedName: \"register\",\n        required: true,\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const OracleExtendsItem: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"OracleExtendsItem\",\n    modelProperties: {\n      query: {\n        serializedName: \"query\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      response: {\n        serializedName: \"response\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const PathsMherz6V2OraclesGetResponses200ContentApplicationJsonSchemaAllof0: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className:\n      \"PathsMherz6V2OraclesGetResponses200ContentApplicationJsonSchemaAllof0\",\n    modelProperties: {\n      data: {\n        serializedName: \"data\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Oracle\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const Status: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Status\",\n    modelProperties: {\n      mdwAsyncTasks: {\n        serializedName: \"mdw_async_tasks\",\n        type: {\n          name: \"Composite\",\n          className: \"StatusMdwAsyncTasks\"\n        }\n      },\n      mdwGensPerMinute: {\n        serializedName: \"mdw_gens_per_minute\",\n        required: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      mdwHeight: {\n        serializedName: \"mdw_height\",\n        required: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      mdwLastMigration: {\n        serializedName: \"mdw_last_migration\",\n        required: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      mdwRevision: {\n        serializedName: \"mdw_revision\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      mdwSynced: {\n        serializedName: \"mdw_synced\",\n        required: true,\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      mdwSyncing: {\n        serializedName: \"mdw_syncing\",\n        required: true,\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      mdwTxIndex: {\n        serializedName: \"mdw_tx_index\",\n        required: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      mdwVersion: {\n        serializedName: \"mdw_version\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      nodeHeight: {\n        serializedName: \"node_height\",\n        required: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      nodeProgress: {\n        serializedName: \"node_progress\",\n        required: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      nodeRevision: {\n        serializedName: \"node_revision\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      nodeSyncing: {\n        serializedName: \"node_syncing\",\n        required: true,\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      nodeVersion: {\n        serializedName: \"node_version\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const StatusMdwAsyncTasks: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"StatusMdwAsyncTasks\",\n    modelProperties: {\n      longTasks: {\n        serializedName: \"long_tasks\",\n        required: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      producerBuffer: {\n        serializedName: \"producer_buffer\",\n        required: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      totalPending: {\n        serializedName: \"total_pending\",\n        required: true,\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const PathsDpxn99V2TotalstatsGetResponses200ContentApplicationJsonSchemaAllof0: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className:\n      \"PathsDpxn99V2TotalstatsGetResponses200ContentApplicationJsonSchemaAllof0\",\n    modelProperties: {\n      data: {\n        serializedName: \"data\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"TotalStat\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const TotalStat: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"TotalStat\",\n    modelProperties: {\n      auctionsStarted: {\n        serializedName: \"auctions_started\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      blockReward: {\n        serializedName: \"block_reward\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      contractsCreated: {\n        serializedName: \"contracts_created\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      devReward: {\n        serializedName: \"dev_reward\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      height: {\n        serializedName: \"height\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      namesActivated: {\n        serializedName: \"names_activated\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      namesExpired: {\n        serializedName: \"names_expired\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      namesRevoked: {\n        serializedName: \"names_revoked\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      oraclesExpired: {\n        serializedName: \"oracles_expired\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      oraclesRegistered: {\n        serializedName: \"oracles_registered\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const Paths17Cjtx5V2TransfersGetResponses200ContentApplicationJsonSchemaAllof0: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className:\n      \"Paths17Cjtx5V2TransfersGetResponses200ContentApplicationJsonSchemaAllof0\",\n    modelProperties: {\n      data: {\n        serializedName: \"data\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Transfer\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const Transfer: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Transfer\",\n    modelProperties: {\n      accountId: {\n        serializedName: \"account_id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      amount: {\n        serializedName: \"amount\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      height: {\n        serializedName: \"height\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      kind: {\n        serializedName: \"kind\",\n        type: {\n          name: \"String\"\n        }\n      },\n      refTxi: {\n        serializedName: \"ref_txi\",\n        nullable: true,\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const Paths1R74KpvV2TxsGetResponses200ContentApplicationJsonSchemaAllof0: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className:\n      \"Paths1R74KpvV2TxsGetResponses200ContentApplicationJsonSchemaAllof0\",\n    modelProperties: {\n      data: {\n        serializedName: \"data\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Tx\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const Paths16Tt677V2TxsCountIdGetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className:\n      \"Paths16Tt677V2TxsCountIdGetResponses200ContentApplicationJsonSchema\",\n    modelProperties: {\n      channelCloseMutualTx: {\n        serializedName: \"channel_close_mutual_tx\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"any\" } }\n        }\n      },\n      channelCloseSoloTx: {\n        serializedName: \"channel_close_solo_tx\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"any\" } }\n        }\n      },\n      channelCreateTx: {\n        serializedName: \"channel_create_tx\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"any\" } }\n        }\n      },\n      channelDepositTx: {\n        serializedName: \"channel_deposit_tx\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"any\" } }\n        }\n      },\n      channelForceProgressTx: {\n        serializedName: \"channel_force_progress_tx\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      channelOffchainTx: {\n        serializedName: \"channel_offchain_tx\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"any\" } }\n        }\n      },\n      channelSettleTx: {\n        serializedName: \"channel_settle_tx\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"any\" } }\n        }\n      },\n      channelSlashTx: {\n        serializedName: \"channel_slash_tx\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"any\" } }\n        }\n      },\n      channelSnapshotSoloTx: {\n        serializedName: \"channel_snapshot_solo_tx\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"any\" } }\n        }\n      },\n      channelWithdrawTx: {\n        serializedName: \"channel_withdraw_tx\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"any\" } }\n        }\n      },\n      contractCallTx: {\n        serializedName: \"contract_call_tx\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"any\" } }\n        }\n      },\n      contractCreateTx: {\n        serializedName: \"contract_create_tx\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"any\" } }\n        }\n      },\n      gaAttachTx: {\n        serializedName: \"ga_attach_tx\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"any\" } }\n        }\n      },\n      gaMetaTx: {\n        serializedName: \"ga_meta_tx\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"any\" } }\n        }\n      },\n      nameClaimTx: {\n        serializedName: \"name_claim_tx\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"any\" } }\n        }\n      },\n      namePreclaimTx: {\n        serializedName: \"name_preclaim_tx\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"any\" } }\n        }\n      },\n      nameRevokeTx: {\n        serializedName: \"name_revoke_tx\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"any\" } }\n        }\n      },\n      nameTransferTx: {\n        serializedName: \"name_transfer_tx\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      nameUpdateTx: {\n        serializedName: \"name_update_tx\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"any\" } }\n        }\n      },\n      oracleExtendTx: {\n        serializedName: \"oracle_extend_tx\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"any\" } }\n        }\n      },\n      oracleQueryTx: {\n        serializedName: \"oracle_query_tx\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"any\" } }\n        }\n      },\n      oracleRegisterTx: {\n        serializedName: \"oracle_register_tx\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"any\" } }\n        }\n      },\n      oracleResponseTx: {\n        serializedName: \"oracle_response_tx\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"any\" } }\n        }\n      },\n      payingForTx: {\n        serializedName: \"paying_for_tx\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"any\" } }\n        }\n      },\n      spendTx: {\n        serializedName: \"spend_tx\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"any\" } }\n        }\n      }\n    }\n  }\n};\n\nexport const Aex141TransferEvent: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Aex141TransferEvent\",\n    modelProperties: {\n      blockHeight: {\n        serializedName: \"block_height\",\n        type: {\n          name: \"String\"\n        }\n      },\n      contractId: {\n        serializedName: \"contract_id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      logIdx: {\n        serializedName: \"log_idx\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      microIndex: {\n        serializedName: \"micro_index\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      microTime: {\n        serializedName: \"micro_time\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      recipientId: {\n        serializedName: \"recipient_id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      senderId: {\n        serializedName: \"sender_id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      tokenId: {\n        serializedName: \"token_id\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      txHash: {\n        serializedName: \"tx_hash\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const Aex9TransferEvent: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Aex9TransferEvent\",\n    modelProperties: {\n      amount: {\n        serializedName: \"amount\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      blockHeight: {\n        serializedName: \"block_height\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      contractId: {\n        serializedName: \"contract_id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      logIdx: {\n        serializedName: \"log_idx\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      microIndex: {\n        serializedName: \"micro_index\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      microTime: {\n        serializedName: \"micro_time\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      recipientId: {\n        serializedName: \"recipient_id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      senderId: {\n        serializedName: \"sender_id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      txHash: {\n        serializedName: \"tx_hash\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const InternalContractCallEvent: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"InternalContractCallEvent\",\n    modelProperties: {\n      blockHash: {\n        serializedName: \"block_hash\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      callTxHash: {\n        serializedName: \"call_tx_hash\",\n        type: {\n          name: \"String\"\n        }\n      },\n      contractId: {\n        serializedName: \"contract_id\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      contractTxHash: {\n        serializedName: \"contract_tx_hash\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      function: {\n        serializedName: \"function\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      height: {\n        serializedName: \"height\",\n        required: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      internalTx: {\n        serializedName: \"internal_tx\",\n        required: true,\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"any\" } }\n        }\n      },\n      microIndex: {\n        serializedName: \"micro_index\",\n        required: true,\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const InternalTransferEvent: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"InternalTransferEvent\",\n    modelProperties: {\n      amount: {\n        serializedName: \"amount\",\n        required: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      kind: {\n        serializedName: \"kind\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      refTxHash: {\n        serializedName: \"ref_tx_hash\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const NameClaimEvent: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"NameClaimEvent\",\n    modelProperties: {\n      tx: {\n        serializedName: \"tx\",\n        required: true,\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"any\" } }\n        }\n      },\n      txHash: {\n        serializedName: \"tx_hash\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const PathsKlr2M2V2AccountsIdActivitiesGetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className:\n      \"PathsKlr2M2V2AccountsIdActivitiesGetResponses200ContentApplicationJsonSchema\",\n    modelProperties: {\n      ...Paths1I5J7OcV2AccountsIdActivitiesGetResponses200ContentApplicationJsonSchemaAllof0\n        .type.modelProperties,\n      ...PaginatedResponse.type.modelProperties\n    }\n  }\n};\n\nexport const PathsFlc7UjV2Aex141GetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"PathsFlc7UjV2Aex141GetResponses200ContentApplicationJsonSchema\",\n    modelProperties: {\n      ...Paths17FlgdkV2Aex141GetResponses200ContentApplicationJsonSchemaAllof0\n        .type.modelProperties,\n      ...PaginatedResponse.type.modelProperties\n    }\n  }\n};\n\nexport const PathsSs61ZgV2Aex141OwnedNftsAccountidGetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className:\n      \"PathsSs61ZgV2Aex141OwnedNftsAccountidGetResponses200ContentApplicationJsonSchema\",\n    modelProperties: {\n      ...PathsAxw0PwV2Aex141OwnedNftsAccountidGetResponses200ContentApplicationJsonSchemaAllof0\n        .type.modelProperties,\n      ...PaginatedResponse.type.modelProperties\n    }\n  }\n};\n\nexport const Paths1Ilysy5V2Aex141ContractidOwnersGetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className:\n      \"Paths1Ilysy5V2Aex141ContractidOwnersGetResponses200ContentApplicationJsonSchema\",\n    modelProperties: {\n      ...PathsN3Ru7DV2Aex141ContractidOwnersGetResponses200ContentApplicationJsonSchemaAllof0\n        .type.modelProperties,\n      ...PaginatedResponse.type.modelProperties\n    }\n  }\n};\n\nexport const Paths17O9Fn6V2Aex141ContractidTemplatesGetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className:\n      \"Paths17O9Fn6V2Aex141ContractidTemplatesGetResponses200ContentApplicationJsonSchema\",\n    modelProperties: {\n      ...PathsRa6Pv6V2Aex141ContractidTemplatesGetResponses200ContentApplicationJsonSchemaAllof0\n        .type.modelProperties,\n      ...PaginatedResponse.type.modelProperties\n    }\n  }\n};\n\nexport const PathsNuoourV2Aex141ContractidTemplatesTemplateidTokensGetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className:\n      \"PathsNuoourV2Aex141ContractidTemplatesTemplateidTokensGetResponses200ContentApplicationJsonSchema\",\n    modelProperties: {\n      ...Paths19B9O7TV2Aex141ContractidTemplatesTemplateidTokensGetResponses200ContentApplicationJsonSchemaAllof0\n        .type.modelProperties,\n      ...PaginatedResponse.type.modelProperties\n    }\n  }\n};\n\nexport const Paths1Wbogg8V2Aex9GetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Paths1Wbogg8V2Aex9GetResponses200ContentApplicationJsonSchema\",\n    modelProperties: {\n      ...Paths1Fe570RV2Aex9GetResponses200ContentApplicationJsonSchemaAllof0\n        .type.modelProperties,\n      ...PaginatedResponse.type.modelProperties\n    }\n  }\n};\n\nexport const Paths1BsirxgV2Aex9AccountBalancesAccountIdGetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className:\n      \"Paths1BsirxgV2Aex9AccountBalancesAccountIdGetResponses200ContentApplicationJsonSchema\",\n    modelProperties: {\n      ...PaginatedResponse.type.modelProperties,\n      ...PathsO9MbpkV2Aex9AccountBalancesAccountIdGetResponses200ContentApplicationJsonSchemaAllof1\n        .type.modelProperties\n    }\n  }\n};\n\nexport const Paths1V0FiznV2Aex9TransfersFromToSenderRecipientGetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className:\n      \"Paths1V0FiznV2Aex9TransfersFromToSenderRecipientGetResponses200ContentApplicationJsonSchema\",\n    modelProperties: {\n      ...PathsY2JwfkV2Aex9TransfersFromToSenderRecipientGetResponses200ContentApplicationJsonSchemaAllof0\n        .type.modelProperties,\n      ...PaginatedResponse.type.modelProperties\n    }\n  }\n};\n\nexport const Paths1X48QgjV2Aex9TransfersFromIdGetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className:\n      \"Paths1X48QgjV2Aex9TransfersFromIdGetResponses200ContentApplicationJsonSchema\",\n    modelProperties: {\n      ...Paths5U7W2V2Aex9TransfersFromIdGetResponses200ContentApplicationJsonSchemaAllof0\n        .type.modelProperties,\n      ...PaginatedResponse.type.modelProperties\n    }\n  }\n};\n\nexport const Paths1DkkopqV2Aex9TransfersToIdGetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className:\n      \"Paths1DkkopqV2Aex9TransfersToIdGetResponses200ContentApplicationJsonSchema\",\n    modelProperties: {\n      ...Paths12TleqhV2Aex9TransfersToIdGetResponses200ContentApplicationJsonSchemaAllof0\n        .type.modelProperties,\n      ...PaginatedResponse.type.modelProperties\n    }\n  }\n};\n\nexport const PathsNi359V2Aex9ContractidBalancesGetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className:\n      \"PathsNi359V2Aex9ContractidBalancesGetResponses200ContentApplicationJsonSchema\",\n    modelProperties: {\n      ...Paths1C2B0UpV2Aex9ContractidBalancesGetResponses200ContentApplicationJsonSchemaAllof0\n        .type.modelProperties,\n      ...PaginatedResponse.type.modelProperties\n    }\n  }\n};\n\nexport const Paths15Ih6XV2BlocksGetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Paths15Ih6XV2BlocksGetResponses200ContentApplicationJsonSchema\",\n    modelProperties: {\n      ...Paths5LeqfqV2BlocksGetResponses200ContentApplicationJsonSchemaAllof0\n        .type.modelProperties,\n      ...PaginatedResponse.type.modelProperties\n    }\n  }\n};\n\nexport const Paths1Txl2A9V2ChannelsGetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className:\n      \"Paths1Txl2A9V2ChannelsGetResponses200ContentApplicationJsonSchema\",\n    modelProperties: {\n      ...PathsC25EgV2ChannelsGetResponses200ContentApplicationJsonSchemaAllof0\n        .type.modelProperties,\n      ...PaginatedResponse.type.modelProperties\n    }\n  }\n};\n\nexport const Paths187U0XzV2ContractsCallsGetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className:\n      \"Paths187U0XzV2ContractsCallsGetResponses200ContentApplicationJsonSchema\",\n    modelProperties: {\n      ...Paths1Csrt0IV2ContractsCallsGetResponses200ContentApplicationJsonSchemaAllof0\n        .type.modelProperties,\n      ...PaginatedResponse.type.modelProperties\n    }\n  }\n};\n\nexport const PathsB246H1V2ContractsLogsGetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className:\n      \"PathsB246H1V2ContractsLogsGetResponses200ContentApplicationJsonSchema\",\n    modelProperties: {\n      ...Paths9Ya94MV2ContractsLogsGetResponses200ContentApplicationJsonSchemaAllof0\n        .type.modelProperties,\n      ...PaginatedResponse.type.modelProperties\n    }\n  }\n};\n\nexport const Paths7Pbec0V2DeltastatsGetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className:\n      \"Paths7Pbec0V2DeltastatsGetResponses200ContentApplicationJsonSchema\",\n    modelProperties: {\n      ...PathsRzn6HzV2DeltastatsGetResponses200ContentApplicationJsonSchemaAllof0\n        .type.modelProperties,\n      ...PaginatedResponse.type.modelProperties\n    }\n  }\n};\n\nexport const Paths1Ulxr59V2KeyBlocksGetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className:\n      \"Paths1Ulxr59V2KeyBlocksGetResponses200ContentApplicationJsonSchema\",\n    modelProperties: {\n      ...Paths10TrrshV2KeyBlocksGetResponses200ContentApplicationJsonSchemaAllof0\n        .type.modelProperties,\n      ...PaginatedResponse.type.modelProperties\n    }\n  }\n};\n\nexport const PathsO99PhzV2KeyBlocksHashOrKbiMicroBlocksGetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className:\n      \"PathsO99PhzV2KeyBlocksHashOrKbiMicroBlocksGetResponses200ContentApplicationJsonSchema\",\n    modelProperties: {\n      ...Paths7Hfka2V2KeyBlocksHashOrKbiMicroBlocksGetResponses200ContentApplicationJsonSchemaAllof0\n        .type.modelProperties,\n      ...PaginatedResponse.type.modelProperties\n    }\n  }\n};\n\nexport const PathsGuqvhdV2MicroBlocksHashTxsGetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className:\n      \"PathsGuqvhdV2MicroBlocksHashTxsGetResponses200ContentApplicationJsonSchema\",\n    modelProperties: {\n      ...Paths1RxrrvbV2MicroBlocksHashTxsGetResponses200ContentApplicationJsonSchemaAllof0\n        .type.modelProperties,\n      ...PaginatedResponse.type.modelProperties\n    }\n  }\n};\n\nexport const PathsK9TkttV2NamesGetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"PathsK9TkttV2NamesGetResponses200ContentApplicationJsonSchema\",\n    modelProperties: {\n      ...Paths16Srg6EV2NamesGetResponses200ContentApplicationJsonSchemaAllof0\n        .type.modelProperties,\n      ...PaginatedResponse.type.modelProperties\n    }\n  }\n};\n\nexport const Paths3Msq0DV2NamesSearchGetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className:\n      \"Paths3Msq0DV2NamesSearchGetResponses200ContentApplicationJsonSchema\",\n    modelProperties: {\n      ...Paths1I6PwfdV2NamesSearchGetResponses200ContentApplicationJsonSchemaAllof0\n        .type.modelProperties,\n      ...PaginatedResponse.type.modelProperties\n    }\n  }\n};\n\nexport const PathsB0YvynV2OraclesGetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className:\n      \"PathsB0YvynV2OraclesGetResponses200ContentApplicationJsonSchema\",\n    modelProperties: {\n      ...PathsMherz6V2OraclesGetResponses200ContentApplicationJsonSchemaAllof0\n        .type.modelProperties,\n      ...PaginatedResponse.type.modelProperties\n    }\n  }\n};\n\nexport const Paths15PsutbV2TotalstatsGetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className:\n      \"Paths15PsutbV2TotalstatsGetResponses200ContentApplicationJsonSchema\",\n    modelProperties: {\n      ...PathsDpxn99V2TotalstatsGetResponses200ContentApplicationJsonSchemaAllof0\n        .type.modelProperties,\n      ...PaginatedResponse.type.modelProperties\n    }\n  }\n};\n\nexport const PathsIgs9Z1V2TransfersGetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className:\n      \"PathsIgs9Z1V2TransfersGetResponses200ContentApplicationJsonSchema\",\n    modelProperties: {\n      ...Paths17Cjtx5V2TransfersGetResponses200ContentApplicationJsonSchemaAllof0\n        .type.modelProperties,\n      ...PaginatedResponse.type.modelProperties\n    }\n  }\n};\n\nexport const PathsFclv4TV2TxsGetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"PathsFclv4TV2TxsGetResponses200ContentApplicationJsonSchema\",\n    modelProperties: {\n      ...Paths1R74KpvV2TxsGetResponses200ContentApplicationJsonSchemaAllof0.type\n        .modelProperties,\n      ...PaginatedResponse.type.modelProperties\n    }\n  }\n};\n\nexport const Paths1R02SlwV2Aex9ContractidBalancesAccountidGetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className:\n      \"Paths1R02SlwV2Aex9ContractidBalancesAccountidGetResponses200ContentApplicationJsonSchema\",\n    modelProperties: {\n      ...PathsBelvp6V2Aex9ContractidBalancesAccountidGetResponses200ContentApplicationJsonSchemaAllof0\n        .type.modelProperties\n    }\n  }\n};\n\nexport const Paths1T9RwnyV2Aex9ContractidBalancesAccountidHistoryGetResponses200ContentApplicationJsonSchema: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className:\n      \"Paths1T9RwnyV2Aex9ContractidBalancesAccountidHistoryGetResponses200ContentApplicationJsonSchema\",\n    modelProperties: {\n      ...Paths11X7LpcV2Aex9ContractidBalancesAccountidHistoryGetResponses200ContentApplicationJsonSchemaAllof0\n        .type.modelProperties\n    }\n  }\n};\n\nexport const Get200ApplicationJsonAllOfPropertiesItemsItem: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Get200ApplicationJsonAllOfPropertiesItemsItem\",\n    modelProperties: {\n      ...Name.type.modelProperties,\n      ...Paths7P6Qc1V2NamesSearchGetResponses200ContentApplicationJsonSchemaAllof0PropertiesDataItemsAllof1\n        .type.modelProperties\n    }\n  }\n};\n","import * as coreClient from \"@azure/core-client\";\nimport * as Parameters from \"./models/parameters\";\nimport * as Mappers from \"./models/mappers\";\nimport {\n  Enum1,\n  MiddlewareOptionalParams,\n  GetAccountActivitiesOptionalParams,\n  GetAccountActivitiesResponse,\n  GetSortedAex141ContractsOptionalParams,\n  GetSortedAex141ContractsResponse,\n  GetAex141OwnedTokensOptionalParams,\n  GetAex141OwnedTokensResponse,\n  GetAex141TokenOwnerOptionalParams,\n  GetAex141TokenOwnerResponse,\n  GetAex141ContractOwnersOptionalParams,\n  GetAex141ContractOwnersResponse,\n  GetAex141ContractTemplatesOptionalParams,\n  GetAex141ContractTemplatesResponse,\n  GetAex141TemplateTokensOptionalParams,\n  GetAex141TemplateTokensResponse,\n  GetAex141ByContractOptionalParams,\n  GetAex141ByContractResponse,\n  GetSortedAex9TokensOptionalParams,\n  GetSortedAex9TokensResponse,\n  GetAex9AccountBalancesOptionalParams,\n  GetAex9AccountBalancesResponse,\n  GetAex9TokensCountOptionalParams,\n  GetAex9TokensCountResponse,\n  GetAex9PairTransfersOptionalParams,\n  GetAex9PairTransfersResponse,\n  GetAex9SenderTransfersOptionalParams,\n  GetAex9SenderTransfersResponse,\n  GetAex9RecipientTransfersOptionalParams,\n  GetAex9RecipientTransfersResponse,\n  GetAex9ContractBalancesOptionalParams,\n  GetAex9ContractBalancesResponse,\n  GetAex9ContractAccountBalanceOptionalParams,\n  GetAex9ContractAccountBalanceResponse,\n  GetAex9ContractAccountBalanceHistoryOptionalParams,\n  GetAex9ContractAccountBalanceHistoryResponse,\n  GetAex9LogsCountOptionalParams,\n  GetAex9LogsCountResponse,\n  GetAex9ByContractOptionalParams,\n  GetAex9ByContractResponse,\n  GetBlocksOptionalParams,\n  GetBlocksResponse,\n  GetBlockOptionalParams,\n  GetBlockResponse,\n  GetBlockByMbiOptionalParams,\n  GetBlockByMbiResponse,\n  GetChannelsOptionalParams,\n  GetChannelsResponse,\n  GetChannelOptionalParams,\n  GetChannelResponse,\n  GetContractsCallsOptionalParams,\n  GetContractsCallsResponse,\n  GetContractsLogsOptionalParams,\n  GetContractsLogsResponse,\n  GetDeltastatsOptionalParams,\n  GetDeltastatsResponse,\n  GetKeyBlocksOptionalParams,\n  GetKeyBlocksResponse,\n  GetKeyBlockOptionalParams,\n  GetKeyBlockResponse,\n  GetKeyBlockMicroBlocksOptionalParams,\n  GetKeyBlockMicroBlocksResponse,\n  GetMicroBlockOptionalParams,\n  GetMicroBlockResponse,\n  GetMicroBlockTransactionsOptionalParams,\n  GetMicroBlockTransactionsResponse,\n  GetNamesOptionalParams,\n  GetNamesResponse,\n  GetNamesAuctionsOptionalParams,\n  GetNamesAuctionsResponse,\n  SearchNamesOptionalParams,\n  SearchNamesResponse,\n  GetNameOptionalParams,\n  GetNameResponse,\n  GetNameAuctionOptionalParams,\n  GetNameAuctionResponse,\n  GetNameClaimsOptionalParams,\n  GetNameClaimsResponse,\n  GetNamePointeesOptionalParams,\n  GetNamePointeesResponse,\n  GetNamePointersOptionalParams,\n  GetNamePointersResponse,\n  GetNameTransfersOptionalParams,\n  GetNameTransfersResponse,\n  GetNameUpdatesOptionalParams,\n  GetNameUpdatesResponse,\n  GetOracleOptionalParams,\n  GetOracleResponse,\n  GetOraclesOptionalParams,\n  GetOraclesResponse,\n  GetStatusOptionalParams,\n  GetStatusResponse,\n  GetTotalstatsOptionalParams,\n  GetTotalstatsResponse,\n  GetTransfersOptionalParams,\n  GetTransfersResponse,\n  GetTxsOptionalParams,\n  GetTxsResponse,\n  GetTxCountOptionalParams,\n  GetTxCountResponse,\n  GetTxCountByIdOptionalParams,\n  GetTxCountByIdResponse,\n  GetTxOptionalParams,\n  GetTxResponse\n} from \"./models\";\n\nexport class Middleware extends coreClient.ServiceClient {\n  $host: string;\n  limit?: number;\n  scope?: string;\n  direction?: Enum1;\n\n  /**\n   * Initializes a new instance of the Middleware class.\n   * @param $host server parameter\n   * @param options The parameter options\n   */\n  constructor($host: string, options?: MiddlewareOptionalParams) {\n    if ($host === undefined) {\n      throw new Error(\"'$host' cannot be null\");\n    }\n\n    // Initializing default values for options\n    if (!options) {\n      options = {};\n    }\n    const defaults: MiddlewareOptionalParams = {\n      requestContentType: \"application/json; charset=utf-8\"\n    };\n\n    const packageDetails = `azsdk-js-middleware/1.0.0-beta.1`;\n    const userAgentPrefix =\n      options.userAgentOptions && options.userAgentOptions.userAgentPrefix\n        ? `${options.userAgentOptions.userAgentPrefix} ${packageDetails}`\n        : `${packageDetails}`;\n\n    const optionsWithDefaults = {\n      ...defaults,\n      ...options,\n      userAgentOptions: {\n        userAgentPrefix\n      },\n      endpoint: options.endpoint ?? options.baseUri ?? \"{$host}\"\n    };\n    super(optionsWithDefaults);\n    // Parameter assignments\n    this.$host = $host;\n  }\n\n  /**\n   * Get an account activities.\n   * @param id The account address\n   * @param options The options parameters.\n   */\n  getAccountActivities(\n    id: string,\n    options?: GetAccountActivitiesOptionalParams\n  ): Promise<GetAccountActivitiesResponse> {\n    return this.sendOperationRequest(\n      { id, options },\n      getAccountActivitiesOperationSpec\n    );\n  }\n\n  /**\n   * Get AEX141 contracts sorted by name or symbol.\n   * @param options The options parameters.\n   */\n  getSortedAex141Contracts(\n    options?: GetSortedAex141ContractsOptionalParams\n  ): Promise<GetSortedAex141ContractsResponse> {\n    return this.sendOperationRequest(\n      { options },\n      getSortedAex141ContractsOperationSpec\n    );\n  }\n\n  /**\n   * Get tokens owned by an account.\n   * @param accountId The account id\n   * @param options The options parameters.\n   */\n  getAex141OwnedTokens(\n    accountId: string,\n    options?: GetAex141OwnedTokensOptionalParams\n  ): Promise<GetAex141OwnedTokensResponse> {\n    return this.sendOperationRequest(\n      { accountId, options },\n      getAex141OwnedTokensOperationSpec\n    );\n  }\n\n  /**\n   * Get owner of a NFT (AEX-141 token).\n   * @param contractId The contract id\n   * @param tokenId The nft token id\n   * @param options The options parameters.\n   */\n  getAex141TokenOwner(\n    contractId: string,\n    tokenId: number,\n    options?: GetAex141TokenOwnerOptionalParams\n  ): Promise<GetAex141TokenOwnerResponse> {\n    return this.sendOperationRequest(\n      { contractId, tokenId, options },\n      getAex141TokenOwnerOperationSpec\n    );\n  }\n\n  /**\n   * Get owners of tokens of a AEX-141 contract.\n   * @param contractId The contract id\n   * @param options The options parameters.\n   */\n  getAex141ContractOwners(\n    contractId: string,\n    options?: GetAex141ContractOwnersOptionalParams\n  ): Promise<GetAex141ContractOwnersResponse> {\n    return this.sendOperationRequest(\n      { contractId, options },\n      getAex141ContractOwnersOperationSpec\n    );\n  }\n\n  /**\n   * Get templates AEX-141 contract tokens.\n   * @param contractId The contract id\n   * @param options The options parameters.\n   */\n  getAex141ContractTemplates(\n    contractId: string,\n    options?: GetAex141ContractTemplatesOptionalParams\n  ): Promise<GetAex141ContractTemplatesResponse> {\n    return this.sendOperationRequest(\n      { contractId, options },\n      getAex141ContractTemplatesOperationSpec\n    );\n  }\n\n  /**\n   * Get AEX-141 template tokens.\n   * @param contractId Contract id\n   * @param templateId Template id\n   * @param options The options parameters.\n   */\n  getAex141TemplateTokens(\n    contractId: string,\n    templateId: number,\n    options?: GetAex141TemplateTokensOptionalParams\n  ): Promise<GetAex141TemplateTokensResponse> {\n    return this.sendOperationRequest(\n      { contractId, templateId, options },\n      getAex141TemplateTokensOperationSpec\n    );\n  }\n\n  /**\n   * Get AEX141 contract meta-info, extensions, limits and stats.\n   * @param id The contract id\n   * @param options The options parameters.\n   */\n  getAex141ByContract(\n    id: string,\n    options?: GetAex141ByContractOptionalParams\n  ): Promise<GetAex141ByContractResponse> {\n    return this.sendOperationRequest(\n      { id, options },\n      getAex141ByContractOperationSpec\n    );\n  }\n\n  /**\n   * Get AEX9 tokens sorted by name or symbol.\n   * @param options The options parameters.\n   */\n  getSortedAex9Tokens(\n    options?: GetSortedAex9TokensOptionalParams\n  ): Promise<GetSortedAex9TokensResponse> {\n    return this.sendOperationRequest(\n      { options },\n      getSortedAex9TokensOperationSpec\n    );\n  }\n\n  /**\n   * Get all AEX9 balances for an account on the last block.\n   * @param accountId Account id\n   * @param options The options parameters.\n   */\n  getAex9AccountBalances(\n    accountId: string,\n    options?: GetAex9AccountBalancesOptionalParams\n  ): Promise<GetAex9AccountBalancesResponse> {\n    return this.sendOperationRequest(\n      { accountId, options },\n      getAex9AccountBalancesOperationSpec\n    );\n  }\n\n  /**\n   * Get AEX9 tokens count.\n   * @param options The options parameters.\n   */\n  getAex9TokensCount(\n    options?: GetAex9TokensCountOptionalParams\n  ): Promise<GetAex9TokensCountResponse> {\n    return this.sendOperationRequest(\n      { options },\n      getAex9TokensCountOperationSpec\n    );\n  }\n\n  /**\n   * Get AEX9 transfers filtered by sender and recipient.\n   * @param sender Sender account id\n   * @param recipient Recipient account id\n   * @param options The options parameters.\n   */\n  getAex9PairTransfers(\n    sender: string,\n    recipient: string,\n    options?: GetAex9PairTransfersOptionalParams\n  ): Promise<GetAex9PairTransfersResponse> {\n    return this.sendOperationRequest(\n      { sender, recipient, options },\n      getAex9PairTransfersOperationSpec\n    );\n  }\n\n  /**\n   * Get AEX9 transfers filtered by sender.\n   * @param id Sender account id\n   * @param options The options parameters.\n   */\n  getAex9SenderTransfers(\n    id: string,\n    options?: GetAex9SenderTransfersOptionalParams\n  ): Promise<GetAex9SenderTransfersResponse> {\n    return this.sendOperationRequest(\n      { id, options },\n      getAex9SenderTransfersOperationSpec\n    );\n  }\n\n  /**\n   * Get AEX9 transfers filtered by recipient.\n   * @param id Recipient account id\n   * @param options The options parameters.\n   */\n  getAex9RecipientTransfers(\n    id: string,\n    options?: GetAex9RecipientTransfersOptionalParams\n  ): Promise<GetAex9RecipientTransfersResponse> {\n    return this.sendOperationRequest(\n      { id, options },\n      getAex9RecipientTransfersOperationSpec\n    );\n  }\n\n  /**\n   * Get AEX9 balances on a contract.\n   * @param contractId Contract id\n   * @param options The options parameters.\n   */\n  getAex9ContractBalances(\n    contractId: string,\n    options?: GetAex9ContractBalancesOptionalParams\n  ): Promise<GetAex9ContractBalancesResponse> {\n    return this.sendOperationRequest(\n      { contractId, options },\n      getAex9ContractBalancesOperationSpec\n    );\n  }\n\n  /**\n   * Get AEX9 balance for an account on a contract.\n   * @param contractId Contract id\n   * @param accountId Account id\n   * @param hash Block hash\n   * @param options The options parameters.\n   */\n  getAex9ContractAccountBalance(\n    contractId: string,\n    accountId: string,\n    hash: string,\n    options?: GetAex9ContractAccountBalanceOptionalParams\n  ): Promise<GetAex9ContractAccountBalanceResponse> {\n    return this.sendOperationRequest(\n      { contractId, accountId, hash, options },\n      getAex9ContractAccountBalanceOperationSpec\n    );\n  }\n\n  /**\n   * Get AEX9 account balance on a contract throughout all heights when changed.\n   * @param contractId Contract id\n   * @param accountId Account id\n   * @param options The options parameters.\n   */\n  getAex9ContractAccountBalanceHistory(\n    contractId: string,\n    accountId: string,\n    options?: GetAex9ContractAccountBalanceHistoryOptionalParams\n  ): Promise<GetAex9ContractAccountBalanceHistoryResponse> {\n    return this.sendOperationRequest(\n      { contractId, accountId, options },\n      getAex9ContractAccountBalanceHistoryOperationSpec\n    );\n  }\n\n  /**\n   * Get AEX9 token events count.\n   * @param contractId Contract id\n   * @param options The options parameters.\n   */\n  getAex9LogsCount(\n    contractId: string,\n    options?: GetAex9LogsCountOptionalParams\n  ): Promise<GetAex9LogsCountResponse> {\n    return this.sendOperationRequest(\n      { contractId, options },\n      getAex9LogsCountOperationSpec\n    );\n  }\n\n  /**\n   * Get AEX9 creation and meta_info information by contract id.\n   * @param id The contract id\n   * @param options The options parameters.\n   */\n  getAex9ByContract(\n    id: string,\n    options?: GetAex9ByContractOptionalParams\n  ): Promise<GetAex9ByContractResponse> {\n    return this.sendOperationRequest(\n      { id, options },\n      getAex9ByContractOperationSpec\n    );\n  }\n\n  /**\n   * Get multiple blocks.\n   * @param options The options parameters.\n   */\n  getBlocks(options?: GetBlocksOptionalParams): Promise<GetBlocksResponse> {\n    return this.sendOperationRequest({ options }, getBlocksOperationSpec);\n  }\n\n  /**\n   * Get a single block.\n   * @param hashOrKbi The block encoded hash or key block index\n   * @param options The options parameters.\n   */\n  getBlock(\n    hashOrKbi: string,\n    options?: GetBlockOptionalParams\n  ): Promise<GetBlockResponse> {\n    return this.sendOperationRequest(\n      { hashOrKbi, options },\n      getBlockOperationSpec\n    );\n  }\n\n  /**\n   * Get a single block.\n   * @param kbi The block key block index\n   * @param mbi The block micro block index, starting from 0\n   * @param options The options parameters.\n   */\n  getBlockByMbi(\n    kbi: number,\n    mbi: number,\n    options?: GetBlockByMbiOptionalParams\n  ): Promise<GetBlockByMbiResponse> {\n    return this.sendOperationRequest(\n      { kbi, mbi, options },\n      getBlockByMbiOperationSpec\n    );\n  }\n\n  /**\n   * Get multiple channels.\n   * @param options The options parameters.\n   */\n  getChannels(\n    options?: GetChannelsOptionalParams\n  ): Promise<GetChannelsResponse> {\n    return this.sendOperationRequest({ options }, getChannelsOperationSpec);\n  }\n\n  /**\n   * Get a single channel.\n   * @param id The channel\n   * @param options The options parameters.\n   */\n  getChannel(\n    id: string,\n    options?: GetChannelOptionalParams\n  ): Promise<GetChannelResponse> {\n    return this.sendOperationRequest({ id, options }, getChannelOperationSpec);\n  }\n\n  /**\n   * Get contract calls.\n   * @param options The options parameters.\n   */\n  getContractsCalls(\n    options?: GetContractsCallsOptionalParams\n  ): Promise<GetContractsCallsResponse> {\n    return this.sendOperationRequest(\n      { options },\n      getContractsCallsOperationSpec\n    );\n  }\n\n  /**\n   * Get contract logs.\n   * @param options The options parameters.\n   */\n  getContractsLogs(\n    options?: GetContractsLogsOptionalParams\n  ): Promise<GetContractsLogsResponse> {\n    return this.sendOperationRequest(\n      { options },\n      getContractsLogsOperationSpec\n    );\n  }\n\n  /**\n   * Get delta stats.\n   * @param options The options parameters.\n   */\n  getDeltastats(\n    options?: GetDeltastatsOptionalParams\n  ): Promise<GetDeltastatsResponse> {\n    return this.sendOperationRequest({ options }, getDeltastatsOperationSpec);\n  }\n\n  /**\n   * Get multiple key blocks.\n   * @param options The options parameters.\n   */\n  getKeyBlocks(\n    options?: GetKeyBlocksOptionalParams\n  ): Promise<GetKeyBlocksResponse> {\n    return this.sendOperationRequest({ options }, getKeyBlocksOperationSpec);\n  }\n\n  /**\n   * Get a single key block.\n   * @param hashOrKbi The key block encoded hash or key block index\n   * @param options The options parameters.\n   */\n  getKeyBlock(\n    hashOrKbi: string,\n    options?: GetKeyBlockOptionalParams\n  ): Promise<GetKeyBlockResponse> {\n    return this.sendOperationRequest(\n      { hashOrKbi, options },\n      getKeyBlockOperationSpec\n    );\n  }\n\n  /**\n   * Get the key block micro blocks.\n   * @param hashOrKbi The key block encoded hash or key block index\n   * @param options The options parameters.\n   */\n  getKeyBlockMicroBlocks(\n    hashOrKbi: string,\n    options?: GetKeyBlockMicroBlocksOptionalParams\n  ): Promise<GetKeyBlockMicroBlocksResponse> {\n    return this.sendOperationRequest(\n      { hashOrKbi, options },\n      getKeyBlockMicroBlocksOperationSpec\n    );\n  }\n\n  /**\n   * Get a micro block\n   * @param hash The micro block encoded hash\n   * @param options The options parameters.\n   */\n  getMicroBlock(\n    hash: string,\n    options?: GetMicroBlockOptionalParams\n  ): Promise<GetMicroBlockResponse> {\n    return this.sendOperationRequest(\n      { hash, options },\n      getMicroBlockOperationSpec\n    );\n  }\n\n  /**\n   * Get a micro block transactions\n   * @param hash The micro block encoded hash\n   * @param options The options parameters.\n   */\n  getMicroBlockTransactions(\n    hash: string,\n    options?: GetMicroBlockTransactionsOptionalParams\n  ): Promise<GetMicroBlockTransactionsResponse> {\n    return this.sendOperationRequest(\n      { hash, options },\n      getMicroBlockTransactionsOperationSpec\n    );\n  }\n\n  /**\n   * Get multiple names.\n   * @param options The options parameters.\n   */\n  getNames(options?: GetNamesOptionalParams): Promise<GetNamesResponse> {\n    return this.sendOperationRequest({ options }, getNamesOperationSpec);\n  }\n\n  /**\n   * Get multiple names.\n   * @param options The options parameters.\n   */\n  getNamesAuctions(\n    options?: GetNamesAuctionsOptionalParams\n  ): Promise<GetNamesAuctionsResponse> {\n    return this.sendOperationRequest(\n      { options },\n      getNamesAuctionsOperationSpec\n    );\n  }\n\n  /**\n   * Get multiple names.\n   * @param options The options parameters.\n   */\n  searchNames(\n    options?: SearchNamesOptionalParams\n  ): Promise<SearchNamesResponse> {\n    return this.sendOperationRequest({ options }, searchNamesOperationSpec);\n  }\n\n  /**\n   * Get a single name.\n   * @param id The name\n   * @param options The options parameters.\n   */\n  getName(\n    id: string,\n    options?: GetNameOptionalParams\n  ): Promise<GetNameResponse> {\n    return this.sendOperationRequest({ id, options }, getNameOperationSpec);\n  }\n\n  /**\n   * Get name auction\n   * @param id The name\n   * @param options The options parameters.\n   */\n  getNameAuction(\n    id: string,\n    options?: GetNameAuctionOptionalParams\n  ): Promise<GetNameAuctionResponse> {\n    return this.sendOperationRequest(\n      { id, options },\n      getNameAuctionOperationSpec\n    );\n  }\n\n  /**\n   * Get name claims\n   * @param id The name or name hash\n   * @param options The options parameters.\n   */\n  getNameClaims(\n    id: string,\n    options?: GetNameClaimsOptionalParams\n  ): Promise<GetNameClaimsResponse> {\n    return this.sendOperationRequest(\n      { id, options },\n      getNameClaimsOperationSpec\n    );\n  }\n\n  /**\n   * Get name pointees\n   * @param id The name\n   * @param options The options parameters.\n   */\n  getNamePointees(\n    id: string,\n    options?: GetNamePointeesOptionalParams\n  ): Promise<GetNamePointeesResponse> {\n    return this.sendOperationRequest(\n      { id, options },\n      getNamePointeesOperationSpec\n    );\n  }\n\n  /**\n   * Get name pointers\n   * @param id The name\n   * @param options The options parameters.\n   */\n  getNamePointers(\n    id: string,\n    options?: GetNamePointersOptionalParams\n  ): Promise<GetNamePointersResponse> {\n    return this.sendOperationRequest(\n      { id, options },\n      getNamePointersOperationSpec\n    );\n  }\n\n  /**\n   * Get name transfers\n   * @param id The name or name hash\n   * @param options The options parameters.\n   */\n  getNameTransfers(\n    id: string,\n    options?: GetNameTransfersOptionalParams\n  ): Promise<GetNameTransfersResponse> {\n    return this.sendOperationRequest(\n      { id, options },\n      getNameTransfersOperationSpec\n    );\n  }\n\n  /**\n   * Get name updates\n   * @param id The name or name hash\n   * @param options The options parameters.\n   */\n  getNameUpdates(\n    id: string,\n    options?: GetNameUpdatesOptionalParams\n  ): Promise<GetNameUpdatesResponse> {\n    return this.sendOperationRequest(\n      { id, options },\n      getNameUpdatesOperationSpec\n    );\n  }\n\n  /**\n   * Get a single oracle.\n   * @param id The oracle\n   * @param options The options parameters.\n   */\n  getOracle(\n    id: string,\n    options?: GetOracleOptionalParams\n  ): Promise<GetOracleResponse> {\n    return this.sendOperationRequest({ id, options }, getOracleOperationSpec);\n  }\n\n  /**\n   * Get multiple oracles.\n   * @param options The options parameters.\n   */\n  getOracles(options?: GetOraclesOptionalParams): Promise<GetOraclesResponse> {\n    return this.sendOperationRequest({ options }, getOraclesOperationSpec);\n  }\n\n  /**\n   * Gets the current syncing status of both middleware and the node\n   * @param options The options parameters.\n   */\n  getStatus(options?: GetStatusOptionalParams): Promise<GetStatusResponse> {\n    return this.sendOperationRequest({ options }, getStatusOperationSpec);\n  }\n\n  /**\n   * Get total accumulated stats.\n   * @param options The options parameters.\n   */\n  getTotalstats(\n    options?: GetTotalstatsOptionalParams\n  ): Promise<GetTotalstatsResponse> {\n    return this.sendOperationRequest({ options }, getTotalstatsOperationSpec);\n  }\n\n  /**\n   * Get multiple transfers.\n   * @param options The options parameters.\n   */\n  getTransfers(\n    options?: GetTransfersOptionalParams\n  ): Promise<GetTransfersResponse> {\n    return this.sendOperationRequest({ options }, getTransfersOperationSpec);\n  }\n\n  /**\n   * Get multiple transactions.\n   * @param options The options parameters.\n   */\n  getTxs(options?: GetTxsOptionalParams): Promise<GetTxsResponse> {\n    return this.sendOperationRequest({ options }, getTxsOperationSpec);\n  }\n\n  /**\n   * Get count of transactions at the latest height.\n   * @param options The options parameters.\n   */\n  getTxCount(options?: GetTxCountOptionalParams): Promise<GetTxCountResponse> {\n    return this.sendOperationRequest({ options }, getTxCountOperationSpec);\n  }\n\n  /**\n   * Get transactions count and its type for given aeternity ID.\n   * @param id The ID of the address/name/oracle/etc\n   * @param options The options parameters.\n   */\n  getTxCountById(\n    id: string,\n    options?: GetTxCountByIdOptionalParams\n  ): Promise<GetTxCountByIdResponse> {\n    return this.sendOperationRequest(\n      { id, options },\n      getTxCountByIdOperationSpec\n    );\n  }\n\n  /**\n   * Get a single transaction.\n   * @param hashOrIndex The transaction encoded hash or index (txi)\n   * @param options The options parameters.\n   */\n  getTx(\n    hashOrIndex: string,\n    options?: GetTxOptionalParams\n  ): Promise<GetTxResponse> {\n    return this.sendOperationRequest(\n      { hashOrIndex, options },\n      getTxOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst getAccountActivitiesOperationSpec: coreClient.OperationSpec = {\n  path: \"/v2/accounts/{id}/activities\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.PathsKlr2M2V2AccountsIdActivitiesGetResponses200ContentApplicationJsonSchema\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true\n    }\n  },\n  queryParameters: [\n    Parameters.ownedOnly,\n    Parameters.type,\n    Parameters.limit,\n    Parameters.scope,\n    Parameters.direction\n  ],\n  urlParameters: [Parameters.$host, Parameters.id],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getSortedAex141ContractsOperationSpec: coreClient.OperationSpec = {\n  path: \"/v2/aex141\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.PathsFlc7UjV2Aex141GetResponses200ContentApplicationJsonSchema\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true\n    }\n  },\n  queryParameters: [\n    Parameters.limit,\n    Parameters.direction,\n    Parameters.by,\n    Parameters.prefix\n  ],\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getAex141OwnedTokensOperationSpec: coreClient.OperationSpec = {\n  path: \"/v2/aex141/owned-nfts/{accountId}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.PathsSs61ZgV2Aex141OwnedNftsAccountidGetResponses200ContentApplicationJsonSchema\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true\n    }\n  },\n  queryParameters: [Parameters.limit, Parameters.direction],\n  urlParameters: [Parameters.$host, Parameters.accountId],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getAex141TokenOwnerOperationSpec: coreClient.OperationSpec = {\n  path: \"/v2/aex141/{contractId}/owner/{tokenId}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: { type: { name: \"String\" } }\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true\n    }\n  },\n  urlParameters: [Parameters.$host, Parameters.contractId, Parameters.tokenId],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getAex141ContractOwnersOperationSpec: coreClient.OperationSpec = {\n  path: \"/v2/aex141/{contractId}/owners\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.Paths1Ilysy5V2Aex141ContractidOwnersGetResponses200ContentApplicationJsonSchema\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true\n    }\n  },\n  queryParameters: [Parameters.limit, Parameters.direction],\n  urlParameters: [Parameters.$host, Parameters.contractId],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getAex141ContractTemplatesOperationSpec: coreClient.OperationSpec = {\n  path: \"/v2/aex141/{contractId}/templates\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.Paths17O9Fn6V2Aex141ContractidTemplatesGetResponses200ContentApplicationJsonSchema\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true\n    }\n  },\n  queryParameters: [Parameters.limit, Parameters.direction],\n  urlParameters: [Parameters.$host, Parameters.contractId],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getAex141TemplateTokensOperationSpec: coreClient.OperationSpec = {\n  path: \"/v2/aex141/{contractId}/templates/{templateId}/tokens\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.PathsNuoourV2Aex141ContractidTemplatesTemplateidTokensGetResponses200ContentApplicationJsonSchema\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true\n    }\n  },\n  queryParameters: [Parameters.limit, Parameters.direction],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.contractId,\n    Parameters.templateId\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getAex141ByContractOperationSpec: coreClient.OperationSpec = {\n  path: \"/v2/aex141/{id}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Aex141Response\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true\n    }\n  },\n  urlParameters: [Parameters.$host, Parameters.id],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getSortedAex9TokensOperationSpec: coreClient.OperationSpec = {\n  path: \"/v2/aex9\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.Paths1Wbogg8V2Aex9GetResponses200ContentApplicationJsonSchema\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true\n    }\n  },\n  queryParameters: [\n    Parameters.limit,\n    Parameters.direction,\n    Parameters.by,\n    Parameters.prefix\n  ],\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getAex9AccountBalancesOperationSpec: coreClient.OperationSpec = {\n  path: \"/v2/aex9/account-balances/{account_id}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.Paths1BsirxgV2Aex9AccountBalancesAccountIdGetResponses200ContentApplicationJsonSchema\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true\n    }\n  },\n  urlParameters: [Parameters.$host, Parameters.accountId1],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getAex9TokensCountOperationSpec: coreClient.OperationSpec = {\n  path: \"/v2/aex9/count\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: { type: { name: \"Number\" } }\n    }\n  },\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getAex9PairTransfersOperationSpec: coreClient.OperationSpec = {\n  path: \"/v2/aex9/transfers/from-to/{sender}/{recipient}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.Paths1V0FiznV2Aex9TransfersFromToSenderRecipientGetResponses200ContentApplicationJsonSchema\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true\n    }\n  },\n  queryParameters: [Parameters.limit, Parameters.direction],\n  urlParameters: [Parameters.$host, Parameters.sender, Parameters.recipient],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getAex9SenderTransfersOperationSpec: coreClient.OperationSpec = {\n  path: \"/v2/aex9/transfers/from/{id}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.Paths1X48QgjV2Aex9TransfersFromIdGetResponses200ContentApplicationJsonSchema\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true\n    }\n  },\n  queryParameters: [Parameters.limit, Parameters.direction],\n  urlParameters: [Parameters.$host, Parameters.id],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getAex9RecipientTransfersOperationSpec: coreClient.OperationSpec = {\n  path: \"/v2/aex9/transfers/to/{id}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.Paths1DkkopqV2Aex9TransfersToIdGetResponses200ContentApplicationJsonSchema\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true\n    }\n  },\n  queryParameters: [Parameters.limit, Parameters.direction],\n  urlParameters: [Parameters.$host, Parameters.id],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getAex9ContractBalancesOperationSpec: coreClient.OperationSpec = {\n  path: \"/v2/aex9/{contractId}/balances\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.PathsNi359V2Aex9ContractidBalancesGetResponses200ContentApplicationJsonSchema\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true\n    }\n  },\n  queryParameters: [Parameters.limit, Parameters.direction, Parameters.by],\n  urlParameters: [Parameters.$host, Parameters.contractId],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getAex9ContractAccountBalanceOperationSpec: coreClient.OperationSpec = {\n  path: \"/v2/aex9/{contractId}/balances/{accountId}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.Paths1R02SlwV2Aex9ContractidBalancesAccountidGetResponses200ContentApplicationJsonSchema\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true\n    }\n  },\n  queryParameters: [Parameters.hash],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.accountId,\n    Parameters.contractId\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getAex9ContractAccountBalanceHistoryOperationSpec: coreClient.OperationSpec = {\n  path: \"/v2/aex9/{contractId}/balances/{accountId}/history\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.Paths1T9RwnyV2Aex9ContractidBalancesAccountidHistoryGetResponses200ContentApplicationJsonSchema\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true\n    }\n  },\n  queryParameters: [Parameters.limit, Parameters.scope, Parameters.direction],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.accountId,\n    Parameters.contractId\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getAex9LogsCountOperationSpec: coreClient.OperationSpec = {\n  path: \"/v2/aex9/{contractId}/logs-count\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: { type: { name: \"Number\" } }\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true\n    }\n  },\n  urlParameters: [Parameters.$host, Parameters.contractId],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getAex9ByContractOperationSpec: coreClient.OperationSpec = {\n  path: \"/v2/aex9/{id}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Aex9Response\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true\n    }\n  },\n  urlParameters: [Parameters.$host, Parameters.id],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getBlocksOperationSpec: coreClient.OperationSpec = {\n  path: \"/v2/blocks\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.Paths15Ih6XV2BlocksGetResponses200ContentApplicationJsonSchema\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true\n    }\n  },\n  queryParameters: [Parameters.limit, Parameters.scope, Parameters.direction],\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getBlockOperationSpec: coreClient.OperationSpec = {\n  path: \"/v2/blocks/{hash_or_kbi}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Block\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true\n    },\n    404: {\n      bodyMapper: Mappers.NotFoundResponse,\n      isError: true\n    }\n  },\n  urlParameters: [Parameters.$host, Parameters.hashOrKbi],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getBlockByMbiOperationSpec: coreClient.OperationSpec = {\n  path: \"/v2/blocks/{kbi}/{mbi}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Block\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true\n    },\n    404: {\n      bodyMapper: Mappers.NotFoundResponse,\n      isError: true\n    }\n  },\n  urlParameters: [Parameters.$host, Parameters.kbi, Parameters.mbi],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getChannelsOperationSpec: coreClient.OperationSpec = {\n  path: \"/v2/channels\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.Paths1Txl2A9V2ChannelsGetResponses200ContentApplicationJsonSchema\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true\n    }\n  },\n  queryParameters: [\n    Parameters.limit,\n    Parameters.scope,\n    Parameters.direction,\n    Parameters.state\n  ],\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getChannelOperationSpec: coreClient.OperationSpec = {\n  path: \"/v2/channels/{id}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Channel\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true\n    },\n    404: {\n      bodyMapper: Mappers.NotFoundResponse,\n      isError: true\n    }\n  },\n  urlParameters: [Parameters.$host, Parameters.id],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getContractsCallsOperationSpec: coreClient.OperationSpec = {\n  path: \"/v2/contracts/calls\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.Paths187U0XzV2ContractsCallsGetResponses200ContentApplicationJsonSchema\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true\n    }\n  },\n  queryParameters: [Parameters.limit, Parameters.scope, Parameters.direction],\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getContractsLogsOperationSpec: coreClient.OperationSpec = {\n  path: \"/v2/contracts/logs\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.PathsB246H1V2ContractsLogsGetResponses200ContentApplicationJsonSchema\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true\n    }\n  },\n  queryParameters: [\n    Parameters.limit,\n    Parameters.scope,\n    Parameters.direction,\n    Parameters.contractId1,\n    Parameters.event,\n    Parameters.functionPrefix,\n    Parameters.data,\n    Parameters.aexnArgs\n  ],\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getDeltastatsOperationSpec: coreClient.OperationSpec = {\n  path: \"/v2/deltastats\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.Paths7Pbec0V2DeltastatsGetResponses200ContentApplicationJsonSchema\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true\n    }\n  },\n  queryParameters: [Parameters.limit, Parameters.scope, Parameters.direction],\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getKeyBlocksOperationSpec: coreClient.OperationSpec = {\n  path: \"/v2/key-blocks\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.Paths1Ulxr59V2KeyBlocksGetResponses200ContentApplicationJsonSchema\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true\n    }\n  },\n  queryParameters: [Parameters.limit, Parameters.scope, Parameters.direction],\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getKeyBlockOperationSpec: coreClient.OperationSpec = {\n  path: \"/v2/key-blocks/{hash_or_kbi}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.KeyBlock\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true\n    },\n    404: {\n      bodyMapper: Mappers.NotFoundResponse,\n      isError: true\n    }\n  },\n  urlParameters: [Parameters.$host, Parameters.hashOrKbi],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getKeyBlockMicroBlocksOperationSpec: coreClient.OperationSpec = {\n  path: \"/v2/key-blocks/{hash_or_kbi}/micro-blocks\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.PathsO99PhzV2KeyBlocksHashOrKbiMicroBlocksGetResponses200ContentApplicationJsonSchema\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true\n    }\n  },\n  queryParameters: [Parameters.limit, Parameters.scope, Parameters.direction],\n  urlParameters: [Parameters.$host, Parameters.hashOrKbi],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getMicroBlockOperationSpec: coreClient.OperationSpec = {\n  path: \"/v2/micro-blocks/{hash}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.MicroBlock\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true\n    },\n    404: {\n      bodyMapper: Mappers.NotFoundResponse,\n      isError: true\n    }\n  },\n  urlParameters: [Parameters.$host, Parameters.hash1],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getMicroBlockTransactionsOperationSpec: coreClient.OperationSpec = {\n  path: \"/v2/micro-blocks/{hash}/txs\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.PathsGuqvhdV2MicroBlocksHashTxsGetResponses200ContentApplicationJsonSchema\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true\n    }\n  },\n  urlParameters: [Parameters.$host, Parameters.hash1],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getNamesOperationSpec: coreClient.OperationSpec = {\n  path: \"/v2/names\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.PathsK9TkttV2NamesGetResponses200ContentApplicationJsonSchema\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true\n    }\n  },\n  queryParameters: [\n    Parameters.limit,\n    Parameters.direction,\n    Parameters.by,\n    Parameters.ownedBy,\n    Parameters.state1\n  ],\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getNamesAuctionsOperationSpec: coreClient.OperationSpec = {\n  path: \"/v2/names/auctions\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Auction\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true\n    }\n  },\n  queryParameters: [Parameters.limit, Parameters.scope, Parameters.direction],\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst searchNamesOperationSpec: coreClient.OperationSpec = {\n  path: \"/v2/names/search\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.Paths3Msq0DV2NamesSearchGetResponses200ContentApplicationJsonSchema\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true\n    }\n  },\n  queryParameters: [Parameters.limit, Parameters.scope, Parameters.direction],\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getNameOperationSpec: coreClient.OperationSpec = {\n  path: \"/v2/names/{id}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Name\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true\n    },\n    404: {\n      bodyMapper: Mappers.NotFoundResponse,\n      isError: true\n    }\n  },\n  urlParameters: [Parameters.$host, Parameters.id],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getNameAuctionOperationSpec: coreClient.OperationSpec = {\n  path: \"/v2/names/{id}/auction\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Auction\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true\n    },\n    404: {\n      bodyMapper: Mappers.NotFoundResponse,\n      isError: true\n    }\n  },\n  queryParameters: [Parameters.limit, Parameters.scope, Parameters.direction],\n  urlParameters: [Parameters.$host, Parameters.id],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getNameClaimsOperationSpec: coreClient.OperationSpec = {\n  path: \"/v2/names/{id}/claims\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.NameClaim\n    },\n    404: {\n      bodyMapper: Mappers.NotFoundResponse,\n      isError: true\n    }\n  },\n  queryParameters: [Parameters.limit, Parameters.scope, Parameters.direction],\n  urlParameters: [Parameters.$host, Parameters.id],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getNamePointeesOperationSpec: coreClient.OperationSpec = {\n  path: \"/v2/names/{id}/pointees\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.PathsDjelzuV2NamesIdPointeesGetResponses200ContentApplicationJsonSchema\n    },\n    404: {\n      bodyMapper: Mappers.NotFoundResponse,\n      isError: true\n    }\n  },\n  urlParameters: [Parameters.$host, Parameters.id],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getNamePointersOperationSpec: coreClient.OperationSpec = {\n  path: \"/v2/names/{id}/pointers\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: {\n        type: { name: \"Dictionary\", value: { type: { name: \"any\" } } }\n      }\n    },\n    404: {\n      bodyMapper: Mappers.NotFoundResponse,\n      isError: true\n    }\n  },\n  urlParameters: [Parameters.$host, Parameters.id],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getNameTransfersOperationSpec: coreClient.OperationSpec = {\n  path: \"/v2/names/{id}/transfers\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.NameTransfer\n    },\n    404: {\n      bodyMapper: Mappers.NotFoundResponse,\n      isError: true\n    }\n  },\n  queryParameters: [Parameters.limit, Parameters.scope, Parameters.direction],\n  urlParameters: [Parameters.$host, Parameters.id],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getNameUpdatesOperationSpec: coreClient.OperationSpec = {\n  path: \"/v2/names/{id}/updates\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.NameUpdate\n    },\n    404: {\n      bodyMapper: Mappers.NotFoundResponse,\n      isError: true\n    }\n  },\n  queryParameters: [Parameters.limit, Parameters.scope, Parameters.direction],\n  urlParameters: [Parameters.$host, Parameters.id],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getOracleOperationSpec: coreClient.OperationSpec = {\n  path: \"/v2/oracle/{id}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Oracle\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true\n    },\n    404: {\n      bodyMapper: Mappers.NotFoundResponse,\n      isError: true\n    }\n  },\n  urlParameters: [Parameters.$host, Parameters.id],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getOraclesOperationSpec: coreClient.OperationSpec = {\n  path: \"/v2/oracles\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.PathsB0YvynV2OraclesGetResponses200ContentApplicationJsonSchema\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true\n    }\n  },\n  queryParameters: [Parameters.limit, Parameters.scope, Parameters.direction],\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getStatusOperationSpec: coreClient.OperationSpec = {\n  path: \"/v2/status\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Status\n    }\n  },\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getTotalstatsOperationSpec: coreClient.OperationSpec = {\n  path: \"/v2/totalstats\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.Paths15PsutbV2TotalstatsGetResponses200ContentApplicationJsonSchema\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true\n    }\n  },\n  queryParameters: [Parameters.limit, Parameters.scope, Parameters.direction],\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getTransfersOperationSpec: coreClient.OperationSpec = {\n  path: \"/v2/transfers\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.PathsIgs9Z1V2TransfersGetResponses200ContentApplicationJsonSchema\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true\n    }\n  },\n  queryParameters: [Parameters.limit, Parameters.scope, Parameters.direction],\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getTxsOperationSpec: coreClient.OperationSpec = {\n  path: \"/v2/txs\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.PathsFclv4TV2TxsGetResponses200ContentApplicationJsonSchema\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true\n    }\n  },\n  queryParameters: [\n    Parameters.limit,\n    Parameters.scope,\n    Parameters.direction,\n    Parameters.type1,\n    Parameters.typeGroup,\n    Parameters.account,\n    Parameters.contract,\n    Parameters.channel,\n    Parameters.oracle,\n    Parameters.senderId,\n    Parameters.recipientId,\n    Parameters.entrypoint\n  ],\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getTxCountOperationSpec: coreClient.OperationSpec = {\n  path: \"/v2/txs/count\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: { type: { name: \"Number\" } }\n    }\n  },\n  queryParameters: [Parameters.scope, Parameters.txType, Parameters.id1],\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getTxCountByIdOperationSpec: coreClient.OperationSpec = {\n  path: \"/v2/txs/count/{id}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper:\n        Mappers.Paths16Tt677V2TxsCountIdGetResponses200ContentApplicationJsonSchema\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true\n    }\n  },\n  urlParameters: [Parameters.$host, Parameters.id],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getTxOperationSpec: coreClient.OperationSpec = {\n  path: \"/v2/txs/{hash_or_index}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Tx\n    },\n    400: {\n      bodyMapper: Mappers.ErrorResponse,\n      isError: true\n    },\n    404: {\n      bodyMapper: Mappers.NotFoundResponse,\n      isError: true\n    }\n  },\n  urlParameters: [Parameters.$host, Parameters.hashOrIndex],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","// eslint-disable-next-line max-classes-per-file\nimport BigNumber from 'bignumber.js';\nimport { OperationArguments, OperationSpec } from '@azure/core-client';\nimport {\n  genRequestQueuesPolicy, genCombineGetRequestsPolicy, genErrorFormatterPolicy,\n  genVersionCheckPolicy, genRetryOnFailurePolicy,\n} from './utils/autorest';\nimport { Middleware as MiddlewareApi, MiddlewareOptionalParams, ErrorResponse } from './apis/middleware';\nimport { mapObject } from './utils/other';\nimport { Encoded } from './utils/encoder';\nimport { ConsensusProtocolVersion } from './tx/builder/constants';\n\nconst bigIntPropertyNames = [] as const;\n\nconst numberPropertyNames = [] as const;\n\nclass MiddlewareTransformed extends MiddlewareApi {\n  override async sendOperationRequest(\n    operationArguments: OperationArguments,\n    operationSpec: OperationSpec,\n  ): Promise<any> {\n    const args = mapObject(\n      operationArguments,\n      ([key, value]) => [key, this.#encodeArg(value)],\n    ) as OperationArguments;\n    return this.#decodeRes(await super.sendOperationRequest(args, operationSpec));\n  }\n\n  #mapData(data: any, transform: {\n    bigInt: (v: any) => any;\n    number: (v: any) => any;\n  }): unknown {\n    if (Array.isArray(data)) return data.map((d) => this.#mapData(d, transform));\n    if (data != null && typeof data === 'object') {\n      return mapObject(data, ([key, value]) => {\n        if (value == null) return [key, value];\n        if (bigIntPropertyNames.some((k) => k === key)) return [key, transform.bigInt(value)];\n        if (numberPropertyNames.some((k) => k === key)) return [key, transform.number(value)];\n        return [key, this.#mapData(value, transform)];\n      });\n    }\n    return data;\n  }\n\n  #encodeArg(data: any): any {\n    return this.#mapData(data, {\n      bigInt: (value) => {\n        if (value instanceof BigNumber) return value.toFixed();\n        return value.toString();\n      },\n      number: (value) => value.toString(),\n    });\n  }\n\n  #decodeRes(data: any): any {\n    return this.#mapData(data, {\n      bigInt: (value) => BigInt(value),\n      number: (value) => +value,\n    });\n  }\n}\n\ntype BigIntPropertyNames = typeof bigIntPropertyNames[number];\ntype NumberPropertyNames = typeof numberPropertyNames[number];\ntype PreserveOptional<NewType, OrigType> =\n  OrigType extends undefined ? NewType | undefined : NewType;\nexport type TransformMiddlewareType<Type> =\n  Type extends (...args: infer Args) => infer Ret\n    ? (...args: TransformMiddlewareType<Args>) => TransformMiddlewareType<Ret>\n    : Type extends [infer Item, ...infer Rest]\n      ? [TransformMiddlewareType<Item>, ...TransformMiddlewareType<Rest>]\n      : Type extends Array<infer Item>\n        ? Array<TransformMiddlewareType<Item>>\n        : Type extends Promise<infer T>\n          ? Promise<TransformMiddlewareType<T>>\n          : Type extends { [P in any]: any }\n            ? {\n              [Property in keyof Type]:\n              Property extends BigIntPropertyNames\n                ? PreserveOptional<bigint, Type[Property]>\n                : Property extends NumberPropertyNames\n                  ? PreserveOptional<number, Type[Property]>\n                  : Property extends 'txHash'\n                    ? PreserveOptional<Encoded.TxHash, Type[Property]>\n                    : Property extends 'bytecode'\n                      ? PreserveOptional<Encoded.ContractBytearray, Type[Property]>\n                      : TransformMiddlewareType<Type[Property]>\n            }\n            : Type;\ntype MiddlewareTransformedApi = new (...args: ConstructorParameters<typeof MiddlewareApi>) => {\n  [Name in keyof InstanceType<typeof MiddlewareApi>]:\n  Name extends 'pipeline' | 'sendRequest' | 'sendOperationRequest'\n    ? MiddlewareApi[Name] : TransformMiddlewareType<MiddlewareApi[Name]>\n};\n\nexport interface MiddlewareInfo {\n  url: string;\n  nodeNetworkId: string;\n  version: string;\n  consensusProtocolVersion: ConsensusProtocolVersion;\n}\n\nexport default class Middleware\n  extends (MiddlewareTransformed as unknown as MiddlewareTransformedApi) {\n  /**\n   * @param url - Url for middleware API\n   * @param options - Options\n   * @param options.ignoreVersion - Don't ensure that the middleware is supported\n   * @param options.retryCount - Amount of extra requests to do in case of failure\n   * @param options.retryOverallDelay - Time in ms to wait between all retries\n   */\n  constructor(\n    url: string,\n    {\n      ignoreVersion = false, retryCount = 3, retryOverallDelay = 800, ...options\n    }: MiddlewareOptionalParams & {\n      ignoreVersion?: boolean;\n      retryCount?: number;\n      retryOverallDelay?: number;\n    } = {},\n  ) {\n    // eslint-disable-next-line constructor-super\n    super(url, {\n      allowInsecureConnection: true,\n      additionalPolicies: [\n        genRequestQueuesPolicy(),\n        genCombineGetRequestsPolicy(),\n        genRetryOnFailurePolicy(retryCount, retryOverallDelay),\n        genErrorFormatterPolicy((body: ErrorResponse) => ` ${body.error}`),\n      ],\n      ...options,\n    });\n    if (!ignoreVersion) {\n      const statusPromise = this.getStatus();\n      const versionPromise = statusPromise.then(({ mdwVersion }) => mdwVersion, (error) => error);\n      this.pipeline.addPolicy(\n        genVersionCheckPolicy('middleware', '/v2/status', versionPromise, '1.47.0', '2.0.0'),\n      );\n    }\n  }\n}\n","import BrowserConnection from './connection/Browser';\n\n/**\n * Browser connection proxy\n * Provide functionality to easily forward messages from one connection to another and back\n * @category aepp wallet communication\n * @param con1 - first connection\n * @param con2 - second connection\n * @returns a function to stop proxying\n */\nexport default (con1: BrowserConnection, con2: BrowserConnection): () => void => {\n  con1.connect((msg: any) => con2.sendMessage(msg), () => con2.disconnect());\n  con2.connect((msg: any) => con1.sendMessage(msg), () => con1.disconnect());\n\n  return () => {\n    con1.disconnect();\n    con2.disconnect();\n  };\n};\n","import { AlreadyConnectedError, NoWalletConnectedError } from '../../utils/errors';\n\n/**\n * Browser connection base interface\n * @category aepp wallet communication\n */\nexport default abstract class BrowserConnection {\n  debug: boolean;\n\n  protected constructor({ debug = false }: { debug?: boolean }) {\n    this.debug = debug;\n  }\n\n  /**\n   * Connect\n   * @param onMessage - Message handler\n   * @param onDisconnect - trigger when runtime connection in closed\n   */\n  connect(\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    onMessage: (message: any, origin: string, source: any) => void,\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    onDisconnect: () => void,\n  ): void {\n    if (this.isConnected()) throw new AlreadyConnectedError('You already connected');\n  }\n\n  /**\n   * Disconnect\n   */\n  disconnect(): void {\n    if (!this.isConnected()) throw new NoWalletConnectedError('You dont have connection. Please connect before');\n  }\n\n  /**\n   * Receive message\n   */\n  protected receiveMessage(message: any): void {\n    if (this.debug) console.log('Receive message:', message);\n  }\n\n  /**\n   * Send message\n   */\n  sendMessage(message: any): void {\n    if (this.debug) console.log('Send message:', message);\n  }\n\n  /**\n   * Check if connected\n   * @returns Is connected\n   */\n  abstract isConnected(): boolean;\n}\n","import BrowserConnection from './Browser';\nimport { MESSAGE_DIRECTION } from '../schema';\nimport { InternalError, RpcConnectionError } from '../../utils/errors';\n\nexport type ImplPostMessage = Pick<Window, 'addEventListener' | 'removeEventListener' | 'postMessage'>;\n\n/**\n * Browser window Post Message connector module\n * @category aepp wallet communication\n */\nexport default class BrowserWindowMessageConnection extends BrowserConnection {\n  origin?: string;\n\n  sendDirection?: MESSAGE_DIRECTION;\n\n  receiveDirection: MESSAGE_DIRECTION;\n\n  listener?: (this: Window, ev: MessageEvent<any>) => void;\n\n  #onDisconnect?: () => void;\n\n  #target?: ImplPostMessage;\n\n  #self: ImplPostMessage;\n\n  /**\n   * @param options - Options\n   * @param options.target Target window for message\n   * @param options.self Host window for message\n   * @param options.origin Origin of receiver\n   * @param options.sendDirection Wrapping messages into additional struct\n   * `({ type: 'to_aepp' || 'to_waellet', data })`\n   * Used for handling messages between content script and page\n   * @param options.receiveDirection Unwrapping messages from additional struct\n   */\n  constructor({\n    target,\n    self = window,\n    origin,\n    sendDirection,\n    receiveDirection = MESSAGE_DIRECTION.to_aepp,\n    ...options\n  }: {\n    target?: ImplPostMessage;\n    self?: ImplPostMessage;\n    origin?: string;\n    sendDirection?: MESSAGE_DIRECTION;\n    receiveDirection?: MESSAGE_DIRECTION;\n    debug?: boolean;\n  } = {}) {\n    super(options);\n    this.#target = target;\n    this.#self = self;\n    this.origin = origin;\n    this.sendDirection = sendDirection;\n    this.receiveDirection = receiveDirection;\n  }\n\n  isConnected(): boolean {\n    return this.listener != null;\n  }\n\n  override connect(\n    onMessage: (message: any, origin: string, source: MessageEventSource | null) => void,\n    onDisconnect: () => void,\n  ): void {\n    super.connect(onMessage, onDisconnect);\n    this.listener = (message: MessageEvent<any>) => {\n      // TODO: strict validate origin and source instead of checking message structure\n      if (\n        typeof message.data !== 'object'\n        || (message.data.jsonrpc ?? message.data.data?.jsonrpc) !== '2.0'\n      ) return;\n      if (this.origin != null && this.origin !== message.origin) return;\n      if (this.#target != null && this.#target !== message.source) return;\n      this.receiveMessage(message);\n      let { data } = message;\n      if (data.type != null) {\n        if (message.data.type !== this.receiveDirection) return;\n        data = data.data;\n      }\n      onMessage(data, message.origin, message.source);\n    };\n    this.#self.addEventListener('message', this.listener);\n    this.#onDisconnect = onDisconnect;\n  }\n\n  override disconnect(): void {\n    super.disconnect();\n    if (this.listener == null || this.#onDisconnect == null) {\n      throw new InternalError('Expected to not happen, required for TS');\n    }\n    this.#self.removeEventListener('message', this.listener);\n    delete this.listener;\n    this.#onDisconnect();\n    this.#onDisconnect = undefined;\n  }\n\n  override sendMessage(msg: any): void {\n    if (this.#target == null) throw new RpcConnectionError('Can\\'t send messages without target');\n    const message = this.sendDirection != null ? { type: this.sendDirection, data: msg } : msg;\n    super.sendMessage(message);\n    this.#target.postMessage(message, this.origin ?? '*');\n  }\n}\n","import BrowserConnection from './connection/Browser';\nimport BrowserWindowMessageConnection from './connection/BrowserWindowMessage';\nimport { MESSAGE_DIRECTION, METHODS } from './schema';\nimport { WalletInfo } from './rpc/types';\nimport { UnsupportedPlatformError } from '../utils/errors';\n\ninterface Wallet {\n  info: WalletInfo;\n  getConnection: () => BrowserWindowMessageConnection;\n}\ninterface Wallets { [key: string]: Wallet }\n\n/**\n * A function to detect available wallets\n * @category aepp wallet communication\n * @param connection - connection to use to detect wallets\n * @param onDetected - call-back function which trigger on new wallet\n * @returns a function to stop scanning\n */\nexport default (\n  connection: BrowserConnection,\n  onDetected: ({ wallets, newWallet }: { wallets: Wallets; newWallet: Wallet }) => void,\n): () => void => {\n  if (window == null) throw new UnsupportedPlatformError('Window object not found, you can run wallet detector only in browser');\n  const wallets: Wallets = {};\n\n  connection.connect((\n    { method, params }: { method: string; params: WalletInfo },\n    origin: string,\n    source: Window,\n  ) => {\n    if (method !== METHODS.readyToConnect || wallets[params.id] != null) return;\n\n    const wallet = {\n      info: params,\n      getConnection() {\n        return new BrowserWindowMessageConnection({\n          target: source,\n          ...params.type === 'extension' ? {\n            sendDirection: MESSAGE_DIRECTION.to_waellet,\n            receiveDirection: MESSAGE_DIRECTION.to_aepp,\n            ...window.origin !== 'null' && { origin: window.origin },\n          } : {\n            origin: params.origin,\n          },\n        });\n      },\n    };\n    wallets[wallet.info.id] = wallet;\n    onDetected({ wallets, newWallet: wallet });\n  }, () => {});\n\n  return () => connection.disconnect();\n};\n","import { Runtime } from 'webextension-polyfill';\nimport BrowserConnection from './Browser';\nimport { UnexpectedTsError } from '../../utils/errors';\n\n/**\n * BrowserRuntimeConnection\n * Handle browser runtime communication\n * @category aepp wallet communication\n */\nexport default class BrowserRuntimeConnection extends BrowserConnection {\n  port: Runtime.Port;\n\n  #listeners?: [(message: any, port: Runtime.Port) => void, () => void];\n\n  constructor({ port, ...options }: { port: Runtime.Port; debug: boolean }) {\n    super(options);\n    this.port = port;\n  }\n\n  override disconnect(): void {\n    super.disconnect();\n    this.port.disconnect();\n    if (this.#listeners == null) throw new UnexpectedTsError();\n    this.port.onMessage.removeListener(this.#listeners[0]);\n    this.port.onDisconnect.removeListener(this.#listeners[1]);\n    this.#listeners = undefined;\n  }\n\n  override connect(\n    onMessage: (message: any, origin: string, source: Runtime.Port) => void,\n    onDisconnect: () => void,\n  ): void {\n    super.connect(onMessage, onDisconnect);\n    this.#listeners = [\n      (message, port) => {\n        this.receiveMessage(message);\n        // TODO: make `origin` optional because sender url is not available on aepp side\n        onMessage(message, port.sender?.url ?? '', port);\n      },\n      onDisconnect,\n    ];\n    this.port.onMessage.addListener(this.#listeners[0]);\n    this.port.onDisconnect.addListener(this.#listeners[1]);\n  }\n\n  override sendMessage(message: any): void {\n    super.sendMessage(message);\n    this.port.postMessage(message);\n  }\n\n  isConnected(): boolean {\n    return this.#listeners != null;\n  }\n}\n","import { TypeResolver, ContractByteArrayEncoder } from '@aeternity/aepp-calldata';\nimport { AciValue } from './utils/typed-data';\nimport { Encoded } from './utils/encoder';\nimport { RpcError } from './aepp-wallet-communication/schema';\n\n/**\n * @category exception\n * @deprecated this exception is not thrown anymore\n */\nexport class RpcBroadcastError extends RpcError {\n  static override code = 3;\n\n  override code = 3;\n\n  constructor(data?: any) {\n    super('Broadcast failed');\n    this.data = data;\n    this.name = 'RpcBroadcastError';\n  }\n}\n\n/**\n * @deprecated use isAuctionName instead\n */\nexport const NAME_BID_MAX_LENGTH = 12; // # this is the max length for a domain to be part of a bid\n\n/**\n * @deprecated use ContractByteArrayEncoder:encodeWithType from \\@aeternity/aepp-calldata\n */\nexport function encodeFateValue(value: unknown, aci: AciValue): Encoded.ContractBytearray {\n  const valueType = new TypeResolver().resolveType(aci, {});\n  return new ContractByteArrayEncoder().encodeWithType(value, valueType);\n}\n\n/**\n * @deprecated use ContractByteArrayEncoder:decodeWithType from \\@aeternity/aepp-calldata\n */\nexport function decodeFateValue(value: Encoded.ContractBytearray, aci: AciValue): any {\n  const valueType = new TypeResolver().resolveType(aci, {});\n  return new ContractByteArrayEncoder().decodeWithType(value, valueType);\n}\n","export {\n  _getPollInterval, InvalidTxError, getHeight, poll, awaitHeight, waitForTxConfirm, sendTransaction,\n  getAccount, getBalance, getCurrentGeneration, getGeneration, getMicroBlockTransactions,\n  getKeyBlock, getMicroBlockHeader, txDryRun, getContractByteCode, getContract, getName,\n  resolveName,\n} from './chain';\nexport {\n  getAddressFromPriv, isAddressValid, genSalt, encodeUnsigned, hash, encodeContractAddress,\n  generateKeyPairFromSecret, generateKeyPair, sign, verify, messageToHash, signMessage,\n  verifyMessage, isValidKeypair,\n} from './utils/crypto';\nexport { recover, dump } from './utils/keystore';\nexport type { Keystore } from './utils/keystore';\nexport { toBytes } from './utils/bytes';\nexport {\n  buildTx, buildTxAsync, buildTxHash, unpackTx, buildContractIdByContractTx,\n} from './tx/builder';\nexport {\n  buildContractId, oracleQueryId, produceNameId, commitmentHash, readInt, isNameValid, ensureName,\n  getDefaultPointerKey, getMinimumNameFee, computeBidFee, computeAuctionEndBlock, isAuctionName,\n} from './tx/builder/helpers';\nexport {\n  MAX_AUTH_FUN_GAS, NAME_TTL, NAME_MAX_TTL, NAME_MAX_CLIENT_TTL, CLIENT_TTL, MIN_GAS_PRICE,\n  NAME_FEE_MULTIPLIER, NAME_FEE_BID_INCREMENT, NAME_BID_TIMEOUT_BLOCKS, NAME_MAX_LENGTH_FEE,\n  NAME_BID_RANGES, ConsensusProtocolVersion, VmVersion, AbiVersion, Tag,\n} from './tx/builder/constants';\nexport type { Int, AensName } from './tx/builder/constants';\n// TODO: move to constants\nexport {\n  ORACLE_TTL_TYPES, ORACLE_TTL, QUERY_TTL, RESPONSE_TTL, DRY_RUN_ACCOUNT, CallReturnType,\n} from './tx/builder/schema';\nexport {\n  getExecutionCost, getExecutionCostBySignedTx, getExecutionCostUsingNode,\n} from './tx/execution-cost';\nexport { default as getTransactionSignerAddress } from './tx/transaction-signer';\nexport {\n  AE_AMOUNT_FORMATS, formatAmount, toAe, toAettos, prefixedAmount,\n} from './utils/amount-formatter';\nexport {\n  DerivationError, deriveChild, derivePathFromKey, getMasterKeyFromSeed, derivePathFromSeed,\n  getKeyPair, generateSaveHDWalletFromSeed, getSaveHDWalletAccounts, getHdWalletAccountFromSeed,\n} from './utils/hd-wallet';\nexport {\n  encode, decode, Encoding, Encoded,\n} from './utils/encoder';\nexport { hashTypedData, hashDomain, hashJson } from './utils/typed-data';\nexport {\n  aensRevoke, aensUpdate, aensTransfer, aensQuery, aensClaim, aensPreclaim, aensBid,\n} from './aens';\nexport { default as Contract } from './contract/Contract';\nexport type { ContractMethodsBase } from './contract/Contract';\nexport {\n  pollForQueries, pollForQueryResponse, getQueryObject, postQueryToOracle, extendOracleTtl,\n  respondToQuery, getOracleObject, registerOracle,\n} from './oracle';\nexport { spend, transferFunds, payForTransaction } from './spend';\nexport { createGeneralizedAccount, buildAuthTxHash, buildAuthTxHashByGaMetaTx } from './contract/ga';\n\nexport { default as AeSdkMethods } from './AeSdkMethods';\nexport { default as AeSdkBase } from './AeSdkBase';\nexport { default as AeSdk } from './AeSdk';\nexport { default as AeSdkAepp } from './AeSdkAepp';\nexport { default as AeSdkWallet } from './AeSdkWallet';\nexport { default as Node } from './Node';\nexport { default as verifyTransaction } from './tx/validator';\nexport { default as AccountBase } from './account/Base';\nexport { default as MemoryAccount } from './account/Memory';\nexport { default as AccountGeneralized } from './account/Generalized';\nexport { default as AccountLedger } from './account/Ledger';\nexport { default as AccountLedgerFactory } from './account/LedgerFactory';\nexport { default as CompilerBase } from './contract/compiler/Base';\nexport { default as CompilerHttp } from './contract/compiler/Http';\nexport { default as Channel } from './channel/Contract';\nexport {\n  default as _MiddlewareSubscriber,\n  MiddlewareSubscriberError as _MiddlewareSubscriberError,\n  MiddlewareSubscriberDisconnected as _MiddlewareSubscriberDisconnected,\n} from './MiddlewareSubscriber';\nexport { default as _Middleware } from './Middleware';\n\nexport { default as connectionProxy } from './aepp-wallet-communication/connection-proxy';\nexport {\n  MESSAGE_DIRECTION, WALLET_TYPE, SUBSCRIPTION_TYPES, METHODS, RPC_STATUS, RpcError,\n  RpcInvalidTransactionError, RpcRejectedByUserError, RpcUnsupportedProtocolError,\n  RpcConnectionDenyError, RpcNotAuthorizeError, RpcPermissionDenyError, RpcInternalError,\n  RpcMethodNotFoundError,\n} from './aepp-wallet-communication/schema';\nexport { default as walletDetector } from './aepp-wallet-communication/wallet-detector';\nexport { default as BrowserRuntimeConnection } from './aepp-wallet-communication/connection/BrowserRuntime';\nexport { default as BrowserWindowMessageConnection } from './aepp-wallet-communication/connection/BrowserWindowMessage';\nexport {\n  BaseError, AccountError, AensError, AeppError, ChannelError, CompilerError, ContractError,\n  CryptographyError, NodeError, TransactionError, WalletError, ArgumentError, IllegalArgumentError,\n  ArgumentCountMismatchError, InsufficientBalanceError, MissingParamError, NoSerializerFoundError,\n  RequestTimedOutError, TxTimedOutError, TypeError, UnsupportedPlatformError,\n  UnsupportedProtocolError, NotImplementedError, UnsupportedVersionError, InternalError,\n  UnexpectedTsError, UnavailableAccountError, AensPointerContextError, InsufficientNameFeeError,\n  InvalidAensNameError, InvalidRpcMessageError, MissingCallbackError, UnAuthorizedAccountError,\n  UnknownRpcClientError, UnsubscribedAccountError, ChannelCallError, ChannelConnectionError,\n  ChannelPingTimedOutError, UnexpectedChannelMessageError, ChannelIncomingMessageError,\n  UnknownChannelStateError, InvalidAuthDataError, BytecodeMismatchError, DuplicateContractError,\n  InactiveContractError, InvalidMethodInvocationError, MissingContractAddressError,\n  MissingContractDefError, MissingFunctionNameError, NodeInvocationError,\n  NoSuchContractFunctionError, NotPayableFunctionError, MissingEventDefinitionError,\n  AmbiguousEventDefinitionError, InvalidChecksumError, InvalidPasswordError,\n  MerkleTreeHashMismatchError, MissingNodeInTreeError, UnknownNodeLengthError,\n  UnknownPathNibbleError, DuplicateNodeError, NodeNotFoundError, DecodeError, PayloadLengthError,\n  DryRunError, IllegalBidFeeError, InvalidSignatureError, PrefixNotFoundError, SchemaNotFoundError,\n  TagNotFoundError, TxNotInChainError, AlreadyConnectedError, NoWalletConnectedError,\n  RpcConnectionError,\n} from './utils/errors';\nexport {\n  RpcBroadcastError, NAME_BID_MAX_LENGTH, encodeFateValue, decodeFateValue,\n} from './deprecated';\n","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"child_process\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"os\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"path\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"fs/promises\");","import { execFile } from 'child_process';\nimport { tmpdir } from 'os';\nimport { resolve, dirname, basename } from 'path';\nimport { mkdir, writeFile, rm } from 'fs/promises';\nimport { fileURLToPath } from 'url';\nimport CompilerBase, { Aci } from './Base';\nimport { Encoded } from '../../utils/encoder';\nimport { CompilerError, InternalError, UnsupportedVersionError } from '../../utils/errors';\nimport semverSatisfies from '../../utils/semver-satisfies';\nimport { ensureError } from '../../utils/other';\n\nconst getPackagePath = (): string => {\n  const path = dirname(fileURLToPath(import.meta.url));\n  if (basename(path) === 'dist') return resolve(path, '..');\n  if (basename(path) === 'compiler') return resolve(path, '../../..');\n  throw new InternalError('Can\\'t get package path');\n};\n\n/**\n * A wrapper around aesophia_cli, available only in Node.js.\n * Requires Erlang installed, assumes that `escript` is available in PATH.\n */\nexport default class CompilerCli extends CompilerBase {\n  #path: string;\n\n  #ensureCompatibleVersion = Promise.resolve();\n\n  /**\n   * @param compilerPath - A path to aesophia_cli binary, by default uses the integrated one\n   * @param options - Options\n   * @param options.ignoreVersion - Don't ensure that the compiler is supported\n   */\n  constructor(\n    compilerPath = resolve(getPackagePath(), './bin/aesophia_cli'),\n    { ignoreVersion }: { ignoreVersion?: boolean } = {},\n  ) {\n    super();\n    this.#path = compilerPath;\n    if (ignoreVersion !== true) {\n      this.#ensureCompatibleVersion = this.version().then((version) => {\n        const versions = [version, '7.2.1', '8.0.0'] as const;\n        if (!semverSatisfies(...versions)) throw new UnsupportedVersionError('compiler', ...versions);\n      });\n    }\n  }\n\n  async #run(...parameters: string[]): Promise<string> {\n    return new Promise((pResolve, pReject) => {\n      execFile('escript', [this.#path, ...parameters], (error, stdout, stderr) => {\n        if (error != null) pReject(error);\n        else if (stderr !== '') pReject(new CompilerError(stderr));\n        else pResolve(stdout);\n      });\n    });\n  }\n\n  static async #saveContractToTmpDir(\n    sourceCode: string,\n    fileSystem: Record<string, string> = {},\n  ): Promise<string> {\n    const randomName = (): string => Math.random().toString(36).slice(2);\n    const path = resolve(tmpdir(), `aepp-sdk-js-${randomName()}`);\n    await mkdir(path);\n    const sourceCodePath = resolve(path, `${randomName()}.aes`);\n    await writeFile(sourceCodePath, sourceCode);\n    await Promise.all(Object.entries(fileSystem)\n      .map(async ([name, src]) => {\n        const p = resolve(path, name);\n        await mkdir(dirname(p), { recursive: true });\n        return writeFile(p, src);\n      }));\n    return sourceCodePath;\n  }\n\n  async compile(path: string): Promise<{\n    bytecode: Encoded.ContractBytearray;\n    aci: Aci;\n  }> {\n    await this.#ensureCompatibleVersion;\n    try {\n      const [bytecode, aci] = await Promise.all([\n        this.#run(path),\n        this.#run('--create_json_aci', path).then((res) => JSON.parse(res)),\n      ]);\n      return {\n        bytecode: bytecode.trimEnd() as Encoded.ContractBytearray,\n        aci,\n      };\n    } catch (error) {\n      ensureError(error);\n      throw new CompilerError(error.message);\n    }\n  }\n\n  async compileBySourceCode(sourceCode: string, fileSystem?: Record<string, string>): Promise<{\n    bytecode: Encoded.ContractBytearray;\n    aci: Aci;\n  }> {\n    const tmp = await CompilerCli.#saveContractToTmpDir(sourceCode, fileSystem);\n    try {\n      return await this.compile(tmp);\n    } finally {\n      await rm(dirname(tmp), { recursive: true });\n    }\n  }\n\n  async generateAci(path: string): Promise<Aci> {\n    await this.#ensureCompatibleVersion;\n    try {\n      return JSON.parse(await this.#run('--no_code', '--create_json_aci', path));\n    } catch (error) {\n      ensureError(error);\n      throw new CompilerError(error.message);\n    }\n  }\n\n  async generateAciBySourceCode(\n    sourceCode: string,\n    fileSystem?: Record<string, string>,\n  ): Promise<Aci> {\n    const tmp = await CompilerCli.#saveContractToTmpDir(sourceCode, fileSystem);\n    try {\n      return await this.generateAci(tmp);\n    } finally {\n      await rm(dirname(tmp), { recursive: true });\n    }\n  }\n\n  async validate(bytecode: Encoded.ContractBytearray, path: string): Promise<boolean> {\n    await this.#ensureCompatibleVersion;\n    try {\n      return (await this.#run(path, '--validate', bytecode)).includes('Validation successful.');\n    } catch (error) {\n      return false;\n    }\n  }\n\n  async validateBySourceCode(\n    bytecode: Encoded.ContractBytearray,\n    sourceCode: string,\n    fileSystem?: Record<string, string>,\n  ): Promise<boolean> {\n    const tmp = await CompilerCli.#saveContractToTmpDir(sourceCode, fileSystem);\n    try {\n      return await this.validate(bytecode, tmp);\n    } finally {\n      await rm(dirname(tmp), { recursive: true });\n    }\n  }\n\n  async version(): Promise<string> {\n    const verMessage = await this.#run('--version');\n    const ver = verMessage.match(/Sophia compiler version ([\\d.]+)\\n/)?.[1];\n    if (ver == null) throw new CompilerError('Can\\'t get compiler version');\n    return ver;\n  }\n}\n","import { readFile } from 'fs/promises';\nimport { dirname, resolve, basename } from 'path';\nimport { InternalError } from '../../utils/errors';\n\nconst defaultIncludes = [\n  'List.aes', 'Option.aes', 'String.aes',\n  'Func.aes', 'Pair.aes', 'Triple.aes',\n  'BLS12_381.aes', 'Frac.aes', 'Set.aes',\n  'Bitwise.aes',\n];\nconst includeRegExp = /^include\\s*\"([\\w/.-]+)\"/mi;\nconst includesRegExp = new RegExp(includeRegExp.source, `${includeRegExp.flags}g`);\n\nasync function getFileSystemRec(\n  root: string,\n  relative: string,\n): Promise<Record<string, string>> {\n  const sourceCode = await readFile(resolve(root, relative), 'utf8');\n  const filesystem: Record<string, string> = {};\n  await Promise.all((sourceCode.match(includesRegExp) ?? [])\n    .map((include) => {\n      const m = include.match(includeRegExp);\n      if (m?.length !== 2) throw new InternalError('Unexpected match length');\n      return m[1];\n    })\n    .filter((include) => !defaultIncludes.includes(include))\n    .map(async (include) => {\n      const includePath = resolve(root, include);\n      filesystem[include] = await readFile(includePath, 'utf8');\n      Object.assign(filesystem, await getFileSystemRec(root, include));\n    }));\n  return filesystem;\n}\n\n/**\n * Reads all files included in the provided contract\n * Available only in Node.js\n * @param path - a path to the main contract source code\n */\nexport default async function getFileSystem(path: string): Promise<Record<string, string>> {\n  return getFileSystemRec(dirname(path), basename(path));\n}\n","import { readFile } from 'fs/promises';\nimport HttpBrowser from './Http';\nimport { Aci } from './Base';\nimport { Encoded } from '../../utils/encoder';\nimport getFileSystem from './getFileSystem';\n\n/**\n * Contract Compiler over HTTP for Nodejs\n *\n * Inherits CompilerHttp and implements `compile`, `validate` methods\n * @category contract\n * @example CompilerHttpNode('COMPILER_URL')\n */\nexport default class CompilerHttpNode extends HttpBrowser {\n  override async compile(path: string): Promise<{ bytecode: Encoded.ContractBytearray; aci: Aci }> {\n    const fileSystem = await getFileSystem(path);\n    const sourceCode = await readFile(path, 'utf8');\n    return this.compileBySourceCode(sourceCode, fileSystem);\n  }\n\n  override async generateAci(path: string): Promise<Aci> {\n    const fileSystem = await getFileSystem(path);\n    const sourceCode = await readFile(path, 'utf8');\n    return this.generateAciBySourceCode(sourceCode, fileSystem);\n  }\n\n  override async validate(bytecode: Encoded.ContractBytearray, path: string): Promise<boolean> {\n    const fileSystem = await getFileSystem(path);\n    const sourceCode = await readFile(path, 'utf8');\n    return this.validateBySourceCode(bytecode, sourceCode, fileSystem);\n  }\n}\n","export * from './index-browser';\n\nexport { default as CompilerCli } from './contract/compiler/Cli';\nexport { default as getFileSystem } from './contract/compiler/getFileSystem';\nexport { default as CompilerHttpNode } from './contract/compiler/HttpNode';\n"],"names":["BigNumber","isBigNumber","number","includes","isNaN","Number","isInteger","ceil","bigNumber","integerValue","ROUND_CEIL","BaseError","Error","constructor","message","name","AccountError","AensError","AeppError","ChannelError","CompilerError","ContractError","CryptographyError","NodeError","TransactionError","WalletError","ArgumentError","argumentName","requirement","argumentValue","IllegalArgumentError","ArgumentCountMismatchError","functionName","requiredCount","providedCount","InsufficientBalanceError","MissingParamError","NoSerializerFoundError","RequestTimedOutError","height","TxTimedOutError","blocks","th","join","TypeError","UnsupportedPlatformError","UnsupportedProtocolError","NotImplementedError","UnsupportedVersionError","dependency","version","geVersion","ltVersion","InternalError","UnexpectedTsError","UnavailableAccountError","address","AensPointerContextError","nameOrId","prefix","InsufficientNameFeeError","nameFee","minNameFee","toString","InvalidAensNameError","InvalidRpcMessageError","MissingCallbackError","id","UnAuthorizedAccountError","onAccount","UnknownRpcClientError","UnsubscribedAccountError","ChannelCallError","ChannelConnectionError","ChannelPingTimedOutError","UnexpectedChannelMessageError","ChannelIncomingMessageError","handlerError","incomingMessage","UnknownChannelStateError","InvalidAuthDataError","BytecodeMismatchError","source","DuplicateContractError","InactiveContractError","contractAddress","InvalidMethodInvocationError","MissingContractAddressError","MissingContractDefError","MissingFunctionNameError","NodeInvocationError","transaction","NoSuchContractFunctionError","NotPayableFunctionError","amount","fn","MissingEventDefinitionError","eventNameHash","eventAddress","AmbiguousEventDefinitionError","matchedEvents","map","InvalidChecksumError","InvalidPasswordError","MerkleTreeHashMismatchError","MissingNodeInTreeError","UnknownNodeLengthError","nodeLength","UnknownPathNibbleError","nibble","DuplicateNodeError","NodeNotFoundError","DecodeError","PayloadLengthError","DryRunError","IllegalBidFeeError","InvalidSignatureError","PrefixNotFoundError","tag","SchemaNotFoundError","key","TagNotFoundError","TxNotInChainError","txHash","AlreadyConnectedError","NoWalletConnectedError","RpcConnectionError","AE_AMOUNT_FORMATS","DENOMINATION_MAGNITUDE","AE","MILI_AE","MICRO_AE","NANO_AE","PICO_AE","FEMTO_AE","AETTOS","formatAmount","value","denomination","targetDenomination","shiftedBy","toFixed","toAe","toAettos","prefixes","magnitude","getNearestPrefix","exponent","reduce","p","n","Math","abs","getLowerBoundPrefix","_prefixes$find","find","length","prefixedAmount","rawValue","_value$e","exp","e","v","precision","min","RestError","pause","duration","Promise","resolve","setTimeout","mapObject","object","Object","fromEntries","entries","isWebpack4Buffer","Buffer","concat","Uint8Array","from","error","concatBuffers","list","totalLength","el","isKeyOfObject","isItemOfArray","item","array","isAccountNotFoundError","statusCode","ensureError","Encoding","encode","bs58Encode","decode","bs58Decode","Sha256","Encoded","sha256hash","input","update","digest","base64Types","ContractBytearray","ContractStoreKey","ContractStoreValue","Transaction","OracleQuery","OracleResponse","State","Poi","StateTrees","CallStateTree","Bytearray","base58Types","KeyBlockHash","MicroBlockHash","BlockPofHash","BlockTxHash","BlockStateHash","Channel","ContractAddress","TxHash","OracleAddress","OracleQueryId","AccountAddress","Signature","Commitment","PeerPubkey","Name","byteSizeForType","ensureValidLength","data","type","reqLen","getChecksum","payload","slice","addChecksum","getPayload","buffer","equals","base64","string","base58","parseType","maybeType","base64Type","t","base58Type","encodedPayload","extra","split","encoder","nacl","blake2b","varuintEncode","getAddressFromPriv","secret","secretBuffer","keys","sign","keyPair","fromSecretKey","publicKey","isAddressValid","actualPrefix","genSalt","random","BigUint64Array","randomBytes","BigInt","MAX_SAFE_INTEGER","encodeUnsigned","binary","allocUnsafe","writeUInt32BE","findIndex","i","hash","undefined","encodeContractAddress","owner","nonce","generateKeyPairFromSecret","generateKeyPair","raw","publicBuffer","secretKey","privateKey","detached","verify","signature","messagePrefix","messagePrefixLength","messageToHash","msg","signMessage","verifyMessage","isValidKeypair","publicKeyBuffer","MAX_AUTH_FUN_GAS","NAME_TTL","NAME_MAX_TTL","NAME_MAX_CLIENT_TTL","CLIENT_TTL","MIN_GAS_PRICE","NAME_FEE_MULTIPLIER","NAME_FEE_BID_INCREMENT","NAME_BID_TIMEOUT_BLOCKS","NAME_MAX_LENGTH_FEE","NAME_BID_RANGES","times","ConsensusProtocolVersion","VmVersion","AbiVersion","Tag","ProtocolToVmAbi","Iris","vmVersion","Fate2","abiVersion","Fate","Sophia","NoAbi","Ceres","Fate3","getProtocolDetails","protocolVersion","_protocol$vmVersion$","protocol","serialize","params","consensusProtocolVersion","_value","prepare","options","onNode","getNodeInfo","deserialize","vm","abi","genEntryField","txParams","buildTx","ArrayBuffer","isView","startsWith","buf","unpackTx","tx","genArrayField","itemHandler","items","buffers","genMapField","encoding","Mtree","values","MtreeValue","filter","recursiveType","toBytes","val","big","hexString","buildContractId","ownerId","ownerIdAndNonce","b2bHash","oracleQueryId","senderId","oracleId","_int32","nonceBE","alloc","AENS_SUFFIX","nameToPunycode","maybeName","suffix","other","test","punycode","u","URL","username","password","port","search","pathname","host","produceNameId","commitmentHash","salt","padStart","readInt","ensureName","isNameValid","encodingToPointerKey","getDefaultPointerKey","identifier","_encodingToPointerKey","substring","result","getMinimumNameFee","nameLength","computeBidFee","startFee","increment","plus","computeAuctionEndBlock","claimHeight","_ref","_ref2","_ref3","h","isAuctionName","uInt","shortUInt","genShortUIntConstField","constValue","optional","constValueOptional","idTagToEncoding","genAddressField","encodings","hashId","enc","idTag","indexOf","readUIntBE","subarray","genEncodedField","encodedData","serializeAettos","coinAmount","BASE_GAS","GAS_PER_BYTE","KEY_BLOCK_INTERVAL","TX_FEE_BASE_GAS","txType","_feeFactors","feeFactors","ChannelForceProgressTx","ChannelOffChainTx","ChannelOffChainUpdateCallContract","ChannelOffChainUpdateCreateContract","ChannelOffChainUpdateDeposit","ChannelOffChainUpdateWithdraw","ChannelOffChainUpdateTransfer","ContractCreateTx","ContractCallTx","GaAttachTx","GaMetaTx","PayingForTx","factor","TX_FEE_OTHER_GAS","txSize","relativeTtl","innerTxSize","OracleRegisterTx","OracleExtendTx","OracleQueryTx","OracleResponseTx","floor","minus","getOracleRelativeTtl","ttlKeys","buildFee","builtTx","txObject","encodedTx","calculateMinFee","rebuildTx","fee","previousFee","eq","_computingMinFee","_pickBiggerFee","minFee","gt","absoluteTtl","getCurrentKeyBlock","genNonceField","senderKey","strategy","getAccountNextNonce","replace","catch","nextNonce","addressAny","pointers","pointer","field","txFields","parameters","call","addressName","calculateGasLimitMax","gasMax","dividedBy","_computingGasLimit","gasLimitMax","gasLimit","_getProtocolDetails","c","kind","genEnumerationField","enm","rlpEncode","NodeType","_rootHash","WeakMap","_isComplete","_nodes","_encoding","_tag","_unpackTx","_getRaw","WeakSet","_entriesRaw","MPTree","isComplete","_classPrivateFieldGet","unpTx","_classPrivateMethodInitSpec","_classPrivateFieldInitSpec","writable","_classPrivateFieldSet","node","forEach","_classStaticPrivateMethodGet","_nodeHash","_parseNode","Branch","Extension","Leaf","isEqual","tree","mptHash","get","d","_classPrivateMethodGet","_getRaw2","toObject","_entriesRaw2","k","path","_key","searchFrom","rec","idx","push","genMPTreeField","genWrappedField","nameId","deposit","gasPrice","entry","enumeration","mptree","shortUIntConst","encoded","boolean","ctVersion","ttl","wrapped","ORACLE_TTL_TYPES","ORACLE_TTL","delta","QUERY_TTL","RESPONSE_TTL","DRY_RUN_ACCOUNT","pub","CallReturnType","entryAny","entrySignedTx","SignedTx","entryMtreeValueArray","entryTreesPoi","TreesPoi","mapContracts","Contract","mapAccounts","Account","mapCalls","ContractCall","mapChannels","mapNames","mapOracles","Oracle","txSchema","balance","flags","gaContract","gaAuthFun","signatures","SpendTx","recipientId","accountId","nameTtl","status","clientTtl","NamePreclaimTx","commitmentId","NameClaimTx","nameSalt","NameUpdateTx","NameTransferTx","NameRevokeTx","code","log","active","referers","callData","callerId","contractId","callerNonce","gasUsed","returnValue","returnType","queryFormat","responseFormat","queryFee","oracleTtlValue","oracleTtlType","query","queryTtlType","queryTtlValue","responseTtlType","responseTtlValue","queryId","response","ChannelCreateTx","initiator","initiatorAmount","responder","responderAmount","channelReserve","lockPeriod","initiatorDelegateIds","responderDelegateIds","stateHash","ChannelCloseMutualTx","channelId","fromId","initiatorAmountFinal","responderAmountFinal","ChannelCloseSoloTx","poi","ChannelSlashTx","ChannelDepositTx","round","ChannelWithdrawTx","toId","ChannelSettleTx","offChainTrees","channelAmount","soloRound","lockedUntil","initiatorAuth","responderAuth","ChannelSnapshotSoloTx","to","caller","contract","callStack","ChannelClientReconnectTx","role","pubkey","accounts","calls","channels","contracts","ns","oracles","ContractsMtree","CallsMtree","ChannelsMtree","NameserviceMtree","OraclesMtree","AccountsMtree","authFun","gaId","authData","payerId","GaMetaTxAuthData","rlpDecode","getSchema","_version","schemas","s","max","schema","overrideParams","buildTxAsync","all","acc","index","deserialized","buildTxHash","rawTx","buildContractIdByContractTx","contractTx","semverSatisfies","getComponents","versionComponents","geComponents","ltComponents","base","componentsToNumber","components","reverse","vNumber","geNumber","ltNumber","genRequestQueuesPolicy","requestQueues","Map","policy","sendRequest","request","next","_requestQueues$get","headers","delete","getResponse","req","then","set","position","genCombineGetRequestsPolicy","pendingGetRequests","_pendingGetRequests$g","method","JSON","stringify","url","body","genAggressiveCacheGetResponsesPolicy","getRequests","_getRequests$get","genErrorFormatterPolicy","getMessage","_error$response","bodyAsText","parse","genVersionCheckPolicy","ignorePath","versionPromise","args","genRetryOnFailurePolicy","retryCount","retryOverallDelay","statusesToNotRetry","intervals","Array","fill","_","intervalSum","a","b","intervalsInMs","attempt","_e$response$status","_e$response","Header","className","modelProperties","serializedName","required","prevHash","prevKeyHash","miner","beneficiary","target","pow","constraints","MinItems","MaxItems","element","time","info","pofHash","txsHash","ErrorModel","reason","KeyBlock","HashResponse","HeightResponse","MicroBlockHeader","SignedTxs","transactions","blockHeight","blockHash","Tx","uberParent","polymorphicDiscriminator","clientName","initiatorId","responderId","delegateIds","offchainTrees","oracleTtl","queryTtl","responseTtl","gas","Pattern","RegExp","allowedValues","Delegates","OffChainUpdate","op","RelativeTTL","defaultValue","isConstant","Ttl","NamePointer","CountResponse","count","Generation","keyBlock","microBlocks","payable","NextNonceResponse","DryRunInput","top","txs","txEvents","DryRunAccount","pubKey","DryRunInputItem","callReq","DryRunCallReq","calldata","context","DryRunCallContext","stateful","DryRunResults","results","DryRunResult","callObj","ContractCallObject","Event","topics","TxInfoObject","callInfo","gaInfo","txInfo","GAObject","innerObject","EncodedTx","PostTxResponse","ContractObject","referrerIds","ByteCode","bytecode","PoI","RegisteredOracle","OracleQueries","oracleQueries","senderNonce","NameEntry","PeerPubKey","Status","genesisKeyBlockHash","solutions","difficulty","syncing","syncProgress","InclusiveMaximum","InclusiveMinimum","listening","protocols","nodeVersion","nodeRevision","peerCount","peerConnections","pendingTransactionsCount","networkId","peerPubkey","topKeyBlockHash","topBlockHeight","Protocol","effectiveAtHeight","PeerConnections","inbound","outbound","OracleRespondTx","CommitmentId","NameHash","ChannelSetDelegatesTx","PubKey","PeerDetails","firstSeen","lastSeen","genesisHash","topHash","topDifficulty","nodeVendor","nodeOs","Peers","peers","blocked","PeerCount","connected","available","PeerCountConnected","PeerCountAvailable","verified","unverified","UnsignedTx","TokenSupply","contractOracles","locked","pendingRewards","total","GAAttachTx","GAMetaTx","CheckTxInPoolResponse","OffChainTransfer","OffChainWithdrawal","OffChainDeposit","OffChainNewContract","OffChainCallContract","CreateContractUnsignedTx","discriminators","DryRunInputMapper","EncodedTxMapper","accept","parameterPath","mapper","$host","skipEncoding","intAsString","contentType","body1","limit","coreClient","Parameters","Mappers","Node","ServiceClient","_options$endpoint","defaults","requestContentType","packageDetails","userAgentPrefix","userAgentOptions","optionsWithDefaults","endpoint","baseUri","getTopHeader","sendOperationRequest","getTopHeaderOperationSpec","getCurrentKeyBlockOperationSpec","getCurrentKeyBlockHash","getCurrentKeyBlockHashOperationSpec","getCurrentKeyBlockHeight","getCurrentKeyBlockHeightOperationSpec","getPendingKeyBlock","getPendingKeyBlockOperationSpec","getKeyBlockByHash","getKeyBlockByHashOperationSpec","getKeyBlockByHeight","getKeyBlockByHeightOperationSpec","getMicroBlockHeaderByHash","getMicroBlockHeaderByHashOperationSpec","getMicroBlockTransactionsByHash","getMicroBlockTransactionsByHashOperationSpec","getMicroBlockTransactionByHashAndIndex","getMicroBlockTransactionByHashAndIndexOperationSpec","getMicroBlockTransactionsCountByHash","getMicroBlockTransactionsCountByHashOperationSpec","getCurrentGeneration","getCurrentGenerationOperationSpec","getGenerationByHash","getGenerationByHashOperationSpec","getGenerationByHeight","getGenerationByHeightOperationSpec","getAccountByPubkey","getAccountByPubkeyOperationSpec","getAccountByPubkeyAndHeight","getAccountByPubkeyAndHeightOperationSpec","getAccountByPubkeyAndHash","getAccountByPubkeyAndHashOperationSpec","getPendingAccountTransactionsByPubkey","getPendingAccountTransactionsByPubkeyOperationSpec","getAccountNextNonceOperationSpec","protectedDryRunTxs","protectedDryRunTxsOperationSpec","getTransactionByHash","getTransactionByHashOperationSpec","getTransactionInfoByHash","getTransactionInfoByHashOperationSpec","postTransaction","postTransactionOperationSpec","getContract","getContractOperationSpec","getContractCode","getContractCodeOperationSpec","getContractPoI","getContractPoIOperationSpec","getOracleByPubkey","getOracleByPubkeyOperationSpec","getOracleQueriesByPubkey","getOracleQueriesByPubkeyOperationSpec","getOracleQueryByPubkeyAndQueryId","getOracleQueryByPubkeyAndQueryIdOperationSpec","getNameEntryByName","getNameEntryByNameOperationSpec","getChannelByPubkey","getChannelByPubkeyOperationSpec","getPeerPubkey","getPeerPubkeyOperationSpec","getStatus","getStatusOperationSpec","getChainEnds","getChainEndsOperationSpec","serializer","createSerializer","httpMethod","responses","bodyMapper","isError","queryParameters","urlParameters","headerParameters","requestBody","mediaType","NodeApi","bigIntPropertyNames","numberPropertyNames","_mapData","_encodeArg","_decodeRes","NodeTransformed","operationArguments","operationSpec","_encodeArg2","_decodeRes2","_mapData2","transform","isArray","some","bigInt","_networkIdPromise","ignoreVersion","allowInsecureConnection","additionalPolicies","statusPromise","pipeline","addPolicy","getNetworkId","_classPrivateFieldGet2","nodeNetworkId","versions","getTransactionSignerAddress","_getSchema$find","AccountBase","signTypedData","aci","signDelegationToContract","signNameDelegationToContract","signOracleQueryDelegationToContract","TypeResolver","ContractByteArrayEncoder","canonicalize","hashJson","_canonicalize","hashDomain","domain","domainAci","record","option","domainType","resolveType","fateValue","encodeWithType","hashTypedData","secretKeys","getBufferToSign","innerTx","rlpBinaryTx","AccountMemory","generate","signTransaction","txWithNetworkId","dHash","oracleQueryIdDecoded","addressDecoded","compare","getExecutionCost","isInitiator","res","getExecutionCostBySignedTx","isInnerTx","isNotInnerTx","f","getExecutionCostUsingNode","isMined","isSignedTx","combinedInfo","validators","verifyTransactionInternal","parentTxTypes","account","flat","verifyTransaction","nodeNotCached","clone","txBinary","txHashWithNetworkId","checkedKeys","nestedTx","cost","oracleCall","contractCreate","contractCall","_getPollInterval","_expectedMineRate","_microBlockCycle","_maxPollInterval","block","microblock","InvalidTxError","validation","getHeight","poll","interval","_interval","awaitHeight","_interval2","currentHeight","waitForTxConfirm","confirm","newBlockHeight","sendTransaction","txUnsigned","waitMined","__queue","requestOptions","customHeaders","pollResult","txData","confirmationHeight","assign","verifyTx","getAccount","getBalance","format","addr","getGeneration","hashOrHeight","getMicroBlockTransactions","getKeyBlock","getMicroBlockHeader","txDryRunRequests","txDryRunHandler","rs","dryRunRes","Set","accountAddress","reject","resultPayload","txDryRun","combine","_txDryRunRequests$get","requests","_requests$timeout","timeout","getContractByteCode","getName","resolveName","resolveByNode","v4","uuid","argon2id","DERIVED_KEY_FUNCTIONS","pass","memlimit_kib","memoryCost","opslimit","timeCost","hashLength","CRYPTO_FUNCTIONS","encrypt","secretbox","decrypt","open","CRYPTO_DEFAULTS","secret_type","symmetric_alg","kdf","kdf_params","parallelism","plaintext","algo","ciphertext","deriveKey","kdfParams","recover","crypto","cipher_params","dump","opt","derivedKey","public_key","full","hmac","fromString","aesjs","Ecb","ModeOfOperation","ecb","encryptKey","binaryData","hashedPasswordBytes","aesEcb","decryptKey","encrypted","encryptedBytes","DerivationError","ED25519_CURVE","HARDENED_OFFSET","deriveChild","chainCode","indexBuffer","I","IL","IR","derivePathFromKey","segments","toPathArray","segment","parentKey","getMasterKeyFromSeed","seed","derivePathFromSeed","masterKey","formatAccount","getKeyPair","fromSeed","generateSaveHDWalletFromSeed","walletKey","getSaveHDWalletAccounts","saveHDWallet","accountCount","getHdWalletAccountFromSeed","accountIdx","derived","aensRevoke","nameRevokeTx","aensUpdate","extendPointers","allPointers","nameUpdateTx","aensTransfer","nameTransferTx","aensQuery","nameEntry","freeze","transfer","revoke","extendTtl","aensClaim","claimTx","nameInter","aensPreclaim","preclaimTx","claim","opts","otherOptions","aensBid","Encoder","Calldata","calcHash","_getCallResult","_sendAndProcess","_getFunctionAci","_getContractNameByEvent","_aciContract","$compile","$options","onCompiler","sourceCode","compileBySourceCode","fileSystem","sourceCodePath","compile","$getCallResultByTxHash","fnName","callInfoTyped","_getCallResult2","_estimateGas","$call","callStatic","$deploy","_opt$gasLimit","_other$result","_calldata","_name","_sendAndProcess2","decodedEvents","$decodeEvents","_opt$gasLimit2","fnAci","_getFunctionAci2","useFallbackAccount","topOption","txOpt","dryRunOther","events","omitUnknown","event","contractName","_getContractNameByEvent2","decoded","decodeEvent","initialize","validateBytecode","_bytecode","onChanBytecode","isValid","validateBySourceCode","validate","ContractWithMethods","_aci","aciLast","functions","arguments","aciArgs","pop","decodedResult","decodeFateString","returns","ctAddress","nameHash","contractAddressToName","addressToName","variant","eventName","arr","pollForQueries","onQuery","knownQueryIds","checkNewQueries","_await$onNode$getOrac","queries","has","add","stopped","console","pollForQueryResponse","responseBuffer","getQueryObject","decodedQuery","decodedResponse","respond","respondToQuery","pollForResponse","postQueryToOracle","_options$queryFee","oracleQueryTx","extendOracleTtl","oracleExtendTx","getOracleObject","oracleRespondTx","pollQueries","postQuery","extendOracle","getQuery","handler","lastArg","registerOracle","oracleRegisterTx","spend","recipientIdOrName","transferFunds","fraction","bind","desiredAmount","ROUND_HALF_UP","payForTransaction","createGeneralizedAccount","authFnName","_options$gasLimit","gaContractId","buildAuthTxHash","buildAuthTxHashByGaMetaTx","ensureOracleQuery","oq","createDelegationSignature","ids","omitAddress","chainMethods","aensMethods","spendMethods","oracleMethods","contractGaMethods","getValueOrErrorProxy","valueCb","Proxy","Reflect","_2","chainMethodsOther","methods","AeSdkMethods","_defineProperty","_options","_getOptions","callOptions","initializeContract","prototype","methodWrapper","AeSdkMethodsTyped","AeSdkBase","nodes","instance","addNode","compilerApi","api","ensureNodeConnected","pool","selectedNodeName","select","selectNode","isNodeConnected","getNodesInPool","addresses","_resolveAccount","String","_options$networkId","_options$networkId2","_options$networkId3","AeSdk","addAccount","selectedAddress","selectAccount","removeAccount","MESSAGE_DIRECTION","WALLET_TYPE","SUBSCRIPTION_TYPES","METHODS","RPC_STATUS","rpcErrors","RpcError","toJSON","json","RpcErr","cl","RpcInvalidTransactionError","RpcRejectedByUserError","RpcUnsupportedProtocolError","RpcConnectionDenyError","RpcNotAuthorizeError","RpcPermissionDenyError","RpcInternalError","RpcMethodNotFoundError","AccountRpc","rpcClient","_rpcClient","returnSigned","signedTransaction","RPC_VERSION","_callbacks","_messageId","_methods","_handleMessage","_sendRequest","_sendResponse","_processResponse","RpcClient","connection","onDisconnect","connect","_handleMessage2","_sendRequest2","notify","origin","jsonrpc","_processResponse2","methodName","_sendResponse2","sendMessage","callbacks","AeSdkAepp","onAddressChange","onNetworkChange","_ensureConnected","_ensureAccountAccess","_accounts","current","connectToWallet","connectNode","disconnectParams","updateNetwork","_params$node","client","updateAddress","closeConnection","disconnect","readyToConnect","walletInfo","disconnectWallet","askAddresses","subscribeAddress","JsonBig","jsonBig","storeAsString","convertValuesToBigNumbers","bn","AeSdkWallet","onConnection","onSubscription","onAskAccounts","_type","_getAccountsForClient","addressSubscription","getAccounts","_pushAccountsToApps","_clients","clientId","_isRpcClientConnected","_getClient","size","rpc","_getNode","CONNECTED","isConnected","_disconnectRpcClient","DISCONNECTED","removeRpcClient","addRpcClient","clientConnection","WAITING_FOR_CONNECTION_REQUEST","icons","getWalletInfo","subscribe","unsubscribe","subscription","aeppOrigin","aeppRpcClientId","transactionHash","shareWalletInfo","window","location","_authFun","AccountGeneralized","authCallData","gaMetaTx","CLA","GET_ADDRESS","SIGN_TRANSACTION","GET_APP_CONFIGURATION","SIGN_PERSONAL_MESSAGE","AccountLedger","transport","scrambleKey","decorateAppAPIMethods","offset","headerLength","networkIdBuffer","toSend","maxChunkSize","chunkSize","bufferOffset","writeUInt8","copy","previous","send","messageStr","AccountLedgerFactory","versionCheckPromise","getAppConfiguration","getAddress","accountIndex","addressLength","discover","CompilerBase","CompileOpts","srcFile","pos","ErrorPos","file","line","col","CompileResult","SophiaCallResultInput","function","callResult","callValue","BytecodeCallResultInput","DecodedCallresult","FunctionCallInput","DecodeCalldataBytecode","DecodedCalldata","DecodeCalldataSource","ByteCodeInput","FateAssembler","fateAssembler","ValidateByteCodeInput","CompilerVersion","ApiVersion","apiVersion","SophiaBinaryData","sophiaType","SophiaJsonData","ContractMapper","SophiaCallResultInputMapper","BytecodeCallResultInputMapper","FunctionCallInputMapper","DecodeCalldataBytecodeMapper","DecodeCalldataSourceMapper","ByteCodeInputMapper","ValidateByteCodeInputMapper","body2","body3","body4","body5","body6","body7","Compiler","generateACI","generateACIOperationSpec","compileContract","compileContractOperationSpec","decodeCallResult","decodeCallResultOperationSpec","decodeCallResultBytecode","decodeCallResultBytecodeOperationSpec","encodeCalldata","encodeCalldataOperationSpec","decodeCalldataBytecode","decodeCalldataBytecodeOperationSpec","decodeCalldataSource","decodeCalldataSourceOperationSpec","getFateAssemblerCode","getFateAssemblerCodeOperationSpec","validateByteCode","validateByteCodeOperationSpec","getCompilerVersion","getCompilerVersionOperationSpec","versionOperationSpec","apiVersionOperationSpec","apiOperationSpec","CompilerApi","CompilerHttp","compilerUrl","parameter","generateAciBySourceCode","generateAci","snakeToPascal","match","toUpperCase","pascalToSnake","toLowerCase","w3cwebsocket","W3CWebSocket","PING_TIMEOUT_MS","PONG_TIMEOUT_MS","emit","channel","rest","_eventEmitter","enterState","nextState","_nextState$handler","_fsm","enter","dequeueAction","changeStatus","newStatus","_status","changeState","newState","_state","debug","_websocket","_isActionQueueLocked","queue","_actionQueue","action","guard","enqueueAction","promise","state","handleMessage","_message$params","st","updates","_message$params2","dequeueMessage","_isMessageQueueLocked","_messageQueue","shift","close","clearTimeout","_pingTimeoutId","ping","onMessage","callback","_rpcCallbacks","channel_id","_channelId","_nextRpcMessageId","_message$error$data$","details","connectionHandler","openHandler","channelOptions","wsUrl","searchParams","onerror","onopen","reconnectTx","signedTx","onclose","onmessage","appendSignature","signFn","payloadTx","signatures2","signAndNotify","_signedTx","signed_tx","handleUnexpectedMessage","_channel","_state$reject","wsMessage","channelOpen","awaitingCompletion","onSuccess","accepted","errorCode","error_code","errorMessage","error_msg","codes","awaitingConnection","channelInfoStatus","nextStatus","awaitingChannelCreateTx","awaitingOpenConfirmation","_fsmId","fsm_id","_message$payload","channelClosed","awaitingReconnection","awaitingOnChainTx","awaitingBlockInclusion","message2","awaitingTxSignRequest","_message$method$match","awaitingUpdateConflict","awaitingShutdownTx","awaitingLeave","closeTx","EventEmitter","handlers","channelDisconnect","snakeToPascalObjKeys","obj","_initialize","existingFsmId","on","off","removeListener","halfSignedTx","trees","fsmId","leave","shutdown","reconnect","ChannelSpend","metadata","meta","awaitingOffChainTx","balances","awaitingActionTx","awaitingActionCompletion","_state$onOnChainTx","onOnChainTx","Action","isOwn","withdraw","onOwnWithdrawLocked","onWithdrawLocked","onOwnDepositLocked","onDepositLocked","recipient","onStatusChanged","ChannelContract","createContract","call_data","vm_version","abi_version","state2","addressKey","callContract","contract_id","forceProgress","gas_price","_state2$onOnChainTx","callContractStatic","getContractCall","caller_id","getContractState","cleanContractCalls","WebSocket","Source","MiddlewareSubscriberError","MiddlewareSubscriberDisconnected","closeEvent","_subscriptions","_requestQueue","_webSocket","_targets","_sendMessage","_sendSubscribe","_emit","_disconnect","_messageHandler","_subscribe","MiddlewareSubscriber","webSocket","_get_targets","_disconnect2","errorEvent","_emit2","_messageHandler2","_sendSubscribe2","subscribeKeyBlocks","cb","_subscribe2","Middleware","subscribeKeyBlocksNode","subscribeKeyBlocksAll","All","subscribeMicroBlocks","subscribeMicroBlocksNode","subscribeMicroBlocksAll","subscribeTransactions","subscribeTransactionsNode","subscribeTransactionsAll","subscribeObject","subscribeObjectNode","subscribeObjectAll","_sendMessage2","isSubscribe","condition","onlyReset","ownedOnly","scope","direction","by","tokenId","templateId","accountId1","sender","hashOrKbi","kbi","mbi","contractId1","functionPrefix","aexnArgs","hash1","ownedBy","state1","type1","collectionFormat","typeGroup","oracle","entrypoint","id1","hashOrIndex","Paths1I5J7OcV2AccountsIdActivitiesGetResponses200ContentApplicationJsonSchemaAllof0","Activity","PaginatedResponse","nullable","prev","ErrorResponse","Paths17FlgdkV2Aex141GetResponses200ContentApplicationJsonSchemaAllof0","Aex141Response","baseUrl","contractTxi","extensions","limits","PathsAxw0PwV2Aex141OwnedNftsAccountidGetResponses200ContentApplicationJsonSchemaAllof0","Aex141OwnedTokenResponse","PathsN3Ru7DV2Aex141ContractidOwnersGetResponses200ContentApplicationJsonSchemaAllof0","PathsRa6Pv6V2Aex141ContractidTemplatesGetResponses200ContentApplicationJsonSchemaAllof0","Aex141TemplatesResponse","edition","logIdx","Paths19B9O7TV2Aex141ContractidTemplatesTemplateidTokensGetResponses200ContentApplicationJsonSchemaAllof0","Aex141TemplateTokensResponse","Paths1Fe570RV2Aex9GetResponses200ContentApplicationJsonSchemaAllof0","Aex9Response","decimals","eventSupply","holders","initialSupply","symbol","PathsO9MbpkV2Aex9AccountBalancesAccountIdGetResponses200ContentApplicationJsonSchemaAllof1","Aex9BalanceResponse","tokenName","tokenSymbol","txIndex","PathsY2JwfkV2Aex9TransfersFromToSenderRecipientGetResponses200ContentApplicationJsonSchemaAllof0","Aex9TransferResponse","callTxi","microTime","Paths5U7W2V2Aex9TransfersFromIdGetResponses200ContentApplicationJsonSchemaAllof0","Paths12TleqhV2Aex9TransfersToIdGetResponses200ContentApplicationJsonSchemaAllof0","Paths1C2B0UpV2Aex9ContractidBalancesGetResponses200ContentApplicationJsonSchemaAllof0","Aex9ContractBalanceResponse","lastLogIdx","lastTxHash","PathsBelvp6V2Aex9ContractidBalancesAccountidGetResponses200ContentApplicationJsonSchemaAllof0","Paths11X7LpcV2Aex9ContractidBalancesAccountidHistoryGetResponses200ContentApplicationJsonSchemaAllof0","Paths5LeqfqV2BlocksGetResponses200ContentApplicationJsonSchemaAllof0","Block","NotFoundResponse","PathsC25EgV2ChannelsGetResponses200ContentApplicationJsonSchemaAllof0","lastUpdatedHeight","lastUpdatedTxType","updatesCount","Paths1Csrt0IV2ContractsCallsGetResponses200ContentApplicationJsonSchemaAllof0","callTxHash","internalTx","localIdx","microIndex","Paths9Ya94MV2ContractsLogsGetResponses200ContentApplicationJsonSchemaAllof0","ContractLog","eventHash","extCallerContractId","extCallerContractTxi","parentContractId","PathsRzn6HzV2DeltastatsGetResponses200ContentApplicationJsonSchemaAllof0","DeltaStat","auctionsStarted","blockReward","contractsCreated","devReward","namesActivated","namesExpired","namesRevoked","oraclesExpired","oraclesRegistered","Paths10TrrshV2KeyBlocksGetResponses200ContentApplicationJsonSchemaAllof0","Paths7Hfka2V2KeyBlocksHashOrKbiMicroBlocksGetResponses200ContentApplicationJsonSchemaAllof0","MicroBlock","microBlockIndex","transactionsCount","Paths1RxrrvbV2MicroBlocksHashTxsGetResponses200ContentApplicationJsonSchemaAllof0","Paths16Srg6EV2NamesGetResponses200ContentApplicationJsonSchemaAllof0","NameInfo","activeFrom","claims","expireHeight","ownership","transfers","NameInfoOwnership","original","NameInfoPointers","accountPubkey","Auction","AuctionInfo","auctionEnd","bids","lastBid","AuctionInfoLastBid","Paths1I6PwfdV2NamesSearchGetResponses200ContentApplicationJsonSchemaAllof0","Paths7P6Qc1V2NamesSearchGetResponses200ContentApplicationJsonSchemaAllof0PropertiesDataItemsAllof1","NameClaim","PathsDjelzuV2NamesIdPointeesGetResponses200ContentApplicationJsonSchema","inactive","NameTransfer","NameUpdate","extends","register","OracleExtendsItem","PathsMherz6V2OraclesGetResponses200ContentApplicationJsonSchemaAllof0","mdwAsyncTasks","mdwGensPerMinute","mdwHeight","mdwLastMigration","mdwRevision","mdwSynced","mdwSyncing","mdwTxIndex","mdwVersion","nodeHeight","nodeProgress","nodeSyncing","StatusMdwAsyncTasks","longTasks","producerBuffer","totalPending","PathsDpxn99V2TotalstatsGetResponses200ContentApplicationJsonSchemaAllof0","TotalStat","Paths17Cjtx5V2TransfersGetResponses200ContentApplicationJsonSchemaAllof0","Transfer","refTxi","Paths1R74KpvV2TxsGetResponses200ContentApplicationJsonSchemaAllof0","Paths16Tt677V2TxsCountIdGetResponses200ContentApplicationJsonSchema","channelCloseMutualTx","channelCloseSoloTx","channelCreateTx","channelDepositTx","channelForceProgressTx","channelOffchainTx","channelSettleTx","channelSlashTx","channelSnapshotSoloTx","channelWithdrawTx","contractCallTx","contractCreateTx","gaAttachTx","nameClaimTx","namePreclaimTx","oracleResponseTx","payingForTx","spendTx","Aex141TransferEvent","Aex9TransferEvent","InternalContractCallEvent","contractTxHash","InternalTransferEvent","refTxHash","NameClaimEvent","PathsKlr2M2V2AccountsIdActivitiesGetResponses200ContentApplicationJsonSchema","PathsFlc7UjV2Aex141GetResponses200ContentApplicationJsonSchema","PathsSs61ZgV2Aex141OwnedNftsAccountidGetResponses200ContentApplicationJsonSchema","Paths1Ilysy5V2Aex141ContractidOwnersGetResponses200ContentApplicationJsonSchema","Paths17O9Fn6V2Aex141ContractidTemplatesGetResponses200ContentApplicationJsonSchema","PathsNuoourV2Aex141ContractidTemplatesTemplateidTokensGetResponses200ContentApplicationJsonSchema","Paths1Wbogg8V2Aex9GetResponses200ContentApplicationJsonSchema","Paths1BsirxgV2Aex9AccountBalancesAccountIdGetResponses200ContentApplicationJsonSchema","Paths1V0FiznV2Aex9TransfersFromToSenderRecipientGetResponses200ContentApplicationJsonSchema","Paths1X48QgjV2Aex9TransfersFromIdGetResponses200ContentApplicationJsonSchema","Paths1DkkopqV2Aex9TransfersToIdGetResponses200ContentApplicationJsonSchema","PathsNi359V2Aex9ContractidBalancesGetResponses200ContentApplicationJsonSchema","Paths15Ih6XV2BlocksGetResponses200ContentApplicationJsonSchema","Paths1Txl2A9V2ChannelsGetResponses200ContentApplicationJsonSchema","Paths187U0XzV2ContractsCallsGetResponses200ContentApplicationJsonSchema","PathsB246H1V2ContractsLogsGetResponses200ContentApplicationJsonSchema","Paths7Pbec0V2DeltastatsGetResponses200ContentApplicationJsonSchema","Paths1Ulxr59V2KeyBlocksGetResponses200ContentApplicationJsonSchema","PathsO99PhzV2KeyBlocksHashOrKbiMicroBlocksGetResponses200ContentApplicationJsonSchema","PathsGuqvhdV2MicroBlocksHashTxsGetResponses200ContentApplicationJsonSchema","PathsK9TkttV2NamesGetResponses200ContentApplicationJsonSchema","Paths3Msq0DV2NamesSearchGetResponses200ContentApplicationJsonSchema","PathsB0YvynV2OraclesGetResponses200ContentApplicationJsonSchema","Paths15PsutbV2TotalstatsGetResponses200ContentApplicationJsonSchema","PathsIgs9Z1V2TransfersGetResponses200ContentApplicationJsonSchema","PathsFclv4TV2TxsGetResponses200ContentApplicationJsonSchema","Paths1R02SlwV2Aex9ContractidBalancesAccountidGetResponses200ContentApplicationJsonSchema","Paths1T9RwnyV2Aex9ContractidBalancesAccountidHistoryGetResponses200ContentApplicationJsonSchema","Get200ApplicationJsonAllOfPropertiesItemsItem","getAccountActivities","getAccountActivitiesOperationSpec","getSortedAex141Contracts","getSortedAex141ContractsOperationSpec","getAex141OwnedTokens","getAex141OwnedTokensOperationSpec","getAex141TokenOwner","getAex141TokenOwnerOperationSpec","getAex141ContractOwners","getAex141ContractOwnersOperationSpec","getAex141ContractTemplates","getAex141ContractTemplatesOperationSpec","getAex141TemplateTokens","getAex141TemplateTokensOperationSpec","getAex141ByContract","getAex141ByContractOperationSpec","getSortedAex9Tokens","getSortedAex9TokensOperationSpec","getAex9AccountBalances","getAex9AccountBalancesOperationSpec","getAex9TokensCount","getAex9TokensCountOperationSpec","getAex9PairTransfers","getAex9PairTransfersOperationSpec","getAex9SenderTransfers","getAex9SenderTransfersOperationSpec","getAex9RecipientTransfers","getAex9RecipientTransfersOperationSpec","getAex9ContractBalances","getAex9ContractBalancesOperationSpec","getAex9ContractAccountBalance","getAex9ContractAccountBalanceOperationSpec","getAex9ContractAccountBalanceHistory","getAex9ContractAccountBalanceHistoryOperationSpec","getAex9LogsCount","getAex9LogsCountOperationSpec","getAex9ByContract","getAex9ByContractOperationSpec","getBlocks","getBlocksOperationSpec","getBlock","getBlockOperationSpec","getBlockByMbi","getBlockByMbiOperationSpec","getChannels","getChannelsOperationSpec","getChannel","getChannelOperationSpec","getContractsCalls","getContractsCallsOperationSpec","getContractsLogs","getContractsLogsOperationSpec","getDeltastats","getDeltastatsOperationSpec","getKeyBlocks","getKeyBlocksOperationSpec","getKeyBlockOperationSpec","getKeyBlockMicroBlocks","getKeyBlockMicroBlocksOperationSpec","getMicroBlock","getMicroBlockOperationSpec","getMicroBlockTransactionsOperationSpec","getNames","getNamesOperationSpec","getNamesAuctions","getNamesAuctionsOperationSpec","searchNames","searchNamesOperationSpec","getNameOperationSpec","getNameAuction","getNameAuctionOperationSpec","getNameClaims","getNameClaimsOperationSpec","getNamePointees","getNamePointeesOperationSpec","getNamePointers","getNamePointersOperationSpec","getNameTransfers","getNameTransfersOperationSpec","getNameUpdates","getNameUpdatesOperationSpec","getOracle","getOracleOperationSpec","getOracles","getOraclesOperationSpec","getTotalstats","getTotalstatsOperationSpec","getTransfers","getTransfersOperationSpec","getTxs","getTxsOperationSpec","getTxCount","getTxCountOperationSpec","getTxCountById","getTxCountByIdOperationSpec","getTx","getTxOperationSpec","MiddlewareApi","MiddlewareTransformed","con1","con2","BrowserConnection","receiveMessage","_onDisconnect","_target","_self","BrowserWindowMessageConnection","self","sendDirection","receiveDirection","to_aepp","listener","_message$data$jsonrpc","_message$data$data","addEventListener","removeEventListener","_this$origin","postMessage","onDetected","wallets","wallet","getConnection","to_waellet","newWallet","_listeners","BrowserRuntimeConnection","_port$sender$url","_port$sender","addListener","RpcBroadcastError","NAME_BID_MAX_LENGTH","encodeFateValue","valueType","decodeFateValue","decodeWithType","default","MemoryAccount","_MiddlewareSubscriber","_MiddlewareSubscriberError","_MiddlewareSubscriberDisconnected","_Middleware","connectionProxy","walletDetector","execFile","tmpdir","dirname","basename","mkdir","writeFile","rm","fileURLToPath","getPackagePath","require","pathToFileURL","__filename","_path","_ensureCompatibleVersion","_run","CompilerCli","compilerPath","_run2","trimEnd","tmp","_saveContractToTmpDir","recursive","_verMessage$match","verMessage","ver","pResolve","pReject","stdout","stderr","randomName","src","readFile","defaultIncludes","includeRegExp","includesRegExp","_flagsInstanceProperty","getFileSystemRec","root","relative","_sourceCode$match","filesystem","include","m","includePath","getFileSystem","HttpBrowser","CompilerHttpNode"],"sourceRoot":""}