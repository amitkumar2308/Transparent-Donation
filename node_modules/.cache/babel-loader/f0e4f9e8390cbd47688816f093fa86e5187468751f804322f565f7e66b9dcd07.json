{"ast":null,"code":"const RLP = require('rlp');\nconst FateTag = require('../FateTag');\nconst FateTuple = require('../types/FateTuple');\nconst FateVariant = require('../types/FateVariant');\nconst {\n  FateTypeTuple\n} = require('../FateTypes');\nconst BaseSerializer = require('./BaseSerializer');\nclass VariantSerializer extends BaseSerializer {\n  serialize(variant) {\n    const valueTuple = new FateTuple(variant.valueTypes, variant.value);\n    return [FateTag.VARIANT, ...RLP.encode(new Uint8Array(variant.arities)), variant.tag, ...this.globalSerializer.serialize(valueTuple)];\n  }\n  deserializeStream(stream, typeInfo) {\n    const buffer = new Uint8Array(stream);\n    const decoded = RLP.decode(buffer.slice(1), true);\n    const arities = [...decoded.data];\n    const tag = decoded.remainder[0];\n    const data = decoded.remainder.slice(1);\n    let variants = [];\n    let valueType;\n    if (typeof typeInfo !== 'undefined' && typeof typeInfo.variants !== 'undefined') {\n      variants = typeInfo.variants;\n      valueType = FateTypeTuple(Object.values(variants[tag])[0]);\n    }\n    const [els, rest] = this.globalSerializer.deserializeStream(data, valueType);\n    return [new FateVariant(arities, tag, els.items, els.valueTypes, variants), rest];\n  }\n}\nmodule.exports = VariantSerializer;","map":{"version":3,"names":["RLP","require","FateTag","FateTuple","FateVariant","FateTypeTuple","BaseSerializer","VariantSerializer","serialize","variant","valueTuple","valueTypes","value","VARIANT","encode","Uint8Array","arities","tag","globalSerializer","deserializeStream","stream","typeInfo","buffer","decoded","decode","slice","data","remainder","variants","valueType","Object","values","els","rest","items","module","exports"],"sources":["C:/Users/amitk/Desktop/Donation Project/donation-aeternity-blockchain-contract/node_modules/@aeternity/aepp-calldata/src/Serializers/VariantSerializer.js"],"sourcesContent":["const RLP = require('rlp')\nconst FateTag = require('../FateTag')\nconst FateTuple = require('../types/FateTuple')\nconst FateVariant = require('../types/FateVariant')\nconst {FateTypeTuple} = require('../FateTypes')\nconst BaseSerializer = require('./BaseSerializer')\n\nclass VariantSerializer extends BaseSerializer {\n    serialize(variant) {\n        const valueTuple = new FateTuple(variant.valueTypes, variant.value)\n\n        return [\n            FateTag.VARIANT,\n            ...RLP.encode(new Uint8Array(variant.arities)),\n            variant.tag,\n            ...this.globalSerializer.serialize(valueTuple)\n        ]\n    }\n\n    deserializeStream(stream, typeInfo) {\n        const buffer = new Uint8Array(stream)\n        const decoded = RLP.decode(buffer.slice(1), true)\n        const arities = [...decoded.data]\n        const tag = decoded.remainder[0]\n        const data = decoded.remainder.slice(1)\n        let variants = []\n        let valueType\n\n        if (typeof typeInfo !== 'undefined' && typeof typeInfo.variants !== 'undefined') {\n            variants = typeInfo.variants\n            valueType = FateTypeTuple(Object.values(variants[tag])[0])\n        }\n\n        const [els, rest] = this.globalSerializer.deserializeStream(data, valueType)\n\n        return [\n            new FateVariant(arities, tag, els.items, els.valueTypes, variants),\n            rest\n        ]\n    }\n}\n\nmodule.exports = VariantSerializer\n"],"mappings":"AAAA,MAAMA,GAAG,GAAGC,OAAO,CAAC,KAAK,CAAC;AAC1B,MAAMC,OAAO,GAAGD,OAAO,CAAC,YAAY,CAAC;AACrC,MAAME,SAAS,GAAGF,OAAO,CAAC,oBAAoB,CAAC;AAC/C,MAAMG,WAAW,GAAGH,OAAO,CAAC,sBAAsB,CAAC;AACnD,MAAM;EAACI;AAAa,CAAC,GAAGJ,OAAO,CAAC,cAAc,CAAC;AAC/C,MAAMK,cAAc,GAAGL,OAAO,CAAC,kBAAkB,CAAC;AAElD,MAAMM,iBAAiB,SAASD,cAAc,CAAC;EAC3CE,SAASA,CAACC,OAAO,EAAE;IACf,MAAMC,UAAU,GAAG,IAAIP,SAAS,CAACM,OAAO,CAACE,UAAU,EAAEF,OAAO,CAACG,KAAK,CAAC;IAEnE,OAAO,CACHV,OAAO,CAACW,OAAO,EACf,GAAGb,GAAG,CAACc,MAAM,CAAC,IAAIC,UAAU,CAACN,OAAO,CAACO,OAAO,CAAC,CAAC,EAC9CP,OAAO,CAACQ,GAAG,EACX,GAAG,IAAI,CAACC,gBAAgB,CAACV,SAAS,CAACE,UAAU,CAAC,CACjD;EACL;EAEAS,iBAAiBA,CAACC,MAAM,EAAEC,QAAQ,EAAE;IAChC,MAAMC,MAAM,GAAG,IAAIP,UAAU,CAACK,MAAM,CAAC;IACrC,MAAMG,OAAO,GAAGvB,GAAG,CAACwB,MAAM,CAACF,MAAM,CAACG,KAAK,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC;IACjD,MAAMT,OAAO,GAAG,CAAC,GAAGO,OAAO,CAACG,IAAI,CAAC;IACjC,MAAMT,GAAG,GAAGM,OAAO,CAACI,SAAS,CAAC,CAAC,CAAC;IAChC,MAAMD,IAAI,GAAGH,OAAO,CAACI,SAAS,CAACF,KAAK,CAAC,CAAC,CAAC;IACvC,IAAIG,QAAQ,GAAG,EAAE;IACjB,IAAIC,SAAS;IAEb,IAAI,OAAOR,QAAQ,KAAK,WAAW,IAAI,OAAOA,QAAQ,CAACO,QAAQ,KAAK,WAAW,EAAE;MAC7EA,QAAQ,GAAGP,QAAQ,CAACO,QAAQ;MAC5BC,SAAS,GAAGxB,aAAa,CAACyB,MAAM,CAACC,MAAM,CAACH,QAAQ,CAACX,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAC9D;IAEA,MAAM,CAACe,GAAG,EAAEC,IAAI,CAAC,GAAG,IAAI,CAACf,gBAAgB,CAACC,iBAAiB,CAACO,IAAI,EAAEG,SAAS,CAAC;IAE5E,OAAO,CACH,IAAIzB,WAAW,CAACY,OAAO,EAAEC,GAAG,EAAEe,GAAG,CAACE,KAAK,EAAEF,GAAG,CAACrB,UAAU,EAAEiB,QAAQ,CAAC,EAClEK,IAAI,CACP;EACL;AACJ;AAEAE,MAAM,CAACC,OAAO,GAAG7B,iBAAiB"},"metadata":{},"sourceType":"script","externalDependencies":[]}