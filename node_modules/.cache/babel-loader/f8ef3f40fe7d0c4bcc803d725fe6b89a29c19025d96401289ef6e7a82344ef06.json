{"ast":null,"code":"const ApiEncoder = require('../ApiEncoder');\nconst {\n  montBytes2Int\n} = require('../utils/bls12381');\nconst {\n  byteArray2Hex\n} = require('../utils/int2ByteArray');\n\n/**\n * Map the internal representation FATE data structure to Aesophia canonical structures and formats.\n */\n\nclass CanonicalMapper {\n  constructor() {\n    this._apiEncoder = new ApiEncoder();\n  }\n  toCanonical(data) {\n    return data.accept(this);\n  }\n  visitData(acceptor) {\n    return acceptor.valueOf();\n  }\n  visitAddress(acceptor) {\n    return this._apiEncoder.encode(acceptor.name, acceptor.value);\n  }\n  visitList(acceptor) {\n    return acceptor.items.map(e => e.accept(this));\n  }\n  visitSet(acceptor) {\n    return new Set(acceptor.items.map(e => e.accept(this)));\n  }\n  visitMap(acceptor) {\n    const map = new Map();\n    for (const [key, value] of acceptor.iterator) {\n      map.set(key.accept(this), value.accept(this));\n    }\n    return map;\n  }\n  visitTuple(acceptor) {\n    return acceptor.prepareItems(e => e.accept(this));\n  }\n  visitVariant(acceptor) {\n    const value = acceptor.value.map(e => e.accept(this));\n    if (acceptor.variantName === 'None') {\n      return undefined;\n    }\n    if (acceptor.variantName === 'Some') {\n      return value[0];\n    }\n    return {\n      [acceptor.variantName]: value\n    };\n  }\n  visitBls12381Fr(acceptor) {\n    return montBytes2Int(acceptor.valueOf(), 'r');\n  }\n  visitBls12381Fp(acceptor) {\n    return montBytes2Int(acceptor.valueOf(), 'p');\n  }\n  visitCalldata(acceptor) {\n    const {\n      functionId,\n      args\n    } = acceptor.valueOf();\n    return {\n      functionId: byteArray2Hex(functionId),\n      args: args.map(e => e.accept(this))\n    };\n  }\n}\nmodule.exports = CanonicalMapper;","map":{"version":3,"names":["ApiEncoder","require","montBytes2Int","byteArray2Hex","CanonicalMapper","constructor","_apiEncoder","toCanonical","data","accept","visitData","acceptor","valueOf","visitAddress","encode","name","value","visitList","items","map","e","visitSet","Set","visitMap","Map","key","iterator","set","visitTuple","prepareItems","visitVariant","variantName","undefined","visitBls12381Fr","visitBls12381Fp","visitCalldata","functionId","args","module","exports"],"sources":["C:/Users/amitk/Desktop/Donation Project/donation-aeternity-blockchain-contract/node_modules/@aeternity/aepp-calldata/src/Mapper/CanonicalMapper.js"],"sourcesContent":["const ApiEncoder = require('../ApiEncoder')\nconst {montBytes2Int} = require('../utils/bls12381')\nconst {byteArray2Hex} = require('../utils/int2ByteArray')\n\n/**\n * Map the internal representation FATE data structure to Aesophia canonical structures and formats.\n */\n\nclass CanonicalMapper {\n    constructor() {\n        this._apiEncoder = new ApiEncoder()\n    }\n\n    toCanonical(data) {\n        return data.accept(this)\n    }\n\n    visitData(acceptor) {\n        return acceptor.valueOf()\n    }\n\n    visitAddress(acceptor) {\n        return this._apiEncoder.encode(acceptor.name, acceptor.value)\n    }\n\n    visitList(acceptor) {\n        return acceptor.items.map(e => e.accept(this))\n    }\n\n    visitSet(acceptor) {\n        return new Set(acceptor.items.map(e => e.accept(this)))\n    }\n\n    visitMap(acceptor) {\n        const map = new Map()\n        for (const [key, value] of acceptor.iterator) {\n            map.set(key.accept(this), value.accept(this))\n        }\n\n        return map\n    }\n\n    visitTuple(acceptor) {\n        return acceptor.prepareItems(e => e.accept(this))\n    }\n\n    visitVariant(acceptor) {\n        const value = acceptor.value.map(e => e.accept(this))\n\n        if (acceptor.variantName === 'None') {\n            return undefined\n        }\n\n        if (acceptor.variantName === 'Some') {\n            return value[0]\n        }\n\n        return {\n            [acceptor.variantName]: value\n        }\n    }\n\n    visitBls12381Fr(acceptor) {\n        return montBytes2Int(acceptor.valueOf(), 'r')\n    }\n\n    visitBls12381Fp(acceptor) {\n        return montBytes2Int(acceptor.valueOf(), 'p')\n    }\n\n    visitCalldata(acceptor) {\n        const {functionId, args} = acceptor.valueOf()\n\n        return {\n            functionId: byteArray2Hex(functionId),\n            args: args.map(e => e.accept(this))\n        }\n    }\n}\n\nmodule.exports = CanonicalMapper\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}