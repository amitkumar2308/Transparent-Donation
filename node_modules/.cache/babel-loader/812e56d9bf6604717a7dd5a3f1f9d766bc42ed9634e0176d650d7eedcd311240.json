{"ast":null,"code":"const FateVariant = require('../types/FateVariant');\nconst FateTypeError = require('../Errors/FateTypeError');\nconst BaseDataFactory = require('./BaseDataFactory');\nconst TYPES = ['variant', 'Chain.ttl', 'AENS.pointee', 'AENS.name'];\nclass VariantDataFactory extends BaseDataFactory {\n  supports({\n    name,\n    _valueTypes\n  }) {\n    return TYPES.includes(name);\n  }\n  create(type, value) {\n    if (!this.isValid(value)) {\n      throw new FateTypeError(type.name, `Variant should be an object mapping constructor to array of values, got \"${value}\" instead`);\n    }\n    const [variantCtor, variantArgs] = Object.entries(value)[0];\n    const arities = type.variants.map(e => {\n      const [[, args]] = Object.entries(e);\n      return args.length;\n    });\n    const tag = type.variants.findIndex(e => {\n      const [[key, _]] = Object.entries(e);\n      return key === variantCtor;\n    });\n    if (tag === -1) {\n      throw new FateTypeError(type.name, `Unknown variant constructor: ${variantCtor}`);\n    }\n    const [[, variantTypes]] = Object.entries(type.variants[tag]);\n    if (variantArgs.length !== variantTypes.length) {\n      throw new FateTypeError(type.name, `\"${variantCtor}\" variant constructor expects ${variantTypes.length} argument(s) but got ${variantArgs.length} instead`);\n    }\n    const variantValue = this.valueFactory.createMultiple(variantTypes, variantArgs);\n    return new FateVariant(arities, tag, variantValue, variantTypes, type.variants);\n  }\n  isValid(value) {\n    return typeof value === 'object' && value !== null && Object.entries(value).length === 1 && Array.isArray(Object.values(value)[0]);\n  }\n}\nmodule.exports = VariantDataFactory;","map":{"version":3,"names":["FateVariant","require","FateTypeError","BaseDataFactory","TYPES","VariantDataFactory","supports","name","_valueTypes","includes","create","type","value","isValid","variantCtor","variantArgs","Object","entries","arities","variants","map","e","args","length","tag","findIndex","key","_","variantTypes","variantValue","valueFactory","createMultiple","Array","isArray","values","module","exports"],"sources":["C:/Users/amitk/Desktop/Donation Project/donation-aeternity-blockchain-contract/node_modules/@aeternity/aepp-calldata/src/DataFactory/VariantDataFactory.js"],"sourcesContent":["const FateVariant = require('../types/FateVariant')\nconst FateTypeError = require('../Errors/FateTypeError')\nconst BaseDataFactory = require('./BaseDataFactory')\n\nconst TYPES = [\n    'variant',\n    'Chain.ttl',\n    'AENS.pointee',\n    'AENS.name'\n]\n\nclass VariantDataFactory extends BaseDataFactory {\n    supports({ name, _valueTypes }) {\n        return TYPES.includes(name)\n    }\n\n    create(type, value) {\n        if (!this.isValid(value)) {\n            throw new FateTypeError(\n                type.name,\n                `Variant should be an object mapping constructor to array of values, got \"${value}\" instead`\n            )\n        }\n\n        const [variantCtor, variantArgs] = Object.entries(value)[0]\n\n        const arities = type.variants.map(e => {\n            const [[, args]] = Object.entries(e)\n            return args.length\n        })\n\n        const tag = type.variants.findIndex(e => {\n            const [[key, _]] = Object.entries(e)\n            return key === variantCtor\n        })\n\n        if (tag === -1) {\n            throw new FateTypeError(\n                type.name,\n                `Unknown variant constructor: ${variantCtor}`\n            )\n        }\n\n        const [[, variantTypes]] = Object.entries(type.variants[tag])\n\n        if (variantArgs.length !== variantTypes.length) {\n            throw new FateTypeError(\n                type.name,\n                `\"${variantCtor}\" variant constructor expects ${variantTypes.length} argument(s) but got ${variantArgs.length} instead`\n            )\n        }\n\n        const variantValue = this.valueFactory.createMultiple(variantTypes, variantArgs)\n\n        return new FateVariant(arities, tag, variantValue, variantTypes, type.variants)\n    }\n\n    isValid(value) {\n        return typeof value === 'object'\n            && value !== null\n            && Object.entries(value).length === 1\n            && Array.isArray(Object.values(value)[0])\n    }\n}\n\nmodule.exports = VariantDataFactory\n"],"mappings":"AAAA,MAAMA,WAAW,GAAGC,OAAO,CAAC,sBAAsB,CAAC;AACnD,MAAMC,aAAa,GAAGD,OAAO,CAAC,yBAAyB,CAAC;AACxD,MAAME,eAAe,GAAGF,OAAO,CAAC,mBAAmB,CAAC;AAEpD,MAAMG,KAAK,GAAG,CACV,SAAS,EACT,WAAW,EACX,cAAc,EACd,WAAW,CACd;AAED,MAAMC,kBAAkB,SAASF,eAAe,CAAC;EAC7CG,QAAQA,CAAC;IAAEC,IAAI;IAAEC;EAAY,CAAC,EAAE;IAC5B,OAAOJ,KAAK,CAACK,QAAQ,CAACF,IAAI,CAAC;EAC/B;EAEAG,MAAMA,CAACC,IAAI,EAAEC,KAAK,EAAE;IAChB,IAAI,CAAC,IAAI,CAACC,OAAO,CAACD,KAAK,CAAC,EAAE;MACtB,MAAM,IAAIV,aAAa,CACnBS,IAAI,CAACJ,IAAI,EACR,4EAA2EK,KAAM,WACtF,CAAC;IACL;IAEA,MAAM,CAACE,WAAW,EAAEC,WAAW,CAAC,GAAGC,MAAM,CAACC,OAAO,CAACL,KAAK,CAAC,CAAC,CAAC,CAAC;IAE3D,MAAMM,OAAO,GAAGP,IAAI,CAACQ,QAAQ,CAACC,GAAG,CAACC,CAAC,IAAI;MACnC,MAAM,CAAC,GAAGC,IAAI,CAAC,CAAC,GAAGN,MAAM,CAACC,OAAO,CAACI,CAAC,CAAC;MACpC,OAAOC,IAAI,CAACC,MAAM;IACtB,CAAC,CAAC;IAEF,MAAMC,GAAG,GAAGb,IAAI,CAACQ,QAAQ,CAACM,SAAS,CAACJ,CAAC,IAAI;MACrC,MAAM,CAAC,CAACK,GAAG,EAAEC,CAAC,CAAC,CAAC,GAAGX,MAAM,CAACC,OAAO,CAACI,CAAC,CAAC;MACpC,OAAOK,GAAG,KAAKZ,WAAW;IAC9B,CAAC,CAAC;IAEF,IAAIU,GAAG,KAAK,CAAC,CAAC,EAAE;MACZ,MAAM,IAAItB,aAAa,CACnBS,IAAI,CAACJ,IAAI,EACR,gCAA+BO,WAAY,EAChD,CAAC;IACL;IAEA,MAAM,CAAC,GAAGc,YAAY,CAAC,CAAC,GAAGZ,MAAM,CAACC,OAAO,CAACN,IAAI,CAACQ,QAAQ,CAACK,GAAG,CAAC,CAAC;IAE7D,IAAIT,WAAW,CAACQ,MAAM,KAAKK,YAAY,CAACL,MAAM,EAAE;MAC5C,MAAM,IAAIrB,aAAa,CACnBS,IAAI,CAACJ,IAAI,EACR,IAAGO,WAAY,iCAAgCc,YAAY,CAACL,MAAO,wBAAuBR,WAAW,CAACQ,MAAO,UAClH,CAAC;IACL;IAEA,MAAMM,YAAY,GAAG,IAAI,CAACC,YAAY,CAACC,cAAc,CAACH,YAAY,EAAEb,WAAW,CAAC;IAEhF,OAAO,IAAIf,WAAW,CAACkB,OAAO,EAAEM,GAAG,EAAEK,YAAY,EAAED,YAAY,EAAEjB,IAAI,CAACQ,QAAQ,CAAC;EACnF;EAEAN,OAAOA,CAACD,KAAK,EAAE;IACX,OAAO,OAAOA,KAAK,KAAK,QAAQ,IACzBA,KAAK,KAAK,IAAI,IACdI,MAAM,CAACC,OAAO,CAACL,KAAK,CAAC,CAACW,MAAM,KAAK,CAAC,IAClCS,KAAK,CAACC,OAAO,CAACjB,MAAM,CAACkB,MAAM,CAACtB,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;EACjD;AACJ;AAEAuB,MAAM,CAACC,OAAO,GAAG/B,kBAAkB"},"metadata":{},"sourceType":"script","externalDependencies":[]}