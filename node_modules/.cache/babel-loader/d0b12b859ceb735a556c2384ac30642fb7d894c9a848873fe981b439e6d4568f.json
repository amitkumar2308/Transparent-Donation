{"ast":null,"code":"const {\n  hash\n} = require('@aeternity/argon2-browser/dist/argon2-bundled.min.js');\nexports.argon2d = 0;\nexports.argon2i = 1;\nexports.argon2id = 2;\nexports.hash = function (plain, options) {\n  return hash({\n    pass: plain,\n    hashLen: options.hashLength,\n    salt: options.salt,\n    time: options.timeCost,\n    mem: options.memoryCost,\n    type: options.type,\n    ...options\n  }).then(({\n    hash\n  }) => hash);\n};","map":{"version":3,"names":["hash","require","exports","argon2d","argon2i","argon2id","plain","options","pass","hashLen","hashLength","salt","time","timeCost","mem","memoryCost","type","then"],"sources":["C:/Users/amitk/Desktop/Donation Project/donation-aeternity-blockchain-contract/node_modules/@aeternity/argon2/browser.js"],"sourcesContent":["const { hash } = require('@aeternity/argon2-browser/dist/argon2-bundled.min.js');\n\nexports.argon2d = 0;\nexports.argon2i = 1;\nexports.argon2id = 2;\n\nexports.hash = function (plain, options) {\n  return hash({\n    pass: plain,\n    hashLen: options.hashLength,\n    salt: options.salt,\n    time: options.timeCost,\n    mem: options.memoryCost,\n    type: options.type,\n    ...options\n  }).then(({ hash }) => hash);\n}\n"],"mappings":"AAAA,MAAM;EAAEA;AAAK,CAAC,GAAGC,OAAO,CAAC,sDAAsD,CAAC;AAEhFC,OAAO,CAACC,OAAO,GAAG,CAAC;AACnBD,OAAO,CAACE,OAAO,GAAG,CAAC;AACnBF,OAAO,CAACG,QAAQ,GAAG,CAAC;AAEpBH,OAAO,CAACF,IAAI,GAAG,UAAUM,KAAK,EAAEC,OAAO,EAAE;EACvC,OAAOP,IAAI,CAAC;IACVQ,IAAI,EAAEF,KAAK;IACXG,OAAO,EAAEF,OAAO,CAACG,UAAU;IAC3BC,IAAI,EAAEJ,OAAO,CAACI,IAAI;IAClBC,IAAI,EAAEL,OAAO,CAACM,QAAQ;IACtBC,GAAG,EAAEP,OAAO,CAACQ,UAAU;IACvBC,IAAI,EAAET,OAAO,CAACS,IAAI;IAClB,GAAGT;EACL,CAAC,CAAC,CAACU,IAAI,CAAC,CAAC;IAAEjB;EAAK,CAAC,KAAKA,IAAI,CAAC;AAC7B,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}