{"ast":null,"code":"const FateTag = require('../FateTag');\nconst RLPInt = require('../utils/RLPInt');\nconst FateInt = require('../types/FateInt');\nconst BaseSerializer = require('./BaseSerializer');\nconst FatePrefixError = require('../Errors/FatePrefixError');\nconst abs = require('../utils/abs');\nconst SMALL_INT_MASK = 0b00000001;\nclass IntSerializer extends BaseSerializer {\n  serialize(data) {\n    const bigValue = data instanceof FateInt ? data.value : BigInt(data);\n    const absVal = abs(bigValue);\n\n    // small integer\n    if (absVal < 64) {\n      const small = Number(absVal);\n      if (bigValue >= 0) {\n        return [small << 1];\n      }\n\n      // negative\n      return [(0b10000000 | small << 1) & 0b11111110];\n    }\n\n    // large negative integer\n    if (bigValue < 0) {\n      return [FateTag.NEG_BIG_INT, ...RLPInt.encode(absVal - 64n)];\n    }\n\n    // large positive integer\n    return [FateTag.POS_BIG_INT, ...RLPInt.encode(absVal - 64n)];\n  }\n  deserializeStream(stream) {\n    const data = new Uint8Array(stream);\n    const prefix = data[0];\n\n    // small int\n    if ((prefix & SMALL_INT_MASK) === 0) {\n      // positive\n      if ((prefix & 0b10000000) === 0) {\n        return [new FateInt(prefix >> 1), data.slice(1)];\n      }\n\n      // negative\n      const i = (prefix & 0b01111110) >> 1;\n      return [new FateInt(-i), data.slice(1)];\n    }\n    if (prefix === FateTag.POS_BIG_INT || prefix === FateTag.NEG_BIG_INT) {\n      const sign = prefix === FateTag.POS_BIG_INT ? 1n : -1n;\n      const [i, remainder] = RLPInt.decode(data.slice(1));\n      return [new FateInt((i + 64n) * sign), new Uint8Array(remainder)];\n    }\n    throw new FatePrefixError(prefix);\n  }\n}\nmodule.exports = IntSerializer;","map":{"version":3,"names":["FateTag","require","RLPInt","FateInt","BaseSerializer","FatePrefixError","abs","SMALL_INT_MASK","IntSerializer","serialize","data","bigValue","value","BigInt","absVal","small","Number","NEG_BIG_INT","encode","POS_BIG_INT","deserializeStream","stream","Uint8Array","prefix","slice","i","sign","remainder","decode","module","exports"],"sources":["C:/Users/amitk/Desktop/Donation Project/donation-aeternity-blockchain-contract/node_modules/@aeternity/aepp-calldata/src/Serializers/IntSerializer.js"],"sourcesContent":["const FateTag = require('../FateTag')\nconst RLPInt = require('../utils/RLPInt')\nconst FateInt = require('../types/FateInt')\nconst BaseSerializer = require('./BaseSerializer')\nconst FatePrefixError = require('../Errors/FatePrefixError')\nconst abs = require('../utils/abs')\n\nconst SMALL_INT_MASK = 0b00000001\n\nclass IntSerializer extends BaseSerializer {\n    serialize(data) {\n        const bigValue = (data instanceof FateInt) ? data.value : BigInt(data)\n        const absVal = abs(bigValue)\n\n        // small integer\n        if (absVal < 64) {\n            const small = Number(absVal)\n            if (bigValue >= 0) {\n                return [(small << 1)]\n            }\n\n            // negative\n            return [(0b10000000 | (small << 1)) & 0b11111110]\n        }\n\n        // large negative integer\n        if (bigValue < 0) {\n            return [\n                FateTag.NEG_BIG_INT,\n                ...RLPInt.encode(absVal - 64n)\n            ]\n        }\n\n        // large positive integer\n        return [\n            FateTag.POS_BIG_INT,\n            ...RLPInt.encode(absVal - 64n)\n        ]\n    }\n\n    deserializeStream(stream) {\n        const data = new Uint8Array(stream)\n        const prefix = data[0]\n\n        // small int\n        if ((prefix & SMALL_INT_MASK) === 0) {\n            // positive\n            if ((prefix & 0b10000000) === 0) {\n                return [\n                    new FateInt(prefix >> 1),\n                    data.slice(1)\n                ]\n            }\n\n            // negative\n            const i = (prefix & 0b01111110) >> 1\n\n            return [\n                new FateInt(-i),\n                data.slice(1)\n            ]\n        }\n\n        if (prefix === FateTag.POS_BIG_INT || prefix === FateTag.NEG_BIG_INT) {\n            const sign = prefix === FateTag.POS_BIG_INT ? 1n : -1n\n            const [i, remainder] = RLPInt.decode(data.slice(1))\n\n            return [\n                new FateInt((i + 64n) * sign),\n                new Uint8Array(remainder)\n            ]\n        }\n\n        throw new FatePrefixError(prefix)\n    }\n}\n\nmodule.exports = IntSerializer\n"],"mappings":"AAAA,MAAMA,OAAO,GAAGC,OAAO,CAAC,YAAY,CAAC;AACrC,MAAMC,MAAM,GAAGD,OAAO,CAAC,iBAAiB,CAAC;AACzC,MAAME,OAAO,GAAGF,OAAO,CAAC,kBAAkB,CAAC;AAC3C,MAAMG,cAAc,GAAGH,OAAO,CAAC,kBAAkB,CAAC;AAClD,MAAMI,eAAe,GAAGJ,OAAO,CAAC,2BAA2B,CAAC;AAC5D,MAAMK,GAAG,GAAGL,OAAO,CAAC,cAAc,CAAC;AAEnC,MAAMM,cAAc,GAAG,UAAU;AAEjC,MAAMC,aAAa,SAASJ,cAAc,CAAC;EACvCK,SAASA,CAACC,IAAI,EAAE;IACZ,MAAMC,QAAQ,GAAID,IAAI,YAAYP,OAAO,GAAIO,IAAI,CAACE,KAAK,GAAGC,MAAM,CAACH,IAAI,CAAC;IACtE,MAAMI,MAAM,GAAGR,GAAG,CAACK,QAAQ,CAAC;;IAE5B;IACA,IAAIG,MAAM,GAAG,EAAE,EAAE;MACb,MAAMC,KAAK,GAAGC,MAAM,CAACF,MAAM,CAAC;MAC5B,IAAIH,QAAQ,IAAI,CAAC,EAAE;QACf,OAAO,CAAEI,KAAK,IAAI,CAAC,CAAE;MACzB;;MAEA;MACA,OAAO,CAAC,CAAC,UAAU,GAAIA,KAAK,IAAI,CAAE,IAAI,UAAU,CAAC;IACrD;;IAEA;IACA,IAAIJ,QAAQ,GAAG,CAAC,EAAE;MACd,OAAO,CACHX,OAAO,CAACiB,WAAW,EACnB,GAAGf,MAAM,CAACgB,MAAM,CAACJ,MAAM,GAAG,GAAG,CAAC,CACjC;IACL;;IAEA;IACA,OAAO,CACHd,OAAO,CAACmB,WAAW,EACnB,GAAGjB,MAAM,CAACgB,MAAM,CAACJ,MAAM,GAAG,GAAG,CAAC,CACjC;EACL;EAEAM,iBAAiBA,CAACC,MAAM,EAAE;IACtB,MAAMX,IAAI,GAAG,IAAIY,UAAU,CAACD,MAAM,CAAC;IACnC,MAAME,MAAM,GAAGb,IAAI,CAAC,CAAC,CAAC;;IAEtB;IACA,IAAI,CAACa,MAAM,GAAGhB,cAAc,MAAM,CAAC,EAAE;MACjC;MACA,IAAI,CAACgB,MAAM,GAAG,UAAU,MAAM,CAAC,EAAE;QAC7B,OAAO,CACH,IAAIpB,OAAO,CAACoB,MAAM,IAAI,CAAC,CAAC,EACxBb,IAAI,CAACc,KAAK,CAAC,CAAC,CAAC,CAChB;MACL;;MAEA;MACA,MAAMC,CAAC,GAAG,CAACF,MAAM,GAAG,UAAU,KAAK,CAAC;MAEpC,OAAO,CACH,IAAIpB,OAAO,CAAC,CAACsB,CAAC,CAAC,EACff,IAAI,CAACc,KAAK,CAAC,CAAC,CAAC,CAChB;IACL;IAEA,IAAID,MAAM,KAAKvB,OAAO,CAACmB,WAAW,IAAII,MAAM,KAAKvB,OAAO,CAACiB,WAAW,EAAE;MAClE,MAAMS,IAAI,GAAGH,MAAM,KAAKvB,OAAO,CAACmB,WAAW,GAAG,EAAE,GAAG,CAAC,EAAE;MACtD,MAAM,CAACM,CAAC,EAAEE,SAAS,CAAC,GAAGzB,MAAM,CAAC0B,MAAM,CAAClB,IAAI,CAACc,KAAK,CAAC,CAAC,CAAC,CAAC;MAEnD,OAAO,CACH,IAAIrB,OAAO,CAAC,CAACsB,CAAC,GAAG,GAAG,IAAIC,IAAI,CAAC,EAC7B,IAAIJ,UAAU,CAACK,SAAS,CAAC,CAC5B;IACL;IAEA,MAAM,IAAItB,eAAe,CAACkB,MAAM,CAAC;EACrC;AACJ;AAEAM,MAAM,CAACC,OAAO,GAAGtB,aAAa"},"metadata":{},"sourceType":"script","externalDependencies":[]}