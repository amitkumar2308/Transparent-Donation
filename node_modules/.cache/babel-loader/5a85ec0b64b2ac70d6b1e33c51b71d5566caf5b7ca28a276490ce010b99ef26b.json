{"ast":null,"code":"const InternalEncoder = require('../Encoder');\n\n/**\n * @deprecated Use AciContractCallEncoder\n */\nclass Encoder {\n  /**\n   * Creates contract encoder\n   *\n   * @example\n   * const ACI = require('./Test.json')\n   * const encoder = new Encoder(ACI)\n   *\n   * @param {Object} aci - The contract ACI in a canonical form as POJO.\n  */\n  constructor(aci) {\n    this._internalEncoder = new InternalEncoder(aci);\n  }\n\n  /**\n   * Creates contract calldata\n   *\n   * @example\n   * const encoded = encoder.encode('Test', 'test_string', [\"whoolymoly\"])\n   * console.log(`Encoded data: ${encoded}`)\n   * // Outputs:\n   * // Encoded data: cb_KxHwzCuVGyl3aG9vbHltb2x5zwMSnw==\n   *\n   * @param {string} contract - The contract name as defined in the ACI.\n   * @param {string} funName - The function name as defined in the ACI.\n   * @param {Array} args - An array of call arguments as Javascript data structures. See README.md\n   * @returns {string} Encoded calldata\n  */\n  encode(contract, funName, args) {\n    return this._internalEncoder.encode(contract, funName, args);\n  }\n\n  /**\n   * Decodes successful (type = ok) contract call return data\n   *\n   * @example\n   * const decoded = encoder.decode('Test', 'test_string', 'cb_KXdob29seW1vbHlGazSE')\n   * console.log(`Decoded data: ${decoded}`)\n   * // Outputs:\n   * // Decoded data: whoolymoly\n   *\n   * @param {string} contract - The contract name as defined in the ACI.\n   * @param {string} funName - The function name as defined in the ACI.\n   * @param {string} data - The call return value in a canonical format.\n   * @returns {boolean|string|BigInt|Array|Map|Object}\n   *  Decoded value as Javascript data structures. See README.md\n  */\n  decode(contract, funName, data) {\n    return this._internalEncoder.decode(contract, funName, data);\n  }\n\n  /**\n   * Decodes arbitrary contract bytearray data.\n   *\n   * Note that:\n   * - Record keys are lost\n   * - Variant constructor names are lost\n   * - Any user type information is lost\n   * - STL type information is lost: i.e. Chain, AENS, Set, BLS12_381\n   *\n   * @example\n   * const decoded = encoder.decodeContractByteArray('cb_KXdob29seW1vbHlGazSE')\n   * console.log(`Decoded data: ${decoded}`)\n   * // Outputs:\n   * // Decoded data: whoolymoly\n   *\n   * @param {string} data - Contract bytearray data in a canonical format.\n   * @returns {boolean|string|BigInt|Array|Map|Object}\n   *  Decoded value as Javascript data structures. See README.md\n  */\n  decodeContractByteArray(data) {\n    return this._internalEncoder.decodeContractByteArray(data);\n  }\n\n  /* eslint-disable max-len */\n  /**\n   * Decodes a string\n   *\n   *\n   * @example\n   * const error = encoder.decodeString('cb_VHlwZSBlcnJvciBvbiBjYWxsOiBbe2J5dGVzLDw8MjQwLDIsLi4uPj59XSBpcyBub3Qgb2YgdHlwZSBbe2J5dGVzLDMyfV3EtJjU')\n   * console.log('Error: ' + error.toString())\n   * // Outputs:\n   * // Error: Type error on call: [{bytes,<<240,2,...>>}] is not of type [{bytes,32}]\n   *\n   * @param {string} data - The encoded string.\n   * @returns {Uint8Array} Decoded value as byte array.\n  */\n  decodeString(data) {\n    return this._internalEncoder.decodeString(data);\n  }\n  /* eslint-enable max-len */\n\n  /**\n   * Decodes a FATE string\n   *\n   * @example\n   * const revert = encoder.decodeFateString('cb_OXJlcXVpcmUgZmFpbGVkarP9mg==')\n   * console.log('Revert: ' + revert)\n   * // Outputs:\n   * // Revert: require failed\n   *\n   * @param {string} data - The FATE encoded string.\n   * @returns {string} Decoded string value.\n  */\n  decodeFateString(data) {\n    return this._internalEncoder.decodeFateString(data);\n  }\n\n  /**\n   * Decodes contract event\n   *\n   * @example\n   * const data = encoder.decodeEvent('Test', 'cb_dHJpZ2dlcmVk1FYuYA==', [\n   *     34853523142692495808479485503424878684430196596020091237715106250497712463899n,\n   *     17\n   * ])\n   * console.log(data)\n   * // Outputs:\n   * // {EventTwo: [17n, 'triggered']}\n   *\n   * @param {string} contract - The contract name as defined in the ACI.\n   * @param {string} encodedData - Event encoded data\n   * @param {Array} topics - A list of event topics.\n   * First element should be the implicit topic that carry the event constructor name.\n   */\n  decodeEvent(contract, data, topics) {\n    return this._internalEncoder.decodeEvent(contract, data, topics);\n  }\n}\nmodule.exports = Encoder;","map":{"version":3,"names":["InternalEncoder","require","Encoder","constructor","aci","_internalEncoder","encode","contract","funName","args","decode","data","decodeContractByteArray","decodeString","decodeFateString","decodeEvent","topics","module","exports"],"sources":["C:/Users/amitk/Desktop/Donation Project/donation-aeternity-blockchain-contract/node_modules/@aeternity/aepp-calldata/src/api/Encoder.js"],"sourcesContent":["const InternalEncoder = require('../Encoder')\n\n/**\n * @deprecated Use AciContractCallEncoder\n */\nclass Encoder {\n    /**\n     * Creates contract encoder\n     *\n     * @example\n     * const ACI = require('./Test.json')\n     * const encoder = new Encoder(ACI)\n     *\n     * @param {Object} aci - The contract ACI in a canonical form as POJO.\n    */\n    constructor(aci) {\n        this._internalEncoder = new InternalEncoder(aci)\n    }\n\n    /**\n     * Creates contract calldata\n     *\n     * @example\n     * const encoded = encoder.encode('Test', 'test_string', [\"whoolymoly\"])\n     * console.log(`Encoded data: ${encoded}`)\n     * // Outputs:\n     * // Encoded data: cb_KxHwzCuVGyl3aG9vbHltb2x5zwMSnw==\n     *\n     * @param {string} contract - The contract name as defined in the ACI.\n     * @param {string} funName - The function name as defined in the ACI.\n     * @param {Array} args - An array of call arguments as Javascript data structures. See README.md\n     * @returns {string} Encoded calldata\n    */\n    encode(contract, funName, args) {\n        return this._internalEncoder.encode(contract, funName, args)\n    }\n\n    /**\n     * Decodes successful (type = ok) contract call return data\n     *\n     * @example\n     * const decoded = encoder.decode('Test', 'test_string', 'cb_KXdob29seW1vbHlGazSE')\n     * console.log(`Decoded data: ${decoded}`)\n     * // Outputs:\n     * // Decoded data: whoolymoly\n     *\n     * @param {string} contract - The contract name as defined in the ACI.\n     * @param {string} funName - The function name as defined in the ACI.\n     * @param {string} data - The call return value in a canonical format.\n     * @returns {boolean|string|BigInt|Array|Map|Object}\n     *  Decoded value as Javascript data structures. See README.md\n    */\n    decode(contract, funName, data) {\n        return this._internalEncoder.decode(contract, funName, data)\n    }\n\n    /**\n     * Decodes arbitrary contract bytearray data.\n     *\n     * Note that:\n     * - Record keys are lost\n     * - Variant constructor names are lost\n     * - Any user type information is lost\n     * - STL type information is lost: i.e. Chain, AENS, Set, BLS12_381\n     *\n     * @example\n     * const decoded = encoder.decodeContractByteArray('cb_KXdob29seW1vbHlGazSE')\n     * console.log(`Decoded data: ${decoded}`)\n     * // Outputs:\n     * // Decoded data: whoolymoly\n     *\n     * @param {string} data - Contract bytearray data in a canonical format.\n     * @returns {boolean|string|BigInt|Array|Map|Object}\n     *  Decoded value as Javascript data structures. See README.md\n    */\n    decodeContractByteArray(data) {\n        return this._internalEncoder.decodeContractByteArray(data)\n    }\n\n    /* eslint-disable max-len */\n    /**\n     * Decodes a string\n     *\n     *\n     * @example\n     * const error = encoder.decodeString('cb_VHlwZSBlcnJvciBvbiBjYWxsOiBbe2J5dGVzLDw8MjQwLDIsLi4uPj59XSBpcyBub3Qgb2YgdHlwZSBbe2J5dGVzLDMyfV3EtJjU')\n     * console.log('Error: ' + error.toString())\n     * // Outputs:\n     * // Error: Type error on call: [{bytes,<<240,2,...>>}] is not of type [{bytes,32}]\n     *\n     * @param {string} data - The encoded string.\n     * @returns {Uint8Array} Decoded value as byte array.\n    */\n    decodeString(data) {\n        return this._internalEncoder.decodeString(data)\n    }\n    /* eslint-enable max-len */\n\n    /**\n     * Decodes a FATE string\n     *\n     * @example\n     * const revert = encoder.decodeFateString('cb_OXJlcXVpcmUgZmFpbGVkarP9mg==')\n     * console.log('Revert: ' + revert)\n     * // Outputs:\n     * // Revert: require failed\n     *\n     * @param {string} data - The FATE encoded string.\n     * @returns {string} Decoded string value.\n    */\n    decodeFateString(data) {\n        return this._internalEncoder.decodeFateString(data)\n    }\n\n    /**\n     * Decodes contract event\n     *\n     * @example\n     * const data = encoder.decodeEvent('Test', 'cb_dHJpZ2dlcmVk1FYuYA==', [\n     *     34853523142692495808479485503424878684430196596020091237715106250497712463899n,\n     *     17\n     * ])\n     * console.log(data)\n     * // Outputs:\n     * // {EventTwo: [17n, 'triggered']}\n     *\n     * @param {string} contract - The contract name as defined in the ACI.\n     * @param {string} encodedData - Event encoded data\n     * @param {Array} topics - A list of event topics.\n     * First element should be the implicit topic that carry the event constructor name.\n     */\n    decodeEvent(contract, data, topics) {\n        return this._internalEncoder.decodeEvent(contract, data, topics)\n    }\n}\n\nmodule.exports = Encoder\n"],"mappings":"AAAA,MAAMA,eAAe,GAAGC,OAAO,CAAC,YAAY,CAAC;;AAE7C;AACA;AACA;AACA,MAAMC,OAAO,CAAC;EACV;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACIC,WAAWA,CAACC,GAAG,EAAE;IACb,IAAI,CAACC,gBAAgB,GAAG,IAAIL,eAAe,CAACI,GAAG,CAAC;EACpD;;EAEA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACIE,MAAMA,CAACC,QAAQ,EAAEC,OAAO,EAAEC,IAAI,EAAE;IAC5B,OAAO,IAAI,CAACJ,gBAAgB,CAACC,MAAM,CAACC,QAAQ,EAAEC,OAAO,EAAEC,IAAI,CAAC;EAChE;;EAEA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACIC,MAAMA,CAACH,QAAQ,EAAEC,OAAO,EAAEG,IAAI,EAAE;IAC5B,OAAO,IAAI,CAACN,gBAAgB,CAACK,MAAM,CAACH,QAAQ,EAAEC,OAAO,EAAEG,IAAI,CAAC;EAChE;;EAEA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACIC,uBAAuBA,CAACD,IAAI,EAAE;IAC1B,OAAO,IAAI,CAACN,gBAAgB,CAACO,uBAAuB,CAACD,IAAI,CAAC;EAC9D;;EAEA;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACIE,YAAYA,CAACF,IAAI,EAAE;IACf,OAAO,IAAI,CAACN,gBAAgB,CAACQ,YAAY,CAACF,IAAI,CAAC;EACnD;EACA;;EAEA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACIG,gBAAgBA,CAACH,IAAI,EAAE;IACnB,OAAO,IAAI,CAACN,gBAAgB,CAACS,gBAAgB,CAACH,IAAI,CAAC;EACvD;;EAEA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACII,WAAWA,CAACR,QAAQ,EAAEI,IAAI,EAAEK,MAAM,EAAE;IAChC,OAAO,IAAI,CAACX,gBAAgB,CAACU,WAAW,CAACR,QAAQ,EAAEI,IAAI,EAAEK,MAAM,CAAC;EACpE;AACJ;AAEAC,MAAM,CAACC,OAAO,GAAGhB,OAAO"},"metadata":{},"sourceType":"script","externalDependencies":[]}