{"ast":null,"code":"const InternalEncoder = require('../ContractEncoder');\nclass ContractEncoder {\n  constructor() {\n    this._internalEncoder = new InternalEncoder();\n  }\n\n  /**\n   * Decode serialized contract data\n   *\n   * @param {string} data - FATE API encoded data in canonical format.\n   * @returns {Object} Decoded data\n  */\n  decode(data) {\n    return this._internalEncoder.decode(data);\n  }\n}\nmodule.exports = ContractEncoder;","map":{"version":3,"names":["InternalEncoder","require","ContractEncoder","constructor","_internalEncoder","decode","data","module","exports"],"sources":["C:/Users/amitk/Desktop/Donation Project/donation-aeternity-blockchain-contract/node_modules/@aeternity/aepp-calldata/src/api/ContractEncoder.js"],"sourcesContent":["const InternalEncoder = require('../ContractEncoder')\n\nclass ContractEncoder {\n    constructor() {\n        this._internalEncoder = new InternalEncoder()\n    }\n\n    /**\n     * Decode serialized contract data\n     *\n     * @param {string} data - FATE API encoded data in canonical format.\n     * @returns {Object} Decoded data\n    */\n    decode(data) {\n        return this._internalEncoder.decode(data)\n    }\n}\n\nmodule.exports = ContractEncoder\n"],"mappings":"AAAA,MAAMA,eAAe,GAAGC,OAAO,CAAC,oBAAoB,CAAC;AAErD,MAAMC,eAAe,CAAC;EAClBC,WAAWA,CAAA,EAAG;IACV,IAAI,CAACC,gBAAgB,GAAG,IAAIJ,eAAe,CAAC,CAAC;EACjD;;EAEA;AACJ;AACA;AACA;AACA;AACA;EACIK,MAAMA,CAACC,IAAI,EAAE;IACT,OAAO,IAAI,CAACF,gBAAgB,CAACC,MAAM,CAACC,IAAI,CAAC;EAC7C;AACJ;AAEAC,MAAM,CAACC,OAAO,GAAGN,eAAe"},"metadata":{},"sourceType":"script","externalDependencies":[]}