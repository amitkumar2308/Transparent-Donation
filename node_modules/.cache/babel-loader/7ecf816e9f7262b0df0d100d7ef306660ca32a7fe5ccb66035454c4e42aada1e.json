{"ast":null,"code":"const BaseDataFactory = require('./BaseDataFactory');\nconst FateTuple = require('../types/FateTuple');\nconst {\n  FateTypeRecord\n} = require('../FateTypes');\nconst FateTypeError = require('../Errors/FateTypeError');\nclass RecordDataFactory extends BaseDataFactory {\n  supports({\n    name,\n    _valueTypes\n  }) {\n    return 'record' === name;\n  }\n  create(type, value) {\n    if (typeof value !== 'object') {\n      throw new FateTypeError(type.name, `Fate record must be an Object, got ${value} instead`);\n    }\n    const keyLen = Object.keys(value).length;\n    if (keyLen !== type.keys.length) {\n      throw new FateTypeError(type.name, `Number of expected keys (${type.keys.length}) and actual keys (${keyLen}) should match`);\n    }\n    const resolvedValue = type.valueTypes.map((t, i) => {\n      const key = type.keys[i];\n      return this.valueFactory.create(t, value[key]);\n    });\n\n    // Unbox singleton tuples and records\n    // https://github.com/aeternity/aesophia/pull/205\n    // https://github.com/aeternity/aesophia/commit/a403a9d227ac56266cf5bb8fbc916f17e6141d15\n    if (resolvedValue.length === 1) {\n      return resolvedValue[0];\n    }\n    return new FateTuple(FateTypeRecord(type.keys, type.valueTypes), resolvedValue);\n  }\n}\nmodule.exports = RecordDataFactory;","map":{"version":3,"names":["BaseDataFactory","require","FateTuple","FateTypeRecord","FateTypeError","RecordDataFactory","supports","name","_valueTypes","create","type","value","keyLen","Object","keys","length","resolvedValue","valueTypes","map","t","i","key","valueFactory","module","exports"],"sources":["C:/Users/amitk/Desktop/Donation Project/donation-aeternity-blockchain-contract/node_modules/@aeternity/aepp-calldata/src/DataFactory/RecordDataFactory.js"],"sourcesContent":["const BaseDataFactory = require('./BaseDataFactory')\nconst FateTuple = require('../types/FateTuple')\nconst {FateTypeRecord} = require('../FateTypes')\nconst FateTypeError = require('../Errors/FateTypeError')\n\nclass RecordDataFactory extends BaseDataFactory {\n    supports({ name, _valueTypes }) {\n        return 'record' === name\n    }\n\n    create(type, value) {\n        if (typeof value !== 'object') {\n            throw new FateTypeError(\n                type.name,\n                `Fate record must be an Object, got ${value} instead`\n            )\n        }\n\n        const keyLen = Object.keys(value).length\n        if (keyLen !== type.keys.length) {\n            throw new FateTypeError(\n                type.name,\n                `Number of expected keys (${type.keys.length}) and actual keys (${keyLen}) should match`\n            )\n        }\n\n        const resolvedValue = type.valueTypes.map((t, i) => {\n            const key = type.keys[i]\n            return this.valueFactory.create(t, value[key])\n        })\n\n        // Unbox singleton tuples and records\n        // https://github.com/aeternity/aesophia/pull/205\n        // https://github.com/aeternity/aesophia/commit/a403a9d227ac56266cf5bb8fbc916f17e6141d15\n        if (resolvedValue.length === 1) {\n            return resolvedValue[0]\n        }\n\n        return new FateTuple(\n            FateTypeRecord(type.keys, type.valueTypes),\n            resolvedValue\n        )\n    }\n}\n\nmodule.exports = RecordDataFactory\n"],"mappings":"AAAA,MAAMA,eAAe,GAAGC,OAAO,CAAC,mBAAmB,CAAC;AACpD,MAAMC,SAAS,GAAGD,OAAO,CAAC,oBAAoB,CAAC;AAC/C,MAAM;EAACE;AAAc,CAAC,GAAGF,OAAO,CAAC,cAAc,CAAC;AAChD,MAAMG,aAAa,GAAGH,OAAO,CAAC,yBAAyB,CAAC;AAExD,MAAMI,iBAAiB,SAASL,eAAe,CAAC;EAC5CM,QAAQA,CAAC;IAAEC,IAAI;IAAEC;EAAY,CAAC,EAAE;IAC5B,OAAO,QAAQ,KAAKD,IAAI;EAC5B;EAEAE,MAAMA,CAACC,IAAI,EAAEC,KAAK,EAAE;IAChB,IAAI,OAAOA,KAAK,KAAK,QAAQ,EAAE;MAC3B,MAAM,IAAIP,aAAa,CACnBM,IAAI,CAACH,IAAI,EACR,sCAAqCI,KAAM,UAChD,CAAC;IACL;IAEA,MAAMC,MAAM,GAAGC,MAAM,CAACC,IAAI,CAACH,KAAK,CAAC,CAACI,MAAM;IACxC,IAAIH,MAAM,KAAKF,IAAI,CAACI,IAAI,CAACC,MAAM,EAAE;MAC7B,MAAM,IAAIX,aAAa,CACnBM,IAAI,CAACH,IAAI,EACR,4BAA2BG,IAAI,CAACI,IAAI,CAACC,MAAO,sBAAqBH,MAAO,gBAC7E,CAAC;IACL;IAEA,MAAMI,aAAa,GAAGN,IAAI,CAACO,UAAU,CAACC,GAAG,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK;MAChD,MAAMC,GAAG,GAAGX,IAAI,CAACI,IAAI,CAACM,CAAC,CAAC;MACxB,OAAO,IAAI,CAACE,YAAY,CAACb,MAAM,CAACU,CAAC,EAAER,KAAK,CAACU,GAAG,CAAC,CAAC;IAClD,CAAC,CAAC;;IAEF;IACA;IACA;IACA,IAAIL,aAAa,CAACD,MAAM,KAAK,CAAC,EAAE;MAC5B,OAAOC,aAAa,CAAC,CAAC,CAAC;IAC3B;IAEA,OAAO,IAAId,SAAS,CAChBC,cAAc,CAACO,IAAI,CAACI,IAAI,EAAEJ,IAAI,CAACO,UAAU,CAAC,EAC1CD,aACJ,CAAC;EACL;AACJ;AAEAO,MAAM,CAACC,OAAO,GAAGnB,iBAAiB"},"metadata":{},"sourceType":"script","externalDependencies":[]}