{"ast":null,"code":"// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nvar _a, _b, _c, _d;\n/**\n * A constant that indicates whether the environment the code is running is a Web Browser.\n */\n// eslint-disable-next-line @azure/azure-sdk/ts-no-window\nexport const isBrowser = typeof window !== \"undefined\" && typeof window.document !== \"undefined\";\n/**\n * A constant that indicates whether the environment the code is running is a Web Worker.\n */\nexport const isWebWorker = typeof self === \"object\" && typeof (self === null || self === void 0 ? void 0 : self.importScripts) === \"function\" && (((_a = self.constructor) === null || _a === void 0 ? void 0 : _a.name) === \"DedicatedWorkerGlobalScope\" || ((_b = self.constructor) === null || _b === void 0 ? void 0 : _b.name) === \"ServiceWorkerGlobalScope\" || ((_c = self.constructor) === null || _c === void 0 ? void 0 : _c.name) === \"SharedWorkerGlobalScope\");\n/**\n * A constant that indicates whether the environment the code is running is Deno.\n */\nexport const isDeno = typeof Deno !== \"undefined\" && typeof Deno.version !== \"undefined\" && typeof Deno.version.deno !== \"undefined\";\n/**\n * A constant that indicates whether the environment the code is running is Node.JS.\n */\nexport const isNode = typeof process !== \"undefined\" && Boolean(process.version) && Boolean((_d = process.versions) === null || _d === void 0 ? void 0 : _d.node) &&\n// Deno thought it was a good idea to spoof process.versions.node, see https://deno.land/std@0.177.0/node/process.ts?s=versions\n!isDeno;\n/**\n * A constant that indicates whether the environment the code is running is Bun.sh.\n */\nexport const isBun = typeof Bun !== \"undefined\" && typeof Bun.version !== \"undefined\";\n/**\n * A constant that indicates whether the environment the code is running is in React-Native.\n */\n// https://github.com/facebook/react-native/blob/main/packages/react-native/Libraries/Core/setUpNavigator.js\nexport const isReactNative = typeof navigator !== \"undefined\" && (navigator === null || navigator === void 0 ? void 0 : navigator.product) === \"ReactNative\";","map":{"version":3,"names":["isBrowser","window","document","isWebWorker","self","importScripts","_a","constructor","name","_b","_c","isDeno","Deno","version","deno","isNode","process","Boolean","_d","versions","node","isBun","Bun","isReactNative","navigator","product"],"sources":["C:\\Users\\amitk\\Desktop\\Donation Project\\donation-aeternity-blockchain-contract\\node_modules\\@azure\\core-util\\src\\checkEnvironment.ts"],"sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\ndeclare global {\n  interface Window {\n    document: unknown;\n  }\n\n  interface DedicatedWorkerGlobalScope {\n    constructor: {\n      name: string;\n    };\n\n    importScripts: (...paths: string[]) => void;\n  }\n\n  interface Navigator {\n    product: string;\n  }\n\n  interface DenoGlobal {\n    version: {\n      deno: string;\n    };\n  }\n\n  interface BunGlobal {\n    version: string;\n  }\n\n  // eslint-disable-next-line @azure/azure-sdk/ts-no-window\n  const window: Window;\n  const self: DedicatedWorkerGlobalScope;\n  const Deno: DenoGlobal;\n  const Bun: BunGlobal;\n  const navigator: Navigator;\n}\n\n/**\n * A constant that indicates whether the environment the code is running is a Web Browser.\n */\n// eslint-disable-next-line @azure/azure-sdk/ts-no-window\nexport const isBrowser = typeof window !== \"undefined\" && typeof window.document !== \"undefined\";\n\n/**\n * A constant that indicates whether the environment the code is running is a Web Worker.\n */\nexport const isWebWorker =\n  typeof self === \"object\" &&\n  typeof self?.importScripts === \"function\" &&\n  (self.constructor?.name === \"DedicatedWorkerGlobalScope\" ||\n    self.constructor?.name === \"ServiceWorkerGlobalScope\" ||\n    self.constructor?.name === \"SharedWorkerGlobalScope\");\n\n/**\n * A constant that indicates whether the environment the code is running is Deno.\n */\nexport const isDeno =\n  typeof Deno !== \"undefined\" &&\n  typeof Deno.version !== \"undefined\" &&\n  typeof Deno.version.deno !== \"undefined\";\n\n/**\n * A constant that indicates whether the environment the code is running is Node.JS.\n */\nexport const isNode =\n  typeof process !== \"undefined\" &&\n  Boolean(process.version) &&\n  Boolean(process.versions?.node) &&\n  // Deno thought it was a good idea to spoof process.versions.node, see https://deno.land/std@0.177.0/node/process.ts?s=versions\n  !isDeno;\n\n/**\n * A constant that indicates whether the environment the code is running is Bun.sh.\n */\nexport const isBun = typeof Bun !== \"undefined\" && typeof Bun.version !== \"undefined\";\n\n/**\n * A constant that indicates whether the environment the code is running is in React-Native.\n */\n// https://github.com/facebook/react-native/blob/main/packages/react-native/Libraries/Core/setUpNavigator.js\nexport const isReactNative =\n  typeof navigator !== \"undefined\" && navigator?.product === \"ReactNative\";\n"],"mappings":"AAAA;AACA;;AAqCA;;;AAGA;AACA,OAAO,MAAMA,SAAS,GAAG,OAAOC,MAAM,KAAK,WAAW,IAAI,OAAOA,MAAM,CAACC,QAAQ,KAAK,WAAW;AAEhG;;;AAGA,OAAO,MAAMC,WAAW,GACtB,OAAOC,IAAI,KAAK,QAAQ,IACxB,QAAOA,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEC,aAAa,MAAK,UAAU,KACxC,EAAAC,EAAA,GAAAF,IAAI,CAACG,WAAW,cAAAD,EAAA,uBAAAA,EAAA,CAAEE,IAAI,MAAK,4BAA4B,IACtD,EAAAC,EAAA,GAAAL,IAAI,CAACG,WAAW,cAAAE,EAAA,uBAAAA,EAAA,CAAED,IAAI,MAAK,0BAA0B,IACrD,EAAAE,EAAA,GAAAN,IAAI,CAACG,WAAW,cAAAG,EAAA,uBAAAA,EAAA,CAAEF,IAAI,MAAK,yBAAyB,CAAC;AAEzD;;;AAGA,OAAO,MAAMG,MAAM,GACjB,OAAOC,IAAI,KAAK,WAAW,IAC3B,OAAOA,IAAI,CAACC,OAAO,KAAK,WAAW,IACnC,OAAOD,IAAI,CAACC,OAAO,CAACC,IAAI,KAAK,WAAW;AAE1C;;;AAGA,OAAO,MAAMC,MAAM,GACjB,OAAOC,OAAO,KAAK,WAAW,IAC9BC,OAAO,CAACD,OAAO,CAACH,OAAO,CAAC,IACxBI,OAAO,CAAC,CAAAC,EAAA,GAAAF,OAAO,CAACG,QAAQ,cAAAD,EAAA,uBAAAA,EAAA,CAAEE,IAAI,CAAC;AAC/B;AACA,CAACT,MAAM;AAET;;;AAGA,OAAO,MAAMU,KAAK,GAAG,OAAOC,GAAG,KAAK,WAAW,IAAI,OAAOA,GAAG,CAACT,OAAO,KAAK,WAAW;AAErF;;;AAGA;AACA,OAAO,MAAMU,aAAa,GACxB,OAAOC,SAAS,KAAK,WAAW,IAAI,CAAAA,SAAS,aAATA,SAAS,uBAATA,SAAS,CAAEC,OAAO,MAAK,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}