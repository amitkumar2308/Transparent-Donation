{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs3/helpers/defineProperty\";\nimport _aeternityAeppCalldata from '@aeternity/aepp-calldata';\nconst {\n  TypeResolver,\n  ContractByteArrayEncoder\n} = _aeternityAeppCalldata;\nimport { RpcError } from \"./aepp-wallet-communication/schema.mjs\";\n/**\n * @category exception\n * @deprecated this exception is not thrown anymore\n */\nexport class RpcBroadcastError extends RpcError {\n  constructor(data) {\n    super('Broadcast failed');\n    _defineProperty(this, \"code\", 3);\n    this.data = data;\n    this.name = 'RpcBroadcastError';\n  }\n}\n\n/**\n * @deprecated use isAuctionName instead\n */\n_defineProperty(RpcBroadcastError, \"code\", 3);\nexport const NAME_BID_MAX_LENGTH = 12; // # this is the max length for a domain to be part of a bid\n\n/**\n * @deprecated use ContractByteArrayEncoder:encodeWithType from \\@aeternity/aepp-calldata\n */\nexport function encodeFateValue(value, aci) {\n  const valueType = new TypeResolver().resolveType(aci, {});\n  return new ContractByteArrayEncoder().encodeWithType(value, valueType);\n}\n\n/**\n * @deprecated use ContractByteArrayEncoder:decodeWithType from \\@aeternity/aepp-calldata\n */\nexport function decodeFateValue(value, aci) {\n  const valueType = new TypeResolver().resolveType(aci, {});\n  return new ContractByteArrayEncoder().decodeWithType(value, valueType);\n}","map":{"version":3,"names":["_aeternityAeppCalldata","TypeResolver","ContractByteArrayEncoder","RpcError","RpcBroadcastError","constructor","data","_defineProperty","name","NAME_BID_MAX_LENGTH","encodeFateValue","value","aci","valueType","resolveType","encodeWithType","decodeFateValue","decodeWithType"],"sources":["C:\\Users\\amitk\\Desktop\\Donation Project\\donation-aeternity-blockchain-contract\\node_modules\\@aeternity\\aepp-sdk\\src\\deprecated.ts"],"sourcesContent":["import { TypeResolver, ContractByteArrayEncoder } from '@aeternity/aepp-calldata';\nimport { AciValue } from './utils/typed-data';\nimport { Encoded } from './utils/encoder';\nimport { RpcError } from './aepp-wallet-communication/schema';\n\n/**\n * @category exception\n * @deprecated this exception is not thrown anymore\n */\nexport class RpcBroadcastError extends RpcError {\n  static override code = 3;\n\n  override code = 3;\n\n  constructor(data?: any) {\n    super('Broadcast failed');\n    this.data = data;\n    this.name = 'RpcBroadcastError';\n  }\n}\n\n/**\n * @deprecated use isAuctionName instead\n */\nexport const NAME_BID_MAX_LENGTH = 12; // # this is the max length for a domain to be part of a bid\n\n/**\n * @deprecated use ContractByteArrayEncoder:encodeWithType from \\@aeternity/aepp-calldata\n */\nexport function encodeFateValue(value: unknown, aci: AciValue): Encoded.ContractBytearray {\n  const valueType = new TypeResolver().resolveType(aci, {});\n  return new ContractByteArrayEncoder().encodeWithType(value, valueType);\n}\n\n/**\n * @deprecated use ContractByteArrayEncoder:decodeWithType from \\@aeternity/aepp-calldata\n */\nexport function decodeFateValue(value: Encoded.ContractBytearray, aci: AciValue): any {\n  const valueType = new TypeResolver().resolveType(aci, {});\n  return new ContractByteArrayEncoder().decodeWithType(value, valueType);\n}\n"],"mappings":";AAAA,OAAAA,sBAAA,MAAuD,0BAA0B;AAAC;EAAAC,YAAA;EAAAC;AAAA,IAAAF,sBAAA;AAAA,SAGzEG,QAAQ;AAEjB;AACA;AACA;AACA;AACA,OAAO,MAAMC,iBAAiB,SAASD,QAAQ,CAAC;EAK9CE,WAAWA,CAACC,IAAU,EAAE;IACtB,KAAK,CAAC,kBAAkB,CAAC;IAACC,eAAA,eAHZ,CAAC;IAIf,IAAI,CAACD,IAAI,GAAGA,IAAI;IAChB,IAAI,CAACE,IAAI,GAAG,mBAAmB;EACjC;AACF;;AAEA;AACA;AACA;AAFAD,eAAA,CAZaH,iBAAiB,UACL,CAAC;AAc1B,OAAO,MAAMK,mBAAmB,GAAG,EAAE,CAAC,CAAC;;AAEvC;AACA;AACA;AACA,OAAO,SAASC,eAAeA,CAACC,KAAc,EAAEC,GAAa,EAA6B;EACxF,MAAMC,SAAS,GAAG,IAAIZ,YAAY,CAAC,CAAC,CAACa,WAAW,CAACF,GAAG,EAAE,CAAC,CAAC,CAAC;EACzD,OAAO,IAAIV,wBAAwB,CAAC,CAAC,CAACa,cAAc,CAACJ,KAAK,EAAEE,SAAS,CAAC;AACxE;;AAEA;AACA;AACA;AACA,OAAO,SAASG,eAAeA,CAACL,KAAgC,EAAEC,GAAa,EAAO;EACpF,MAAMC,SAAS,GAAG,IAAIZ,YAAY,CAAC,CAAC,CAACa,WAAW,CAACF,GAAG,EAAE,CAAC,CAAC,CAAC;EACzD,OAAO,IAAIV,wBAAwB,CAAC,CAAC,CAACe,cAAc,CAACN,KAAK,EAAEE,SAAS,CAAC;AACxE"},"metadata":{},"sourceType":"module","externalDependencies":[]}