{"ast":null,"code":"const FateInt = require('../types/FateInt');\nconst FateBool = require('../types/FateBool');\nconst FateString = require('../types/FateString');\nconst FateHash = require('../types/FateHash');\nconst FateSignature = require('../types/FateSignature');\nconst FateBytes = require('../types/FateBytes');\nconst FateBits = require('../types/FateBits');\nconst FateAccountAddress = require('../types/FateAccountAddress');\nconst FateContractAddress = require('../types/FateContractAddress');\nconst FateChannelAddress = require('../types/FateChannelAddress');\nconst FateOracleAddress = require('../types/FateOracleAddress');\nconst FateOracleQueryAddress = require('../types/FateOracleQueryAddress');\nconst BaseDataFactory = require('./BaseDataFactory');\nconst TYPES = ['int', 'bool', 'string', 'bits', 'hash', 'bytes', 'signature', 'account_pubkey', 'contract_pubkey', 'channel', 'oracle_pubkey', 'oracle_query_id'];\nclass PrimitiveDataFactory extends BaseDataFactory {\n  supports({\n    name,\n    _valueTypes\n  }) {\n    return TYPES.includes(name);\n  }\n  create(type, value) {\n    switch (type.name) {\n      case 'int':\n        return new FateInt(value);\n      case 'bool':\n        return new FateBool(value);\n      case 'string':\n        return new FateString(value);\n      case 'bits':\n        return new FateBits(value);\n      case 'hash':\n        return new FateHash(value);\n      case 'bytes':\n        return new FateBytes(value, type.valueTypes);\n      case 'signature':\n        return new FateSignature(value);\n      case 'account_pubkey':\n        return new FateAccountAddress(value);\n      case 'contract_pubkey':\n        return new FateContractAddress(value);\n      case 'channel':\n        return new FateChannelAddress(value);\n      case 'oracle_pubkey':\n        return new FateOracleAddress(value);\n      case 'oracle_query_id':\n        return new FateOracleQueryAddress(value);\n      default:\n        throw new Error(`Unsupported type \"${type.name}\"`);\n    }\n  }\n}\nmodule.exports = PrimitiveDataFactory;","map":{"version":3,"names":["FateInt","require","FateBool","FateString","FateHash","FateSignature","FateBytes","FateBits","FateAccountAddress","FateContractAddress","FateChannelAddress","FateOracleAddress","FateOracleQueryAddress","BaseDataFactory","TYPES","PrimitiveDataFactory","supports","name","_valueTypes","includes","create","type","value","valueTypes","Error","module","exports"],"sources":["C:/Users/amitk/Desktop/Donation Project/donation-aeternity-blockchain-contract/node_modules/@aeternity/aepp-calldata/src/DataFactory/PrimitiveDataFactory.js"],"sourcesContent":["const FateInt = require('../types/FateInt')\nconst FateBool = require('../types/FateBool')\nconst FateString = require('../types/FateString')\nconst FateHash = require('../types/FateHash')\nconst FateSignature = require('../types/FateSignature')\nconst FateBytes = require('../types/FateBytes')\nconst FateBits = require('../types/FateBits')\nconst FateAccountAddress = require('../types/FateAccountAddress')\nconst FateContractAddress = require('../types/FateContractAddress')\nconst FateChannelAddress = require('../types/FateChannelAddress')\nconst FateOracleAddress = require('../types/FateOracleAddress')\nconst FateOracleQueryAddress = require('../types/FateOracleQueryAddress')\nconst BaseDataFactory = require('./BaseDataFactory')\n\nconst TYPES = [\n    'int',\n    'bool',\n    'string',\n    'bits',\n    'hash',\n    'bytes',\n    'signature',\n    'account_pubkey',\n    'contract_pubkey',\n    'channel',\n    'oracle_pubkey',\n    'oracle_query_id'\n]\n\nclass PrimitiveDataFactory extends BaseDataFactory {\n    supports({ name, _valueTypes }) {\n        return TYPES.includes(name)\n    }\n\n    create(type, value) {\n        switch (type.name) {\n        case 'int':\n            return new FateInt(value)\n        case 'bool':\n            return new FateBool(value)\n        case 'string':\n            return new FateString(value)\n        case 'bits':\n            return new FateBits(value)\n        case 'hash':\n            return new FateHash(value)\n        case 'bytes':\n            return new FateBytes(value, type.valueTypes)\n        case 'signature':\n            return new FateSignature(value)\n        case 'account_pubkey':\n            return new FateAccountAddress(value)\n        case 'contract_pubkey':\n            return new FateContractAddress(value)\n        case 'channel':\n            return new FateChannelAddress(value)\n        case 'oracle_pubkey':\n            return new FateOracleAddress(value)\n        case 'oracle_query_id':\n            return new FateOracleQueryAddress(value)\n        default:\n            throw new Error(`Unsupported type \"${type.name}\"`)\n        }\n    }\n}\n\nmodule.exports = PrimitiveDataFactory\n"],"mappings":"AAAA,MAAMA,OAAO,GAAGC,OAAO,CAAC,kBAAkB,CAAC;AAC3C,MAAMC,QAAQ,GAAGD,OAAO,CAAC,mBAAmB,CAAC;AAC7C,MAAME,UAAU,GAAGF,OAAO,CAAC,qBAAqB,CAAC;AACjD,MAAMG,QAAQ,GAAGH,OAAO,CAAC,mBAAmB,CAAC;AAC7C,MAAMI,aAAa,GAAGJ,OAAO,CAAC,wBAAwB,CAAC;AACvD,MAAMK,SAAS,GAAGL,OAAO,CAAC,oBAAoB,CAAC;AAC/C,MAAMM,QAAQ,GAAGN,OAAO,CAAC,mBAAmB,CAAC;AAC7C,MAAMO,kBAAkB,GAAGP,OAAO,CAAC,6BAA6B,CAAC;AACjE,MAAMQ,mBAAmB,GAAGR,OAAO,CAAC,8BAA8B,CAAC;AACnE,MAAMS,kBAAkB,GAAGT,OAAO,CAAC,6BAA6B,CAAC;AACjE,MAAMU,iBAAiB,GAAGV,OAAO,CAAC,4BAA4B,CAAC;AAC/D,MAAMW,sBAAsB,GAAGX,OAAO,CAAC,iCAAiC,CAAC;AACzE,MAAMY,eAAe,GAAGZ,OAAO,CAAC,mBAAmB,CAAC;AAEpD,MAAMa,KAAK,GAAG,CACV,KAAK,EACL,MAAM,EACN,QAAQ,EACR,MAAM,EACN,MAAM,EACN,OAAO,EACP,WAAW,EACX,gBAAgB,EAChB,iBAAiB,EACjB,SAAS,EACT,eAAe,EACf,iBAAiB,CACpB;AAED,MAAMC,oBAAoB,SAASF,eAAe,CAAC;EAC/CG,QAAQA,CAAC;IAAEC,IAAI;IAAEC;EAAY,CAAC,EAAE;IAC5B,OAAOJ,KAAK,CAACK,QAAQ,CAACF,IAAI,CAAC;EAC/B;EAEAG,MAAMA,CAACC,IAAI,EAAEC,KAAK,EAAE;IAChB,QAAQD,IAAI,CAACJ,IAAI;MACjB,KAAK,KAAK;QACN,OAAO,IAAIjB,OAAO,CAACsB,KAAK,CAAC;MAC7B,KAAK,MAAM;QACP,OAAO,IAAIpB,QAAQ,CAACoB,KAAK,CAAC;MAC9B,KAAK,QAAQ;QACT,OAAO,IAAInB,UAAU,CAACmB,KAAK,CAAC;MAChC,KAAK,MAAM;QACP,OAAO,IAAIf,QAAQ,CAACe,KAAK,CAAC;MAC9B,KAAK,MAAM;QACP,OAAO,IAAIlB,QAAQ,CAACkB,KAAK,CAAC;MAC9B,KAAK,OAAO;QACR,OAAO,IAAIhB,SAAS,CAACgB,KAAK,EAAED,IAAI,CAACE,UAAU,CAAC;MAChD,KAAK,WAAW;QACZ,OAAO,IAAIlB,aAAa,CAACiB,KAAK,CAAC;MACnC,KAAK,gBAAgB;QACjB,OAAO,IAAId,kBAAkB,CAACc,KAAK,CAAC;MACxC,KAAK,iBAAiB;QAClB,OAAO,IAAIb,mBAAmB,CAACa,KAAK,CAAC;MACzC,KAAK,SAAS;QACV,OAAO,IAAIZ,kBAAkB,CAACY,KAAK,CAAC;MACxC,KAAK,eAAe;QAChB,OAAO,IAAIX,iBAAiB,CAACW,KAAK,CAAC;MACvC,KAAK,iBAAiB;QAClB,OAAO,IAAIV,sBAAsB,CAACU,KAAK,CAAC;MAC5C;QACI,MAAM,IAAIE,KAAK,CAAE,qBAAoBH,IAAI,CAACJ,IAAK,GAAE,CAAC;IACtD;EACJ;AACJ;AAEAQ,MAAM,CAACC,OAAO,GAAGX,oBAAoB"},"metadata":{},"sourceType":"script","externalDependencies":[]}