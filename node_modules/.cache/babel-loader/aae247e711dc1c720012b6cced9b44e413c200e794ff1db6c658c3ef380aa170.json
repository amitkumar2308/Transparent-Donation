{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs3/helpers/defineProperty\";\n// eslint-disable-next-line max-classes-per-file\nimport { BaseError, InternalError } from \"../utils/errors.mjs\";\n/**\n * @category aepp wallet communication\n */\nexport let MESSAGE_DIRECTION = /*#__PURE__*/function (MESSAGE_DIRECTION) {\n  MESSAGE_DIRECTION[\"to_waellet\"] = \"to_waellet\";\n  MESSAGE_DIRECTION[\"to_aepp\"] = \"to_aepp\";\n  return MESSAGE_DIRECTION;\n}({});\n\n/**\n * @category aepp wallet communication\n */\nexport let WALLET_TYPE = /*#__PURE__*/function (WALLET_TYPE) {\n  WALLET_TYPE[\"window\"] = \"window\";\n  WALLET_TYPE[\"extension\"] = \"extension\";\n  return WALLET_TYPE;\n}({});\n\n/**\n * @category aepp wallet communication\n */\nexport let SUBSCRIPTION_TYPES = /*#__PURE__*/function (SUBSCRIPTION_TYPES) {\n  SUBSCRIPTION_TYPES[\"subscribe\"] = \"subscribe\";\n  SUBSCRIPTION_TYPES[\"unsubscribe\"] = \"unsubscribe\";\n  return SUBSCRIPTION_TYPES;\n}({});\n\n/**\n * @category aepp wallet communication\n */\nexport let METHODS = /*#__PURE__*/function (METHODS) {\n  METHODS[\"readyToConnect\"] = \"connection.announcePresence\";\n  METHODS[\"updateAddress\"] = \"address.update\";\n  METHODS[\"address\"] = \"address.get\";\n  METHODS[\"connect\"] = \"connection.open\";\n  METHODS[\"sign\"] = \"transaction.sign\";\n  METHODS[\"signMessage\"] = \"message.sign\";\n  METHODS[\"signTypedData\"] = \"typedData.sign\";\n  METHODS[\"signDelegationToContract\"] = \"delegationToContract.sign\";\n  METHODS[\"subscribeAddress\"] = \"address.subscribe\";\n  METHODS[\"updateNetwork\"] = \"networkId.update\";\n  METHODS[\"closeConnection\"] = \"connection.close\";\n  return METHODS;\n}({});\n\n/**\n * @category aepp wallet communication\n */\nexport let RPC_STATUS = /*#__PURE__*/function (RPC_STATUS) {\n  RPC_STATUS[\"CONNECTED\"] = \"CONNECTED\";\n  RPC_STATUS[\"DISCONNECTED\"] = \"DISCONNECTED\";\n  RPC_STATUS[\"WAITING_FOR_CONNECTION_REQUEST\"] = \"WAITING_FOR_CONNECTION_REQUEST\";\n  return RPC_STATUS;\n}({});\nconst rpcErrors = [];\n\n/**\n * @category exception\n */\nexport class RpcError extends BaseError {\n  toJSON() {\n    return {\n      code: this.code,\n      message: this.message,\n      data: this.data\n    };\n  }\n  static deserialize(json) {\n    const RpcErr = rpcErrors.find(cl => cl.code === json.code);\n    if (RpcErr == null) throw new InternalError(`Can't find RpcError with code: ${json.code}`);\n    return new RpcErr(json.data);\n  }\n}\n\n/**\n * @category exception\n */\nexport class RpcInvalidTransactionError extends RpcError {\n  constructor(data) {\n    super('Invalid transaction');\n    _defineProperty(this, \"code\", 2);\n    this.data = data;\n    this.name = 'RpcInvalidTransactionError';\n  }\n}\n_defineProperty(RpcInvalidTransactionError, \"code\", 2);\nrpcErrors.push(RpcInvalidTransactionError);\n\n/**\n * @category exception\n */\nexport class RpcRejectedByUserError extends RpcError {\n  constructor(data) {\n    super('Operation rejected by user');\n    _defineProperty(this, \"code\", 4);\n    this.data = data;\n    this.name = 'RpcRejectedByUserError';\n  }\n}\n_defineProperty(RpcRejectedByUserError, \"code\", 4);\nrpcErrors.push(RpcRejectedByUserError);\n\n/**\n * @category exception\n */\nexport class RpcUnsupportedProtocolError extends RpcError {\n  constructor() {\n    super('Unsupported Protocol Version');\n    _defineProperty(this, \"code\", 5);\n    this.name = 'RpcUnsupportedProtocolError';\n  }\n}\n_defineProperty(RpcUnsupportedProtocolError, \"code\", 5);\nrpcErrors.push(RpcUnsupportedProtocolError);\n\n/**\n * @category exception\n */\nexport class RpcConnectionDenyError extends RpcError {\n  constructor(data) {\n    super('Wallet deny your connection request');\n    _defineProperty(this, \"code\", 9);\n    this.data = data;\n    this.name = 'RpcConnectionDenyError';\n  }\n}\n_defineProperty(RpcConnectionDenyError, \"code\", 9);\nrpcErrors.push(RpcConnectionDenyError);\n\n/**\n * @category exception\n */\nexport class RpcNotAuthorizeError extends RpcError {\n  constructor() {\n    super('You are not connected to the wallet');\n    _defineProperty(this, \"code\", 10);\n    this.name = 'RpcNotAuthorizeError';\n  }\n}\n_defineProperty(RpcNotAuthorizeError, \"code\", 10);\nrpcErrors.push(RpcNotAuthorizeError);\n\n/**\n * @category exception\n */\nexport class RpcPermissionDenyError extends RpcError {\n  constructor(address) {\n    super(`You are not subscribed for account ${address}`);\n    _defineProperty(this, \"code\", 11);\n    this.data = address;\n    this.name = 'RpcPermissionDenyError';\n  }\n}\n_defineProperty(RpcPermissionDenyError, \"code\", 11);\nrpcErrors.push(RpcPermissionDenyError);\n\n/**\n * @category exception\n */\nexport class RpcInternalError extends RpcError {\n  constructor() {\n    super('The peer failed to execute your request due to unknown error');\n    _defineProperty(this, \"code\", 12);\n    this.name = 'RpcInternalError';\n  }\n}\n_defineProperty(RpcInternalError, \"code\", 12);\nrpcErrors.push(RpcInternalError);\n\n/**\n * @category exception\n */\nexport class RpcMethodNotFoundError extends RpcError {\n  constructor() {\n    super('Method not found');\n    _defineProperty(this, \"code\", -32601);\n    this.name = 'RpcMethodNotFoundError';\n  }\n}\n_defineProperty(RpcMethodNotFoundError, \"code\", -32601);\nrpcErrors.push(RpcMethodNotFoundError);","map":{"version":3,"names":["BaseError","InternalError","MESSAGE_DIRECTION","WALLET_TYPE","SUBSCRIPTION_TYPES","METHODS","RPC_STATUS","rpcErrors","RpcError","toJSON","code","message","data","deserialize","json","RpcErr","find","cl","RpcInvalidTransactionError","constructor","_defineProperty","name","push","RpcRejectedByUserError","RpcUnsupportedProtocolError","RpcConnectionDenyError","RpcNotAuthorizeError","RpcPermissionDenyError","address","RpcInternalError","RpcMethodNotFoundError"],"sources":["C:\\Users\\amitk\\Desktop\\Donation Project\\donation-aeternity-blockchain-contract\\node_modules\\@aeternity\\aepp-sdk\\src\\aepp-wallet-communication\\schema.ts"],"sourcesContent":["// eslint-disable-next-line max-classes-per-file\nimport { Encoded } from '../utils/encoder';\nimport { BaseError, InternalError } from '../utils/errors';\n\n/**\n * @category aepp wallet communication\n */\nexport const enum MESSAGE_DIRECTION {\n  to_waellet = 'to_waellet',\n  to_aepp = 'to_aepp',\n}\n\n/**\n * @category aepp wallet communication\n */\nexport const enum WALLET_TYPE {\n  window = 'window',\n  extension = 'extension',\n}\n\n/**\n * @category aepp wallet communication\n */\nexport const enum SUBSCRIPTION_TYPES {\n  subscribe = 'subscribe',\n  unsubscribe = 'unsubscribe',\n}\n\n/**\n * @category aepp wallet communication\n */\nexport const enum METHODS {\n  readyToConnect = 'connection.announcePresence',\n  updateAddress = 'address.update',\n  address = 'address.get',\n  connect = 'connection.open',\n  sign = 'transaction.sign',\n  signMessage = 'message.sign',\n  signTypedData = 'typedData.sign',\n  signDelegationToContract = 'delegationToContract.sign',\n  subscribeAddress = 'address.subscribe',\n  updateNetwork = 'networkId.update',\n  closeConnection = 'connection.close',\n}\n\n/**\n * @category aepp wallet communication\n */\nexport const enum RPC_STATUS {\n  CONNECTED = 'CONNECTED',\n  DISCONNECTED = 'DISCONNECTED',\n  WAITING_FOR_CONNECTION_REQUEST = 'WAITING_FOR_CONNECTION_REQUEST',\n}\n\ninterface RpcErrorAsJson {\n  code: number;\n  message: string;\n  data?: any;\n}\n\nconst rpcErrors: Array<(new (data?: any) => RpcError) & { code: number }> = [];\n\n/**\n * @category exception\n */\nexport abstract class RpcError extends BaseError {\n  static code: number;\n\n  code!: number;\n\n  data?: any;\n\n  toJSON(): RpcErrorAsJson {\n    return {\n      code: this.code,\n      message: this.message,\n      data: this.data,\n    };\n  }\n\n  static deserialize(json: RpcErrorAsJson): RpcError {\n    const RpcErr = rpcErrors.find((cl) => cl.code === json.code);\n    if (RpcErr == null) throw new InternalError(`Can't find RpcError with code: ${json.code}`);\n    return new RpcErr(json.data);\n  }\n}\n\n/**\n * @category exception\n */\nexport class RpcInvalidTransactionError extends RpcError {\n  static override code = 2;\n\n  override code = 2;\n\n  constructor(data?: any) {\n    super('Invalid transaction');\n    this.data = data;\n    this.name = 'RpcInvalidTransactionError';\n  }\n}\nrpcErrors.push(RpcInvalidTransactionError);\n\n/**\n * @category exception\n */\nexport class RpcRejectedByUserError extends RpcError {\n  static override code = 4;\n\n  override code = 4;\n\n  constructor(data?: any) {\n    super('Operation rejected by user');\n    this.data = data;\n    this.name = 'RpcRejectedByUserError';\n  }\n}\nrpcErrors.push(RpcRejectedByUserError);\n\n/**\n * @category exception\n */\nexport class RpcUnsupportedProtocolError extends RpcError {\n  static override code = 5;\n\n  override code = 5;\n\n  constructor() {\n    super('Unsupported Protocol Version');\n    this.name = 'RpcUnsupportedProtocolError';\n  }\n}\nrpcErrors.push(RpcUnsupportedProtocolError);\n\n/**\n * @category exception\n */\nexport class RpcConnectionDenyError extends RpcError {\n  static override code = 9;\n\n  override code = 9;\n\n  constructor(data?: any) {\n    super('Wallet deny your connection request');\n    this.data = data;\n    this.name = 'RpcConnectionDenyError';\n  }\n}\nrpcErrors.push(RpcConnectionDenyError);\n\n/**\n * @category exception\n */\nexport class RpcNotAuthorizeError extends RpcError {\n  static override code = 10;\n\n  override code = 10;\n\n  constructor() {\n    super('You are not connected to the wallet');\n    this.name = 'RpcNotAuthorizeError';\n  }\n}\nrpcErrors.push(RpcNotAuthorizeError);\n\n/**\n * @category exception\n */\nexport class RpcPermissionDenyError extends RpcError {\n  static override code = 11;\n\n  override code = 11;\n\n  constructor(address: Encoded.AccountAddress) {\n    super(`You are not subscribed for account ${address}`);\n    this.data = address;\n    this.name = 'RpcPermissionDenyError';\n  }\n}\nrpcErrors.push(RpcPermissionDenyError);\n\n/**\n * @category exception\n */\nexport class RpcInternalError extends RpcError {\n  static override code = 12;\n\n  override code = 12;\n\n  constructor() {\n    super('The peer failed to execute your request due to unknown error');\n    this.name = 'RpcInternalError';\n  }\n}\nrpcErrors.push(RpcInternalError);\n\n/**\n * @category exception\n */\nexport class RpcMethodNotFoundError extends RpcError {\n  static override code = -32601;\n\n  override code = -32601;\n\n  constructor() {\n    super('Method not found');\n    this.name = 'RpcMethodNotFoundError';\n  }\n}\nrpcErrors.push(RpcMethodNotFoundError);\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}