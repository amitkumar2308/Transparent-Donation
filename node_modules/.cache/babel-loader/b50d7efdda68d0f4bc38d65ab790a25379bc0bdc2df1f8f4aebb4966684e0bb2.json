{"ast":null,"code":"const InternalEncoder = require('../AciContractCallEncoder');\nclass AciContractCallEncoder {\n  /**\n   * Creates contract encoder using ACI as type info provider\n   *\n   * @example\n   * const ACI = require('./Test.json')\n   * const encoder = new AciContractCallEncoder(ACI)\n   *\n   * @param {Object} aci - The contract ACI in a canonical (CLI compiler) form as POJO.\n  */\n  constructor(aci) {\n    this._internalEncoder = new InternalEncoder(aci);\n  }\n\n  /**\n   * Creates contract call data\n   *\n   * @example\n   * const encoded = encoder.encodeCall('Test', 'test_string', [\"whoolymoly\"])\n   * console.log(`Encoded data: ${encoded}`)\n   * // Outputs:\n   * // Encoded data: cb_KxHwzCuVGyl3aG9vbHltb2x5zwMSnw==\n   *\n   * @param {string} contract - The contract name as defined in the ACI.\n   * @param {string} funName - The function name as defined in the ACI.\n   * @param {Array} args - An array of call arguments as Javascript data structures. See README.md\n   * @returns {string} Encoded calldata\n  */\n  encodeCall(contract, funName, args) {\n    return this._internalEncoder.encodeCall(contract, funName, args);\n  }\n\n  /**\n   * Decodes contract calldata\n   *\n   * @example\n   * const data = encoder.decodeCall('Test', 'test_string', 'cb_KxHwzCuVGyl3aG9vbHltb2x5zwMSnw==')\n   * console.log(`Decoded data: ${data}`)\n   * // Outputs:\n   * // Decoded data: [\"whoolymoly\"]\n   *\n   * @param {string} contract - The contract name as defined in the ACI.\n   * @param {string} funName - The function name as defined in the ACI.\n   * @param {string} data - Encoded calldata in canonical format.\n   * @returns {string} Decoded data\n  */\n  decodeCall(contract, funName, data) {\n    return this._internalEncoder.decodeCall(contract, funName, data);\n  }\n\n  /**\n   * Decodes successful (resultType = ok) contract call return data\n   *\n   * @example\n   * const decoded = encoder.decode('Test', 'test_string', 'cb_KXdob29seW1vbHlGazSE')\n   * console.log(`Decoded data: ${decoded}`)\n   * // Outputs:\n   * // Decoded data: whoolymoly\n   *\n   * @param {string} contract - The contract name as defined in the ACI.\n   * @param {string} funName - The function name as defined in the ACI.\n   * @param {string} data - The call return value in a canonical format.\n   * @param {'ok'|'revert'|'error'} resultType - The call result type.\n   * @returns {boolean|string|BigInt|Array|Map|Object}\n   *  Decoded value as Javascript data structures. See README.md\n  */\n  decodeResult(contract, funName, data, resultType = 'ok') {\n    return this._internalEncoder.decodeResult(contract, funName, data, resultType);\n  }\n\n  /**\n   * Decodes contract event\n   *\n   * @example\n   * const data = encoder.decodeEvent('Test', 'cb_dHJpZ2dlcmVk1FYuYA==', [\n   *     34853523142692495808479485503424878684430196596020091237715106250497712463899n,\n   *     17\n   * ])\n   * console.log(data)\n   * // Outputs:\n   * // {EventTwo: [17n, 'triggered']}\n   *\n   * @param {string} contract - The contract name as defined in the ACI.\n   * @param {string} encodedData - Event encoded data\n   * @param {BigInt[]} topics - A list of event topics.\n   * First element should be the implicit topic that carry the event constructor name.\n   */\n  decodeEvent(contract, data, topics) {\n    return this._internalEncoder.decodeEvent(contract, data, topics);\n  }\n}\nmodule.exports = AciContractCallEncoder;","map":{"version":3,"names":["InternalEncoder","require","AciContractCallEncoder","constructor","aci","_internalEncoder","encodeCall","contract","funName","args","decodeCall","data","decodeResult","resultType","decodeEvent","topics","module","exports"],"sources":["C:/Users/amitk/Desktop/Donation Project/donation-aeternity-blockchain-contract/node_modules/@aeternity/aepp-calldata/src/api/AciContractCallEncoder.js"],"sourcesContent":["const InternalEncoder = require('../AciContractCallEncoder')\n\nclass AciContractCallEncoder {\n    /**\n     * Creates contract encoder using ACI as type info provider\n     *\n     * @example\n     * const ACI = require('./Test.json')\n     * const encoder = new AciContractCallEncoder(ACI)\n     *\n     * @param {Object} aci - The contract ACI in a canonical (CLI compiler) form as POJO.\n    */\n    constructor(aci) {\n        this._internalEncoder = new InternalEncoder(aci)\n    }\n\n    /**\n     * Creates contract call data\n     *\n     * @example\n     * const encoded = encoder.encodeCall('Test', 'test_string', [\"whoolymoly\"])\n     * console.log(`Encoded data: ${encoded}`)\n     * // Outputs:\n     * // Encoded data: cb_KxHwzCuVGyl3aG9vbHltb2x5zwMSnw==\n     *\n     * @param {string} contract - The contract name as defined in the ACI.\n     * @param {string} funName - The function name as defined in the ACI.\n     * @param {Array} args - An array of call arguments as Javascript data structures. See README.md\n     * @returns {string} Encoded calldata\n    */\n    encodeCall(contract, funName, args) {\n        return this._internalEncoder.encodeCall(contract, funName, args)\n    }\n\n    /**\n     * Decodes contract calldata\n     *\n     * @example\n     * const data = encoder.decodeCall('Test', 'test_string', 'cb_KxHwzCuVGyl3aG9vbHltb2x5zwMSnw==')\n     * console.log(`Decoded data: ${data}`)\n     * // Outputs:\n     * // Decoded data: [\"whoolymoly\"]\n     *\n     * @param {string} contract - The contract name as defined in the ACI.\n     * @param {string} funName - The function name as defined in the ACI.\n     * @param {string} data - Encoded calldata in canonical format.\n     * @returns {string} Decoded data\n    */\n    decodeCall(contract, funName, data) {\n        return this._internalEncoder.decodeCall(contract, funName, data)\n    }\n\n    /**\n     * Decodes successful (resultType = ok) contract call return data\n     *\n     * @example\n     * const decoded = encoder.decode('Test', 'test_string', 'cb_KXdob29seW1vbHlGazSE')\n     * console.log(`Decoded data: ${decoded}`)\n     * // Outputs:\n     * // Decoded data: whoolymoly\n     *\n     * @param {string} contract - The contract name as defined in the ACI.\n     * @param {string} funName - The function name as defined in the ACI.\n     * @param {string} data - The call return value in a canonical format.\n     * @param {'ok'|'revert'|'error'} resultType - The call result type.\n     * @returns {boolean|string|BigInt|Array|Map|Object}\n     *  Decoded value as Javascript data structures. See README.md\n    */\n    decodeResult(contract, funName, data, resultType = 'ok') {\n        return this._internalEncoder.decodeResult(contract, funName, data, resultType)\n    }\n\n    /**\n     * Decodes contract event\n     *\n     * @example\n     * const data = encoder.decodeEvent('Test', 'cb_dHJpZ2dlcmVk1FYuYA==', [\n     *     34853523142692495808479485503424878684430196596020091237715106250497712463899n,\n     *     17\n     * ])\n     * console.log(data)\n     * // Outputs:\n     * // {EventTwo: [17n, 'triggered']}\n     *\n     * @param {string} contract - The contract name as defined in the ACI.\n     * @param {string} encodedData - Event encoded data\n     * @param {BigInt[]} topics - A list of event topics.\n     * First element should be the implicit topic that carry the event constructor name.\n     */\n    decodeEvent(contract, data, topics) {\n        return this._internalEncoder.decodeEvent(contract, data, topics)\n    }\n}\n\nmodule.exports = AciContractCallEncoder\n"],"mappings":"AAAA,MAAMA,eAAe,GAAGC,OAAO,CAAC,2BAA2B,CAAC;AAE5D,MAAMC,sBAAsB,CAAC;EACzB;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACIC,WAAWA,CAACC,GAAG,EAAE;IACb,IAAI,CAACC,gBAAgB,GAAG,IAAIL,eAAe,CAACI,GAAG,CAAC;EACpD;;EAEA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACIE,UAAUA,CAACC,QAAQ,EAAEC,OAAO,EAAEC,IAAI,EAAE;IAChC,OAAO,IAAI,CAACJ,gBAAgB,CAACC,UAAU,CAACC,QAAQ,EAAEC,OAAO,EAAEC,IAAI,CAAC;EACpE;;EAEA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACIC,UAAUA,CAACH,QAAQ,EAAEC,OAAO,EAAEG,IAAI,EAAE;IAChC,OAAO,IAAI,CAACN,gBAAgB,CAACK,UAAU,CAACH,QAAQ,EAAEC,OAAO,EAAEG,IAAI,CAAC;EACpE;;EAEA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACIC,YAAYA,CAACL,QAAQ,EAAEC,OAAO,EAAEG,IAAI,EAAEE,UAAU,GAAG,IAAI,EAAE;IACrD,OAAO,IAAI,CAACR,gBAAgB,CAACO,YAAY,CAACL,QAAQ,EAAEC,OAAO,EAAEG,IAAI,EAAEE,UAAU,CAAC;EAClF;;EAEA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACIC,WAAWA,CAACP,QAAQ,EAAEI,IAAI,EAAEI,MAAM,EAAE;IAChC,OAAO,IAAI,CAACV,gBAAgB,CAACS,WAAW,CAACP,QAAQ,EAAEI,IAAI,EAAEI,MAAM,CAAC;EACpE;AACJ;AAEAC,MAAM,CAACC,OAAO,GAAGf,sBAAsB"},"metadata":{},"sourceType":"script","externalDependencies":[]}