{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\amitk\\\\Desktop\\\\Donation Project\\\\donation-aeternity-blockchain-contract\\\\src\\\\ChatBot.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './assets/Chatbot.css';\nimport { AE_AMOUNT_FORMATS } from '@aeternity/aepp-sdk';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chatbot = ({\n  closeChatbot,\n  instance,\n  address,\n  updateBalance\n}) => {\n  _s();\n  const [botMessages, setBotMessages] = useState([]);\n  const [userInput, setUserInput] = useState('');\n  const [transactionType, setTransactionType] = useState('');\n  const [publicKey, setPublicKey] = useState('ak_2QaAzpW4w4pnPNDdrgdLHu5v4bGMxVzUD2F16X3aUrayPcBzZm');\n  const [amount, setAmount] = useState('');\n  const [confirmSend, setConfirmSend] = useState(false);\n  let aci = [{\n    \"contract\": {\n      \"functions\": [{\n        \"arguments\": [],\n        \"name\": \"init\",\n        \"payable\": false,\n        \"returns\": \"CharityTransfer.state\",\n        \"stateful\": false\n      }, {\n        \"arguments\": [],\n        \"name\": \"sendMoney\",\n        \"payable\": true,\n        \"returns\": {\n          \"tuple\": []\n        },\n        \"stateful\": true\n      }, {\n        \"arguments\": [],\n        \"name\": \"getContractDetails\",\n        \"payable\": false,\n        \"returns\": \"CharityTransfer.state\",\n        \"stateful\": false\n      }],\n      \"kind\": \"contract_main\",\n      \"name\": \"CharityTransfer\",\n      \"payable\": true,\n      \"state\": {\n        \"record\": [{\n          \"name\": \"user1\",\n          \"type\": \"address\"\n        }, {\n          \"name\": \"user2\",\n          \"type\": \"address\"\n        }, {\n          \"name\": \"amount\",\n          \"type\": \"int\"\n        }, {\n          \"name\": \"isConfirmed\",\n          \"type\": \"bool\"\n        }]\n      },\n      \"typedefs\": []\n    }\n  }];\n  let bytecode = \"cb_+QE0RgOg9VJwCt/1bunq4G0DoMIjvwztRQHnOmS4btUFfbgIcyPAuQEGuM3+Dv7QsgA3ADcERwBHAAcXDAKCDAKEDAKGDAKIJwwIAP5E1kQfADcANwBVAoIaDoSfAKDV2POv3jVbFg8fneTzQzjhJ42+W4ZvmRZh17lUxKBJaxoOhgAaDoh/AQM//qGAQw0ENwA3ACYIiAcMBPsDpVRyYW5zYWN0aW9uIGFscmVhZHkgY29uZmlybWVkIG9yIHJlamVjdGVkCwAfMAAHDAj7A31BbW91bnQgc2hvdWxkIGJlIGdyZWF0ZXIgdGhhbiAwCwAUCoaGAQM/sy8DEQ7+0LJJZ2V0Q29udHJhY3REZXRhaWxzEUTWRB8RaW5pdBGhgEMNJXNlbmRNb25leYIvAIU3LjQuMAFOSKJN\";\n\n  // const handleInputChange = (e) => {\n  //   setUserInput(e.target.value);\n  // };\n\n  const handleSend = () => {\n    // setBotMessages((prevMessages) => [\n    //   ...prevMessages,\n    //   { id: 'user', text: userInput },\n    // ]);\n\n    // if (transactionType === 'send' && userInput !== '' && !publicKey && !amount && !confirmSend) {\n    //   setPublicKey(userInput);\n    //   setBotMessages((prevMessages) => [\n    //     ...prevMessages,\n    //     { id: 'bot', text: 'Enter the amount to send:' },\n    //   ]);\n    // }\n    if (transactionType === 'send' && publicKey && !amount && !confirmSend) {\n      setAmount(userInput);\n      setBotMessages(prevMessages => [...prevMessages, {\n        id: 'bot',\n        text: `Enter the amount to send:`\n      }]);\n    } else if (transactionType === 'send' && publicKey && amount && !confirmSend) {\n      setConfirmSend(true);\n      setBotMessages(prevMessages => [...prevMessages, {\n        id: 'bot',\n        text: `Are you sure you want to send ${amount}?`\n      }]);\n    } else if (transactionType === 'send' && publicKey && amount && confirmSend) {\n      handleYes();\n    }\n  };\n  const handleYes = async () => {\n    try {\n      const spendTo = publicKey;\n      const spendAmount = amount;\n      console.log(spendTo);\n      const contract = await instance.initializeContract({\n        aci,\n        bytecode,\n        address: \"ct_VAVZxayCvmd163vQGpGrNRmaZLfVMbRHnxSVAuwovGEDCjBCs\"\n      });\n      console.log(\"contract\", contract);\n\n      // const sendMoneyResult = await contract.sendMoney(\"ak_cgWc8Rs7UcrmRu7VMXBCsG3mMaAKMmAnKgPWsWby5S5C5rhc3\");\n      // console.log(sendMoneyResult);\n      const options1 = {\n        amount: spendAmount * 1000000000000000000,\n        callData: \"\",\n        fee: null,\n        gas: null,\n        gasPrice: 1000000000\n      };\n      const args = [];\n      const options = Object.fromEntries(Object.entries(options1).filter(([, v]) => v != null));\n      contract === null || contract === void 0 ? void 0 : contract.$call(\"sendMoney\", args, options).then(result => {\n        console.log(result);\n        // setSpendPromise(result.hash)\n\n        console.log(result);\n        setBotMessages([...botMessages, {\n          id: 'bot',\n          text: `Successfully sent ${amount} to recipient! Transaction Id: ${result.hash}`\n        }]);\n        updateBalance();\n        console.log(result);\n      });\n    } catch (error) {\n      setBotMessages([...botMessages, {\n        id: 'bot',\n        text: `Transaction failed: ${error.message}`\n      }]);\n      console.error('Transaction failed:', error);\n    }\n    setConfirmSend(false);\n    setUserInput('');\n    setTransactionType('');\n    setPublicKey(null);\n    setAmount('');\n  };\n  const handleNo = () => {\n    setBotMessages([...botMessages, {\n      id: 'bot',\n      text: 'Transaction cancelled.'\n    }]);\n    setConfirmSend(false);\n    setUserInput('');\n    setTransactionType('');\n    setPublicKey(null);\n    setAmount('');\n  };\n  const handleOptionSelection = type => {\n    setTransactionType(type);\n    // console.log(\"hhh\");\n    // console.log(type);\n\n    if (type === 'send') {\n      setTransactionType('send');\n      setPublicKey('ak_2QaAzpW4w4pnPNDdrgdLHu5v4bGMxVzUD2F16X3aUrayPcBzZm');\n      setBotMessages(prevMessages => [...prevMessages, {\n        id: 'bot',\n        text: `Enter the amount to send:`\n      }]);\n    }\n    if (type === 'getbalance') {\n      console.log(\"hlo\");\n      getBalance();\n    }\n  };\n  const getBalance = async () => {\n    try {\n      console.log(\"hl\");\n      const balance = await instance.getBalance(address, {\n        format: AE_AMOUNT_FORMATS.AE\n      });\n      setBotMessages([...botMessages, {\n        id: 'bot',\n        text: `Your current balance is ${balance}`\n      }]);\n    } catch (error) {\n      setBotMessages([...botMessages, {\n        id: 'bot',\n        text: `Failed to retrieve balance: ${error.message}`\n      }]);\n    }\n  };\n  const startChatAgain = () => {\n    setBotMessages([]);\n    setTransactionType('');\n    setPublicKey('');\n    setAmount('');\n    setConfirmSend(false);\n    setUserInput('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"fixed bottom-4 right-4 w-80 h-96 bg-white border border-gray-300 rounded-md shadow-md overflow-hidden chatbot\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-between items-center p-4 border-b border-gray-300 bg-gray-100\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-lg font-bold\",\n        children: \"Chatbot\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: closeChatbot,\n        className: \"focus:outline-none\",\n        children: /*#__PURE__*/_jsxDEV(\"svg\", {\n          xmlns: \"http://www.w3.org/2000/svg\",\n          className: \"h-5 w-5 text-gray-600\",\n          viewBox: \"0 0 20 20\",\n          fill: \"currentColor\",\n          children: /*#__PURE__*/_jsxDEV(\"path\", {\n            fillRule: \"evenodd\",\n            d: \"M13.414 12l3.293 3.293a1 1 0 01-1.414 1.414L12 13.414l-3.293 3.293a1 1 0 01-1.414-1.414L10.586 12 7.293 8.707a1 1 0 011.414-1.414L12 10.586l3.293-3.293a1 1 0 111.414 1.414L13.414 12z\",\n            clipRule: \"evenodd\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"overflow-y-auto p-4 h-64 chatbot-messages\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message bg-gray-200 p-2 rounded-md mb-2\",\n        children: \"Hello user, how can I help you today?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 21\n      }, this), botMessages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message bg-gray-200 p-2 rounded-md mb-2\",\n        children: message.text\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-4 border-t border-gray-300 bg-gray-100\",\n      children: [!transactionType && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex gap-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"px-4 py-2 bg-blue-500 text-white rounded-md\",\n          onClick: () => {\n            handleOptionSelection('send');\n            handleSend();\n          },\n          children: \"Send Money\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"px-4 py-2 bg-blue-500 text-white rounded-md\",\n          onClick: () => handleOptionSelection('getbalance'),\n          children: \"getBalance\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 21\n      }, this), transactionType === 'send' && publicKey && !confirmSend && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex gap-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Enter Amount\",\n          className: \"flex-1 rounded-md p-2 border border-gray-300 focus:outline-none focus:ring focus:border-blue-500\",\n          value: amount,\n          onChange: e => setAmount(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSend,\n          className: \"px-4 py-2 bg-blue-500 text-white rounded-md\",\n          children: \"Next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 21\n      }, this), confirmSend && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex gap-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleYes,\n          className: \"px-4 py-2 bg-green-500 text-white rounded-md\",\n          children: \"Yes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleNo,\n          className: \"px-4 py-2 bg-red-500 text-white rounded-md\",\n          children: \"No\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-center mt-4\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: startChatAgain,\n          className: \"px-4 py-2 bg-green-500 text-white rounded-md\",\n          style: {\n            display: transactionType ? 'block' : 'none'\n          },\n          children: \"Start Chat Again\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 217,\n    columnNumber: 9\n  }, this);\n};\n_s(Chatbot, \"k7MT57R+BPsYN3W7iKE47HTOXnM=\");\n_c = Chatbot;\nexport default Chatbot;\nvar _c;\n$RefreshReg$(_c, \"Chatbot\");","map":{"version":3,"names":["React","useState","AE_AMOUNT_FORMATS","jsxDEV","_jsxDEV","Chatbot","closeChatbot","instance","address","updateBalance","_s","botMessages","setBotMessages","userInput","setUserInput","transactionType","setTransactionType","publicKey","setPublicKey","amount","setAmount","confirmSend","setConfirmSend","aci","bytecode","handleSend","prevMessages","id","text","handleYes","spendTo","spendAmount","console","log","contract","initializeContract","options1","callData","fee","gas","gasPrice","args","options","Object","fromEntries","entries","filter","v","$call","then","result","hash","error","message","handleNo","handleOptionSelection","type","getBalance","balance","format","AE","startChatAgain","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","xmlns","viewBox","fill","fillRule","d","clipRule","map","index","placeholder","value","onChange","e","target","style","display","_c","$RefreshReg$"],"sources":["C:/Users/amitk/Desktop/Donation Project/donation-aeternity-blockchain-contract/src/ChatBot.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './assets/Chatbot.css';\r\nimport { AE_AMOUNT_FORMATS } from '@aeternity/aepp-sdk';\r\n\r\nconst Chatbot = ({ closeChatbot, instance, address, updateBalance }) => {\r\n  const [botMessages, setBotMessages] = useState([]);\r\n  const [userInput, setUserInput] = useState('');\r\n  const [transactionType, setTransactionType] = useState('');\r\n  const [publicKey, setPublicKey] = useState('ak_2QaAzpW4w4pnPNDdrgdLHu5v4bGMxVzUD2F16X3aUrayPcBzZm');\r\n  const [amount, setAmount] = useState('');\r\n  const [confirmSend, setConfirmSend] = useState(false);\r\n  let aci = [\r\n    {\r\n        \"contract\": {\r\n            \"functions\": [\r\n                {\r\n                    \"arguments\": [],\r\n                    \"name\": \"init\",\r\n                    \"payable\": false,\r\n                    \"returns\": \"CharityTransfer.state\",\r\n                    \"stateful\": false\r\n                },\r\n                {\r\n                    \"arguments\": [],\r\n                    \"name\": \"sendMoney\",\r\n                    \"payable\": true,\r\n                    \"returns\": {\r\n                        \"tuple\": []\r\n                    },\r\n                    \"stateful\": true\r\n                },\r\n                {\r\n                    \"arguments\": [],\r\n                    \"name\": \"getContractDetails\",\r\n                    \"payable\": false,\r\n                    \"returns\": \"CharityTransfer.state\",\r\n                    \"stateful\": false\r\n                }\r\n            ],\r\n            \"kind\": \"contract_main\",\r\n            \"name\": \"CharityTransfer\",\r\n            \"payable\": true,\r\n            \"state\": {\r\n                \"record\": [\r\n                    {\r\n                        \"name\": \"user1\",\r\n                        \"type\": \"address\"\r\n                    },\r\n                    {\r\n                        \"name\": \"user2\",\r\n                        \"type\": \"address\"\r\n                    },\r\n                    {\r\n                        \"name\": \"amount\",\r\n                        \"type\": \"int\"\r\n                    },\r\n                    {\r\n                        \"name\": \"isConfirmed\",\r\n                        \"type\": \"bool\"\r\n                    }\r\n                ]\r\n            },\r\n            \"typedefs\": []\r\n        }\r\n    }\r\n];\r\nlet bytecode =\r\n    \"cb_+QE0RgOg9VJwCt/1bunq4G0DoMIjvwztRQHnOmS4btUFfbgIcyPAuQEGuM3+Dv7QsgA3ADcERwBHAAcXDAKCDAKEDAKGDAKIJwwIAP5E1kQfADcANwBVAoIaDoSfAKDV2POv3jVbFg8fneTzQzjhJ42+W4ZvmRZh17lUxKBJaxoOhgAaDoh/AQM//qGAQw0ENwA3ACYIiAcMBPsDpVRyYW5zYWN0aW9uIGFscmVhZHkgY29uZmlybWVkIG9yIHJlamVjdGVkCwAfMAAHDAj7A31BbW91bnQgc2hvdWxkIGJlIGdyZWF0ZXIgdGhhbiAwCwAUCoaGAQM/sy8DEQ7+0LJJZ2V0Q29udHJhY3REZXRhaWxzEUTWRB8RaW5pdBGhgEMNJXNlbmRNb25leYIvAIU3LjQuMAFOSKJN\";\r\n\r\n\r\n  // const handleInputChange = (e) => {\r\n  //   setUserInput(e.target.value);\r\n  // };\r\n\r\n  const handleSend = () => {\r\n    // setBotMessages((prevMessages) => [\r\n    //   ...prevMessages,\r\n    //   { id: 'user', text: userInput },\r\n    // ]);\r\n\r\n    // if (transactionType === 'send' && userInput !== '' && !publicKey && !amount && !confirmSend) {\r\n    //   setPublicKey(userInput);\r\n    //   setBotMessages((prevMessages) => [\r\n    //     ...prevMessages,\r\n    //     { id: 'bot', text: 'Enter the amount to send:' },\r\n    //   ]);\r\n    // }\r\n    if (transactionType === 'send' && publicKey && !amount && !confirmSend) {\r\n      setAmount(userInput);\r\n      setBotMessages((prevMessages) => [\r\n        ...prevMessages,\r\n        { id: 'bot', text: `Enter the amount to send:` },\r\n      ]);\r\n    } else if (transactionType === 'send' && publicKey && amount && !confirmSend) {\r\n      setConfirmSend(true);\r\n      setBotMessages((prevMessages) => [\r\n        ...prevMessages,\r\n        { id: 'bot', text: `Are you sure you want to send ${amount}?` },\r\n      ]);\r\n    } else if (transactionType === 'send' && publicKey && amount && confirmSend) {\r\n      handleYes();\r\n    }\r\n  };\r\n\r\n  const handleYes = async () => {\r\n    try {\r\n      const spendTo = publicKey; \r\n      const spendAmount = amount;\r\n      console.log(spendTo) \r\n\r\n      const contract = await instance.initializeContract({ aci, bytecode, address: \"ct_VAVZxayCvmd163vQGpGrNRmaZLfVMbRHnxSVAuwovGEDCjBCs\" })\r\n      console.log(\"contract\", contract);\r\n\r\n\r\n      // const sendMoneyResult = await contract.sendMoney(\"ak_cgWc8Rs7UcrmRu7VMXBCsG3mMaAKMmAnKgPWsWby5S5C5rhc3\");\r\n      // console.log(sendMoneyResult);\r\n      const options1 = {\r\n          amount: spendAmount * 1000000000000000000,\r\n          callData: \"\",\r\n          fee: null,\r\n          gas: null,\r\n          gasPrice: 1000000000,\r\n      };\r\n      const args = [];\r\n      const options = Object.fromEntries(\r\n          Object.entries(options1).filter(([, v]) => v != null),\r\n      );\r\n\r\n      contract\r\n          ?.$call(\"sendMoney\",args, options)\r\n          .then((result) => {\r\n              console.log(result);\r\n              // setSpendPromise(result.hash)\r\n              \r\n              \r\n              console.log(result);\r\n              setBotMessages([\r\n                ...botMessages,\r\n                { id: 'bot', text: `Successfully sent ${amount} to recipient! Transaction Id: ${result.hash}` },\r\n              ]);\r\n              updateBalance();\r\n              console.log(result);\r\n\r\n          });\r\n      \r\n    } catch (error) {\r\n      setBotMessages([\r\n        ...botMessages,\r\n        { id: 'bot', text: `Transaction failed: ${error.message}` },\r\n      ]);\r\n      console.error('Transaction failed:', error);\r\n    }\r\n\r\n    setConfirmSend(false);\r\n    setUserInput('');\r\n    setTransactionType('');\r\n    setPublicKey(null);\r\n    setAmount('');\r\n  };\r\n\r\n  const handleNo = () => {\r\n    setBotMessages([\r\n      ...botMessages,\r\n      { id: 'bot', text: 'Transaction cancelled.' },\r\n    ]);\r\n    setConfirmSend(false);\r\n    setUserInput('');\r\n    setTransactionType('');\r\n    setPublicKey(null);\r\n    setAmount('');\r\n  };\r\n\r\n  const handleOptionSelection = (type) => {\r\n    setTransactionType(type);\r\n    // console.log(\"hhh\");\r\n    // console.log(type);\r\n\r\n    if (type === 'send') {\r\n      setTransactionType('send'); \r\n      setPublicKey('ak_2QaAzpW4w4pnPNDdrgdLHu5v4bGMxVzUD2F16X3aUrayPcBzZm');\r\n      setBotMessages((prevMessages) => [\r\n        ...prevMessages,\r\n        { id: 'bot', text: `Enter the amount to send:` },\r\n      ]);\r\n    }\r\n    if (type === 'getbalance') {\r\n        console.log(\"hlo\");\r\n      getBalance();\r\n    }\r\n  };\r\n\r\n  const getBalance = async () => {\r\n    try {\r\n        console.log(\"hl\");\r\n      const balance = await instance.getBalance(address, { format: AE_AMOUNT_FORMATS.AE });\r\n      setBotMessages([\r\n        ...botMessages,\r\n        { id: 'bot', text: `Your current balance is ${balance}` },\r\n      ]);\r\n    } catch (error) {\r\n      setBotMessages([\r\n        ...botMessages,\r\n        { id: 'bot', text: `Failed to retrieve balance: ${error.message}` },\r\n      ]);\r\n    }\r\n  };\r\n\r\n  const startChatAgain = () => {\r\n    setBotMessages([]);\r\n    setTransactionType('');\r\n    setPublicKey('');\r\n    setAmount('');\r\n    setConfirmSend(false);\r\n    setUserInput('');\r\n  };\r\n    return (\r\n        <div className='fixed bottom-4 right-4 w-80 h-96 bg-white border border-gray-300 rounded-md shadow-md overflow-hidden chatbot'>\r\n            \r\n            <div className='flex justify-between items-center p-4 border-b border-gray-300 bg-gray-100'>\r\n                <h2 className='text-lg font-bold'>Chatbot</h2>\r\n                <button onClick={closeChatbot} className='focus:outline-none'>\r\n                    <svg\r\n                        xmlns='http://www.w3.org/2000/svg'\r\n                        className='h-5 w-5 text-gray-600'\r\n                        viewBox='0 0 20 20'\r\n                        fill='currentColor'\r\n                    >\r\n                        <path\r\n                            fillRule='evenodd'\r\n                            d='M13.414 12l3.293 3.293a1 1 0 01-1.414 1.414L12 13.414l-3.293 3.293a1 1 0 01-1.414-1.414L10.586 12 7.293 8.707a1 1 0 011.414-1.414L12 10.586l3.293-3.293a1 1 0 111.414 1.414L13.414 12z'\r\n                            clipRule='evenodd'\r\n                        />\r\n                    </svg>\r\n                </button>\r\n            </div>\r\n\r\n            \r\n            <div className='overflow-y-auto p-4 h-64 chatbot-messages'>\r\n               \r\n                \r\n                    <div className='message bg-gray-200 p-2 rounded-md mb-2'>\r\n                        Hello user, how can I help you today?\r\n                    </div>\r\n                {botMessages.map((message, index) => (\r\n                    <div key={index} className='message bg-gray-200 p-2 rounded-md mb-2'>\r\n                        {message.text}\r\n                    </div>\r\n                ))}\r\n            </div>\r\n\r\n            <div className='p-4 border-t border-gray-300 bg-gray-100'>\r\n                \r\n                {!transactionType && (\r\n                    <div className='flex gap-2'>\r\n                        <button\r\n                            className='px-4 py-2 bg-blue-500 text-white rounded-md'\r\n                            onClick={() => {\r\n                              handleOptionSelection('send')\r\n                              handleSend()}}\r\n                        >\r\n                            Send Money\r\n                        </button>\r\n                        <button\r\n                            className='px-4 py-2 bg-blue-500 text-white rounded-md'\r\n                            onClick={() => handleOptionSelection('getbalance')}\r\n                        >\r\n                           getBalance\r\n                        </button>\r\n                    </div>\r\n                )}\r\n\r\n\r\n                \r\n\r\n                {transactionType === 'send' && publicKey && !confirmSend && (\r\n                    <div className='flex gap-2'>\r\n                        <input\r\n                            type='text'\r\n                            placeholder='Enter Amount'\r\n                            className='flex-1 rounded-md p-2 border border-gray-300 focus:outline-none focus:ring focus:border-blue-500'\r\n                            value={amount}\r\n                            onChange={(e) => setAmount(e.target.value)}\r\n                        />\r\n                        <button\r\n                            onClick={handleSend}\r\n                            className='px-4 py-2 bg-blue-500 text-white rounded-md'\r\n                        >\r\n                            Next\r\n                        </button>\r\n                    </div>\r\n                )}\r\n\r\n               \r\n                {confirmSend && (\r\n                    <div className='flex gap-2'>\r\n                        <button\r\n                            onClick={handleYes}\r\n                            className='px-4 py-2 bg-green-500 text-white rounded-md'\r\n                        >\r\n                            Yes\r\n                        </button>\r\n                        <button\r\n                            onClick={handleNo}\r\n                            className='px-4 py-2 bg-red-500 text-white rounded-md'\r\n                        >\r\n                            No\r\n                        </button>\r\n                    </div>\r\n                )}\r\n\r\n                \r\n                <div className='flex justify-center mt-4'>\r\n                    <button\r\n                        onClick={startChatAgain}\r\n                        className='px-4 py-2 bg-green-500 text-white rounded-md'\r\n                        style={{ display: transactionType ? 'block' : 'none' }}\r\n                    >\r\n                        Start Chat Again\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Chatbot;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}