{"ast":null,"code":"const bs58 = require('bs58');\nconst {\n  addChecksum,\n  getPayload\n} = require('./base64check');\n\n/**\n * Base58check encode given `input`\n * @param {Buffer} input - Data to encode\n * @return {String} Base58check encoded data\n */\nconst encode = input => {\n  return bs58.encode(addChecksum(input));\n};\n\n/**\n * Base58check decode given `str`\n * @param {String} str - Data to decode\n * @return {Uint8Array} Base58check decoded data\n */\nconst decode = str => {\n  return getPayload(bs58.decode(str));\n};\nmodule.exports = {\n  encode,\n  decode\n};","map":{"version":3,"names":["bs58","require","addChecksum","getPayload","encode","input","decode","str","module","exports"],"sources":["C:/Users/amitk/Desktop/Donation Project/donation-aeternity-blockchain-contract/node_modules/@aeternity/aepp-calldata/src/utils/base58check.js"],"sourcesContent":["const bs58 = require('bs58')\nconst { addChecksum, getPayload } = require('./base64check')\n\n/**\n * Base58check encode given `input`\n * @param {Buffer} input - Data to encode\n * @return {String} Base58check encoded data\n */\nconst encode = (input) => {\n    return bs58.encode(addChecksum(input))\n}\n\n/**\n * Base58check decode given `str`\n * @param {String} str - Data to decode\n * @return {Uint8Array} Base58check decoded data\n */\nconst decode = (str) => {\n    return getPayload(bs58.decode(str))\n}\n\nmodule.exports = {\n    encode,\n    decode\n}\n"],"mappings":"AAAA,MAAMA,IAAI,GAAGC,OAAO,CAAC,MAAM,CAAC;AAC5B,MAAM;EAAEC,WAAW;EAAEC;AAAW,CAAC,GAAGF,OAAO,CAAC,eAAe,CAAC;;AAE5D;AACA;AACA;AACA;AACA;AACA,MAAMG,MAAM,GAAIC,KAAK,IAAK;EACtB,OAAOL,IAAI,CAACI,MAAM,CAACF,WAAW,CAACG,KAAK,CAAC,CAAC;AAC1C,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA,MAAMC,MAAM,GAAIC,GAAG,IAAK;EACpB,OAAOJ,UAAU,CAACH,IAAI,CAACM,MAAM,CAACC,GAAG,CAAC,CAAC;AACvC,CAAC;AAEDC,MAAM,CAACC,OAAO,GAAG;EACbL,MAAM;EACNE;AACJ,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}