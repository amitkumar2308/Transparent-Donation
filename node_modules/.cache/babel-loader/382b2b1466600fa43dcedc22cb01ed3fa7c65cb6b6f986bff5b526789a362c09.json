{"ast":null,"code":"const assert = require('./utils/assert');\nconst FateTag = require('./FateTag');\nconst FatePrefixError = require('./Errors/FatePrefixError');\nconst {\n  FateTypeInt,\n  FateTypeBool,\n  FateTypeString,\n  FateTypeBits,\n  FateTypeBytes,\n  FateTypeAccountAddress,\n  FateTypeContractAddress,\n  FateTypeOracleAddress,\n  FateTypeOracleQueryAddress,\n  FateTypeChannelAddress,\n  FateTypeList,\n  FateTypeMap,\n  FateTypeTuple,\n  FateTypeVariant,\n  FateTypeType\n} = require('./FateTypes');\nconst OBJECT_TYPES = {\n  [FateTag.OTYPE_ADDRESS]: FateTypeAccountAddress(),\n  [FateTag.OTYPE_BYTES]: FateTypeBytes(),\n  [FateTag.OTYPE_CONTRACT]: FateTypeContractAddress(),\n  [FateTag.OTYPE_ORACLE]: FateTypeOracleAddress(),\n  [FateTag.OTYPE_ORACLE_QUERY]: FateTypeOracleQueryAddress(),\n  [FateTag.OTYPE_CHANNEL]: FateTypeChannelAddress()\n};\nclass TypeFactory {\n  createType(data) {\n    const tag = data[0];\n    if (tag === FateTag.TRUE || tag === FateTag.FALSE) {\n      return FateTypeBool();\n    }\n    if ((tag & 0x01) === FateTag.SMALL_INT || tag === FateTag.POS_BIG_INT || tag === FateTag.NEG_BIG_INT) {\n      return FateTypeInt();\n    }\n    if ((tag & 0x03) === FateTag.SHORT_STRING || tag === FateTag.LONG_STRING || tag === FateTag.EMPTY_STRING) {\n      return FateTypeString();\n    }\n    if ((tag & 0x0F) === FateTag.SHORT_LIST || tag === FateTag.LONG_LIST) {\n      return FateTypeList();\n    }\n    if ((tag & 0x0F) === FateTag.SHORT_TUPLE || tag === FateTag.LONG_TUPLE || tag === FateTag.EMPTY_TUPLE) {\n      return FateTypeTuple();\n    }\n    if (tag === FateTag.MAP || tag === FateTag.EMPTY_MAP) {\n      return FateTypeMap();\n    }\n    if (tag === FateTag.POS_BITS || tag === FateTag.NEG_BITS) {\n      return FateTypeBits();\n    }\n    if (tag === FateTag.VARIANT) {\n      return FateTypeVariant();\n    }\n    if (tag === FateTag.OBJECT) {\n      const obj = data[1];\n      assert(OBJECT_TYPES.hasOwnProperty(obj), `Unsupported object type \"${obj}\"`);\n      return OBJECT_TYPES[obj];\n    }\n    if (tag === FateTag.TYPE_INTEGER || tag === FateTag.TYPE_BOOLEAN || tag === FateTag.TYPE_LIST || tag === FateTag.TYPE_TUPLE || tag === FateTag.TYPE_OBJECT || tag === FateTag.TYPE_BITS || tag === FateTag.TYPE_MAP || tag === FateTag.TYPE_STRING || tag === FateTag.TYPE_VARIANT || tag === FateTag.TYPE_BYTES || tag === FateTag.TYPE_CONTRACT_BYTEARRAY || tag === FateTag.TYPE_VAR || tag === FateTag.TYPE_ANY) {\n      return FateTypeType();\n    }\n    throw new FatePrefixError(tag);\n  }\n}\nmodule.exports = TypeFactory;","map":{"version":3,"names":["assert","require","FateTag","FatePrefixError","FateTypeInt","FateTypeBool","FateTypeString","FateTypeBits","FateTypeBytes","FateTypeAccountAddress","FateTypeContractAddress","FateTypeOracleAddress","FateTypeOracleQueryAddress","FateTypeChannelAddress","FateTypeList","FateTypeMap","FateTypeTuple","FateTypeVariant","FateTypeType","OBJECT_TYPES","OTYPE_ADDRESS","OTYPE_BYTES","OTYPE_CONTRACT","OTYPE_ORACLE","OTYPE_ORACLE_QUERY","OTYPE_CHANNEL","TypeFactory","createType","data","tag","TRUE","FALSE","SMALL_INT","POS_BIG_INT","NEG_BIG_INT","SHORT_STRING","LONG_STRING","EMPTY_STRING","SHORT_LIST","LONG_LIST","SHORT_TUPLE","LONG_TUPLE","EMPTY_TUPLE","MAP","EMPTY_MAP","POS_BITS","NEG_BITS","VARIANT","OBJECT","obj","hasOwnProperty","TYPE_INTEGER","TYPE_BOOLEAN","TYPE_LIST","TYPE_TUPLE","TYPE_OBJECT","TYPE_BITS","TYPE_MAP","TYPE_STRING","TYPE_VARIANT","TYPE_BYTES","TYPE_CONTRACT_BYTEARRAY","TYPE_VAR","TYPE_ANY","module","exports"],"sources":["C:/Users/amitk/Desktop/Donation Project/donation-aeternity-blockchain-contract/node_modules/@aeternity/aepp-calldata/src/TypeFactory.js"],"sourcesContent":["const assert = require('./utils/assert')\nconst FateTag = require('./FateTag')\nconst FatePrefixError = require('./Errors/FatePrefixError')\nconst {\n    FateTypeInt,\n    FateTypeBool,\n    FateTypeString,\n    FateTypeBits,\n    FateTypeBytes,\n    FateTypeAccountAddress,\n    FateTypeContractAddress,\n    FateTypeOracleAddress,\n    FateTypeOracleQueryAddress,\n    FateTypeChannelAddress,\n    FateTypeList,\n    FateTypeMap,\n    FateTypeTuple,\n    FateTypeVariant,\n    FateTypeType,\n} = require('./FateTypes')\n\nconst OBJECT_TYPES = {\n    [FateTag.OTYPE_ADDRESS]: FateTypeAccountAddress(),\n    [FateTag.OTYPE_BYTES]: FateTypeBytes(),\n    [FateTag.OTYPE_CONTRACT]: FateTypeContractAddress(),\n    [FateTag.OTYPE_ORACLE]: FateTypeOracleAddress(),\n    [FateTag.OTYPE_ORACLE_QUERY]: FateTypeOracleQueryAddress(),\n    [FateTag.OTYPE_CHANNEL]: FateTypeChannelAddress(),\n}\n\nclass TypeFactory {\n    createType(data) {\n        const tag = data[0]\n\n        if (tag === FateTag.TRUE || tag === FateTag.FALSE) {\n            return FateTypeBool()\n        }\n\n        if ((tag & 0x01) === FateTag.SMALL_INT\n            || tag === FateTag.POS_BIG_INT\n            || tag === FateTag.NEG_BIG_INT\n        ) {\n            return FateTypeInt()\n        }\n\n        if ((tag & 0x03) === FateTag.SHORT_STRING\n            || tag === FateTag.LONG_STRING\n            || tag === FateTag.EMPTY_STRING\n        ) {\n            return FateTypeString()\n        }\n\n        if ((tag & 0x0F) === FateTag.SHORT_LIST || tag === FateTag.LONG_LIST) {\n            return FateTypeList()\n        }\n\n        if ((tag & 0x0F) === FateTag.SHORT_TUPLE\n            || tag === FateTag.LONG_TUPLE\n            || tag === FateTag.EMPTY_TUPLE\n        ) {\n            return FateTypeTuple()\n        }\n\n        if (tag === FateTag.MAP || tag === FateTag.EMPTY_MAP) {\n            return FateTypeMap()\n        }\n\n        if (tag === FateTag.POS_BITS || tag === FateTag.NEG_BITS) {\n            return FateTypeBits()\n        }\n\n        if (tag === FateTag.VARIANT) {\n            return FateTypeVariant()\n        }\n\n        if (tag === FateTag.OBJECT) {\n            const obj = data[1]\n            assert(OBJECT_TYPES.hasOwnProperty(obj), `Unsupported object type \"${obj}\"`)\n\n            return OBJECT_TYPES[obj]\n        }\n\n        if (tag === FateTag.TYPE_INTEGER\n            || tag === FateTag.TYPE_BOOLEAN\n            || tag === FateTag.TYPE_LIST\n            || tag === FateTag.TYPE_TUPLE\n            || tag === FateTag.TYPE_OBJECT\n            || tag === FateTag.TYPE_BITS\n            || tag === FateTag.TYPE_MAP\n            || tag === FateTag.TYPE_STRING\n            || tag === FateTag.TYPE_VARIANT\n            || tag === FateTag.TYPE_BYTES\n            || tag === FateTag.TYPE_CONTRACT_BYTEARRAY\n            || tag === FateTag.TYPE_VAR\n            || tag === FateTag.TYPE_ANY\n        ) {\n            return FateTypeType()\n        }\n\n        throw new FatePrefixError(tag)\n    }\n}\n\nmodule.exports = TypeFactory\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}