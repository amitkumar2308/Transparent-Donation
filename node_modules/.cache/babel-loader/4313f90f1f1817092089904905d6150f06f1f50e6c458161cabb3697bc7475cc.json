{"ast":null,"code":"const InternalEncoder = require('../ApiEncoder');\nclass FateApiEncoder {\n  constructor() {\n    this._internalEncoder = new InternalEncoder();\n  }\n\n  /**\n   * Encode data to canonical API format.\n   *\n   * @example\n   * const encoded = encoder.encode('contract_bytearray', new Uint8Array())\n   * console.log(`Encoded data: ${encoded}`)\n   * // Outputs:\n   * // Encoded data: cb_Xfbg4g==\n   *\n   * @param {string} type - Name of the data type\n   * @param {Uint8Array} data - Data to be encoded\n   * @returns {string} Encoded data in canonical format\n  */\n  encode(type, data) {\n    return this._internalEncoder.encode(type, data);\n  }\n\n  /**\n   * Decode API data\n   *\n   * @example\n   * const decoded = encoder.decode('cb_Xfbg4g==')\n   * console.log('Decoded data:', Array.from(decoded))\n   * // Outputs:\n   * // Decoded data: []\n   *\n   * @param {string} data - FATE API encoded data in canonical format.\n   * @returns {Uint8Array} Decoded data\n  */\n  decode(data) {\n    return this._internalEncoder.decode(data);\n  }\n}\nmodule.exports = FateApiEncoder;","map":{"version":3,"names":["InternalEncoder","require","FateApiEncoder","constructor","_internalEncoder","encode","type","data","decode","module","exports"],"sources":["C:/Users/amitk/Desktop/Donation Project/donation-aeternity-blockchain-contract/node_modules/@aeternity/aepp-calldata/src/api/FateApiEncoder.js"],"sourcesContent":["const InternalEncoder = require('../ApiEncoder')\n\nclass FateApiEncoder {\n    constructor() {\n        this._internalEncoder = new InternalEncoder()\n    }\n\n    /**\n     * Encode data to canonical API format.\n     *\n     * @example\n     * const encoded = encoder.encode('contract_bytearray', new Uint8Array())\n     * console.log(`Encoded data: ${encoded}`)\n     * // Outputs:\n     * // Encoded data: cb_Xfbg4g==\n     *\n     * @param {string} type - Name of the data type\n     * @param {Uint8Array} data - Data to be encoded\n     * @returns {string} Encoded data in canonical format\n    */\n    encode(type, data) {\n        return this._internalEncoder.encode(type, data)\n    }\n\n    /**\n     * Decode API data\n     *\n     * @example\n     * const decoded = encoder.decode('cb_Xfbg4g==')\n     * console.log('Decoded data:', Array.from(decoded))\n     * // Outputs:\n     * // Decoded data: []\n     *\n     * @param {string} data - FATE API encoded data in canonical format.\n     * @returns {Uint8Array} Decoded data\n    */\n    decode(data) {\n        return this._internalEncoder.decode(data)\n    }\n}\n\nmodule.exports = FateApiEncoder\n"],"mappings":"AAAA,MAAMA,eAAe,GAAGC,OAAO,CAAC,eAAe,CAAC;AAEhD,MAAMC,cAAc,CAAC;EACjBC,WAAWA,CAAA,EAAG;IACV,IAAI,CAACC,gBAAgB,GAAG,IAAIJ,eAAe,CAAC,CAAC;EACjD;;EAEA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACIK,MAAMA,CAACC,IAAI,EAAEC,IAAI,EAAE;IACf,OAAO,IAAI,CAACH,gBAAgB,CAACC,MAAM,CAACC,IAAI,EAAEC,IAAI,CAAC;EACnD;;EAEA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACIC,MAAMA,CAACD,IAAI,EAAE;IACT,OAAO,IAAI,CAACH,gBAAgB,CAACI,MAAM,CAACD,IAAI,CAAC;EAC7C;AACJ;AAEAE,MAAM,CAACC,OAAO,GAAGR,cAAc"},"metadata":{},"sourceType":"script","externalDependencies":[]}