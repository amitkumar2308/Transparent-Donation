{"ast":null,"code":"const FateData = require('./FateData');\nconst {\n  FateTypeVariant,\n  FateTypeTuple,\n  FateTypeInt\n} = require('../FateTypes');\nclass FateVariant extends FateData {\n  constructor(arities, tag, value = [], valueTypes = [], variants = []) {\n    super('variant');\n    this.arities = Array.from(arities);\n    this._tag = tag;\n    this._value = value;\n    this._valueTypes = valueTypes;\n    this._type = FateTypeVariant(variants);\n  }\n  get valueTypes() {\n    return this._valueTypes;\n  }\n  get type() {\n    return this._type;\n  }\n  get tag() {\n    return this._tag;\n  }\n  get value() {\n    return this._value;\n  }\n  get aritiesType() {\n    return FateTypeInt();\n  }\n  get variantType() {\n    return FateTypeTuple(this._valueTypes);\n  }\n  get variants() {\n    return this._type.variants;\n  }\n  get variantName() {\n    if (this.variants.length === 0) {\n      return this.tag;\n    }\n    const variant = this.variants[this.tag];\n    return Object.keys(variant)[0];\n  }\n  valueOf() {\n    if (this.variants.length === 0) {\n      return this;\n    }\n    const value = this._value.map(e => e.valueOf());\n    return {\n      [this.variantName]: value\n    };\n  }\n  accept(visitor) {\n    return visitor.visitVariant(this);\n  }\n}\nmodule.exports = FateVariant;","map":{"version":3,"names":["FateData","require","FateTypeVariant","FateTypeTuple","FateTypeInt","FateVariant","constructor","arities","tag","value","valueTypes","variants","Array","from","_tag","_value","_valueTypes","_type","type","aritiesType","variantType","variantName","length","variant","Object","keys","valueOf","map","e","accept","visitor","visitVariant","module","exports"],"sources":["C:/Users/amitk/Desktop/Donation Project/donation-aeternity-blockchain-contract/node_modules/@aeternity/aepp-calldata/src/types/FateVariant.js"],"sourcesContent":["const FateData = require('./FateData')\nconst {FateTypeVariant, FateTypeTuple, FateTypeInt} = require('../FateTypes')\n\nclass FateVariant extends FateData {\n    constructor(arities, tag, value = [], valueTypes = [], variants = []) {\n        super('variant')\n\n        this.arities = Array.from(arities)\n        this._tag = tag\n\n        this._value = value\n        this._valueTypes = valueTypes\n\n        this._type = FateTypeVariant(variants)\n    }\n\n    get valueTypes() {\n        return this._valueTypes\n    }\n\n    get type() {\n        return this._type\n    }\n\n    get tag() {\n        return this._tag\n    }\n\n    get value() {\n        return this._value\n    }\n\n    get aritiesType() {\n        return FateTypeInt()\n    }\n\n    get variantType() {\n        return FateTypeTuple(this._valueTypes)\n    }\n\n    get variants() {\n        return this._type.variants\n    }\n\n    get variantName() {\n        if (this.variants.length === 0) {\n            return this.tag\n        }\n\n        const variant = this.variants[this.tag]\n\n        return Object.keys(variant)[0]\n    }\n\n    valueOf() {\n        if (this.variants.length === 0) {\n            return this\n        }\n\n        const value = this._value.map(e => e.valueOf())\n\n        return {\n            [this.variantName]: value\n        }\n    }\n\n    accept(visitor) {\n        return visitor.visitVariant(this)\n    }\n}\n\nmodule.exports = FateVariant\n"],"mappings":"AAAA,MAAMA,QAAQ,GAAGC,OAAO,CAAC,YAAY,CAAC;AACtC,MAAM;EAACC,eAAe;EAAEC,aAAa;EAAEC;AAAW,CAAC,GAAGH,OAAO,CAAC,cAAc,CAAC;AAE7E,MAAMI,WAAW,SAASL,QAAQ,CAAC;EAC/BM,WAAWA,CAACC,OAAO,EAAEC,GAAG,EAAEC,KAAK,GAAG,EAAE,EAAEC,UAAU,GAAG,EAAE,EAAEC,QAAQ,GAAG,EAAE,EAAE;IAClE,KAAK,CAAC,SAAS,CAAC;IAEhB,IAAI,CAACJ,OAAO,GAAGK,KAAK,CAACC,IAAI,CAACN,OAAO,CAAC;IAClC,IAAI,CAACO,IAAI,GAAGN,GAAG;IAEf,IAAI,CAACO,MAAM,GAAGN,KAAK;IACnB,IAAI,CAACO,WAAW,GAAGN,UAAU;IAE7B,IAAI,CAACO,KAAK,GAAGf,eAAe,CAACS,QAAQ,CAAC;EAC1C;EAEA,IAAID,UAAUA,CAAA,EAAG;IACb,OAAO,IAAI,CAACM,WAAW;EAC3B;EAEA,IAAIE,IAAIA,CAAA,EAAG;IACP,OAAO,IAAI,CAACD,KAAK;EACrB;EAEA,IAAIT,GAAGA,CAAA,EAAG;IACN,OAAO,IAAI,CAACM,IAAI;EACpB;EAEA,IAAIL,KAAKA,CAAA,EAAG;IACR,OAAO,IAAI,CAACM,MAAM;EACtB;EAEA,IAAII,WAAWA,CAAA,EAAG;IACd,OAAOf,WAAW,CAAC,CAAC;EACxB;EAEA,IAAIgB,WAAWA,CAAA,EAAG;IACd,OAAOjB,aAAa,CAAC,IAAI,CAACa,WAAW,CAAC;EAC1C;EAEA,IAAIL,QAAQA,CAAA,EAAG;IACX,OAAO,IAAI,CAACM,KAAK,CAACN,QAAQ;EAC9B;EAEA,IAAIU,WAAWA,CAAA,EAAG;IACd,IAAI,IAAI,CAACV,QAAQ,CAACW,MAAM,KAAK,CAAC,EAAE;MAC5B,OAAO,IAAI,CAACd,GAAG;IACnB;IAEA,MAAMe,OAAO,GAAG,IAAI,CAACZ,QAAQ,CAAC,IAAI,CAACH,GAAG,CAAC;IAEvC,OAAOgB,MAAM,CAACC,IAAI,CAACF,OAAO,CAAC,CAAC,CAAC,CAAC;EAClC;EAEAG,OAAOA,CAAA,EAAG;IACN,IAAI,IAAI,CAACf,QAAQ,CAACW,MAAM,KAAK,CAAC,EAAE;MAC5B,OAAO,IAAI;IACf;IAEA,MAAMb,KAAK,GAAG,IAAI,CAACM,MAAM,CAACY,GAAG,CAACC,CAAC,IAAIA,CAAC,CAACF,OAAO,CAAC,CAAC,CAAC;IAE/C,OAAO;MACH,CAAC,IAAI,CAACL,WAAW,GAAGZ;IACxB,CAAC;EACL;EAEAoB,MAAMA,CAACC,OAAO,EAAE;IACZ,OAAOA,OAAO,CAACC,YAAY,CAAC,IAAI,CAAC;EACrC;AACJ;AAEAC,MAAM,CAACC,OAAO,GAAG5B,WAAW"},"metadata":{},"sourceType":"script","externalDependencies":[]}