{"ast":null,"code":"/* eslint-disable key-spacing, indent */\n\n// Definition of tag scheme.\n// This has to follow the protocol specification.\nmodule.exports = Object.freeze({\n  SMALL_INT: 0b0,\n  // sxxxxxx 0 - 6 bit integer with sign bit\n  // 1 Set below\n  LONG_STRING: 0b00000001,\n  // 000000 01 | RLP encoded array - when size >= 64\n  SHORT_STRING: 0b01,\n  // xxxxxx 01 | [bytes] - when 0 < xxxxxx:size < 64\n  // 11  Set below\n  SHORT_LIST: 0b0011,\n  // xxxx 0011 | [encoded elements] when  0 < length < 16\n  // xxxx 0111\n  // 1010 0111\n  // 1011 0111\n  // 1100 0111\n  // 1101 0111\n  //      0111 Set below\n  TYPE_INTEGER: 0b00000111,\n  // 0000 0111 - Integer typedef\n  TYPE_BOOLEAN: 0b00010111,\n  // 0001 0111 - Boolean typedef\n  TYPE_LIST: 0b00100111,\n  // 0010 0111 | Type\n  TYPE_TUPLE: 0b00110111,\n  // 0011 0111 | Size | [Element Types]\n  TYPE_OBJECT: 0b01000111,\n  // 0100 0111 | ObjectType\n  TYPE_BITS: 0b01010111,\n  // 0101 0111 - Bits typedef\n  TYPE_MAP: 0b01100111,\n  // 0110 0111 | Type | Type\n  TYPE_STRING: 0b01110111,\n  // 0111 0111 - string typedef\n  TYPE_VARIANT: 0b10000111,\n  // 1000 0111 | [Arities] | [Type]\n  TYPE_BYTES: 0b10010111,\n  // 1001 0111 - Bytes typedef\n  TYPE_CONTRACT_BYTEARRAY: 0b10100111,\n  // 1010 0111 - Fate code typedef\n  // 1011 0111\n  // 1100 0111\n  // 1101 0111\n  TYPE_VAR: 0b11100111,\n  // 1110 0111 | Id when 0 =< Id < 256 (type variable)\n  TYPE_ANY: 0b11110111,\n  // 1111 0111 - Any typedef\n\n  LONG_TUPLE: 0b00001011,\n  // 0000 1011 | RLP encoded (size - 16) | [encoded elements],\n  SHORT_TUPLE: 0b1011,\n  // xxxx 1011 | [encoded elements] when 0  <  size < 16\n  // 1111 Set below\n  LONG_LIST: 0b00011111,\n  // 0001 1111 | RLP encoded (length - 16) | [encoded elements]\n  MAP: 0b00101111,\n  // 0010 1111 | RLP encoded size | [encoded key, encoded value]\n  EMPTY_TUPLE: 0b00111111,\n  // 0011 1111\n  POS_BITS: 0b01001111,\n  // 0100 1111 | RLP encoded integer (to be interpreted as bitfield)\n  EMPTY_STRING: 0b01011111,\n  // 0101 1111\n  POS_BIG_INT: 0b01101111,\n  // 0110 1111 | RLP encoded (integer - 64)\n  FALSE: 0b01111111,\n  // 0111 1111\n  // 1000 1111 - FREE (Possibly for bytecode in the future.)\n  OBJECT: 0b10011111,\n  // 1001 1111 | ObjectType | RLP encoded Array\n  VARIANT: 0b10101111,\n  // 1010 1111 | [encoded arities] | encoded tag | [encoded values]\n  MAP_ID: 0b10111111,\n  // 1011 1111 | RLP encoded integer (store map id)\n  NEG_BITS: 0b11001111,\n  // 1100 1111 | RLP encoded integer (infinite 1:s bitfield)\n  EMPTY_MAP: 0b11011111,\n  // 1101 1111\n  NEG_BIG_INT: 0b11101111,\n  // 1110 1111 | RLP encoded (integer - 64)\n  TRUE: 0b11111111,\n  // 1111 1111\n\n  // Object types\n  OTYPE_ADDRESS: 0,\n  OTYPE_BYTES: 1,\n  OTYPE_CONTRACT: 2,\n  OTYPE_ORACLE: 3,\n  OTYPE_ORACLE_QUERY: 4,\n  OTYPE_CHANNEL: 5\n});","map":{"version":3,"names":["module","exports","Object","freeze","SMALL_INT","LONG_STRING","SHORT_STRING","SHORT_LIST","TYPE_INTEGER","TYPE_BOOLEAN","TYPE_LIST","TYPE_TUPLE","TYPE_OBJECT","TYPE_BITS","TYPE_MAP","TYPE_STRING","TYPE_VARIANT","TYPE_BYTES","TYPE_CONTRACT_BYTEARRAY","TYPE_VAR","TYPE_ANY","LONG_TUPLE","SHORT_TUPLE","LONG_LIST","MAP","EMPTY_TUPLE","POS_BITS","EMPTY_STRING","POS_BIG_INT","FALSE","OBJECT","VARIANT","MAP_ID","NEG_BITS","EMPTY_MAP","NEG_BIG_INT","TRUE","OTYPE_ADDRESS","OTYPE_BYTES","OTYPE_CONTRACT","OTYPE_ORACLE","OTYPE_ORACLE_QUERY","OTYPE_CHANNEL"],"sources":["C:/Users/amitk/Desktop/Donation Project/donation-aeternity-blockchain-contract/node_modules/@aeternity/aepp-calldata/src/FateTag.js"],"sourcesContent":["/* eslint-disable key-spacing, indent */\n\n// Definition of tag scheme.\n// This has to follow the protocol specification.\nmodule.exports = Object.freeze({\n    SMALL_INT    :        0b0, // sxxxxxx 0 - 6 bit integer with sign bit\n                                       // 1 Set below\n    LONG_STRING  : 0b00000001, // 000000 01 | RLP encoded array - when size >= 64\n    SHORT_STRING :       0b01, // xxxxxx 01 | [bytes] - when 0 < xxxxxx:size < 64\n                                      // 11  Set below\n    SHORT_LIST   :     0b0011, // xxxx 0011 | [encoded elements] when  0 < length < 16\n                               // xxxx 0111\n                               // 1010 0111\n                               // 1011 0111\n                               // 1100 0111\n                               // 1101 0111\n                               //      0111 Set below\n    TYPE_INTEGER : 0b00000111, // 0000 0111 - Integer typedef\n    TYPE_BOOLEAN : 0b00010111, // 0001 0111 - Boolean typedef\n    TYPE_LIST    : 0b00100111, // 0010 0111 | Type\n    TYPE_TUPLE   : 0b00110111, // 0011 0111 | Size | [Element Types]\n    TYPE_OBJECT  : 0b01000111, // 0100 0111 | ObjectType\n    TYPE_BITS    : 0b01010111, // 0101 0111 - Bits typedef\n    TYPE_MAP     : 0b01100111, // 0110 0111 | Type | Type\n    TYPE_STRING  : 0b01110111, // 0111 0111 - string typedef\n    TYPE_VARIANT : 0b10000111, // 1000 0111 | [Arities] | [Type]\n    TYPE_BYTES   : 0b10010111, // 1001 0111 - Bytes typedef\n    TYPE_CONTRACT_BYTEARRAY: 0b10100111, // 1010 0111 - Fate code typedef\n                               // 1011 0111\n                               // 1100 0111\n                               // 1101 0111\n    TYPE_VAR     : 0b11100111, // 1110 0111 | Id when 0 =< Id < 256 (type variable)\n    TYPE_ANY     : 0b11110111, // 1111 0111 - Any typedef\n\n    LONG_TUPLE   : 0b00001011, // 0000 1011 | RLP encoded (size - 16) | [encoded elements],\n    SHORT_TUPLE  :     0b1011, // xxxx 1011 | [encoded elements] when 0  <  size < 16\n                                    // 1111 Set below\n    LONG_LIST    : 0b00011111, // 0001 1111 | RLP encoded (length - 16) | [encoded elements]\n    MAP          : 0b00101111, // 0010 1111 | RLP encoded size | [encoded key, encoded value]\n    EMPTY_TUPLE  : 0b00111111, // 0011 1111\n    POS_BITS     : 0b01001111, // 0100 1111 | RLP encoded integer (to be interpreted as bitfield)\n    EMPTY_STRING : 0b01011111, // 0101 1111\n    POS_BIG_INT  : 0b01101111, // 0110 1111 | RLP encoded (integer - 64)\n    FALSE        : 0b01111111, // 0111 1111\n                               // 1000 1111 - FREE (Possibly for bytecode in the future.)\n    OBJECT       : 0b10011111, // 1001 1111 | ObjectType | RLP encoded Array\n    VARIANT      : 0b10101111, // 1010 1111 | [encoded arities] | encoded tag | [encoded values]\n    MAP_ID       : 0b10111111, // 1011 1111 | RLP encoded integer (store map id)\n    NEG_BITS     : 0b11001111, // 1100 1111 | RLP encoded integer (infinite 1:s bitfield)\n    EMPTY_MAP    : 0b11011111, // 1101 1111\n    NEG_BIG_INT  : 0b11101111, // 1110 1111 | RLP encoded (integer - 64)\n    TRUE         : 0b11111111, // 1111 1111\n\n    // Object types\n    OTYPE_ADDRESS       : 0,\n    OTYPE_BYTES         : 1,\n    OTYPE_CONTRACT      : 2,\n    OTYPE_ORACLE        : 3,\n    OTYPE_ORACLE_QUERY  : 4,\n    OTYPE_CHANNEL       : 5,\n})\n"],"mappings":"AAAA;;AAEA;AACA;AACAA,MAAM,CAACC,OAAO,GAAGC,MAAM,CAACC,MAAM,CAAC;EAC3BC,SAAS,EAAa,GAAG;EAAE;EACQ;EACnCC,WAAW,EAAI,UAAU;EAAE;EAC3BC,YAAY,EAAS,IAAI;EAAE;EACO;EAClCC,UAAU,EAAS,MAAM;EAAE;EACA;EACA;EACA;EACA;EACA;EACA;EAC3BC,YAAY,EAAG,UAAU;EAAE;EAC3BC,YAAY,EAAG,UAAU;EAAE;EAC3BC,SAAS,EAAM,UAAU;EAAE;EAC3BC,UAAU,EAAK,UAAU;EAAE;EAC3BC,WAAW,EAAI,UAAU;EAAE;EAC3BC,SAAS,EAAM,UAAU;EAAE;EAC3BC,QAAQ,EAAO,UAAU;EAAE;EAC3BC,WAAW,EAAI,UAAU;EAAE;EAC3BC,YAAY,EAAG,UAAU;EAAE;EAC3BC,UAAU,EAAK,UAAU;EAAE;EAC3BC,uBAAuB,EAAE,UAAU;EAAE;EACV;EACA;EACA;EAC3BC,QAAQ,EAAO,UAAU;EAAE;EAC3BC,QAAQ,EAAO,UAAU;EAAE;;EAE3BC,UAAU,EAAK,UAAU;EAAE;EAC3BC,WAAW,EAAQ,MAAM;EAAE;EACK;EAChCC,SAAS,EAAM,UAAU;EAAE;EAC3BC,GAAG,EAAY,UAAU;EAAE;EAC3BC,WAAW,EAAI,UAAU;EAAE;EAC3BC,QAAQ,EAAO,UAAU;EAAE;EAC3BC,YAAY,EAAG,UAAU;EAAE;EAC3BC,WAAW,EAAI,UAAU;EAAE;EAC3BC,KAAK,EAAU,UAAU;EAAE;EACA;EAC3BC,MAAM,EAAS,UAAU;EAAE;EAC3BC,OAAO,EAAQ,UAAU;EAAE;EAC3BC,MAAM,EAAS,UAAU;EAAE;EAC3BC,QAAQ,EAAO,UAAU;EAAE;EAC3BC,SAAS,EAAM,UAAU;EAAE;EAC3BC,WAAW,EAAI,UAAU;EAAE;EAC3BC,IAAI,EAAW,UAAU;EAAE;;EAE3B;EACAC,aAAa,EAAS,CAAC;EACvBC,WAAW,EAAW,CAAC;EACvBC,cAAc,EAAQ,CAAC;EACvBC,YAAY,EAAU,CAAC;EACvBC,kBAAkB,EAAI,CAAC;EACvBC,aAAa,EAAS;AAC1B,CAAC,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}