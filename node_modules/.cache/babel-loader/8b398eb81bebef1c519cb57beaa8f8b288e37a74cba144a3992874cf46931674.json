{"ast":null,"code":"import _classPrivateFieldSet from \"@babel/runtime-corejs3/helpers/classPrivateFieldSet\";\nimport _classPrivateFieldGet from \"@babel/runtime-corejs3/helpers/classPrivateFieldGet\";\nfunction _classPrivateFieldInitSpec(obj, privateMap, value) {\n  _checkPrivateRedeclaration(obj, privateMap);\n  privateMap.set(obj, value);\n}\nfunction _checkPrivateRedeclaration(obj, privateCollection) {\n  if (privateCollection.has(obj)) {\n    throw new TypeError(\"Cannot initialize the same private elements twice on an object\");\n  }\n}\nimport BrowserConnection from \"./Browser.mjs\";\nimport { UnexpectedTsError } from \"../../utils/errors.mjs\";\n/**\n * BrowserRuntimeConnection\n * Handle browser runtime communication\n * @category aepp wallet communication\n */\nvar _listeners = /*#__PURE__*/new WeakMap();\nexport default class BrowserRuntimeConnection extends BrowserConnection {\n  constructor(_ref) {\n    let {\n      port,\n      ...options\n    } = _ref;\n    super(options);\n    _classPrivateFieldInitSpec(this, _listeners, {\n      writable: true,\n      value: void 0\n    });\n    this.port = port;\n  }\n  disconnect() {\n    super.disconnect();\n    this.port.disconnect();\n    if (_classPrivateFieldGet(this, _listeners) == null) throw new UnexpectedTsError();\n    this.port.onMessage.removeListener(_classPrivateFieldGet(this, _listeners)[0]);\n    this.port.onDisconnect.removeListener(_classPrivateFieldGet(this, _listeners)[1]);\n    _classPrivateFieldSet(this, _listeners, undefined);\n  }\n  connect(onMessage, onDisconnect) {\n    super.connect(onMessage, onDisconnect);\n    _classPrivateFieldSet(this, _listeners, [(message, port) => {\n      var _port$sender$url, _port$sender;\n      this.receiveMessage(message);\n      // TODO: make `origin` optional because sender url is not available on aepp side\n      onMessage(message, (_port$sender$url = (_port$sender = port.sender) === null || _port$sender === void 0 ? void 0 : _port$sender.url) !== null && _port$sender$url !== void 0 ? _port$sender$url : '', port);\n    }, onDisconnect]);\n    this.port.onMessage.addListener(_classPrivateFieldGet(this, _listeners)[0]);\n    this.port.onDisconnect.addListener(_classPrivateFieldGet(this, _listeners)[1]);\n  }\n  sendMessage(message) {\n    super.sendMessage(message);\n    this.port.postMessage(message);\n  }\n  isConnected() {\n    return _classPrivateFieldGet(this, _listeners) != null;\n  }\n}","map":{"version":3,"names":["BrowserConnection","UnexpectedTsError","_listeners","WeakMap","BrowserRuntimeConnection","constructor","_ref","port","options","_classPrivateFieldInitSpec","writable","value","disconnect","_classPrivateFieldGet","onMessage","removeListener","onDisconnect","_classPrivateFieldSet","undefined","connect","message","_port$sender$url","_port$sender","receiveMessage","sender","url","addListener","sendMessage","postMessage","isConnected"],"sources":["C:\\Users\\amitk\\Desktop\\Donation Project\\donation-aeternity-blockchain-contract\\node_modules\\@aeternity\\aepp-sdk\\src\\aepp-wallet-communication\\connection\\BrowserRuntime.ts"],"sourcesContent":["import { Runtime } from 'webextension-polyfill';\nimport BrowserConnection from './Browser';\nimport { UnexpectedTsError } from '../../utils/errors';\n\n/**\n * BrowserRuntimeConnection\n * Handle browser runtime communication\n * @category aepp wallet communication\n */\nexport default class BrowserRuntimeConnection extends BrowserConnection {\n  port: Runtime.Port;\n\n  #listeners?: [(message: any, port: Runtime.Port) => void, () => void];\n\n  constructor({ port, ...options }: { port: Runtime.Port; debug: boolean }) {\n    super(options);\n    this.port = port;\n  }\n\n  override disconnect(): void {\n    super.disconnect();\n    this.port.disconnect();\n    if (this.#listeners == null) throw new UnexpectedTsError();\n    this.port.onMessage.removeListener(this.#listeners[0]);\n    this.port.onDisconnect.removeListener(this.#listeners[1]);\n    this.#listeners = undefined;\n  }\n\n  override connect(\n    onMessage: (message: any, origin: string, source: Runtime.Port) => void,\n    onDisconnect: () => void,\n  ): void {\n    super.connect(onMessage, onDisconnect);\n    this.#listeners = [\n      (message, port) => {\n        this.receiveMessage(message);\n        // TODO: make `origin` optional because sender url is not available on aepp side\n        onMessage(message, port.sender?.url ?? '', port);\n      },\n      onDisconnect,\n    ];\n    this.port.onMessage.addListener(this.#listeners[0]);\n    this.port.onDisconnect.addListener(this.#listeners[1]);\n  }\n\n  override sendMessage(message: any): void {\n    super.sendMessage(message);\n    this.port.postMessage(message);\n  }\n\n  isConnected(): boolean {\n    return this.#listeners != null;\n  }\n}\n"],"mappings":";;;;;;;;;;;OACOA,iBAAiB;AAAA,SACfC,iBAAiB;AAE1B;AACA;AACA;AACA;AACA;AAJA,IAAAC,UAAA,oBAAAC,OAAA;AAKA,eAAe,MAAMC,wBAAwB,SAASJ,iBAAiB,CAAC;EAKtEK,WAAWA,CAAAC,IAAA,EAA+D;IAAA,IAA9D;MAAEC,IAAI;MAAE,GAAGC;IAAgD,CAAC,GAAAF,IAAA;IACtE,KAAK,CAACE,OAAO,CAAC;IAACC,0BAAA,OAAAP,UAAA;MAAAQ,QAAA;MAAAC,KAAA;IAAA;IACf,IAAI,CAACJ,IAAI,GAAGA,IAAI;EAClB;EAESK,UAAUA,CAAA,EAAS;IAC1B,KAAK,CAACA,UAAU,CAAC,CAAC;IAClB,IAAI,CAACL,IAAI,CAACK,UAAU,CAAC,CAAC;IACtB,IAAIC,qBAAA,KAAI,EAAAX,UAAA,KAAe,IAAI,EAAE,MAAM,IAAID,iBAAiB,CAAC,CAAC;IAC1D,IAAI,CAACM,IAAI,CAACO,SAAS,CAACC,cAAc,CAACF,qBAAA,KAAI,EAAAX,UAAA,EAAY,CAAC,CAAC,CAAC;IACtD,IAAI,CAACK,IAAI,CAACS,YAAY,CAACD,cAAc,CAACF,qBAAA,KAAI,EAAAX,UAAA,EAAY,CAAC,CAAC,CAAC;IACzDe,qBAAA,KAAI,EAAAf,UAAA,EAAcgB,SAAS;EAC7B;EAESC,OAAOA,CACdL,SAAuE,EACvEE,YAAwB,EAClB;IACN,KAAK,CAACG,OAAO,CAACL,SAAS,EAAEE,YAAY,CAAC;IACtCC,qBAAA,KAAI,EAAAf,UAAA,EAAc,CAChB,CAACkB,OAAO,EAAEb,IAAI,KAAK;MAAA,IAAAc,gBAAA,EAAAC,YAAA;MACjB,IAAI,CAACC,cAAc,CAACH,OAAO,CAAC;MAC5B;MACAN,SAAS,CAACM,OAAO,GAAAC,gBAAA,IAAAC,YAAA,GAAEf,IAAI,CAACiB,MAAM,cAAAF,YAAA,uBAAXA,YAAA,CAAaG,GAAG,cAAAJ,gBAAA,cAAAA,gBAAA,GAAI,EAAE,EAAEd,IAAI,CAAC;IAClD,CAAC,EACDS,YAAY,CACb;IACD,IAAI,CAACT,IAAI,CAACO,SAAS,CAACY,WAAW,CAACb,qBAAA,KAAI,EAAAX,UAAA,EAAY,CAAC,CAAC,CAAC;IACnD,IAAI,CAACK,IAAI,CAACS,YAAY,CAACU,WAAW,CAACb,qBAAA,KAAI,EAAAX,UAAA,EAAY,CAAC,CAAC,CAAC;EACxD;EAESyB,WAAWA,CAACP,OAAY,EAAQ;IACvC,KAAK,CAACO,WAAW,CAACP,OAAO,CAAC;IAC1B,IAAI,CAACb,IAAI,CAACqB,WAAW,CAACR,OAAO,CAAC;EAChC;EAEAS,WAAWA,CAAA,EAAY;IACrB,OAAOhB,qBAAA,KAAI,EAAAX,UAAA,KAAe,IAAI;EAChC;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}